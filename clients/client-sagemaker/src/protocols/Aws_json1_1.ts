// smithy-typescript generated code
import { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from "@aws-sdk/protocol-http";
import {
  decorateServiceException as __decorateServiceException,
  expectBoolean as __expectBoolean,
  expectInt32 as __expectInt32,
  expectLong as __expectLong,
  expectNonNull as __expectNonNull,
  expectNumber as __expectNumber,
  expectString as __expectString,
  expectUnion as __expectUnion,
  LazyJsonString as __LazyJsonString,
  limitedParseDouble as __limitedParseDouble,
  limitedParseFloat32 as __limitedParseFloat32,
  parseEpochTimestamp as __parseEpochTimestamp,
  serializeFloat as __serializeFloat,
  throwDefaultError,
} from "@aws-sdk/smithy-client";
import {
  Endpoint as __Endpoint,
  HeaderBag as __HeaderBag,
  ResponseMetadata as __ResponseMetadata,
  SerdeContext as __SerdeContext,
} from "@aws-sdk/types";
import { v4 as generateIdempotencyToken } from "uuid";

import { AddAssociationCommandInput, AddAssociationCommandOutput } from "../commands/AddAssociationCommand";
import { AddTagsCommandInput, AddTagsCommandOutput } from "../commands/AddTagsCommand";
import {
  AssociateTrialComponentCommandInput,
  AssociateTrialComponentCommandOutput,
} from "../commands/AssociateTrialComponentCommand";
import {
  BatchDescribeModelPackageCommandInput,
  BatchDescribeModelPackageCommandOutput,
} from "../commands/BatchDescribeModelPackageCommand";
import { CreateActionCommandInput, CreateActionCommandOutput } from "../commands/CreateActionCommand";
import { CreateAlgorithmCommandInput, CreateAlgorithmCommandOutput } from "../commands/CreateAlgorithmCommand";
import { CreateAppCommandInput, CreateAppCommandOutput } from "../commands/CreateAppCommand";
import {
  CreateAppImageConfigCommandInput,
  CreateAppImageConfigCommandOutput,
} from "../commands/CreateAppImageConfigCommand";
import { CreateArtifactCommandInput, CreateArtifactCommandOutput } from "../commands/CreateArtifactCommand";
import { CreateAutoMLJobCommandInput, CreateAutoMLJobCommandOutput } from "../commands/CreateAutoMLJobCommand";
import { CreateAutoMLJobV2CommandInput, CreateAutoMLJobV2CommandOutput } from "../commands/CreateAutoMLJobV2Command";
import {
  CreateCodeRepositoryCommandInput,
  CreateCodeRepositoryCommandOutput,
} from "../commands/CreateCodeRepositoryCommand";
import {
  CreateCompilationJobCommandInput,
  CreateCompilationJobCommandOutput,
} from "../commands/CreateCompilationJobCommand";
import { CreateContextCommandInput, CreateContextCommandOutput } from "../commands/CreateContextCommand";
import {
  CreateDataQualityJobDefinitionCommandInput,
  CreateDataQualityJobDefinitionCommandOutput,
} from "../commands/CreateDataQualityJobDefinitionCommand";
import { CreateDeviceFleetCommandInput, CreateDeviceFleetCommandOutput } from "../commands/CreateDeviceFleetCommand";
import { CreateDomainCommandInput, CreateDomainCommandOutput } from "../commands/CreateDomainCommand";
import {
  CreateEdgeDeploymentPlanCommandInput,
  CreateEdgeDeploymentPlanCommandOutput,
} from "../commands/CreateEdgeDeploymentPlanCommand";
import {
  CreateEdgeDeploymentStageCommandInput,
  CreateEdgeDeploymentStageCommandOutput,
} from "../commands/CreateEdgeDeploymentStageCommand";
import {
  CreateEdgePackagingJobCommandInput,
  CreateEdgePackagingJobCommandOutput,
} from "../commands/CreateEdgePackagingJobCommand";
import { CreateEndpointCommandInput, CreateEndpointCommandOutput } from "../commands/CreateEndpointCommand";
import {
  CreateEndpointConfigCommandInput,
  CreateEndpointConfigCommandOutput,
} from "../commands/CreateEndpointConfigCommand";
import { CreateExperimentCommandInput, CreateExperimentCommandOutput } from "../commands/CreateExperimentCommand";
import { CreateFeatureGroupCommandInput, CreateFeatureGroupCommandOutput } from "../commands/CreateFeatureGroupCommand";
import {
  CreateFlowDefinitionCommandInput,
  CreateFlowDefinitionCommandOutput,
} from "../commands/CreateFlowDefinitionCommand";
import { CreateHubCommandInput, CreateHubCommandOutput } from "../commands/CreateHubCommand";
import { CreateHumanTaskUiCommandInput, CreateHumanTaskUiCommandOutput } from "../commands/CreateHumanTaskUiCommand";
import {
  CreateHyperParameterTuningJobCommandInput,
  CreateHyperParameterTuningJobCommandOutput,
} from "../commands/CreateHyperParameterTuningJobCommand";
import { CreateImageCommandInput, CreateImageCommandOutput } from "../commands/CreateImageCommand";
import { CreateImageVersionCommandInput, CreateImageVersionCommandOutput } from "../commands/CreateImageVersionCommand";
import {
  CreateInferenceExperimentCommandInput,
  CreateInferenceExperimentCommandOutput,
} from "../commands/CreateInferenceExperimentCommand";
import {
  CreateInferenceRecommendationsJobCommandInput,
  CreateInferenceRecommendationsJobCommandOutput,
} from "../commands/CreateInferenceRecommendationsJobCommand";
import { CreateLabelingJobCommandInput, CreateLabelingJobCommandOutput } from "../commands/CreateLabelingJobCommand";
import {
  CreateModelBiasJobDefinitionCommandInput,
  CreateModelBiasJobDefinitionCommandOutput,
} from "../commands/CreateModelBiasJobDefinitionCommand";
import { CreateModelCardCommandInput, CreateModelCardCommandOutput } from "../commands/CreateModelCardCommand";
import {
  CreateModelCardExportJobCommandInput,
  CreateModelCardExportJobCommandOutput,
} from "../commands/CreateModelCardExportJobCommand";
import { CreateModelCommandInput, CreateModelCommandOutput } from "../commands/CreateModelCommand";
import {
  CreateModelExplainabilityJobDefinitionCommandInput,
  CreateModelExplainabilityJobDefinitionCommandOutput,
} from "../commands/CreateModelExplainabilityJobDefinitionCommand";
import { CreateModelPackageCommandInput, CreateModelPackageCommandOutput } from "../commands/CreateModelPackageCommand";
import {
  CreateModelPackageGroupCommandInput,
  CreateModelPackageGroupCommandOutput,
} from "../commands/CreateModelPackageGroupCommand";
import {
  CreateModelQualityJobDefinitionCommandInput,
  CreateModelQualityJobDefinitionCommandOutput,
} from "../commands/CreateModelQualityJobDefinitionCommand";
import {
  CreateMonitoringScheduleCommandInput,
  CreateMonitoringScheduleCommandOutput,
} from "../commands/CreateMonitoringScheduleCommand";
import {
  CreateNotebookInstanceCommandInput,
  CreateNotebookInstanceCommandOutput,
} from "../commands/CreateNotebookInstanceCommand";
import {
  CreateNotebookInstanceLifecycleConfigCommandInput,
  CreateNotebookInstanceLifecycleConfigCommandOutput,
} from "../commands/CreateNotebookInstanceLifecycleConfigCommand";
import { CreatePipelineCommandInput, CreatePipelineCommandOutput } from "../commands/CreatePipelineCommand";
import {
  CreatePresignedDomainUrlCommandInput,
  CreatePresignedDomainUrlCommandOutput,
} from "../commands/CreatePresignedDomainUrlCommand";
import {
  CreatePresignedNotebookInstanceUrlCommandInput,
  CreatePresignedNotebookInstanceUrlCommandOutput,
} from "../commands/CreatePresignedNotebookInstanceUrlCommand";
import {
  CreateProcessingJobCommandInput,
  CreateProcessingJobCommandOutput,
} from "../commands/CreateProcessingJobCommand";
import { CreateProjectCommandInput, CreateProjectCommandOutput } from "../commands/CreateProjectCommand";
import { CreateSpaceCommandInput, CreateSpaceCommandOutput } from "../commands/CreateSpaceCommand";
import {
  CreateStudioLifecycleConfigCommandInput,
  CreateStudioLifecycleConfigCommandOutput,
} from "../commands/CreateStudioLifecycleConfigCommand";
import { CreateTrainingJobCommandInput, CreateTrainingJobCommandOutput } from "../commands/CreateTrainingJobCommand";
import { CreateTransformJobCommandInput, CreateTransformJobCommandOutput } from "../commands/CreateTransformJobCommand";
import { CreateTrialCommandInput, CreateTrialCommandOutput } from "../commands/CreateTrialCommand";
import {
  CreateTrialComponentCommandInput,
  CreateTrialComponentCommandOutput,
} from "../commands/CreateTrialComponentCommand";
import { CreateUserProfileCommandInput, CreateUserProfileCommandOutput } from "../commands/CreateUserProfileCommand";
import { CreateWorkforceCommandInput, CreateWorkforceCommandOutput } from "../commands/CreateWorkforceCommand";
import { CreateWorkteamCommandInput, CreateWorkteamCommandOutput } from "../commands/CreateWorkteamCommand";
import { DeleteActionCommandInput, DeleteActionCommandOutput } from "../commands/DeleteActionCommand";
import { DeleteAlgorithmCommandInput, DeleteAlgorithmCommandOutput } from "../commands/DeleteAlgorithmCommand";
import { DeleteAppCommandInput, DeleteAppCommandOutput } from "../commands/DeleteAppCommand";
import {
  DeleteAppImageConfigCommandInput,
  DeleteAppImageConfigCommandOutput,
} from "../commands/DeleteAppImageConfigCommand";
import { DeleteArtifactCommandInput, DeleteArtifactCommandOutput } from "../commands/DeleteArtifactCommand";
import { DeleteAssociationCommandInput, DeleteAssociationCommandOutput } from "../commands/DeleteAssociationCommand";
import {
  DeleteCodeRepositoryCommandInput,
  DeleteCodeRepositoryCommandOutput,
} from "../commands/DeleteCodeRepositoryCommand";
import { DeleteContextCommandInput, DeleteContextCommandOutput } from "../commands/DeleteContextCommand";
import {
  DeleteDataQualityJobDefinitionCommandInput,
  DeleteDataQualityJobDefinitionCommandOutput,
} from "../commands/DeleteDataQualityJobDefinitionCommand";
import { DeleteDeviceFleetCommandInput, DeleteDeviceFleetCommandOutput } from "../commands/DeleteDeviceFleetCommand";
import { DeleteDomainCommandInput, DeleteDomainCommandOutput } from "../commands/DeleteDomainCommand";
import {
  DeleteEdgeDeploymentPlanCommandInput,
  DeleteEdgeDeploymentPlanCommandOutput,
} from "../commands/DeleteEdgeDeploymentPlanCommand";
import {
  DeleteEdgeDeploymentStageCommandInput,
  DeleteEdgeDeploymentStageCommandOutput,
} from "../commands/DeleteEdgeDeploymentStageCommand";
import { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from "../commands/DeleteEndpointCommand";
import {
  DeleteEndpointConfigCommandInput,
  DeleteEndpointConfigCommandOutput,
} from "../commands/DeleteEndpointConfigCommand";
import { DeleteExperimentCommandInput, DeleteExperimentCommandOutput } from "../commands/DeleteExperimentCommand";
import { DeleteFeatureGroupCommandInput, DeleteFeatureGroupCommandOutput } from "../commands/DeleteFeatureGroupCommand";
import {
  DeleteFlowDefinitionCommandInput,
  DeleteFlowDefinitionCommandOutput,
} from "../commands/DeleteFlowDefinitionCommand";
import { DeleteHubCommandInput, DeleteHubCommandOutput } from "../commands/DeleteHubCommand";
import { DeleteHubContentCommandInput, DeleteHubContentCommandOutput } from "../commands/DeleteHubContentCommand";
import { DeleteHumanTaskUiCommandInput, DeleteHumanTaskUiCommandOutput } from "../commands/DeleteHumanTaskUiCommand";
import { DeleteImageCommandInput, DeleteImageCommandOutput } from "../commands/DeleteImageCommand";
import { DeleteImageVersionCommandInput, DeleteImageVersionCommandOutput } from "../commands/DeleteImageVersionCommand";
import {
  DeleteInferenceExperimentCommandInput,
  DeleteInferenceExperimentCommandOutput,
} from "../commands/DeleteInferenceExperimentCommand";
import {
  DeleteModelBiasJobDefinitionCommandInput,
  DeleteModelBiasJobDefinitionCommandOutput,
} from "../commands/DeleteModelBiasJobDefinitionCommand";
import { DeleteModelCardCommandInput, DeleteModelCardCommandOutput } from "../commands/DeleteModelCardCommand";
import { DeleteModelCommandInput, DeleteModelCommandOutput } from "../commands/DeleteModelCommand";
import {
  DeleteModelExplainabilityJobDefinitionCommandInput,
  DeleteModelExplainabilityJobDefinitionCommandOutput,
} from "../commands/DeleteModelExplainabilityJobDefinitionCommand";
import { DeleteModelPackageCommandInput, DeleteModelPackageCommandOutput } from "../commands/DeleteModelPackageCommand";
import {
  DeleteModelPackageGroupCommandInput,
  DeleteModelPackageGroupCommandOutput,
} from "../commands/DeleteModelPackageGroupCommand";
import {
  DeleteModelPackageGroupPolicyCommandInput,
  DeleteModelPackageGroupPolicyCommandOutput,
} from "../commands/DeleteModelPackageGroupPolicyCommand";
import {
  DeleteModelQualityJobDefinitionCommandInput,
  DeleteModelQualityJobDefinitionCommandOutput,
} from "../commands/DeleteModelQualityJobDefinitionCommand";
import {
  DeleteMonitoringScheduleCommandInput,
  DeleteMonitoringScheduleCommandOutput,
} from "../commands/DeleteMonitoringScheduleCommand";
import {
  DeleteNotebookInstanceCommandInput,
  DeleteNotebookInstanceCommandOutput,
} from "../commands/DeleteNotebookInstanceCommand";
import {
  DeleteNotebookInstanceLifecycleConfigCommandInput,
  DeleteNotebookInstanceLifecycleConfigCommandOutput,
} from "../commands/DeleteNotebookInstanceLifecycleConfigCommand";
import { DeletePipelineCommandInput, DeletePipelineCommandOutput } from "../commands/DeletePipelineCommand";
import { DeleteProjectCommandInput, DeleteProjectCommandOutput } from "../commands/DeleteProjectCommand";
import { DeleteSpaceCommandInput, DeleteSpaceCommandOutput } from "../commands/DeleteSpaceCommand";
import {
  DeleteStudioLifecycleConfigCommandInput,
  DeleteStudioLifecycleConfigCommandOutput,
} from "../commands/DeleteStudioLifecycleConfigCommand";
import { DeleteTagsCommandInput, DeleteTagsCommandOutput } from "../commands/DeleteTagsCommand";
import { DeleteTrialCommandInput, DeleteTrialCommandOutput } from "../commands/DeleteTrialCommand";
import {
  DeleteTrialComponentCommandInput,
  DeleteTrialComponentCommandOutput,
} from "../commands/DeleteTrialComponentCommand";
import { DeleteUserProfileCommandInput, DeleteUserProfileCommandOutput } from "../commands/DeleteUserProfileCommand";
import { DeleteWorkforceCommandInput, DeleteWorkforceCommandOutput } from "../commands/DeleteWorkforceCommand";
import { DeleteWorkteamCommandInput, DeleteWorkteamCommandOutput } from "../commands/DeleteWorkteamCommand";
import { DeregisterDevicesCommandInput, DeregisterDevicesCommandOutput } from "../commands/DeregisterDevicesCommand";
import { DescribeActionCommandInput, DescribeActionCommandOutput } from "../commands/DescribeActionCommand";
import { DescribeAlgorithmCommandInput, DescribeAlgorithmCommandOutput } from "../commands/DescribeAlgorithmCommand";
import { DescribeAppCommandInput, DescribeAppCommandOutput } from "../commands/DescribeAppCommand";
import {
  DescribeAppImageConfigCommandInput,
  DescribeAppImageConfigCommandOutput,
} from "../commands/DescribeAppImageConfigCommand";
import { DescribeArtifactCommandInput, DescribeArtifactCommandOutput } from "../commands/DescribeArtifactCommand";
import { DescribeAutoMLJobCommandInput, DescribeAutoMLJobCommandOutput } from "../commands/DescribeAutoMLJobCommand";
import {
  DescribeAutoMLJobV2CommandInput,
  DescribeAutoMLJobV2CommandOutput,
} from "../commands/DescribeAutoMLJobV2Command";
import {
  DescribeCodeRepositoryCommandInput,
  DescribeCodeRepositoryCommandOutput,
} from "../commands/DescribeCodeRepositoryCommand";
import {
  DescribeCompilationJobCommandInput,
  DescribeCompilationJobCommandOutput,
} from "../commands/DescribeCompilationJobCommand";
import { DescribeContextCommandInput, DescribeContextCommandOutput } from "../commands/DescribeContextCommand";
import {
  DescribeDataQualityJobDefinitionCommandInput,
  DescribeDataQualityJobDefinitionCommandOutput,
} from "../commands/DescribeDataQualityJobDefinitionCommand";
import { DescribeDeviceCommandInput, DescribeDeviceCommandOutput } from "../commands/DescribeDeviceCommand";
import {
  DescribeDeviceFleetCommandInput,
  DescribeDeviceFleetCommandOutput,
} from "../commands/DescribeDeviceFleetCommand";
import { DescribeDomainCommandInput, DescribeDomainCommandOutput } from "../commands/DescribeDomainCommand";
import {
  DescribeEdgeDeploymentPlanCommandInput,
  DescribeEdgeDeploymentPlanCommandOutput,
} from "../commands/DescribeEdgeDeploymentPlanCommand";
import {
  DescribeEdgePackagingJobCommandInput,
  DescribeEdgePackagingJobCommandOutput,
} from "../commands/DescribeEdgePackagingJobCommand";
import { DescribeEndpointCommandInput, DescribeEndpointCommandOutput } from "../commands/DescribeEndpointCommand";
import {
  DescribeEndpointConfigCommandInput,
  DescribeEndpointConfigCommandOutput,
} from "../commands/DescribeEndpointConfigCommand";
import { DescribeExperimentCommandInput, DescribeExperimentCommandOutput } from "../commands/DescribeExperimentCommand";
import {
  DescribeFeatureGroupCommandInput,
  DescribeFeatureGroupCommandOutput,
} from "../commands/DescribeFeatureGroupCommand";
import {
  DescribeFeatureMetadataCommandInput,
  DescribeFeatureMetadataCommandOutput,
} from "../commands/DescribeFeatureMetadataCommand";
import {
  DescribeFlowDefinitionCommandInput,
  DescribeFlowDefinitionCommandOutput,
} from "../commands/DescribeFlowDefinitionCommand";
import { DescribeHubCommandInput, DescribeHubCommandOutput } from "../commands/DescribeHubCommand";
import { DescribeHubContentCommandInput, DescribeHubContentCommandOutput } from "../commands/DescribeHubContentCommand";
import {
  DescribeHumanTaskUiCommandInput,
  DescribeHumanTaskUiCommandOutput,
} from "../commands/DescribeHumanTaskUiCommand";
import {
  DescribeHyperParameterTuningJobCommandInput,
  DescribeHyperParameterTuningJobCommandOutput,
} from "../commands/DescribeHyperParameterTuningJobCommand";
import { DescribeImageCommandInput, DescribeImageCommandOutput } from "../commands/DescribeImageCommand";
import {
  DescribeImageVersionCommandInput,
  DescribeImageVersionCommandOutput,
} from "../commands/DescribeImageVersionCommand";
import {
  DescribeInferenceExperimentCommandInput,
  DescribeInferenceExperimentCommandOutput,
} from "../commands/DescribeInferenceExperimentCommand";
import {
  DescribeInferenceRecommendationsJobCommandInput,
  DescribeInferenceRecommendationsJobCommandOutput,
} from "../commands/DescribeInferenceRecommendationsJobCommand";
import {
  DescribeLabelingJobCommandInput,
  DescribeLabelingJobCommandOutput,
} from "../commands/DescribeLabelingJobCommand";
import {
  DescribeLineageGroupCommandInput,
  DescribeLineageGroupCommandOutput,
} from "../commands/DescribeLineageGroupCommand";
import {
  DescribeModelBiasJobDefinitionCommandInput,
  DescribeModelBiasJobDefinitionCommandOutput,
} from "../commands/DescribeModelBiasJobDefinitionCommand";
import { DescribeModelCardCommandInput, DescribeModelCardCommandOutput } from "../commands/DescribeModelCardCommand";
import {
  DescribeModelCardExportJobCommandInput,
  DescribeModelCardExportJobCommandOutput,
} from "../commands/DescribeModelCardExportJobCommand";
import { DescribeModelCommandInput, DescribeModelCommandOutput } from "../commands/DescribeModelCommand";
import {
  DescribeModelExplainabilityJobDefinitionCommandInput,
  DescribeModelExplainabilityJobDefinitionCommandOutput,
} from "../commands/DescribeModelExplainabilityJobDefinitionCommand";
import {
  DescribeModelPackageCommandInput,
  DescribeModelPackageCommandOutput,
} from "../commands/DescribeModelPackageCommand";
import {
  DescribeModelPackageGroupCommandInput,
  DescribeModelPackageGroupCommandOutput,
} from "../commands/DescribeModelPackageGroupCommand";
import {
  DescribeModelQualityJobDefinitionCommandInput,
  DescribeModelQualityJobDefinitionCommandOutput,
} from "../commands/DescribeModelQualityJobDefinitionCommand";
import {
  DescribeMonitoringScheduleCommandInput,
  DescribeMonitoringScheduleCommandOutput,
} from "../commands/DescribeMonitoringScheduleCommand";
import {
  DescribeNotebookInstanceCommandInput,
  DescribeNotebookInstanceCommandOutput,
} from "../commands/DescribeNotebookInstanceCommand";
import {
  DescribeNotebookInstanceLifecycleConfigCommandInput,
  DescribeNotebookInstanceLifecycleConfigCommandOutput,
} from "../commands/DescribeNotebookInstanceLifecycleConfigCommand";
import { DescribePipelineCommandInput, DescribePipelineCommandOutput } from "../commands/DescribePipelineCommand";
import {
  DescribePipelineDefinitionForExecutionCommandInput,
  DescribePipelineDefinitionForExecutionCommandOutput,
} from "../commands/DescribePipelineDefinitionForExecutionCommand";
import {
  DescribePipelineExecutionCommandInput,
  DescribePipelineExecutionCommandOutput,
} from "../commands/DescribePipelineExecutionCommand";
import {
  DescribeProcessingJobCommandInput,
  DescribeProcessingJobCommandOutput,
} from "../commands/DescribeProcessingJobCommand";
import { DescribeProjectCommandInput, DescribeProjectCommandOutput } from "../commands/DescribeProjectCommand";
import { DescribeSpaceCommandInput, DescribeSpaceCommandOutput } from "../commands/DescribeSpaceCommand";
import {
  DescribeStudioLifecycleConfigCommandInput,
  DescribeStudioLifecycleConfigCommandOutput,
} from "../commands/DescribeStudioLifecycleConfigCommand";
import {
  DescribeSubscribedWorkteamCommandInput,
  DescribeSubscribedWorkteamCommandOutput,
} from "../commands/DescribeSubscribedWorkteamCommand";
import {
  DescribeTrainingJobCommandInput,
  DescribeTrainingJobCommandOutput,
} from "../commands/DescribeTrainingJobCommand";
import {
  DescribeTransformJobCommandInput,
  DescribeTransformJobCommandOutput,
} from "../commands/DescribeTransformJobCommand";
import { DescribeTrialCommandInput, DescribeTrialCommandOutput } from "../commands/DescribeTrialCommand";
import {
  DescribeTrialComponentCommandInput,
  DescribeTrialComponentCommandOutput,
} from "../commands/DescribeTrialComponentCommand";
import {
  DescribeUserProfileCommandInput,
  DescribeUserProfileCommandOutput,
} from "../commands/DescribeUserProfileCommand";
import { DescribeWorkforceCommandInput, DescribeWorkforceCommandOutput } from "../commands/DescribeWorkforceCommand";
import { DescribeWorkteamCommandInput, DescribeWorkteamCommandOutput } from "../commands/DescribeWorkteamCommand";
import {
  DisableSagemakerServicecatalogPortfolioCommandInput,
  DisableSagemakerServicecatalogPortfolioCommandOutput,
} from "../commands/DisableSagemakerServicecatalogPortfolioCommand";
import {
  DisassociateTrialComponentCommandInput,
  DisassociateTrialComponentCommandOutput,
} from "../commands/DisassociateTrialComponentCommand";
import {
  EnableSagemakerServicecatalogPortfolioCommandInput,
  EnableSagemakerServicecatalogPortfolioCommandOutput,
} from "../commands/EnableSagemakerServicecatalogPortfolioCommand";
import {
  GetDeviceFleetReportCommandInput,
  GetDeviceFleetReportCommandOutput,
} from "../commands/GetDeviceFleetReportCommand";
import {
  GetLineageGroupPolicyCommandInput,
  GetLineageGroupPolicyCommandOutput,
} from "../commands/GetLineageGroupPolicyCommand";
import {
  GetModelPackageGroupPolicyCommandInput,
  GetModelPackageGroupPolicyCommandOutput,
} from "../commands/GetModelPackageGroupPolicyCommand";
import {
  GetSagemakerServicecatalogPortfolioStatusCommandInput,
  GetSagemakerServicecatalogPortfolioStatusCommandOutput,
} from "../commands/GetSagemakerServicecatalogPortfolioStatusCommand";
import {
  GetSearchSuggestionsCommandInput,
  GetSearchSuggestionsCommandOutput,
} from "../commands/GetSearchSuggestionsCommand";
import { ImportHubContentCommandInput, ImportHubContentCommandOutput } from "../commands/ImportHubContentCommand";
import { ListActionsCommandInput, ListActionsCommandOutput } from "../commands/ListActionsCommand";
import { ListAlgorithmsCommandInput, ListAlgorithmsCommandOutput } from "../commands/ListAlgorithmsCommand";
import { ListAliasesCommandInput, ListAliasesCommandOutput } from "../commands/ListAliasesCommand";
import {
  ListAppImageConfigsCommandInput,
  ListAppImageConfigsCommandOutput,
} from "../commands/ListAppImageConfigsCommand";
import { ListAppsCommandInput, ListAppsCommandOutput } from "../commands/ListAppsCommand";
import { ListArtifactsCommandInput, ListArtifactsCommandOutput } from "../commands/ListArtifactsCommand";
import { ListAssociationsCommandInput, ListAssociationsCommandOutput } from "../commands/ListAssociationsCommand";
import { ListAutoMLJobsCommandInput, ListAutoMLJobsCommandOutput } from "../commands/ListAutoMLJobsCommand";
import {
  ListCandidatesForAutoMLJobCommandInput,
  ListCandidatesForAutoMLJobCommandOutput,
} from "../commands/ListCandidatesForAutoMLJobCommand";
import {
  ListCodeRepositoriesCommandInput,
  ListCodeRepositoriesCommandOutput,
} from "../commands/ListCodeRepositoriesCommand";
import {
  ListCompilationJobsCommandInput,
  ListCompilationJobsCommandOutput,
} from "../commands/ListCompilationJobsCommand";
import { ListContextsCommandInput, ListContextsCommandOutput } from "../commands/ListContextsCommand";
import {
  ListDataQualityJobDefinitionsCommandInput,
  ListDataQualityJobDefinitionsCommandOutput,
} from "../commands/ListDataQualityJobDefinitionsCommand";
import { ListDeviceFleetsCommandInput, ListDeviceFleetsCommandOutput } from "../commands/ListDeviceFleetsCommand";
import { ListDevicesCommandInput, ListDevicesCommandOutput } from "../commands/ListDevicesCommand";
import { ListDomainsCommandInput, ListDomainsCommandOutput } from "../commands/ListDomainsCommand";
import {
  ListEdgeDeploymentPlansCommandInput,
  ListEdgeDeploymentPlansCommandOutput,
} from "../commands/ListEdgeDeploymentPlansCommand";
import {
  ListEdgePackagingJobsCommandInput,
  ListEdgePackagingJobsCommandOutput,
} from "../commands/ListEdgePackagingJobsCommand";
import {
  ListEndpointConfigsCommandInput,
  ListEndpointConfigsCommandOutput,
} from "../commands/ListEndpointConfigsCommand";
import { ListEndpointsCommandInput, ListEndpointsCommandOutput } from "../commands/ListEndpointsCommand";
import { ListExperimentsCommandInput, ListExperimentsCommandOutput } from "../commands/ListExperimentsCommand";
import { ListFeatureGroupsCommandInput, ListFeatureGroupsCommandOutput } from "../commands/ListFeatureGroupsCommand";
import {
  ListFlowDefinitionsCommandInput,
  ListFlowDefinitionsCommandOutput,
} from "../commands/ListFlowDefinitionsCommand";
import { ListHubContentsCommandInput, ListHubContentsCommandOutput } from "../commands/ListHubContentsCommand";
import {
  ListHubContentVersionsCommandInput,
  ListHubContentVersionsCommandOutput,
} from "../commands/ListHubContentVersionsCommand";
import { ListHubsCommandInput, ListHubsCommandOutput } from "../commands/ListHubsCommand";
import { ListHumanTaskUisCommandInput, ListHumanTaskUisCommandOutput } from "../commands/ListHumanTaskUisCommand";
import {
  ListHyperParameterTuningJobsCommandInput,
  ListHyperParameterTuningJobsCommandOutput,
} from "../commands/ListHyperParameterTuningJobsCommand";
import { ListImagesCommandInput, ListImagesCommandOutput } from "../commands/ListImagesCommand";
import { ListImageVersionsCommandInput, ListImageVersionsCommandOutput } from "../commands/ListImageVersionsCommand";
import {
  ListInferenceExperimentsCommandInput,
  ListInferenceExperimentsCommandOutput,
} from "../commands/ListInferenceExperimentsCommand";
import {
  ListInferenceRecommendationsJobsCommandInput,
  ListInferenceRecommendationsJobsCommandOutput,
} from "../commands/ListInferenceRecommendationsJobsCommand";
import {
  ListInferenceRecommendationsJobStepsCommandInput,
  ListInferenceRecommendationsJobStepsCommandOutput,
} from "../commands/ListInferenceRecommendationsJobStepsCommand";
import { ListLabelingJobsCommandInput, ListLabelingJobsCommandOutput } from "../commands/ListLabelingJobsCommand";
import {
  ListLabelingJobsForWorkteamCommandInput,
  ListLabelingJobsForWorkteamCommandOutput,
} from "../commands/ListLabelingJobsForWorkteamCommand";
import { ListLineageGroupsCommandInput, ListLineageGroupsCommandOutput } from "../commands/ListLineageGroupsCommand";
import {
  ListModelBiasJobDefinitionsCommandInput,
  ListModelBiasJobDefinitionsCommandOutput,
} from "../commands/ListModelBiasJobDefinitionsCommand";
import {
  ListModelCardExportJobsCommandInput,
  ListModelCardExportJobsCommandOutput,
} from "../commands/ListModelCardExportJobsCommand";
import { ListModelCardsCommandInput, ListModelCardsCommandOutput } from "../commands/ListModelCardsCommand";
import {
  ListModelCardVersionsCommandInput,
  ListModelCardVersionsCommandOutput,
} from "../commands/ListModelCardVersionsCommand";
import {
  ListModelExplainabilityJobDefinitionsCommandInput,
  ListModelExplainabilityJobDefinitionsCommandOutput,
} from "../commands/ListModelExplainabilityJobDefinitionsCommand";
import { ListModelMetadataCommandInput, ListModelMetadataCommandOutput } from "../commands/ListModelMetadataCommand";
import {
  ListModelPackageGroupsCommandInput,
  ListModelPackageGroupsCommandOutput,
} from "../commands/ListModelPackageGroupsCommand";
import { ListModelPackagesCommandInput, ListModelPackagesCommandOutput } from "../commands/ListModelPackagesCommand";
import {
  ListModelQualityJobDefinitionsCommandInput,
  ListModelQualityJobDefinitionsCommandOutput,
} from "../commands/ListModelQualityJobDefinitionsCommand";
import { ListModelsCommandInput, ListModelsCommandOutput } from "../commands/ListModelsCommand";
import {
  ListMonitoringAlertHistoryCommandInput,
  ListMonitoringAlertHistoryCommandOutput,
} from "../commands/ListMonitoringAlertHistoryCommand";
import {
  ListMonitoringAlertsCommandInput,
  ListMonitoringAlertsCommandOutput,
} from "../commands/ListMonitoringAlertsCommand";
import {
  ListMonitoringExecutionsCommandInput,
  ListMonitoringExecutionsCommandOutput,
} from "../commands/ListMonitoringExecutionsCommand";
import {
  ListMonitoringSchedulesCommandInput,
  ListMonitoringSchedulesCommandOutput,
} from "../commands/ListMonitoringSchedulesCommand";
import {
  ListNotebookInstanceLifecycleConfigsCommandInput,
  ListNotebookInstanceLifecycleConfigsCommandOutput,
} from "../commands/ListNotebookInstanceLifecycleConfigsCommand";
import {
  ListNotebookInstancesCommandInput,
  ListNotebookInstancesCommandOutput,
} from "../commands/ListNotebookInstancesCommand";
import {
  ListPipelineExecutionsCommandInput,
  ListPipelineExecutionsCommandOutput,
} from "../commands/ListPipelineExecutionsCommand";
import {
  ListPipelineExecutionStepsCommandInput,
  ListPipelineExecutionStepsCommandOutput,
} from "../commands/ListPipelineExecutionStepsCommand";
import {
  ListPipelineParametersForExecutionCommandInput,
  ListPipelineParametersForExecutionCommandOutput,
} from "../commands/ListPipelineParametersForExecutionCommand";
import { ListPipelinesCommandInput, ListPipelinesCommandOutput } from "../commands/ListPipelinesCommand";
import { ListProcessingJobsCommandInput, ListProcessingJobsCommandOutput } from "../commands/ListProcessingJobsCommand";
import { ListProjectsCommandInput, ListProjectsCommandOutput } from "../commands/ListProjectsCommand";
import { ListSpacesCommandInput, ListSpacesCommandOutput } from "../commands/ListSpacesCommand";
import { ListStageDevicesCommandInput, ListStageDevicesCommandOutput } from "../commands/ListStageDevicesCommand";
import {
  ListStudioLifecycleConfigsCommandInput,
  ListStudioLifecycleConfigsCommandOutput,
} from "../commands/ListStudioLifecycleConfigsCommand";
import {
  ListSubscribedWorkteamsCommandInput,
  ListSubscribedWorkteamsCommandOutput,
} from "../commands/ListSubscribedWorkteamsCommand";
import { ListTagsCommandInput, ListTagsCommandOutput } from "../commands/ListTagsCommand";
import { ListTrainingJobsCommandInput, ListTrainingJobsCommandOutput } from "../commands/ListTrainingJobsCommand";
import {
  ListTrainingJobsForHyperParameterTuningJobCommandInput,
  ListTrainingJobsForHyperParameterTuningJobCommandOutput,
} from "../commands/ListTrainingJobsForHyperParameterTuningJobCommand";
import { ListTransformJobsCommandInput, ListTransformJobsCommandOutput } from "../commands/ListTransformJobsCommand";
import {
  ListTrialComponentsCommandInput,
  ListTrialComponentsCommandOutput,
} from "../commands/ListTrialComponentsCommand";
import { ListTrialsCommandInput, ListTrialsCommandOutput } from "../commands/ListTrialsCommand";
import { ListUserProfilesCommandInput, ListUserProfilesCommandOutput } from "../commands/ListUserProfilesCommand";
import { ListWorkforcesCommandInput, ListWorkforcesCommandOutput } from "../commands/ListWorkforcesCommand";
import { ListWorkteamsCommandInput, ListWorkteamsCommandOutput } from "../commands/ListWorkteamsCommand";
import {
  PutModelPackageGroupPolicyCommandInput,
  PutModelPackageGroupPolicyCommandOutput,
} from "../commands/PutModelPackageGroupPolicyCommand";
import { QueryLineageCommandInput, QueryLineageCommandOutput } from "../commands/QueryLineageCommand";
import { RegisterDevicesCommandInput, RegisterDevicesCommandOutput } from "../commands/RegisterDevicesCommand";
import { RenderUiTemplateCommandInput, RenderUiTemplateCommandOutput } from "../commands/RenderUiTemplateCommand";
import {
  RetryPipelineExecutionCommandInput,
  RetryPipelineExecutionCommandOutput,
} from "../commands/RetryPipelineExecutionCommand";
import { SearchCommandInput, SearchCommandOutput } from "../commands/SearchCommand";
import {
  SendPipelineExecutionStepFailureCommandInput,
  SendPipelineExecutionStepFailureCommandOutput,
} from "../commands/SendPipelineExecutionStepFailureCommand";
import {
  SendPipelineExecutionStepSuccessCommandInput,
  SendPipelineExecutionStepSuccessCommandOutput,
} from "../commands/SendPipelineExecutionStepSuccessCommand";
import {
  StartEdgeDeploymentStageCommandInput,
  StartEdgeDeploymentStageCommandOutput,
} from "../commands/StartEdgeDeploymentStageCommand";
import {
  StartInferenceExperimentCommandInput,
  StartInferenceExperimentCommandOutput,
} from "../commands/StartInferenceExperimentCommand";
import {
  StartMonitoringScheduleCommandInput,
  StartMonitoringScheduleCommandOutput,
} from "../commands/StartMonitoringScheduleCommand";
import {
  StartNotebookInstanceCommandInput,
  StartNotebookInstanceCommandOutput,
} from "../commands/StartNotebookInstanceCommand";
import {
  StartPipelineExecutionCommandInput,
  StartPipelineExecutionCommandOutput,
} from "../commands/StartPipelineExecutionCommand";
import { StopAutoMLJobCommandInput, StopAutoMLJobCommandOutput } from "../commands/StopAutoMLJobCommand";
import { StopCompilationJobCommandInput, StopCompilationJobCommandOutput } from "../commands/StopCompilationJobCommand";
import {
  StopEdgeDeploymentStageCommandInput,
  StopEdgeDeploymentStageCommandOutput,
} from "../commands/StopEdgeDeploymentStageCommand";
import {
  StopEdgePackagingJobCommandInput,
  StopEdgePackagingJobCommandOutput,
} from "../commands/StopEdgePackagingJobCommand";
import {
  StopHyperParameterTuningJobCommandInput,
  StopHyperParameterTuningJobCommandOutput,
} from "../commands/StopHyperParameterTuningJobCommand";
import {
  StopInferenceExperimentCommandInput,
  StopInferenceExperimentCommandOutput,
} from "../commands/StopInferenceExperimentCommand";
import {
  StopInferenceRecommendationsJobCommandInput,
  StopInferenceRecommendationsJobCommandOutput,
} from "../commands/StopInferenceRecommendationsJobCommand";
import { StopLabelingJobCommandInput, StopLabelingJobCommandOutput } from "../commands/StopLabelingJobCommand";
import {
  StopMonitoringScheduleCommandInput,
  StopMonitoringScheduleCommandOutput,
} from "../commands/StopMonitoringScheduleCommand";
import {
  StopNotebookInstanceCommandInput,
  StopNotebookInstanceCommandOutput,
} from "../commands/StopNotebookInstanceCommand";
import {
  StopPipelineExecutionCommandInput,
  StopPipelineExecutionCommandOutput,
} from "../commands/StopPipelineExecutionCommand";
import { StopProcessingJobCommandInput, StopProcessingJobCommandOutput } from "../commands/StopProcessingJobCommand";
import { StopTrainingJobCommandInput, StopTrainingJobCommandOutput } from "../commands/StopTrainingJobCommand";
import { StopTransformJobCommandInput, StopTransformJobCommandOutput } from "../commands/StopTransformJobCommand";
import { UpdateActionCommandInput, UpdateActionCommandOutput } from "../commands/UpdateActionCommand";
import {
  UpdateAppImageConfigCommandInput,
  UpdateAppImageConfigCommandOutput,
} from "../commands/UpdateAppImageConfigCommand";
import { UpdateArtifactCommandInput, UpdateArtifactCommandOutput } from "../commands/UpdateArtifactCommand";
import {
  UpdateCodeRepositoryCommandInput,
  UpdateCodeRepositoryCommandOutput,
} from "../commands/UpdateCodeRepositoryCommand";
import { UpdateContextCommandInput, UpdateContextCommandOutput } from "../commands/UpdateContextCommand";
import { UpdateDeviceFleetCommandInput, UpdateDeviceFleetCommandOutput } from "../commands/UpdateDeviceFleetCommand";
import { UpdateDevicesCommandInput, UpdateDevicesCommandOutput } from "../commands/UpdateDevicesCommand";
import { UpdateDomainCommandInput, UpdateDomainCommandOutput } from "../commands/UpdateDomainCommand";
import { UpdateEndpointCommandInput, UpdateEndpointCommandOutput } from "../commands/UpdateEndpointCommand";
import {
  UpdateEndpointWeightsAndCapacitiesCommandInput,
  UpdateEndpointWeightsAndCapacitiesCommandOutput,
} from "../commands/UpdateEndpointWeightsAndCapacitiesCommand";
import { UpdateExperimentCommandInput, UpdateExperimentCommandOutput } from "../commands/UpdateExperimentCommand";
import { UpdateFeatureGroupCommandInput, UpdateFeatureGroupCommandOutput } from "../commands/UpdateFeatureGroupCommand";
import {
  UpdateFeatureMetadataCommandInput,
  UpdateFeatureMetadataCommandOutput,
} from "../commands/UpdateFeatureMetadataCommand";
import { UpdateHubCommandInput, UpdateHubCommandOutput } from "../commands/UpdateHubCommand";
import { UpdateImageCommandInput, UpdateImageCommandOutput } from "../commands/UpdateImageCommand";
import { UpdateImageVersionCommandInput, UpdateImageVersionCommandOutput } from "../commands/UpdateImageVersionCommand";
import {
  UpdateInferenceExperimentCommandInput,
  UpdateInferenceExperimentCommandOutput,
} from "../commands/UpdateInferenceExperimentCommand";
import { UpdateModelCardCommandInput, UpdateModelCardCommandOutput } from "../commands/UpdateModelCardCommand";
import { UpdateModelPackageCommandInput, UpdateModelPackageCommandOutput } from "../commands/UpdateModelPackageCommand";
import {
  UpdateMonitoringAlertCommandInput,
  UpdateMonitoringAlertCommandOutput,
} from "../commands/UpdateMonitoringAlertCommand";
import {
  UpdateMonitoringScheduleCommandInput,
  UpdateMonitoringScheduleCommandOutput,
} from "../commands/UpdateMonitoringScheduleCommand";
import {
  UpdateNotebookInstanceCommandInput,
  UpdateNotebookInstanceCommandOutput,
} from "../commands/UpdateNotebookInstanceCommand";
import {
  UpdateNotebookInstanceLifecycleConfigCommandInput,
  UpdateNotebookInstanceLifecycleConfigCommandOutput,
} from "../commands/UpdateNotebookInstanceLifecycleConfigCommand";
import { UpdatePipelineCommandInput, UpdatePipelineCommandOutput } from "../commands/UpdatePipelineCommand";
import {
  UpdatePipelineExecutionCommandInput,
  UpdatePipelineExecutionCommandOutput,
} from "../commands/UpdatePipelineExecutionCommand";
import { UpdateProjectCommandInput, UpdateProjectCommandOutput } from "../commands/UpdateProjectCommand";
import { UpdateSpaceCommandInput, UpdateSpaceCommandOutput } from "../commands/UpdateSpaceCommand";
import { UpdateTrainingJobCommandInput, UpdateTrainingJobCommandOutput } from "../commands/UpdateTrainingJobCommand";
import { UpdateTrialCommandInput, UpdateTrialCommandOutput } from "../commands/UpdateTrialCommand";
import {
  UpdateTrialComponentCommandInput,
  UpdateTrialComponentCommandOutput,
} from "../commands/UpdateTrialComponentCommand";
import { UpdateUserProfileCommandInput, UpdateUserProfileCommandOutput } from "../commands/UpdateUserProfileCommand";
import { UpdateWorkforceCommandInput, UpdateWorkforceCommandOutput } from "../commands/UpdateWorkforceCommand";
import { UpdateWorkteamCommandInput, UpdateWorkteamCommandOutput } from "../commands/UpdateWorkteamCommand";
import {
  ActionSource,
  ActionSummary,
  AddAssociationRequest,
  AddAssociationResponse,
  AdditionalInferenceSpecificationDefinition,
  AddTagsInput,
  AddTagsOutput,
  AgentVersion,
  Alarm,
  AlgorithmSpecification,
  AlgorithmStatusDetails,
  AlgorithmStatusItem,
  AlgorithmSummary,
  AlgorithmValidationProfile,
  AlgorithmValidationSpecification,
  AnnotationConsolidationConfig,
  AppDetails,
  AppImageConfigDetails,
  AppSpecification,
  ArtifactSource,
  ArtifactSourceType,
  ArtifactSummary,
  AssociateTrialComponentRequest,
  AssociateTrialComponentResponse,
  AssociationSummary,
  AsyncInferenceClientConfig,
  AsyncInferenceConfig,
  AsyncInferenceNotificationConfig,
  AsyncInferenceOutputConfig,
  AsyncNotificationTopicTypes,
  AthenaDatasetDefinition,
  AutoMLAlgorithm,
  AutoMLAlgorithmConfig,
  AutoMLCandidate,
  AutoMLCandidateGenerationConfig,
  AutoMLCandidateStep,
  AutoMLChannel,
  AutoMLContainerDefinition,
  AutoMLDataSource,
  AutoMLDataSplitConfig,
  AutoMLJobArtifacts,
  AutoMLJobChannel,
  AutoMLJobCompletionCriteria,
  AutoMLJobConfig,
  AutoMLJobObjective,
  AutoMLJobStepMetadata,
  AutoMLJobSummary,
  AutoMLOutputDataConfig,
  AutoMLPartialFailureReason,
  AutoMLProblemTypeConfig,
  AutoMLProcessingUnit,
  AutoMLS3DataSource,
  AutoMLSecurityConfig,
  AutoRollbackConfig,
  BatchDataCaptureConfig,
  BatchDescribeModelPackageError,
  BatchDescribeModelPackageInput,
  BatchDescribeModelPackageOutput,
  BatchDescribeModelPackageSummary,
  BatchTransformInput,
  BestObjectiveNotImproving,
  Bias,
  BlueGreenUpdatePolicy,
  CacheHitResult,
  CallbackStepMetadata,
  CandidateArtifactLocations,
  CandidateProperties,
  CanvasAppSettings,
  CapacitySize,
  CaptureContentTypeHeader,
  CaptureOption,
  CategoricalParameter,
  CategoricalParameterRange,
  CategoricalParameterRangeSpecification,
  Channel,
  ChannelSpecification,
  CheckpointConfig,
  ClarifyCheckStepMetadata,
  ClarifyExplainerConfig,
  ClarifyFeatureType,
  ClarifyInferenceConfig,
  ClarifyShapBaselineConfig,
  ClarifyShapConfig,
  ClarifyTextConfig,
  CodeRepository,
  CodeRepositorySummary,
  CognitoConfig,
  CognitoMemberDefinition,
  CollectionConfiguration,
  CompilationJobSummary,
  CompressionType,
  ConditionStepMetadata,
  ConflictException,
  ContainerDefinition,
  ContentClassifier,
  ContextSource,
  ContextSummary,
  ContinuousParameterRange,
  ContinuousParameterRangeSpecification,
  ConvergenceDetected,
  CreateActionRequest,
  CreateActionResponse,
  CreateAlgorithmInput,
  CreateAlgorithmOutput,
  CreateAppImageConfigRequest,
  CreateAppImageConfigResponse,
  CreateAppRequest,
  CreateAppResponse,
  CreateArtifactRequest,
  CreateArtifactResponse,
  CreateAutoMLJobRequest,
  CreateAutoMLJobResponse,
  CreateAutoMLJobV2Request,
  CreateAutoMLJobV2Response,
  CreateCodeRepositoryInput,
  CreateCodeRepositoryOutput,
  CreateCompilationJobRequest,
  CreateCompilationJobResponse,
  CreateContextRequest,
  CreateContextResponse,
  CreateDataQualityJobDefinitionRequest,
  CreateDataQualityJobDefinitionResponse,
  CreateDeviceFleetRequest,
  CreateDomainRequest,
  CreateDomainResponse,
  CreateEdgeDeploymentPlanRequest,
  CreateEdgeDeploymentPlanResponse,
  CreateEdgeDeploymentStageRequest,
  CreateEdgePackagingJobRequest,
  CustomImage,
  DataQualityAppSpecification,
  DataQualityBaselineConfig,
  DataQualityJobInput,
  DataSource,
  DefaultSpaceSettings,
  DeploymentStage,
  DeviceSelectionConfig,
  DomainSettings,
  EdgeDeploymentConfig,
  EdgeDeploymentModelConfig,
  EdgeOutputConfig,
  EndpointInput,
  FileSystemConfig,
  FileSystemDataSource,
  FinalAutoMLJobObjectiveMetric,
  GitConfig,
  HyperParameterSpecification,
  HyperParameterTuningJobObjective,
  IamIdentity,
  ImageClassificationJobConfig,
  ImageConfig,
  InferenceSpecification,
  InputConfig,
  InstanceGroup,
  IntegerParameterRangeSpecification,
  JupyterServerAppSettings,
  KernelGatewayAppSettings,
  KernelGatewayImageConfig,
  KernelSpec,
  MetadataProperties,
  MetricDatum,
  MetricDefinition,
  MetricsSource,
  ModelDeployConfig,
  ModelInput,
  ModelPackageContainerDefinition,
  MonitoringClusterConfig,
  MonitoringConstraintsResource,
  MonitoringCsvDatasetFormat,
  MonitoringDatasetFormat,
  MonitoringJsonDatasetFormat,
  MonitoringNetworkConfig,
  MonitoringOutput,
  MonitoringOutputConfig,
  MonitoringParquetDatasetFormat,
  MonitoringResources,
  MonitoringS3Output,
  MonitoringStatisticsResource,
  MonitoringStoppingCondition,
  MultiModelConfig,
  NeoVpcConfig,
  OutputConfig,
  OutputDataConfig,
  OutputParameter,
  ParameterRange,
  ProductionVariantInstanceType,
  RepositoryAuthConfig,
  ResourceConfig,
  ResourceInUse,
  ResourceLimitExceeded,
  ResourceNotFound,
  ResourceSpec,
  RSessionAppSettings,
  RStudioServerProAppSettings,
  RStudioServerProDomainSettings,
  S3DataSource,
  SharingSettings,
  ShuffleConfig,
  StoppingCondition,
  Tag,
  TargetPlatform,
  TensorBoardAppSettings,
  TextClassificationJobConfig,
  TimeSeriesForecastingSettings,
  TrafficRoutingConfig,
  TrainingImageConfig,
  TrainingInputMode,
  TrainingInstanceType,
  TrainingJobDefinition,
  TrainingRepositoryAuthConfig,
  TrainingSpecification,
  TransformDataSource,
  TransformInput,
  TransformInstanceType,
  TransformJobDefinition,
  TransformOutput,
  TransformResources,
  TransformS3DataSource,
  UserContext,
  UserSettings,
  VpcConfig,
} from "../models/models_0";
import {
  CreateEndpointConfigInput,
  CreateEndpointConfigOutput,
  CreateEndpointInput,
  CreateEndpointOutput,
  CreateExperimentRequest,
  CreateExperimentResponse,
  CreateFeatureGroupRequest,
  CreateFeatureGroupResponse,
  CreateFlowDefinitionRequest,
  CreateFlowDefinitionResponse,
  CreateHubRequest,
  CreateHubResponse,
  CreateHumanTaskUiRequest,
  CreateHumanTaskUiResponse,
  CreateHyperParameterTuningJobRequest,
  CreateHyperParameterTuningJobResponse,
  CreateImageRequest,
  CreateImageResponse,
  CreateImageVersionRequest,
  CreateImageVersionResponse,
  CreateInferenceExperimentRequest,
  CreateInferenceExperimentResponse,
  CreateInferenceRecommendationsJobRequest,
  CreateInferenceRecommendationsJobResponse,
  CreateLabelingJobRequest,
  CreateLabelingJobResponse,
  CreateModelBiasJobDefinitionRequest,
  CreateModelBiasJobDefinitionResponse,
  CreateModelCardExportJobRequest,
  CreateModelCardExportJobResponse,
  CreateModelCardRequest,
  CreateModelCardResponse,
  CreateModelExplainabilityJobDefinitionRequest,
  CreateModelExplainabilityJobDefinitionResponse,
  CreateModelInput,
  CreateModelOutput,
  CreateModelPackageGroupInput,
  CreateModelPackageGroupOutput,
  CreateModelPackageInput,
  CreateModelPackageOutput,
  CreateModelQualityJobDefinitionRequest,
  CreateModelQualityJobDefinitionResponse,
  CreateMonitoringScheduleRequest,
  CreateMonitoringScheduleResponse,
  CreateNotebookInstanceInput,
  CreateNotebookInstanceLifecycleConfigInput,
  CreateNotebookInstanceLifecycleConfigOutput,
  CreateNotebookInstanceOutput,
  CreatePipelineRequest,
  CreatePipelineResponse,
  CreatePresignedDomainUrlRequest,
  CreatePresignedDomainUrlResponse,
  CreatePresignedNotebookInstanceUrlInput,
  CreatePresignedNotebookInstanceUrlOutput,
  CreateProcessingJobRequest,
  CreateProcessingJobResponse,
  CreateProjectInput,
  CreateProjectOutput,
  CreateSpaceRequest,
  CreateSpaceResponse,
  CreateStudioLifecycleConfigRequest,
  CreateStudioLifecycleConfigResponse,
  CreateTrainingJobRequest,
  CreateTrainingJobResponse,
  CreateTransformJobRequest,
  CreateTransformJobResponse,
  CreateTrialComponentRequest,
  CreateTrialComponentResponse,
  CreateTrialRequest,
  CreateTrialResponse,
  CreateUserProfileRequest,
  CreateUserProfileResponse,
  CreateWorkforceRequest,
  CreateWorkforceResponse,
  CreateWorkteamRequest,
  CreateWorkteamResponse,
  DataCaptureConfig,
  DataCaptureConfigSummary,
  DataCatalogConfig,
  DataProcessing,
  DatasetDefinition,
  DebugHookConfig,
  DebugRuleConfiguration,
  DebugRuleEvaluationStatus,
  DeleteActionRequest,
  DeleteActionResponse,
  DeleteAlgorithmInput,
  DeleteAppImageConfigRequest,
  DeleteAppRequest,
  DeleteArtifactRequest,
  DeleteArtifactResponse,
  DeleteAssociationRequest,
  DeleteAssociationResponse,
  DeleteCodeRepositoryInput,
  DeleteContextRequest,
  DeleteContextResponse,
  DeleteDataQualityJobDefinitionRequest,
  DeleteDeviceFleetRequest,
  DeleteDomainRequest,
  DeleteEdgeDeploymentPlanRequest,
  DeleteEdgeDeploymentStageRequest,
  DeleteEndpointConfigInput,
  DeleteEndpointInput,
  DeleteExperimentRequest,
  DeleteExperimentResponse,
  DeleteFeatureGroupRequest,
  DeleteFlowDefinitionRequest,
  DeleteFlowDefinitionResponse,
  DeleteHubContentRequest,
  DeleteHubRequest,
  DeleteHumanTaskUiRequest,
  DeleteHumanTaskUiResponse,
  DeleteImageRequest,
  DeleteImageResponse,
  DeleteImageVersionRequest,
  DeleteImageVersionResponse,
  DeleteInferenceExperimentRequest,
  DeleteInferenceExperimentResponse,
  DeleteModelBiasJobDefinitionRequest,
  DeleteModelCardRequest,
  DeleteModelExplainabilityJobDefinitionRequest,
  DeleteModelInput,
  DeleteModelPackageGroupInput,
  DeleteModelPackageGroupPolicyInput,
  DeleteModelPackageInput,
  DeleteModelQualityJobDefinitionRequest,
  DeleteMonitoringScheduleRequest,
  DeleteNotebookInstanceInput,
  DeleteNotebookInstanceLifecycleConfigInput,
  DeletePipelineRequest,
  DeletePipelineResponse,
  DeleteProjectInput,
  DeleteSpaceRequest,
  DeleteStudioLifecycleConfigRequest,
  DeleteTagsInput,
  DeploymentConfig,
  DriftCheckBaselines,
  DriftCheckBias,
  DriftCheckExplainability,
  DriftCheckModelDataQuality,
  DriftCheckModelQuality,
  EndpointInfo,
  EndpointInputConfiguration,
  EnvironmentParameterRanges,
  ExperimentConfig,
  Explainability,
  ExplainerConfig,
  FeatureDefinition,
  FileSource,
  FlowDefinitionOutputConfig,
  HubS3StorageConfig,
  HumanLoopActivationConditionsConfig,
  HumanLoopActivationConfig,
  HumanLoopConfig,
  HumanLoopRequestSource,
  HumanTaskConfig,
  HyperbandStrategyConfig,
  HyperParameterAlgorithmSpecification,
  HyperParameterTrainingJobDefinition,
  HyperParameterTuningInstanceConfig,
  HyperParameterTuningJobConfig,
  HyperParameterTuningJobStrategyConfig,
  HyperParameterTuningJobWarmStartConfig,
  HyperParameterTuningResourceConfig,
  InferenceExecutionConfig,
  InferenceExperimentDataStorageConfig,
  InferenceExperimentSchedule,
  InstanceMetadataServiceConfiguration,
  IntegerParameterRange,
  LabelingJobAlgorithmsConfig,
  LabelingJobDataAttributes,
  LabelingJobDataSource,
  LabelingJobInputConfig,
  LabelingJobOutputConfig,
  LabelingJobResourceConfig,
  LabelingJobS3DataSource,
  LabelingJobSnsDataSource,
  LabelingJobStoppingConditions,
  MemberDefinition,
  ModelBiasAppSpecification,
  ModelBiasBaselineConfig,
  ModelBiasJobInput,
  ModelCardExportOutputConfig,
  ModelCardSecurityConfig,
  ModelClientConfig,
  ModelDataQuality,
  ModelExplainabilityAppSpecification,
  ModelExplainabilityBaselineConfig,
  ModelExplainabilityJobInput,
  ModelInfrastructureConfig,
  ModelLatencyThreshold,
  ModelMetrics,
  ModelPackageValidationProfile,
  ModelPackageValidationSpecification,
  ModelQuality,
  ModelQualityAppSpecification,
  ModelQualityBaselineConfig,
  ModelQualityJobInput,
  ModelVariantConfig,
  MonitoringAppSpecification,
  MonitoringBaselineConfig,
  MonitoringGroundTruthS3Input,
  MonitoringInput,
  MonitoringJobDefinition,
  MonitoringScheduleConfig,
  NetworkConfig,
  NotebookInstanceAcceleratorType,
  NotebookInstanceLifecycleHook,
  NotificationConfiguration,
  OfflineStoreConfig,
  OidcConfig,
  OidcMemberDefinition,
  OnlineStoreConfig,
  OnlineStoreSecurityConfig,
  ParallelismConfiguration,
  ParameterRanges,
  ParentHyperParameterTuningJob,
  Phase,
  PipelineDefinitionS3Location,
  ProcessingClusterConfig,
  ProcessingFeatureStoreOutput,
  ProcessingInput,
  ProcessingOutput,
  ProcessingOutputConfig,
  ProcessingResources,
  ProcessingS3Input,
  ProcessingS3Output,
  ProcessingStoppingCondition,
  ProductionVariant,
  ProductionVariantCoreDumpConfig,
  ProductionVariantServerlessConfig,
  ProfilerConfig,
  ProfilerRuleConfiguration,
  ProvisioningParameter,
  PublicWorkforceTaskPrice,
  RealTimeInferenceConfig,
  RecommendationJobCompiledOutputConfig,
  RecommendationJobContainerConfig,
  RecommendationJobInputConfig,
  RecommendationJobOutputConfig,
  RecommendationJobPayloadConfig,
  RecommendationJobResourceLimit,
  RecommendationJobStoppingConditions,
  RecommendationJobVpcConfig,
  RedshiftDatasetDefinition,
  ResourceLimits,
  RetentionPolicy,
  RetryStrategy,
  S3StorageConfig,
  ScheduleConfig,
  ServiceCatalogProvisioningDetails,
  ShadowModeConfig,
  ShadowModelVariantConfig,
  SourceAlgorithm,
  SourceAlgorithmSpecification,
  SourceIpConfig,
  SpaceSettings,
  TensorBoardOutputConfig,
  TrafficPattern,
  TrialComponentArtifact,
  TrialComponentParameterValue,
  TrialComponentStatus,
  TuningJobCompletionCriteria,
  UiConfig,
  UiTemplate,
  USD,
  WorkforceVpcConfigRequest,
} from "../models/models_1";
import {
  DeleteTagsOutput,
  DeleteTrialComponentRequest,
  DeleteTrialComponentResponse,
  DeleteTrialRequest,
  DeleteTrialResponse,
  DeleteUserProfileRequest,
  DeleteWorkforceRequest,
  DeleteWorkforceResponse,
  DeleteWorkteamRequest,
  DeleteWorkteamResponse,
  DeployedImage,
  DeploymentStageStatusSummary,
  DeregisterDevicesRequest,
  DescribeActionRequest,
  DescribeActionResponse,
  DescribeAlgorithmInput,
  DescribeAlgorithmOutput,
  DescribeAppImageConfigRequest,
  DescribeAppImageConfigResponse,
  DescribeAppRequest,
  DescribeAppResponse,
  DescribeArtifactRequest,
  DescribeArtifactResponse,
  DescribeAutoMLJobRequest,
  DescribeAutoMLJobResponse,
  DescribeAutoMLJobV2Request,
  DescribeAutoMLJobV2Response,
  DescribeCodeRepositoryInput,
  DescribeCodeRepositoryOutput,
  DescribeCompilationJobRequest,
  DescribeCompilationJobResponse,
  DescribeContextRequest,
  DescribeContextResponse,
  DescribeDataQualityJobDefinitionRequest,
  DescribeDataQualityJobDefinitionResponse,
  DescribeDeviceFleetRequest,
  DescribeDeviceFleetResponse,
  DescribeDeviceRequest,
  DescribeDeviceResponse,
  DescribeDomainRequest,
  DescribeDomainResponse,
  DescribeEdgeDeploymentPlanRequest,
  DescribeEdgeDeploymentPlanResponse,
  DescribeEdgePackagingJobRequest,
  DescribeEdgePackagingJobResponse,
  DescribeEndpointConfigInput,
  DescribeEndpointConfigOutput,
  DescribeEndpointInput,
  DescribeEndpointOutput,
  DescribeExperimentRequest,
  DescribeExperimentResponse,
  DescribeFeatureGroupRequest,
  DescribeFeatureGroupResponse,
  DescribeFeatureMetadataRequest,
  DescribeFeatureMetadataResponse,
  DescribeFlowDefinitionRequest,
  DescribeFlowDefinitionResponse,
  DescribeHubContentRequest,
  DescribeHubContentResponse,
  DescribeHubRequest,
  DescribeHubResponse,
  DescribeHumanTaskUiRequest,
  DescribeHumanTaskUiResponse,
  DescribeHyperParameterTuningJobRequest,
  DescribeHyperParameterTuningJobResponse,
  DescribeImageRequest,
  DescribeImageResponse,
  DescribeImageVersionRequest,
  DescribeImageVersionResponse,
  DescribeInferenceExperimentRequest,
  DescribeInferenceExperimentResponse,
  DescribeInferenceRecommendationsJobRequest,
  DescribeInferenceRecommendationsJobResponse,
  DescribeLabelingJobRequest,
  DescribeLabelingJobResponse,
  DescribeLineageGroupRequest,
  DescribeLineageGroupResponse,
  DescribeModelBiasJobDefinitionRequest,
  DescribeModelBiasJobDefinitionResponse,
  DescribeModelCardExportJobRequest,
  DescribeModelCardExportJobResponse,
  DescribeModelCardRequest,
  DescribeModelCardResponse,
  DescribeModelExplainabilityJobDefinitionRequest,
  DescribeModelExplainabilityJobDefinitionResponse,
  DescribeModelInput,
  DescribeModelOutput,
  DescribeModelPackageGroupInput,
  DescribeModelPackageGroupOutput,
  DescribeModelPackageInput,
  DescribeModelPackageOutput,
  DescribeModelQualityJobDefinitionRequest,
  DescribeModelQualityJobDefinitionResponse,
  DescribeMonitoringScheduleRequest,
  DescribeMonitoringScheduleResponse,
  DescribeNotebookInstanceInput,
  DescribeNotebookInstanceLifecycleConfigInput,
  DescribeNotebookInstanceLifecycleConfigOutput,
  DescribeNotebookInstanceOutput,
  DescribePipelineDefinitionForExecutionRequest,
  DescribePipelineDefinitionForExecutionResponse,
  DescribePipelineExecutionRequest,
  DescribePipelineExecutionResponse,
  DescribePipelineRequest,
  DescribePipelineResponse,
  DescribeProcessingJobRequest,
  DescribeProcessingJobResponse,
  DescribeProjectInput,
  DescribeProjectOutput,
  DescribeSpaceRequest,
  DescribeSpaceResponse,
  DescribeStudioLifecycleConfigRequest,
  DescribeStudioLifecycleConfigResponse,
  DescribeSubscribedWorkteamRequest,
  DescribeSubscribedWorkteamResponse,
  DescribeTrainingJobRequest,
  DescribeTrainingJobResponse,
  DescribeTransformJobRequest,
  DescribeTransformJobResponse,
  DescribeTrialComponentRequest,
  DescribeTrialComponentResponse,
  DescribeTrialRequest,
  DescribeTrialResponse,
  DescribeUserProfileRequest,
  DescribeUserProfileResponse,
  DescribeWorkforceRequest,
  DescribeWorkforceResponse,
  DescribeWorkteamRequest,
  DescribeWorkteamResponse,
  DesiredWeightAndCapacity,
  Device,
  DeviceDeploymentSummary,
  DeviceFleetSummary,
  DeviceStats,
  DeviceSummary,
  DisableSagemakerServicecatalogPortfolioInput,
  DisableSagemakerServicecatalogPortfolioOutput,
  DisassociateTrialComponentRequest,
  DisassociateTrialComponentResponse,
  DomainDetails,
  DomainSettingsForUpdate,
  Edge,
  EdgeDeploymentPlanSummary,
  EdgeDeploymentStatus,
  EdgeModel,
  EdgeModelStat,
  EdgeModelSummary,
  EdgePackagingJobSummary,
  EdgePresetDeploymentOutput,
  EMRStepMetadata,
  EnableSagemakerServicecatalogPortfolioInput,
  EnableSagemakerServicecatalogPortfolioOutput,
  Endpoint,
  EndpointConfigSummary,
  EndpointMetadata,
  EndpointOutputConfiguration,
  EndpointPerformance,
  EndpointSummary,
  EnvironmentParameter,
  Experiment,
  ExperimentSource,
  ExperimentSummary,
  FailStepMetadata,
  FeatureGroup,
  FeatureGroupSummary,
  FeatureMetadata,
  FeatureParameter,
  Filter,
  FinalHyperParameterTuningJobObjectiveMetric,
  FlowDefinitionSummary,
  GetDeviceFleetReportRequest,
  GetDeviceFleetReportResponse,
  GetLineageGroupPolicyRequest,
  GetLineageGroupPolicyResponse,
  GetModelPackageGroupPolicyInput,
  GetModelPackageGroupPolicyOutput,
  GetSagemakerServicecatalogPortfolioStatusInput,
  GetSagemakerServicecatalogPortfolioStatusOutput,
  GetSearchSuggestionsRequest,
  GetSearchSuggestionsResponse,
  GitConfigForUpdate,
  HubContentDependency,
  HubContentInfo,
  HubInfo,
  HumanTaskUiSummary,
  HyperParameterTrainingJobSummary,
  HyperParameterTuningJobCompletionDetails,
  HyperParameterTuningJobConsumedResources,
  HyperParameterTuningJobSearchEntity,
  HyperParameterTuningJobSummary,
  Image,
  ImageVersion,
  ImportHubContentRequest,
  ImportHubContentResponse,
  InferenceExperimentSummary,
  InferenceMetrics,
  InferenceRecommendation,
  InferenceRecommendationsJob,
  InferenceRecommendationsJobStep,
  LabelCounters,
  LabelCountersForWorkteam,
  LabelingJobForWorkteamSummary,
  LabelingJobOutput,
  LastUpdateStatus,
  MetricData,
  ModelArtifacts,
  ModelCardExportArtifacts,
  ModelConfiguration,
  ModelDeployResult,
  ModelDigests,
  ModelPackageStatusDetails,
  ModelPackageStatusItem,
  ModelVariantConfigSummary,
  MonitoringExecutionSummary,
  MonitoringSchedule,
  ObjectiveStatusCounters,
  OfflineStoreStatus,
  OidcConfigForResponse,
  PendingDeploymentSummary,
  PendingProductionVariantSummary,
  PipelineExperimentConfig,
  ProductionVariantStatus,
  ProductionVariantSummary,
  ProfilerRuleEvaluationStatus,
  PropertyNameQuery,
  PropertyNameSuggestion,
  RecommendationJobInferenceBenchmark,
  RecommendationMetrics,
  ResolvedAttributes,
  RStudioServerProDomainSettingsForUpdate,
  SecondaryStatusTransition,
  ServiceCatalogProvisionedProductDetails,
  SubscribedWorkteam,
  SuggestionQuery,
  TrainingJobStatusCounters,
  TrialComponentMetricSummary,
  TrialComponentSource,
  TrialSource,
  UiTemplateInfo,
  WarmPoolStatus,
  Workforce,
  WorkforceVpcConfigResponse,
  Workteam,
} from "../models/models_2";
import {
  LabelingJobSummary,
  LambdaStepMetadata,
  LineageGroupSummary,
  LineageType,
  ListActionsRequest,
  ListActionsResponse,
  ListAlgorithmsInput,
  ListAlgorithmsOutput,
  ListAliasesRequest,
  ListAliasesResponse,
  ListAppImageConfigsRequest,
  ListAppImageConfigsResponse,
  ListAppsRequest,
  ListAppsResponse,
  ListArtifactsRequest,
  ListArtifactsResponse,
  ListAssociationsRequest,
  ListAssociationsResponse,
  ListAutoMLJobsRequest,
  ListAutoMLJobsResponse,
  ListCandidatesForAutoMLJobRequest,
  ListCandidatesForAutoMLJobResponse,
  ListCodeRepositoriesInput,
  ListCodeRepositoriesOutput,
  ListCompilationJobsRequest,
  ListCompilationJobsResponse,
  ListContextsRequest,
  ListContextsResponse,
  ListDataQualityJobDefinitionsRequest,
  ListDataQualityJobDefinitionsResponse,
  ListDeviceFleetsRequest,
  ListDeviceFleetsResponse,
  ListDevicesRequest,
  ListDevicesResponse,
  ListDomainsRequest,
  ListDomainsResponse,
  ListEdgeDeploymentPlansRequest,
  ListEdgeDeploymentPlansResponse,
  ListEdgePackagingJobsRequest,
  ListEdgePackagingJobsResponse,
  ListEndpointConfigsInput,
  ListEndpointConfigsOutput,
  ListEndpointsInput,
  ListEndpointsOutput,
  ListExperimentsRequest,
  ListExperimentsResponse,
  ListFeatureGroupsRequest,
  ListFeatureGroupsResponse,
  ListFlowDefinitionsRequest,
  ListFlowDefinitionsResponse,
  ListHubContentsRequest,
  ListHubContentsResponse,
  ListHubContentVersionsRequest,
  ListHubContentVersionsResponse,
  ListHubsRequest,
  ListHubsResponse,
  ListHumanTaskUisRequest,
  ListHumanTaskUisResponse,
  ListHyperParameterTuningJobsRequest,
  ListHyperParameterTuningJobsResponse,
  ListImagesRequest,
  ListImagesResponse,
  ListImageVersionsRequest,
  ListImageVersionsResponse,
  ListInferenceExperimentsRequest,
  ListInferenceExperimentsResponse,
  ListInferenceRecommendationsJobsRequest,
  ListInferenceRecommendationsJobsResponse,
  ListInferenceRecommendationsJobStepsRequest,
  ListInferenceRecommendationsJobStepsResponse,
  ListLabelingJobsForWorkteamRequest,
  ListLabelingJobsForWorkteamResponse,
  ListLabelingJobsRequest,
  ListLabelingJobsResponse,
  ListLineageGroupsRequest,
  ListLineageGroupsResponse,
  ListModelBiasJobDefinitionsRequest,
  ListModelBiasJobDefinitionsResponse,
  ListModelCardExportJobsRequest,
  ListModelCardExportJobsResponse,
  ListModelCardsRequest,
  ListModelCardsResponse,
  ListModelCardVersionsRequest,
  ListModelCardVersionsResponse,
  ListModelExplainabilityJobDefinitionsRequest,
  ListModelExplainabilityJobDefinitionsResponse,
  ListModelMetadataRequest,
  ListModelMetadataResponse,
  ListModelPackageGroupsInput,
  ListModelPackageGroupsOutput,
  ListModelPackagesInput,
  ListModelPackagesOutput,
  ListModelQualityJobDefinitionsRequest,
  ListModelQualityJobDefinitionsResponse,
  ListModelsInput,
  ListModelsOutput,
  ListMonitoringAlertHistoryRequest,
  ListMonitoringAlertHistoryResponse,
  ListMonitoringAlertsRequest,
  ListMonitoringAlertsResponse,
  ListMonitoringExecutionsRequest,
  ListMonitoringExecutionsResponse,
  ListMonitoringSchedulesRequest,
  ListMonitoringSchedulesResponse,
  ListNotebookInstanceLifecycleConfigsInput,
  ListNotebookInstanceLifecycleConfigsOutput,
  ListNotebookInstancesInput,
  ListNotebookInstancesOutput,
  ListPipelineExecutionsRequest,
  ListPipelineExecutionsResponse,
  ListPipelineExecutionStepsRequest,
  ListPipelineExecutionStepsResponse,
  ListPipelineParametersForExecutionRequest,
  ListPipelineParametersForExecutionResponse,
  ListPipelinesRequest,
  ListPipelinesResponse,
  ListProcessingJobsRequest,
  ListProcessingJobsResponse,
  ListProjectsInput,
  ListProjectsOutput,
  ListSpacesRequest,
  ListSpacesResponse,
  ListStageDevicesRequest,
  ListStageDevicesResponse,
  ListStudioLifecycleConfigsRequest,
  ListStudioLifecycleConfigsResponse,
  ListSubscribedWorkteamsRequest,
  ListSubscribedWorkteamsResponse,
  ListTagsInput,
  ListTagsOutput,
  ListTrainingJobsForHyperParameterTuningJobRequest,
  ListTrainingJobsForHyperParameterTuningJobResponse,
  ListTrainingJobsRequest,
  ListTrainingJobsResponse,
  ListTransformJobsRequest,
  ListTransformJobsResponse,
  ListTrialComponentsRequest,
  ListTrialComponentsResponse,
  ListTrialsRequest,
  ListTrialsResponse,
  ListUserProfilesRequest,
  ListUserProfilesResponse,
  ListWorkforcesRequest,
  ListWorkforcesResponse,
  ListWorkteamsRequest,
  ListWorkteamsResponse,
  Model,
  ModelCard,
  ModelCardExportJobSummary,
  ModelCardSummary,
  ModelCardVersionSummary,
  ModelDashboardEndpoint,
  ModelDashboardIndicatorAction,
  ModelDashboardModel,
  ModelDashboardModelCard,
  ModelDashboardMonitoringSchedule,
  ModelMetadataFilter,
  ModelMetadataSearchExpression,
  ModelMetadataSummary,
  ModelPackage,
  ModelPackageGroup,
  ModelPackageGroupSummary,
  ModelPackageSummary,
  ModelStepMetadata,
  ModelSummary,
  ModelVariantAction,
  MonitoringAlertActions,
  MonitoringAlertHistorySummary,
  MonitoringAlertSummary,
  MonitoringJobDefinitionSummary,
  MonitoringScheduleSummary,
  NestedFilters,
  NotebookInstanceLifecycleConfigSummary,
  NotebookInstanceSummary,
  Parameter,
  Parent,
  Pipeline,
  PipelineExecution,
  PipelineExecutionStep,
  PipelineExecutionStepMetadata,
  PipelineExecutionSummary,
  PipelineSummary,
  ProcessingJob,
  ProcessingJobStepMetadata,
  ProcessingJobSummary,
  ProfilerConfigForUpdate,
  Project,
  ProjectSummary,
  PutModelPackageGroupPolicyInput,
  PutModelPackageGroupPolicyOutput,
  QualityCheckStepMetadata,
  QueryFilters,
  QueryLineageRequest,
  QueryLineageResponse,
  RegisterDevicesRequest,
  RegisterModelStepMetadata,
  RenderableTask,
  RenderingError,
  RenderUiTemplateRequest,
  RenderUiTemplateResponse,
  ResourceConfigForUpdate,
  RetryPipelineExecutionRequest,
  RetryPipelineExecutionResponse,
  SearchRecord,
  SearchResponse,
  SendPipelineExecutionStepFailureRequest,
  SendPipelineExecutionStepFailureResponse,
  SendPipelineExecutionStepSuccessRequest,
  SendPipelineExecutionStepSuccessResponse,
  SpaceDetails,
  StartEdgeDeploymentStageRequest,
  StartInferenceExperimentRequest,
  StartInferenceExperimentResponse,
  StartMonitoringScheduleRequest,
  StartNotebookInstanceInput,
  StartPipelineExecutionRequest,
  StartPipelineExecutionResponse,
  StopAutoMLJobRequest,
  StopCompilationJobRequest,
  StopEdgeDeploymentStageRequest,
  StopEdgePackagingJobRequest,
  StopHyperParameterTuningJobRequest,
  StopInferenceExperimentRequest,
  StopInferenceExperimentResponse,
  StopInferenceRecommendationsJobRequest,
  StopLabelingJobRequest,
  StopMonitoringScheduleRequest,
  StopNotebookInstanceInput,
  StopPipelineExecutionRequest,
  StopPipelineExecutionResponse,
  StopProcessingJobRequest,
  StopTrainingJobRequest,
  StopTransformJobRequest,
  StudioLifecycleConfigDetails,
  TrainingJob,
  TrainingJobStepMetadata,
  TrainingJobSummary,
  TransformJob,
  TransformJobStepMetadata,
  TransformJobSummary,
  Trial,
  TrialComponent,
  TrialComponentSimpleSummary,
  TrialComponentSourceDetail,
  TrialComponentSummary,
  TrialSummary,
  TuningJobStepMetaData,
  UpdateActionRequest,
  UpdateActionResponse,
  UserProfileDetails,
  Vertex,
} from "../models/models_3";
import {
  SearchExpression,
  SearchRequest,
  ServiceCatalogProvisioningUpdateDetails,
  UpdateAppImageConfigRequest,
  UpdateAppImageConfigResponse,
  UpdateArtifactRequest,
  UpdateArtifactResponse,
  UpdateCodeRepositoryInput,
  UpdateCodeRepositoryOutput,
  UpdateContextRequest,
  UpdateContextResponse,
  UpdateDeviceFleetRequest,
  UpdateDevicesRequest,
  UpdateDomainRequest,
  UpdateDomainResponse,
  UpdateEndpointInput,
  UpdateEndpointOutput,
  UpdateEndpointWeightsAndCapacitiesInput,
  UpdateEndpointWeightsAndCapacitiesOutput,
  UpdateExperimentRequest,
  UpdateExperimentResponse,
  UpdateFeatureGroupRequest,
  UpdateFeatureGroupResponse,
  UpdateFeatureMetadataRequest,
  UpdateHubRequest,
  UpdateHubResponse,
  UpdateImageRequest,
  UpdateImageResponse,
  UpdateImageVersionRequest,
  UpdateImageVersionResponse,
  UpdateInferenceExperimentRequest,
  UpdateInferenceExperimentResponse,
  UpdateModelCardRequest,
  UpdateModelCardResponse,
  UpdateModelPackageInput,
  UpdateModelPackageOutput,
  UpdateMonitoringAlertRequest,
  UpdateMonitoringAlertResponse,
  UpdateMonitoringScheduleRequest,
  UpdateMonitoringScheduleResponse,
  UpdateNotebookInstanceInput,
  UpdateNotebookInstanceLifecycleConfigInput,
  UpdateNotebookInstanceLifecycleConfigOutput,
  UpdateNotebookInstanceOutput,
  UpdatePipelineExecutionRequest,
  UpdatePipelineExecutionResponse,
  UpdatePipelineRequest,
  UpdatePipelineResponse,
  UpdateProjectInput,
  UpdateProjectOutput,
  UpdateSpaceRequest,
  UpdateSpaceResponse,
  UpdateTrainingJobRequest,
  UpdateTrainingJobResponse,
  UpdateTrialComponentRequest,
  UpdateTrialComponentResponse,
  UpdateTrialRequest,
  UpdateTrialResponse,
  UpdateUserProfileRequest,
  UpdateUserProfileResponse,
  UpdateWorkforceRequest,
  UpdateWorkforceResponse,
  UpdateWorkteamRequest,
  UpdateWorkteamResponse,
  VariantProperty,
} from "../models/models_4";
import { SageMakerServiceException as __BaseException } from "../models/SageMakerServiceException";

/**
 * serializeAws_json1_1AddAssociationCommand
 */
export const se_AddAssociationCommand = async (
  input: AddAssociationCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("AddAssociation");
  let body: any;
  body = JSON.stringify(se_AddAssociationRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1AddTagsCommand
 */
export const se_AddTagsCommand = async (
  input: AddTagsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("AddTags");
  let body: any;
  body = JSON.stringify(se_AddTagsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1AssociateTrialComponentCommand
 */
export const se_AssociateTrialComponentCommand = async (
  input: AssociateTrialComponentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("AssociateTrialComponent");
  let body: any;
  body = JSON.stringify(se_AssociateTrialComponentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1BatchDescribeModelPackageCommand
 */
export const se_BatchDescribeModelPackageCommand = async (
  input: BatchDescribeModelPackageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("BatchDescribeModelPackage");
  let body: any;
  body = JSON.stringify(se_BatchDescribeModelPackageInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateActionCommand
 */
export const se_CreateActionCommand = async (
  input: CreateActionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateAction");
  let body: any;
  body = JSON.stringify(se_CreateActionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateAlgorithmCommand
 */
export const se_CreateAlgorithmCommand = async (
  input: CreateAlgorithmCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateAlgorithm");
  let body: any;
  body = JSON.stringify(se_CreateAlgorithmInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateAppCommand
 */
export const se_CreateAppCommand = async (
  input: CreateAppCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateApp");
  let body: any;
  body = JSON.stringify(se_CreateAppRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateAppImageConfigCommand
 */
export const se_CreateAppImageConfigCommand = async (
  input: CreateAppImageConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateAppImageConfig");
  let body: any;
  body = JSON.stringify(se_CreateAppImageConfigRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateArtifactCommand
 */
export const se_CreateArtifactCommand = async (
  input: CreateArtifactCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateArtifact");
  let body: any;
  body = JSON.stringify(se_CreateArtifactRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateAutoMLJobCommand
 */
export const se_CreateAutoMLJobCommand = async (
  input: CreateAutoMLJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateAutoMLJob");
  let body: any;
  body = JSON.stringify(se_CreateAutoMLJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateAutoMLJobV2Command
 */
export const se_CreateAutoMLJobV2Command = async (
  input: CreateAutoMLJobV2CommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateAutoMLJobV2");
  let body: any;
  body = JSON.stringify(se_CreateAutoMLJobV2Request(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateCodeRepositoryCommand
 */
export const se_CreateCodeRepositoryCommand = async (
  input: CreateCodeRepositoryCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateCodeRepository");
  let body: any;
  body = JSON.stringify(se_CreateCodeRepositoryInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateCompilationJobCommand
 */
export const se_CreateCompilationJobCommand = async (
  input: CreateCompilationJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateCompilationJob");
  let body: any;
  body = JSON.stringify(se_CreateCompilationJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateContextCommand
 */
export const se_CreateContextCommand = async (
  input: CreateContextCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateContext");
  let body: any;
  body = JSON.stringify(se_CreateContextRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateDataQualityJobDefinitionCommand
 */
export const se_CreateDataQualityJobDefinitionCommand = async (
  input: CreateDataQualityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateDataQualityJobDefinition");
  let body: any;
  body = JSON.stringify(se_CreateDataQualityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateDeviceFleetCommand
 */
export const se_CreateDeviceFleetCommand = async (
  input: CreateDeviceFleetCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateDeviceFleet");
  let body: any;
  body = JSON.stringify(se_CreateDeviceFleetRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateDomainCommand
 */
export const se_CreateDomainCommand = async (
  input: CreateDomainCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateDomain");
  let body: any;
  body = JSON.stringify(se_CreateDomainRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateEdgeDeploymentPlanCommand
 */
export const se_CreateEdgeDeploymentPlanCommand = async (
  input: CreateEdgeDeploymentPlanCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateEdgeDeploymentPlan");
  let body: any;
  body = JSON.stringify(se_CreateEdgeDeploymentPlanRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateEdgeDeploymentStageCommand
 */
export const se_CreateEdgeDeploymentStageCommand = async (
  input: CreateEdgeDeploymentStageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateEdgeDeploymentStage");
  let body: any;
  body = JSON.stringify(se_CreateEdgeDeploymentStageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateEdgePackagingJobCommand
 */
export const se_CreateEdgePackagingJobCommand = async (
  input: CreateEdgePackagingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateEdgePackagingJob");
  let body: any;
  body = JSON.stringify(se_CreateEdgePackagingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateEndpointCommand
 */
export const se_CreateEndpointCommand = async (
  input: CreateEndpointCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateEndpoint");
  let body: any;
  body = JSON.stringify(se_CreateEndpointInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateEndpointConfigCommand
 */
export const se_CreateEndpointConfigCommand = async (
  input: CreateEndpointConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateEndpointConfig");
  let body: any;
  body = JSON.stringify(se_CreateEndpointConfigInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateExperimentCommand
 */
export const se_CreateExperimentCommand = async (
  input: CreateExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateExperiment");
  let body: any;
  body = JSON.stringify(se_CreateExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateFeatureGroupCommand
 */
export const se_CreateFeatureGroupCommand = async (
  input: CreateFeatureGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateFeatureGroup");
  let body: any;
  body = JSON.stringify(se_CreateFeatureGroupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateFlowDefinitionCommand
 */
export const se_CreateFlowDefinitionCommand = async (
  input: CreateFlowDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateFlowDefinition");
  let body: any;
  body = JSON.stringify(se_CreateFlowDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateHubCommand
 */
export const se_CreateHubCommand = async (
  input: CreateHubCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateHub");
  let body: any;
  body = JSON.stringify(se_CreateHubRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateHumanTaskUiCommand
 */
export const se_CreateHumanTaskUiCommand = async (
  input: CreateHumanTaskUiCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateHumanTaskUi");
  let body: any;
  body = JSON.stringify(se_CreateHumanTaskUiRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateHyperParameterTuningJobCommand
 */
export const se_CreateHyperParameterTuningJobCommand = async (
  input: CreateHyperParameterTuningJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateHyperParameterTuningJob");
  let body: any;
  body = JSON.stringify(se_CreateHyperParameterTuningJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateImageCommand
 */
export const se_CreateImageCommand = async (
  input: CreateImageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateImage");
  let body: any;
  body = JSON.stringify(se_CreateImageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateImageVersionCommand
 */
export const se_CreateImageVersionCommand = async (
  input: CreateImageVersionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateImageVersion");
  let body: any;
  body = JSON.stringify(se_CreateImageVersionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateInferenceExperimentCommand
 */
export const se_CreateInferenceExperimentCommand = async (
  input: CreateInferenceExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateInferenceExperiment");
  let body: any;
  body = JSON.stringify(se_CreateInferenceExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateInferenceRecommendationsJobCommand
 */
export const se_CreateInferenceRecommendationsJobCommand = async (
  input: CreateInferenceRecommendationsJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateInferenceRecommendationsJob");
  let body: any;
  body = JSON.stringify(se_CreateInferenceRecommendationsJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateLabelingJobCommand
 */
export const se_CreateLabelingJobCommand = async (
  input: CreateLabelingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateLabelingJob");
  let body: any;
  body = JSON.stringify(se_CreateLabelingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelCommand
 */
export const se_CreateModelCommand = async (
  input: CreateModelCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModel");
  let body: any;
  body = JSON.stringify(se_CreateModelInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelBiasJobDefinitionCommand
 */
export const se_CreateModelBiasJobDefinitionCommand = async (
  input: CreateModelBiasJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModelBiasJobDefinition");
  let body: any;
  body = JSON.stringify(se_CreateModelBiasJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelCardCommand
 */
export const se_CreateModelCardCommand = async (
  input: CreateModelCardCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModelCard");
  let body: any;
  body = JSON.stringify(se_CreateModelCardRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelCardExportJobCommand
 */
export const se_CreateModelCardExportJobCommand = async (
  input: CreateModelCardExportJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModelCardExportJob");
  let body: any;
  body = JSON.stringify(se_CreateModelCardExportJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelExplainabilityJobDefinitionCommand
 */
export const se_CreateModelExplainabilityJobDefinitionCommand = async (
  input: CreateModelExplainabilityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModelExplainabilityJobDefinition");
  let body: any;
  body = JSON.stringify(se_CreateModelExplainabilityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelPackageCommand
 */
export const se_CreateModelPackageCommand = async (
  input: CreateModelPackageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModelPackage");
  let body: any;
  body = JSON.stringify(se_CreateModelPackageInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelPackageGroupCommand
 */
export const se_CreateModelPackageGroupCommand = async (
  input: CreateModelPackageGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModelPackageGroup");
  let body: any;
  body = JSON.stringify(se_CreateModelPackageGroupInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateModelQualityJobDefinitionCommand
 */
export const se_CreateModelQualityJobDefinitionCommand = async (
  input: CreateModelQualityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateModelQualityJobDefinition");
  let body: any;
  body = JSON.stringify(se_CreateModelQualityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateMonitoringScheduleCommand
 */
export const se_CreateMonitoringScheduleCommand = async (
  input: CreateMonitoringScheduleCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateMonitoringSchedule");
  let body: any;
  body = JSON.stringify(se_CreateMonitoringScheduleRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateNotebookInstanceCommand
 */
export const se_CreateNotebookInstanceCommand = async (
  input: CreateNotebookInstanceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateNotebookInstance");
  let body: any;
  body = JSON.stringify(se_CreateNotebookInstanceInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateNotebookInstanceLifecycleConfigCommand
 */
export const se_CreateNotebookInstanceLifecycleConfigCommand = async (
  input: CreateNotebookInstanceLifecycleConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateNotebookInstanceLifecycleConfig");
  let body: any;
  body = JSON.stringify(se_CreateNotebookInstanceLifecycleConfigInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreatePipelineCommand
 */
export const se_CreatePipelineCommand = async (
  input: CreatePipelineCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreatePipeline");
  let body: any;
  body = JSON.stringify(se_CreatePipelineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreatePresignedDomainUrlCommand
 */
export const se_CreatePresignedDomainUrlCommand = async (
  input: CreatePresignedDomainUrlCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreatePresignedDomainUrl");
  let body: any;
  body = JSON.stringify(se_CreatePresignedDomainUrlRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreatePresignedNotebookInstanceUrlCommand
 */
export const se_CreatePresignedNotebookInstanceUrlCommand = async (
  input: CreatePresignedNotebookInstanceUrlCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreatePresignedNotebookInstanceUrl");
  let body: any;
  body = JSON.stringify(se_CreatePresignedNotebookInstanceUrlInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateProcessingJobCommand
 */
export const se_CreateProcessingJobCommand = async (
  input: CreateProcessingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateProcessingJob");
  let body: any;
  body = JSON.stringify(se_CreateProcessingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateProjectCommand
 */
export const se_CreateProjectCommand = async (
  input: CreateProjectCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateProject");
  let body: any;
  body = JSON.stringify(se_CreateProjectInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateSpaceCommand
 */
export const se_CreateSpaceCommand = async (
  input: CreateSpaceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateSpace");
  let body: any;
  body = JSON.stringify(se_CreateSpaceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateStudioLifecycleConfigCommand
 */
export const se_CreateStudioLifecycleConfigCommand = async (
  input: CreateStudioLifecycleConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateStudioLifecycleConfig");
  let body: any;
  body = JSON.stringify(se_CreateStudioLifecycleConfigRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateTrainingJobCommand
 */
export const se_CreateTrainingJobCommand = async (
  input: CreateTrainingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateTrainingJob");
  let body: any;
  body = JSON.stringify(se_CreateTrainingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateTransformJobCommand
 */
export const se_CreateTransformJobCommand = async (
  input: CreateTransformJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateTransformJob");
  let body: any;
  body = JSON.stringify(se_CreateTransformJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateTrialCommand
 */
export const se_CreateTrialCommand = async (
  input: CreateTrialCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateTrial");
  let body: any;
  body = JSON.stringify(se_CreateTrialRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateTrialComponentCommand
 */
export const se_CreateTrialComponentCommand = async (
  input: CreateTrialComponentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateTrialComponent");
  let body: any;
  body = JSON.stringify(se_CreateTrialComponentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateUserProfileCommand
 */
export const se_CreateUserProfileCommand = async (
  input: CreateUserProfileCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateUserProfile");
  let body: any;
  body = JSON.stringify(se_CreateUserProfileRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateWorkforceCommand
 */
export const se_CreateWorkforceCommand = async (
  input: CreateWorkforceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateWorkforce");
  let body: any;
  body = JSON.stringify(se_CreateWorkforceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1CreateWorkteamCommand
 */
export const se_CreateWorkteamCommand = async (
  input: CreateWorkteamCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("CreateWorkteam");
  let body: any;
  body = JSON.stringify(se_CreateWorkteamRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteActionCommand
 */
export const se_DeleteActionCommand = async (
  input: DeleteActionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteAction");
  let body: any;
  body = JSON.stringify(se_DeleteActionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteAlgorithmCommand
 */
export const se_DeleteAlgorithmCommand = async (
  input: DeleteAlgorithmCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteAlgorithm");
  let body: any;
  body = JSON.stringify(se_DeleteAlgorithmInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteAppCommand
 */
export const se_DeleteAppCommand = async (
  input: DeleteAppCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteApp");
  let body: any;
  body = JSON.stringify(se_DeleteAppRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteAppImageConfigCommand
 */
export const se_DeleteAppImageConfigCommand = async (
  input: DeleteAppImageConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteAppImageConfig");
  let body: any;
  body = JSON.stringify(se_DeleteAppImageConfigRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteArtifactCommand
 */
export const se_DeleteArtifactCommand = async (
  input: DeleteArtifactCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteArtifact");
  let body: any;
  body = JSON.stringify(se_DeleteArtifactRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteAssociationCommand
 */
export const se_DeleteAssociationCommand = async (
  input: DeleteAssociationCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteAssociation");
  let body: any;
  body = JSON.stringify(se_DeleteAssociationRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteCodeRepositoryCommand
 */
export const se_DeleteCodeRepositoryCommand = async (
  input: DeleteCodeRepositoryCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteCodeRepository");
  let body: any;
  body = JSON.stringify(se_DeleteCodeRepositoryInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteContextCommand
 */
export const se_DeleteContextCommand = async (
  input: DeleteContextCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteContext");
  let body: any;
  body = JSON.stringify(se_DeleteContextRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteDataQualityJobDefinitionCommand
 */
export const se_DeleteDataQualityJobDefinitionCommand = async (
  input: DeleteDataQualityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteDataQualityJobDefinition");
  let body: any;
  body = JSON.stringify(se_DeleteDataQualityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteDeviceFleetCommand
 */
export const se_DeleteDeviceFleetCommand = async (
  input: DeleteDeviceFleetCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteDeviceFleet");
  let body: any;
  body = JSON.stringify(se_DeleteDeviceFleetRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteDomainCommand
 */
export const se_DeleteDomainCommand = async (
  input: DeleteDomainCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteDomain");
  let body: any;
  body = JSON.stringify(se_DeleteDomainRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteEdgeDeploymentPlanCommand
 */
export const se_DeleteEdgeDeploymentPlanCommand = async (
  input: DeleteEdgeDeploymentPlanCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteEdgeDeploymentPlan");
  let body: any;
  body = JSON.stringify(se_DeleteEdgeDeploymentPlanRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteEdgeDeploymentStageCommand
 */
export const se_DeleteEdgeDeploymentStageCommand = async (
  input: DeleteEdgeDeploymentStageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteEdgeDeploymentStage");
  let body: any;
  body = JSON.stringify(se_DeleteEdgeDeploymentStageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteEndpointCommand
 */
export const se_DeleteEndpointCommand = async (
  input: DeleteEndpointCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteEndpoint");
  let body: any;
  body = JSON.stringify(se_DeleteEndpointInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteEndpointConfigCommand
 */
export const se_DeleteEndpointConfigCommand = async (
  input: DeleteEndpointConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteEndpointConfig");
  let body: any;
  body = JSON.stringify(se_DeleteEndpointConfigInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteExperimentCommand
 */
export const se_DeleteExperimentCommand = async (
  input: DeleteExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteExperiment");
  let body: any;
  body = JSON.stringify(se_DeleteExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteFeatureGroupCommand
 */
export const se_DeleteFeatureGroupCommand = async (
  input: DeleteFeatureGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteFeatureGroup");
  let body: any;
  body = JSON.stringify(se_DeleteFeatureGroupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteFlowDefinitionCommand
 */
export const se_DeleteFlowDefinitionCommand = async (
  input: DeleteFlowDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteFlowDefinition");
  let body: any;
  body = JSON.stringify(se_DeleteFlowDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteHubCommand
 */
export const se_DeleteHubCommand = async (
  input: DeleteHubCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteHub");
  let body: any;
  body = JSON.stringify(se_DeleteHubRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteHubContentCommand
 */
export const se_DeleteHubContentCommand = async (
  input: DeleteHubContentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteHubContent");
  let body: any;
  body = JSON.stringify(se_DeleteHubContentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteHumanTaskUiCommand
 */
export const se_DeleteHumanTaskUiCommand = async (
  input: DeleteHumanTaskUiCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteHumanTaskUi");
  let body: any;
  body = JSON.stringify(se_DeleteHumanTaskUiRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteImageCommand
 */
export const se_DeleteImageCommand = async (
  input: DeleteImageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteImage");
  let body: any;
  body = JSON.stringify(se_DeleteImageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteImageVersionCommand
 */
export const se_DeleteImageVersionCommand = async (
  input: DeleteImageVersionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteImageVersion");
  let body: any;
  body = JSON.stringify(se_DeleteImageVersionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteInferenceExperimentCommand
 */
export const se_DeleteInferenceExperimentCommand = async (
  input: DeleteInferenceExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteInferenceExperiment");
  let body: any;
  body = JSON.stringify(se_DeleteInferenceExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelCommand
 */
export const se_DeleteModelCommand = async (
  input: DeleteModelCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModel");
  let body: any;
  body = JSON.stringify(se_DeleteModelInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelBiasJobDefinitionCommand
 */
export const se_DeleteModelBiasJobDefinitionCommand = async (
  input: DeleteModelBiasJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModelBiasJobDefinition");
  let body: any;
  body = JSON.stringify(se_DeleteModelBiasJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelCardCommand
 */
export const se_DeleteModelCardCommand = async (
  input: DeleteModelCardCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModelCard");
  let body: any;
  body = JSON.stringify(se_DeleteModelCardRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelExplainabilityJobDefinitionCommand
 */
export const se_DeleteModelExplainabilityJobDefinitionCommand = async (
  input: DeleteModelExplainabilityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModelExplainabilityJobDefinition");
  let body: any;
  body = JSON.stringify(se_DeleteModelExplainabilityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelPackageCommand
 */
export const se_DeleteModelPackageCommand = async (
  input: DeleteModelPackageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModelPackage");
  let body: any;
  body = JSON.stringify(se_DeleteModelPackageInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelPackageGroupCommand
 */
export const se_DeleteModelPackageGroupCommand = async (
  input: DeleteModelPackageGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModelPackageGroup");
  let body: any;
  body = JSON.stringify(se_DeleteModelPackageGroupInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelPackageGroupPolicyCommand
 */
export const se_DeleteModelPackageGroupPolicyCommand = async (
  input: DeleteModelPackageGroupPolicyCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModelPackageGroupPolicy");
  let body: any;
  body = JSON.stringify(se_DeleteModelPackageGroupPolicyInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteModelQualityJobDefinitionCommand
 */
export const se_DeleteModelQualityJobDefinitionCommand = async (
  input: DeleteModelQualityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteModelQualityJobDefinition");
  let body: any;
  body = JSON.stringify(se_DeleteModelQualityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteMonitoringScheduleCommand
 */
export const se_DeleteMonitoringScheduleCommand = async (
  input: DeleteMonitoringScheduleCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteMonitoringSchedule");
  let body: any;
  body = JSON.stringify(se_DeleteMonitoringScheduleRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteNotebookInstanceCommand
 */
export const se_DeleteNotebookInstanceCommand = async (
  input: DeleteNotebookInstanceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteNotebookInstance");
  let body: any;
  body = JSON.stringify(se_DeleteNotebookInstanceInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteNotebookInstanceLifecycleConfigCommand
 */
export const se_DeleteNotebookInstanceLifecycleConfigCommand = async (
  input: DeleteNotebookInstanceLifecycleConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteNotebookInstanceLifecycleConfig");
  let body: any;
  body = JSON.stringify(se_DeleteNotebookInstanceLifecycleConfigInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeletePipelineCommand
 */
export const se_DeletePipelineCommand = async (
  input: DeletePipelineCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeletePipeline");
  let body: any;
  body = JSON.stringify(se_DeletePipelineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteProjectCommand
 */
export const se_DeleteProjectCommand = async (
  input: DeleteProjectCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteProject");
  let body: any;
  body = JSON.stringify(se_DeleteProjectInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteSpaceCommand
 */
export const se_DeleteSpaceCommand = async (
  input: DeleteSpaceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteSpace");
  let body: any;
  body = JSON.stringify(se_DeleteSpaceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteStudioLifecycleConfigCommand
 */
export const se_DeleteStudioLifecycleConfigCommand = async (
  input: DeleteStudioLifecycleConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteStudioLifecycleConfig");
  let body: any;
  body = JSON.stringify(se_DeleteStudioLifecycleConfigRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteTagsCommand
 */
export const se_DeleteTagsCommand = async (
  input: DeleteTagsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteTags");
  let body: any;
  body = JSON.stringify(se_DeleteTagsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteTrialCommand
 */
export const se_DeleteTrialCommand = async (
  input: DeleteTrialCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteTrial");
  let body: any;
  body = JSON.stringify(se_DeleteTrialRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteTrialComponentCommand
 */
export const se_DeleteTrialComponentCommand = async (
  input: DeleteTrialComponentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteTrialComponent");
  let body: any;
  body = JSON.stringify(se_DeleteTrialComponentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteUserProfileCommand
 */
export const se_DeleteUserProfileCommand = async (
  input: DeleteUserProfileCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteUserProfile");
  let body: any;
  body = JSON.stringify(se_DeleteUserProfileRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteWorkforceCommand
 */
export const se_DeleteWorkforceCommand = async (
  input: DeleteWorkforceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteWorkforce");
  let body: any;
  body = JSON.stringify(se_DeleteWorkforceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeleteWorkteamCommand
 */
export const se_DeleteWorkteamCommand = async (
  input: DeleteWorkteamCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeleteWorkteam");
  let body: any;
  body = JSON.stringify(se_DeleteWorkteamRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DeregisterDevicesCommand
 */
export const se_DeregisterDevicesCommand = async (
  input: DeregisterDevicesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DeregisterDevices");
  let body: any;
  body = JSON.stringify(se_DeregisterDevicesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeActionCommand
 */
export const se_DescribeActionCommand = async (
  input: DescribeActionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeAction");
  let body: any;
  body = JSON.stringify(se_DescribeActionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeAlgorithmCommand
 */
export const se_DescribeAlgorithmCommand = async (
  input: DescribeAlgorithmCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeAlgorithm");
  let body: any;
  body = JSON.stringify(se_DescribeAlgorithmInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeAppCommand
 */
export const se_DescribeAppCommand = async (
  input: DescribeAppCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeApp");
  let body: any;
  body = JSON.stringify(se_DescribeAppRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeAppImageConfigCommand
 */
export const se_DescribeAppImageConfigCommand = async (
  input: DescribeAppImageConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeAppImageConfig");
  let body: any;
  body = JSON.stringify(se_DescribeAppImageConfigRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeArtifactCommand
 */
export const se_DescribeArtifactCommand = async (
  input: DescribeArtifactCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeArtifact");
  let body: any;
  body = JSON.stringify(se_DescribeArtifactRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeAutoMLJobCommand
 */
export const se_DescribeAutoMLJobCommand = async (
  input: DescribeAutoMLJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeAutoMLJob");
  let body: any;
  body = JSON.stringify(se_DescribeAutoMLJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeAutoMLJobV2Command
 */
export const se_DescribeAutoMLJobV2Command = async (
  input: DescribeAutoMLJobV2CommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeAutoMLJobV2");
  let body: any;
  body = JSON.stringify(se_DescribeAutoMLJobV2Request(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeCodeRepositoryCommand
 */
export const se_DescribeCodeRepositoryCommand = async (
  input: DescribeCodeRepositoryCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeCodeRepository");
  let body: any;
  body = JSON.stringify(se_DescribeCodeRepositoryInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeCompilationJobCommand
 */
export const se_DescribeCompilationJobCommand = async (
  input: DescribeCompilationJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeCompilationJob");
  let body: any;
  body = JSON.stringify(se_DescribeCompilationJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeContextCommand
 */
export const se_DescribeContextCommand = async (
  input: DescribeContextCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeContext");
  let body: any;
  body = JSON.stringify(se_DescribeContextRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeDataQualityJobDefinitionCommand
 */
export const se_DescribeDataQualityJobDefinitionCommand = async (
  input: DescribeDataQualityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeDataQualityJobDefinition");
  let body: any;
  body = JSON.stringify(se_DescribeDataQualityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeDeviceCommand
 */
export const se_DescribeDeviceCommand = async (
  input: DescribeDeviceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeDevice");
  let body: any;
  body = JSON.stringify(se_DescribeDeviceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeDeviceFleetCommand
 */
export const se_DescribeDeviceFleetCommand = async (
  input: DescribeDeviceFleetCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeDeviceFleet");
  let body: any;
  body = JSON.stringify(se_DescribeDeviceFleetRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeDomainCommand
 */
export const se_DescribeDomainCommand = async (
  input: DescribeDomainCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeDomain");
  let body: any;
  body = JSON.stringify(se_DescribeDomainRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeEdgeDeploymentPlanCommand
 */
export const se_DescribeEdgeDeploymentPlanCommand = async (
  input: DescribeEdgeDeploymentPlanCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeEdgeDeploymentPlan");
  let body: any;
  body = JSON.stringify(se_DescribeEdgeDeploymentPlanRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeEdgePackagingJobCommand
 */
export const se_DescribeEdgePackagingJobCommand = async (
  input: DescribeEdgePackagingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeEdgePackagingJob");
  let body: any;
  body = JSON.stringify(se_DescribeEdgePackagingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeEndpointCommand
 */
export const se_DescribeEndpointCommand = async (
  input: DescribeEndpointCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeEndpoint");
  let body: any;
  body = JSON.stringify(se_DescribeEndpointInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeEndpointConfigCommand
 */
export const se_DescribeEndpointConfigCommand = async (
  input: DescribeEndpointConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeEndpointConfig");
  let body: any;
  body = JSON.stringify(se_DescribeEndpointConfigInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeExperimentCommand
 */
export const se_DescribeExperimentCommand = async (
  input: DescribeExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeExperiment");
  let body: any;
  body = JSON.stringify(se_DescribeExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeFeatureGroupCommand
 */
export const se_DescribeFeatureGroupCommand = async (
  input: DescribeFeatureGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeFeatureGroup");
  let body: any;
  body = JSON.stringify(se_DescribeFeatureGroupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeFeatureMetadataCommand
 */
export const se_DescribeFeatureMetadataCommand = async (
  input: DescribeFeatureMetadataCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeFeatureMetadata");
  let body: any;
  body = JSON.stringify(se_DescribeFeatureMetadataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeFlowDefinitionCommand
 */
export const se_DescribeFlowDefinitionCommand = async (
  input: DescribeFlowDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeFlowDefinition");
  let body: any;
  body = JSON.stringify(se_DescribeFlowDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeHubCommand
 */
export const se_DescribeHubCommand = async (
  input: DescribeHubCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeHub");
  let body: any;
  body = JSON.stringify(se_DescribeHubRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeHubContentCommand
 */
export const se_DescribeHubContentCommand = async (
  input: DescribeHubContentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeHubContent");
  let body: any;
  body = JSON.stringify(se_DescribeHubContentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeHumanTaskUiCommand
 */
export const se_DescribeHumanTaskUiCommand = async (
  input: DescribeHumanTaskUiCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeHumanTaskUi");
  let body: any;
  body = JSON.stringify(se_DescribeHumanTaskUiRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeHyperParameterTuningJobCommand
 */
export const se_DescribeHyperParameterTuningJobCommand = async (
  input: DescribeHyperParameterTuningJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeHyperParameterTuningJob");
  let body: any;
  body = JSON.stringify(se_DescribeHyperParameterTuningJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeImageCommand
 */
export const se_DescribeImageCommand = async (
  input: DescribeImageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeImage");
  let body: any;
  body = JSON.stringify(se_DescribeImageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeImageVersionCommand
 */
export const se_DescribeImageVersionCommand = async (
  input: DescribeImageVersionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeImageVersion");
  let body: any;
  body = JSON.stringify(se_DescribeImageVersionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeInferenceExperimentCommand
 */
export const se_DescribeInferenceExperimentCommand = async (
  input: DescribeInferenceExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeInferenceExperiment");
  let body: any;
  body = JSON.stringify(se_DescribeInferenceExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeInferenceRecommendationsJobCommand
 */
export const se_DescribeInferenceRecommendationsJobCommand = async (
  input: DescribeInferenceRecommendationsJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeInferenceRecommendationsJob");
  let body: any;
  body = JSON.stringify(se_DescribeInferenceRecommendationsJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeLabelingJobCommand
 */
export const se_DescribeLabelingJobCommand = async (
  input: DescribeLabelingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeLabelingJob");
  let body: any;
  body = JSON.stringify(se_DescribeLabelingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeLineageGroupCommand
 */
export const se_DescribeLineageGroupCommand = async (
  input: DescribeLineageGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeLineageGroup");
  let body: any;
  body = JSON.stringify(se_DescribeLineageGroupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelCommand
 */
export const se_DescribeModelCommand = async (
  input: DescribeModelCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModel");
  let body: any;
  body = JSON.stringify(se_DescribeModelInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelBiasJobDefinitionCommand
 */
export const se_DescribeModelBiasJobDefinitionCommand = async (
  input: DescribeModelBiasJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModelBiasJobDefinition");
  let body: any;
  body = JSON.stringify(se_DescribeModelBiasJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelCardCommand
 */
export const se_DescribeModelCardCommand = async (
  input: DescribeModelCardCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModelCard");
  let body: any;
  body = JSON.stringify(se_DescribeModelCardRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelCardExportJobCommand
 */
export const se_DescribeModelCardExportJobCommand = async (
  input: DescribeModelCardExportJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModelCardExportJob");
  let body: any;
  body = JSON.stringify(se_DescribeModelCardExportJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelExplainabilityJobDefinitionCommand
 */
export const se_DescribeModelExplainabilityJobDefinitionCommand = async (
  input: DescribeModelExplainabilityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModelExplainabilityJobDefinition");
  let body: any;
  body = JSON.stringify(se_DescribeModelExplainabilityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelPackageCommand
 */
export const se_DescribeModelPackageCommand = async (
  input: DescribeModelPackageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModelPackage");
  let body: any;
  body = JSON.stringify(se_DescribeModelPackageInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelPackageGroupCommand
 */
export const se_DescribeModelPackageGroupCommand = async (
  input: DescribeModelPackageGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModelPackageGroup");
  let body: any;
  body = JSON.stringify(se_DescribeModelPackageGroupInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeModelQualityJobDefinitionCommand
 */
export const se_DescribeModelQualityJobDefinitionCommand = async (
  input: DescribeModelQualityJobDefinitionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeModelQualityJobDefinition");
  let body: any;
  body = JSON.stringify(se_DescribeModelQualityJobDefinitionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeMonitoringScheduleCommand
 */
export const se_DescribeMonitoringScheduleCommand = async (
  input: DescribeMonitoringScheduleCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeMonitoringSchedule");
  let body: any;
  body = JSON.stringify(se_DescribeMonitoringScheduleRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeNotebookInstanceCommand
 */
export const se_DescribeNotebookInstanceCommand = async (
  input: DescribeNotebookInstanceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeNotebookInstance");
  let body: any;
  body = JSON.stringify(se_DescribeNotebookInstanceInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeNotebookInstanceLifecycleConfigCommand
 */
export const se_DescribeNotebookInstanceLifecycleConfigCommand = async (
  input: DescribeNotebookInstanceLifecycleConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeNotebookInstanceLifecycleConfig");
  let body: any;
  body = JSON.stringify(se_DescribeNotebookInstanceLifecycleConfigInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribePipelineCommand
 */
export const se_DescribePipelineCommand = async (
  input: DescribePipelineCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribePipeline");
  let body: any;
  body = JSON.stringify(se_DescribePipelineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribePipelineDefinitionForExecutionCommand
 */
export const se_DescribePipelineDefinitionForExecutionCommand = async (
  input: DescribePipelineDefinitionForExecutionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribePipelineDefinitionForExecution");
  let body: any;
  body = JSON.stringify(se_DescribePipelineDefinitionForExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribePipelineExecutionCommand
 */
export const se_DescribePipelineExecutionCommand = async (
  input: DescribePipelineExecutionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribePipelineExecution");
  let body: any;
  body = JSON.stringify(se_DescribePipelineExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeProcessingJobCommand
 */
export const se_DescribeProcessingJobCommand = async (
  input: DescribeProcessingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeProcessingJob");
  let body: any;
  body = JSON.stringify(se_DescribeProcessingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeProjectCommand
 */
export const se_DescribeProjectCommand = async (
  input: DescribeProjectCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeProject");
  let body: any;
  body = JSON.stringify(se_DescribeProjectInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeSpaceCommand
 */
export const se_DescribeSpaceCommand = async (
  input: DescribeSpaceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeSpace");
  let body: any;
  body = JSON.stringify(se_DescribeSpaceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeStudioLifecycleConfigCommand
 */
export const se_DescribeStudioLifecycleConfigCommand = async (
  input: DescribeStudioLifecycleConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeStudioLifecycleConfig");
  let body: any;
  body = JSON.stringify(se_DescribeStudioLifecycleConfigRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeSubscribedWorkteamCommand
 */
export const se_DescribeSubscribedWorkteamCommand = async (
  input: DescribeSubscribedWorkteamCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeSubscribedWorkteam");
  let body: any;
  body = JSON.stringify(se_DescribeSubscribedWorkteamRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeTrainingJobCommand
 */
export const se_DescribeTrainingJobCommand = async (
  input: DescribeTrainingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeTrainingJob");
  let body: any;
  body = JSON.stringify(se_DescribeTrainingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeTransformJobCommand
 */
export const se_DescribeTransformJobCommand = async (
  input: DescribeTransformJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeTransformJob");
  let body: any;
  body = JSON.stringify(se_DescribeTransformJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeTrialCommand
 */
export const se_DescribeTrialCommand = async (
  input: DescribeTrialCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeTrial");
  let body: any;
  body = JSON.stringify(se_DescribeTrialRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeTrialComponentCommand
 */
export const se_DescribeTrialComponentCommand = async (
  input: DescribeTrialComponentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeTrialComponent");
  let body: any;
  body = JSON.stringify(se_DescribeTrialComponentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeUserProfileCommand
 */
export const se_DescribeUserProfileCommand = async (
  input: DescribeUserProfileCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeUserProfile");
  let body: any;
  body = JSON.stringify(se_DescribeUserProfileRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeWorkforceCommand
 */
export const se_DescribeWorkforceCommand = async (
  input: DescribeWorkforceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeWorkforce");
  let body: any;
  body = JSON.stringify(se_DescribeWorkforceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DescribeWorkteamCommand
 */
export const se_DescribeWorkteamCommand = async (
  input: DescribeWorkteamCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DescribeWorkteam");
  let body: any;
  body = JSON.stringify(se_DescribeWorkteamRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DisableSagemakerServicecatalogPortfolioCommand
 */
export const se_DisableSagemakerServicecatalogPortfolioCommand = async (
  input: DisableSagemakerServicecatalogPortfolioCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DisableSagemakerServicecatalogPortfolio");
  let body: any;
  body = JSON.stringify(se_DisableSagemakerServicecatalogPortfolioInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1DisassociateTrialComponentCommand
 */
export const se_DisassociateTrialComponentCommand = async (
  input: DisassociateTrialComponentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("DisassociateTrialComponent");
  let body: any;
  body = JSON.stringify(se_DisassociateTrialComponentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1EnableSagemakerServicecatalogPortfolioCommand
 */
export const se_EnableSagemakerServicecatalogPortfolioCommand = async (
  input: EnableSagemakerServicecatalogPortfolioCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("EnableSagemakerServicecatalogPortfolio");
  let body: any;
  body = JSON.stringify(se_EnableSagemakerServicecatalogPortfolioInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1GetDeviceFleetReportCommand
 */
export const se_GetDeviceFleetReportCommand = async (
  input: GetDeviceFleetReportCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("GetDeviceFleetReport");
  let body: any;
  body = JSON.stringify(se_GetDeviceFleetReportRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1GetLineageGroupPolicyCommand
 */
export const se_GetLineageGroupPolicyCommand = async (
  input: GetLineageGroupPolicyCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("GetLineageGroupPolicy");
  let body: any;
  body = JSON.stringify(se_GetLineageGroupPolicyRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1GetModelPackageGroupPolicyCommand
 */
export const se_GetModelPackageGroupPolicyCommand = async (
  input: GetModelPackageGroupPolicyCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("GetModelPackageGroupPolicy");
  let body: any;
  body = JSON.stringify(se_GetModelPackageGroupPolicyInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1GetSagemakerServicecatalogPortfolioStatusCommand
 */
export const se_GetSagemakerServicecatalogPortfolioStatusCommand = async (
  input: GetSagemakerServicecatalogPortfolioStatusCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("GetSagemakerServicecatalogPortfolioStatus");
  let body: any;
  body = JSON.stringify(se_GetSagemakerServicecatalogPortfolioStatusInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1GetSearchSuggestionsCommand
 */
export const se_GetSearchSuggestionsCommand = async (
  input: GetSearchSuggestionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("GetSearchSuggestions");
  let body: any;
  body = JSON.stringify(se_GetSearchSuggestionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ImportHubContentCommand
 */
export const se_ImportHubContentCommand = async (
  input: ImportHubContentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ImportHubContent");
  let body: any;
  body = JSON.stringify(se_ImportHubContentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListActionsCommand
 */
export const se_ListActionsCommand = async (
  input: ListActionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListActions");
  let body: any;
  body = JSON.stringify(se_ListActionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListAlgorithmsCommand
 */
export const se_ListAlgorithmsCommand = async (
  input: ListAlgorithmsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListAlgorithms");
  let body: any;
  body = JSON.stringify(se_ListAlgorithmsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListAliasesCommand
 */
export const se_ListAliasesCommand = async (
  input: ListAliasesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListAliases");
  let body: any;
  body = JSON.stringify(se_ListAliasesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListAppImageConfigsCommand
 */
export const se_ListAppImageConfigsCommand = async (
  input: ListAppImageConfigsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListAppImageConfigs");
  let body: any;
  body = JSON.stringify(se_ListAppImageConfigsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListAppsCommand
 */
export const se_ListAppsCommand = async (
  input: ListAppsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListApps");
  let body: any;
  body = JSON.stringify(se_ListAppsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListArtifactsCommand
 */
export const se_ListArtifactsCommand = async (
  input: ListArtifactsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListArtifacts");
  let body: any;
  body = JSON.stringify(se_ListArtifactsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListAssociationsCommand
 */
export const se_ListAssociationsCommand = async (
  input: ListAssociationsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListAssociations");
  let body: any;
  body = JSON.stringify(se_ListAssociationsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListAutoMLJobsCommand
 */
export const se_ListAutoMLJobsCommand = async (
  input: ListAutoMLJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListAutoMLJobs");
  let body: any;
  body = JSON.stringify(se_ListAutoMLJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListCandidatesForAutoMLJobCommand
 */
export const se_ListCandidatesForAutoMLJobCommand = async (
  input: ListCandidatesForAutoMLJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListCandidatesForAutoMLJob");
  let body: any;
  body = JSON.stringify(se_ListCandidatesForAutoMLJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListCodeRepositoriesCommand
 */
export const se_ListCodeRepositoriesCommand = async (
  input: ListCodeRepositoriesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListCodeRepositories");
  let body: any;
  body = JSON.stringify(se_ListCodeRepositoriesInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListCompilationJobsCommand
 */
export const se_ListCompilationJobsCommand = async (
  input: ListCompilationJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListCompilationJobs");
  let body: any;
  body = JSON.stringify(se_ListCompilationJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListContextsCommand
 */
export const se_ListContextsCommand = async (
  input: ListContextsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListContexts");
  let body: any;
  body = JSON.stringify(se_ListContextsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListDataQualityJobDefinitionsCommand
 */
export const se_ListDataQualityJobDefinitionsCommand = async (
  input: ListDataQualityJobDefinitionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListDataQualityJobDefinitions");
  let body: any;
  body = JSON.stringify(se_ListDataQualityJobDefinitionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListDeviceFleetsCommand
 */
export const se_ListDeviceFleetsCommand = async (
  input: ListDeviceFleetsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListDeviceFleets");
  let body: any;
  body = JSON.stringify(se_ListDeviceFleetsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListDevicesCommand
 */
export const se_ListDevicesCommand = async (
  input: ListDevicesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListDevices");
  let body: any;
  body = JSON.stringify(se_ListDevicesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListDomainsCommand
 */
export const se_ListDomainsCommand = async (
  input: ListDomainsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListDomains");
  let body: any;
  body = JSON.stringify(se_ListDomainsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListEdgeDeploymentPlansCommand
 */
export const se_ListEdgeDeploymentPlansCommand = async (
  input: ListEdgeDeploymentPlansCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListEdgeDeploymentPlans");
  let body: any;
  body = JSON.stringify(se_ListEdgeDeploymentPlansRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListEdgePackagingJobsCommand
 */
export const se_ListEdgePackagingJobsCommand = async (
  input: ListEdgePackagingJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListEdgePackagingJobs");
  let body: any;
  body = JSON.stringify(se_ListEdgePackagingJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListEndpointConfigsCommand
 */
export const se_ListEndpointConfigsCommand = async (
  input: ListEndpointConfigsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListEndpointConfigs");
  let body: any;
  body = JSON.stringify(se_ListEndpointConfigsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListEndpointsCommand
 */
export const se_ListEndpointsCommand = async (
  input: ListEndpointsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListEndpoints");
  let body: any;
  body = JSON.stringify(se_ListEndpointsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListExperimentsCommand
 */
export const se_ListExperimentsCommand = async (
  input: ListExperimentsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListExperiments");
  let body: any;
  body = JSON.stringify(se_ListExperimentsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListFeatureGroupsCommand
 */
export const se_ListFeatureGroupsCommand = async (
  input: ListFeatureGroupsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListFeatureGroups");
  let body: any;
  body = JSON.stringify(se_ListFeatureGroupsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListFlowDefinitionsCommand
 */
export const se_ListFlowDefinitionsCommand = async (
  input: ListFlowDefinitionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListFlowDefinitions");
  let body: any;
  body = JSON.stringify(se_ListFlowDefinitionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListHubContentsCommand
 */
export const se_ListHubContentsCommand = async (
  input: ListHubContentsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListHubContents");
  let body: any;
  body = JSON.stringify(se_ListHubContentsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListHubContentVersionsCommand
 */
export const se_ListHubContentVersionsCommand = async (
  input: ListHubContentVersionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListHubContentVersions");
  let body: any;
  body = JSON.stringify(se_ListHubContentVersionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListHubsCommand
 */
export const se_ListHubsCommand = async (
  input: ListHubsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListHubs");
  let body: any;
  body = JSON.stringify(se_ListHubsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListHumanTaskUisCommand
 */
export const se_ListHumanTaskUisCommand = async (
  input: ListHumanTaskUisCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListHumanTaskUis");
  let body: any;
  body = JSON.stringify(se_ListHumanTaskUisRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListHyperParameterTuningJobsCommand
 */
export const se_ListHyperParameterTuningJobsCommand = async (
  input: ListHyperParameterTuningJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListHyperParameterTuningJobs");
  let body: any;
  body = JSON.stringify(se_ListHyperParameterTuningJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListImagesCommand
 */
export const se_ListImagesCommand = async (
  input: ListImagesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListImages");
  let body: any;
  body = JSON.stringify(se_ListImagesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListImageVersionsCommand
 */
export const se_ListImageVersionsCommand = async (
  input: ListImageVersionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListImageVersions");
  let body: any;
  body = JSON.stringify(se_ListImageVersionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListInferenceExperimentsCommand
 */
export const se_ListInferenceExperimentsCommand = async (
  input: ListInferenceExperimentsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListInferenceExperiments");
  let body: any;
  body = JSON.stringify(se_ListInferenceExperimentsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListInferenceRecommendationsJobsCommand
 */
export const se_ListInferenceRecommendationsJobsCommand = async (
  input: ListInferenceRecommendationsJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListInferenceRecommendationsJobs");
  let body: any;
  body = JSON.stringify(se_ListInferenceRecommendationsJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListInferenceRecommendationsJobStepsCommand
 */
export const se_ListInferenceRecommendationsJobStepsCommand = async (
  input: ListInferenceRecommendationsJobStepsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListInferenceRecommendationsJobSteps");
  let body: any;
  body = JSON.stringify(se_ListInferenceRecommendationsJobStepsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListLabelingJobsCommand
 */
export const se_ListLabelingJobsCommand = async (
  input: ListLabelingJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListLabelingJobs");
  let body: any;
  body = JSON.stringify(se_ListLabelingJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListLabelingJobsForWorkteamCommand
 */
export const se_ListLabelingJobsForWorkteamCommand = async (
  input: ListLabelingJobsForWorkteamCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListLabelingJobsForWorkteam");
  let body: any;
  body = JSON.stringify(se_ListLabelingJobsForWorkteamRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListLineageGroupsCommand
 */
export const se_ListLineageGroupsCommand = async (
  input: ListLineageGroupsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListLineageGroups");
  let body: any;
  body = JSON.stringify(se_ListLineageGroupsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelBiasJobDefinitionsCommand
 */
export const se_ListModelBiasJobDefinitionsCommand = async (
  input: ListModelBiasJobDefinitionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelBiasJobDefinitions");
  let body: any;
  body = JSON.stringify(se_ListModelBiasJobDefinitionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelCardExportJobsCommand
 */
export const se_ListModelCardExportJobsCommand = async (
  input: ListModelCardExportJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelCardExportJobs");
  let body: any;
  body = JSON.stringify(se_ListModelCardExportJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelCardsCommand
 */
export const se_ListModelCardsCommand = async (
  input: ListModelCardsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelCards");
  let body: any;
  body = JSON.stringify(se_ListModelCardsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelCardVersionsCommand
 */
export const se_ListModelCardVersionsCommand = async (
  input: ListModelCardVersionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelCardVersions");
  let body: any;
  body = JSON.stringify(se_ListModelCardVersionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelExplainabilityJobDefinitionsCommand
 */
export const se_ListModelExplainabilityJobDefinitionsCommand = async (
  input: ListModelExplainabilityJobDefinitionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelExplainabilityJobDefinitions");
  let body: any;
  body = JSON.stringify(se_ListModelExplainabilityJobDefinitionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelMetadataCommand
 */
export const se_ListModelMetadataCommand = async (
  input: ListModelMetadataCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelMetadata");
  let body: any;
  body = JSON.stringify(se_ListModelMetadataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelPackageGroupsCommand
 */
export const se_ListModelPackageGroupsCommand = async (
  input: ListModelPackageGroupsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelPackageGroups");
  let body: any;
  body = JSON.stringify(se_ListModelPackageGroupsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelPackagesCommand
 */
export const se_ListModelPackagesCommand = async (
  input: ListModelPackagesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelPackages");
  let body: any;
  body = JSON.stringify(se_ListModelPackagesInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelQualityJobDefinitionsCommand
 */
export const se_ListModelQualityJobDefinitionsCommand = async (
  input: ListModelQualityJobDefinitionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModelQualityJobDefinitions");
  let body: any;
  body = JSON.stringify(se_ListModelQualityJobDefinitionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListModelsCommand
 */
export const se_ListModelsCommand = async (
  input: ListModelsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListModels");
  let body: any;
  body = JSON.stringify(se_ListModelsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListMonitoringAlertHistoryCommand
 */
export const se_ListMonitoringAlertHistoryCommand = async (
  input: ListMonitoringAlertHistoryCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListMonitoringAlertHistory");
  let body: any;
  body = JSON.stringify(se_ListMonitoringAlertHistoryRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListMonitoringAlertsCommand
 */
export const se_ListMonitoringAlertsCommand = async (
  input: ListMonitoringAlertsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListMonitoringAlerts");
  let body: any;
  body = JSON.stringify(se_ListMonitoringAlertsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListMonitoringExecutionsCommand
 */
export const se_ListMonitoringExecutionsCommand = async (
  input: ListMonitoringExecutionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListMonitoringExecutions");
  let body: any;
  body = JSON.stringify(se_ListMonitoringExecutionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListMonitoringSchedulesCommand
 */
export const se_ListMonitoringSchedulesCommand = async (
  input: ListMonitoringSchedulesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListMonitoringSchedules");
  let body: any;
  body = JSON.stringify(se_ListMonitoringSchedulesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListNotebookInstanceLifecycleConfigsCommand
 */
export const se_ListNotebookInstanceLifecycleConfigsCommand = async (
  input: ListNotebookInstanceLifecycleConfigsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListNotebookInstanceLifecycleConfigs");
  let body: any;
  body = JSON.stringify(se_ListNotebookInstanceLifecycleConfigsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListNotebookInstancesCommand
 */
export const se_ListNotebookInstancesCommand = async (
  input: ListNotebookInstancesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListNotebookInstances");
  let body: any;
  body = JSON.stringify(se_ListNotebookInstancesInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListPipelineExecutionsCommand
 */
export const se_ListPipelineExecutionsCommand = async (
  input: ListPipelineExecutionsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListPipelineExecutions");
  let body: any;
  body = JSON.stringify(se_ListPipelineExecutionsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListPipelineExecutionStepsCommand
 */
export const se_ListPipelineExecutionStepsCommand = async (
  input: ListPipelineExecutionStepsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListPipelineExecutionSteps");
  let body: any;
  body = JSON.stringify(se_ListPipelineExecutionStepsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListPipelineParametersForExecutionCommand
 */
export const se_ListPipelineParametersForExecutionCommand = async (
  input: ListPipelineParametersForExecutionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListPipelineParametersForExecution");
  let body: any;
  body = JSON.stringify(se_ListPipelineParametersForExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListPipelinesCommand
 */
export const se_ListPipelinesCommand = async (
  input: ListPipelinesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListPipelines");
  let body: any;
  body = JSON.stringify(se_ListPipelinesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListProcessingJobsCommand
 */
export const se_ListProcessingJobsCommand = async (
  input: ListProcessingJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListProcessingJobs");
  let body: any;
  body = JSON.stringify(se_ListProcessingJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListProjectsCommand
 */
export const se_ListProjectsCommand = async (
  input: ListProjectsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListProjects");
  let body: any;
  body = JSON.stringify(se_ListProjectsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListSpacesCommand
 */
export const se_ListSpacesCommand = async (
  input: ListSpacesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListSpaces");
  let body: any;
  body = JSON.stringify(se_ListSpacesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListStageDevicesCommand
 */
export const se_ListStageDevicesCommand = async (
  input: ListStageDevicesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListStageDevices");
  let body: any;
  body = JSON.stringify(se_ListStageDevicesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListStudioLifecycleConfigsCommand
 */
export const se_ListStudioLifecycleConfigsCommand = async (
  input: ListStudioLifecycleConfigsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListStudioLifecycleConfigs");
  let body: any;
  body = JSON.stringify(se_ListStudioLifecycleConfigsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListSubscribedWorkteamsCommand
 */
export const se_ListSubscribedWorkteamsCommand = async (
  input: ListSubscribedWorkteamsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListSubscribedWorkteams");
  let body: any;
  body = JSON.stringify(se_ListSubscribedWorkteamsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListTagsCommand
 */
export const se_ListTagsCommand = async (
  input: ListTagsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListTags");
  let body: any;
  body = JSON.stringify(se_ListTagsInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListTrainingJobsCommand
 */
export const se_ListTrainingJobsCommand = async (
  input: ListTrainingJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListTrainingJobs");
  let body: any;
  body = JSON.stringify(se_ListTrainingJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListTrainingJobsForHyperParameterTuningJobCommand
 */
export const se_ListTrainingJobsForHyperParameterTuningJobCommand = async (
  input: ListTrainingJobsForHyperParameterTuningJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListTrainingJobsForHyperParameterTuningJob");
  let body: any;
  body = JSON.stringify(se_ListTrainingJobsForHyperParameterTuningJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListTransformJobsCommand
 */
export const se_ListTransformJobsCommand = async (
  input: ListTransformJobsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListTransformJobs");
  let body: any;
  body = JSON.stringify(se_ListTransformJobsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListTrialComponentsCommand
 */
export const se_ListTrialComponentsCommand = async (
  input: ListTrialComponentsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListTrialComponents");
  let body: any;
  body = JSON.stringify(se_ListTrialComponentsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListTrialsCommand
 */
export const se_ListTrialsCommand = async (
  input: ListTrialsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListTrials");
  let body: any;
  body = JSON.stringify(se_ListTrialsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListUserProfilesCommand
 */
export const se_ListUserProfilesCommand = async (
  input: ListUserProfilesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListUserProfiles");
  let body: any;
  body = JSON.stringify(se_ListUserProfilesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListWorkforcesCommand
 */
export const se_ListWorkforcesCommand = async (
  input: ListWorkforcesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListWorkforces");
  let body: any;
  body = JSON.stringify(se_ListWorkforcesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1ListWorkteamsCommand
 */
export const se_ListWorkteamsCommand = async (
  input: ListWorkteamsCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("ListWorkteams");
  let body: any;
  body = JSON.stringify(se_ListWorkteamsRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1PutModelPackageGroupPolicyCommand
 */
export const se_PutModelPackageGroupPolicyCommand = async (
  input: PutModelPackageGroupPolicyCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("PutModelPackageGroupPolicy");
  let body: any;
  body = JSON.stringify(se_PutModelPackageGroupPolicyInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1QueryLineageCommand
 */
export const se_QueryLineageCommand = async (
  input: QueryLineageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("QueryLineage");
  let body: any;
  body = JSON.stringify(se_QueryLineageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1RegisterDevicesCommand
 */
export const se_RegisterDevicesCommand = async (
  input: RegisterDevicesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("RegisterDevices");
  let body: any;
  body = JSON.stringify(se_RegisterDevicesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1RenderUiTemplateCommand
 */
export const se_RenderUiTemplateCommand = async (
  input: RenderUiTemplateCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("RenderUiTemplate");
  let body: any;
  body = JSON.stringify(se_RenderUiTemplateRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1RetryPipelineExecutionCommand
 */
export const se_RetryPipelineExecutionCommand = async (
  input: RetryPipelineExecutionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("RetryPipelineExecution");
  let body: any;
  body = JSON.stringify(se_RetryPipelineExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1SearchCommand
 */
export const se_SearchCommand = async (input: SearchCommandInput, context: __SerdeContext): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("Search");
  let body: any;
  body = JSON.stringify(se_SearchRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1SendPipelineExecutionStepFailureCommand
 */
export const se_SendPipelineExecutionStepFailureCommand = async (
  input: SendPipelineExecutionStepFailureCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("SendPipelineExecutionStepFailure");
  let body: any;
  body = JSON.stringify(se_SendPipelineExecutionStepFailureRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1SendPipelineExecutionStepSuccessCommand
 */
export const se_SendPipelineExecutionStepSuccessCommand = async (
  input: SendPipelineExecutionStepSuccessCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("SendPipelineExecutionStepSuccess");
  let body: any;
  body = JSON.stringify(se_SendPipelineExecutionStepSuccessRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StartEdgeDeploymentStageCommand
 */
export const se_StartEdgeDeploymentStageCommand = async (
  input: StartEdgeDeploymentStageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StartEdgeDeploymentStage");
  let body: any;
  body = JSON.stringify(se_StartEdgeDeploymentStageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StartInferenceExperimentCommand
 */
export const se_StartInferenceExperimentCommand = async (
  input: StartInferenceExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StartInferenceExperiment");
  let body: any;
  body = JSON.stringify(se_StartInferenceExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StartMonitoringScheduleCommand
 */
export const se_StartMonitoringScheduleCommand = async (
  input: StartMonitoringScheduleCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StartMonitoringSchedule");
  let body: any;
  body = JSON.stringify(se_StartMonitoringScheduleRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StartNotebookInstanceCommand
 */
export const se_StartNotebookInstanceCommand = async (
  input: StartNotebookInstanceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StartNotebookInstance");
  let body: any;
  body = JSON.stringify(se_StartNotebookInstanceInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StartPipelineExecutionCommand
 */
export const se_StartPipelineExecutionCommand = async (
  input: StartPipelineExecutionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StartPipelineExecution");
  let body: any;
  body = JSON.stringify(se_StartPipelineExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopAutoMLJobCommand
 */
export const se_StopAutoMLJobCommand = async (
  input: StopAutoMLJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopAutoMLJob");
  let body: any;
  body = JSON.stringify(se_StopAutoMLJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopCompilationJobCommand
 */
export const se_StopCompilationJobCommand = async (
  input: StopCompilationJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopCompilationJob");
  let body: any;
  body = JSON.stringify(se_StopCompilationJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopEdgeDeploymentStageCommand
 */
export const se_StopEdgeDeploymentStageCommand = async (
  input: StopEdgeDeploymentStageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopEdgeDeploymentStage");
  let body: any;
  body = JSON.stringify(se_StopEdgeDeploymentStageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopEdgePackagingJobCommand
 */
export const se_StopEdgePackagingJobCommand = async (
  input: StopEdgePackagingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopEdgePackagingJob");
  let body: any;
  body = JSON.stringify(se_StopEdgePackagingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopHyperParameterTuningJobCommand
 */
export const se_StopHyperParameterTuningJobCommand = async (
  input: StopHyperParameterTuningJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopHyperParameterTuningJob");
  let body: any;
  body = JSON.stringify(se_StopHyperParameterTuningJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopInferenceExperimentCommand
 */
export const se_StopInferenceExperimentCommand = async (
  input: StopInferenceExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopInferenceExperiment");
  let body: any;
  body = JSON.stringify(se_StopInferenceExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopInferenceRecommendationsJobCommand
 */
export const se_StopInferenceRecommendationsJobCommand = async (
  input: StopInferenceRecommendationsJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopInferenceRecommendationsJob");
  let body: any;
  body = JSON.stringify(se_StopInferenceRecommendationsJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopLabelingJobCommand
 */
export const se_StopLabelingJobCommand = async (
  input: StopLabelingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopLabelingJob");
  let body: any;
  body = JSON.stringify(se_StopLabelingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopMonitoringScheduleCommand
 */
export const se_StopMonitoringScheduleCommand = async (
  input: StopMonitoringScheduleCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopMonitoringSchedule");
  let body: any;
  body = JSON.stringify(se_StopMonitoringScheduleRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopNotebookInstanceCommand
 */
export const se_StopNotebookInstanceCommand = async (
  input: StopNotebookInstanceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopNotebookInstance");
  let body: any;
  body = JSON.stringify(se_StopNotebookInstanceInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopPipelineExecutionCommand
 */
export const se_StopPipelineExecutionCommand = async (
  input: StopPipelineExecutionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopPipelineExecution");
  let body: any;
  body = JSON.stringify(se_StopPipelineExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopProcessingJobCommand
 */
export const se_StopProcessingJobCommand = async (
  input: StopProcessingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopProcessingJob");
  let body: any;
  body = JSON.stringify(se_StopProcessingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopTrainingJobCommand
 */
export const se_StopTrainingJobCommand = async (
  input: StopTrainingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopTrainingJob");
  let body: any;
  body = JSON.stringify(se_StopTrainingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1StopTransformJobCommand
 */
export const se_StopTransformJobCommand = async (
  input: StopTransformJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("StopTransformJob");
  let body: any;
  body = JSON.stringify(se_StopTransformJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateActionCommand
 */
export const se_UpdateActionCommand = async (
  input: UpdateActionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateAction");
  let body: any;
  body = JSON.stringify(se_UpdateActionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateAppImageConfigCommand
 */
export const se_UpdateAppImageConfigCommand = async (
  input: UpdateAppImageConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateAppImageConfig");
  let body: any;
  body = JSON.stringify(se_UpdateAppImageConfigRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateArtifactCommand
 */
export const se_UpdateArtifactCommand = async (
  input: UpdateArtifactCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateArtifact");
  let body: any;
  body = JSON.stringify(se_UpdateArtifactRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateCodeRepositoryCommand
 */
export const se_UpdateCodeRepositoryCommand = async (
  input: UpdateCodeRepositoryCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateCodeRepository");
  let body: any;
  body = JSON.stringify(se_UpdateCodeRepositoryInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateContextCommand
 */
export const se_UpdateContextCommand = async (
  input: UpdateContextCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateContext");
  let body: any;
  body = JSON.stringify(se_UpdateContextRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateDeviceFleetCommand
 */
export const se_UpdateDeviceFleetCommand = async (
  input: UpdateDeviceFleetCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateDeviceFleet");
  let body: any;
  body = JSON.stringify(se_UpdateDeviceFleetRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateDevicesCommand
 */
export const se_UpdateDevicesCommand = async (
  input: UpdateDevicesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateDevices");
  let body: any;
  body = JSON.stringify(se_UpdateDevicesRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateDomainCommand
 */
export const se_UpdateDomainCommand = async (
  input: UpdateDomainCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateDomain");
  let body: any;
  body = JSON.stringify(se_UpdateDomainRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateEndpointCommand
 */
export const se_UpdateEndpointCommand = async (
  input: UpdateEndpointCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateEndpoint");
  let body: any;
  body = JSON.stringify(se_UpdateEndpointInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateEndpointWeightsAndCapacitiesCommand
 */
export const se_UpdateEndpointWeightsAndCapacitiesCommand = async (
  input: UpdateEndpointWeightsAndCapacitiesCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateEndpointWeightsAndCapacities");
  let body: any;
  body = JSON.stringify(se_UpdateEndpointWeightsAndCapacitiesInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateExperimentCommand
 */
export const se_UpdateExperimentCommand = async (
  input: UpdateExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateExperiment");
  let body: any;
  body = JSON.stringify(se_UpdateExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateFeatureGroupCommand
 */
export const se_UpdateFeatureGroupCommand = async (
  input: UpdateFeatureGroupCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateFeatureGroup");
  let body: any;
  body = JSON.stringify(se_UpdateFeatureGroupRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateFeatureMetadataCommand
 */
export const se_UpdateFeatureMetadataCommand = async (
  input: UpdateFeatureMetadataCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateFeatureMetadata");
  let body: any;
  body = JSON.stringify(se_UpdateFeatureMetadataRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateHubCommand
 */
export const se_UpdateHubCommand = async (
  input: UpdateHubCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateHub");
  let body: any;
  body = JSON.stringify(se_UpdateHubRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateImageCommand
 */
export const se_UpdateImageCommand = async (
  input: UpdateImageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateImage");
  let body: any;
  body = JSON.stringify(se_UpdateImageRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateImageVersionCommand
 */
export const se_UpdateImageVersionCommand = async (
  input: UpdateImageVersionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateImageVersion");
  let body: any;
  body = JSON.stringify(se_UpdateImageVersionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateInferenceExperimentCommand
 */
export const se_UpdateInferenceExperimentCommand = async (
  input: UpdateInferenceExperimentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateInferenceExperiment");
  let body: any;
  body = JSON.stringify(se_UpdateInferenceExperimentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateModelCardCommand
 */
export const se_UpdateModelCardCommand = async (
  input: UpdateModelCardCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateModelCard");
  let body: any;
  body = JSON.stringify(se_UpdateModelCardRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateModelPackageCommand
 */
export const se_UpdateModelPackageCommand = async (
  input: UpdateModelPackageCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateModelPackage");
  let body: any;
  body = JSON.stringify(se_UpdateModelPackageInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateMonitoringAlertCommand
 */
export const se_UpdateMonitoringAlertCommand = async (
  input: UpdateMonitoringAlertCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateMonitoringAlert");
  let body: any;
  body = JSON.stringify(se_UpdateMonitoringAlertRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateMonitoringScheduleCommand
 */
export const se_UpdateMonitoringScheduleCommand = async (
  input: UpdateMonitoringScheduleCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateMonitoringSchedule");
  let body: any;
  body = JSON.stringify(se_UpdateMonitoringScheduleRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateNotebookInstanceCommand
 */
export const se_UpdateNotebookInstanceCommand = async (
  input: UpdateNotebookInstanceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateNotebookInstance");
  let body: any;
  body = JSON.stringify(se_UpdateNotebookInstanceInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateNotebookInstanceLifecycleConfigCommand
 */
export const se_UpdateNotebookInstanceLifecycleConfigCommand = async (
  input: UpdateNotebookInstanceLifecycleConfigCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateNotebookInstanceLifecycleConfig");
  let body: any;
  body = JSON.stringify(se_UpdateNotebookInstanceLifecycleConfigInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdatePipelineCommand
 */
export const se_UpdatePipelineCommand = async (
  input: UpdatePipelineCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdatePipeline");
  let body: any;
  body = JSON.stringify(se_UpdatePipelineRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdatePipelineExecutionCommand
 */
export const se_UpdatePipelineExecutionCommand = async (
  input: UpdatePipelineExecutionCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdatePipelineExecution");
  let body: any;
  body = JSON.stringify(se_UpdatePipelineExecutionRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateProjectCommand
 */
export const se_UpdateProjectCommand = async (
  input: UpdateProjectCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateProject");
  let body: any;
  body = JSON.stringify(se_UpdateProjectInput(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateSpaceCommand
 */
export const se_UpdateSpaceCommand = async (
  input: UpdateSpaceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateSpace");
  let body: any;
  body = JSON.stringify(se_UpdateSpaceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateTrainingJobCommand
 */
export const se_UpdateTrainingJobCommand = async (
  input: UpdateTrainingJobCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateTrainingJob");
  let body: any;
  body = JSON.stringify(se_UpdateTrainingJobRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateTrialCommand
 */
export const se_UpdateTrialCommand = async (
  input: UpdateTrialCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateTrial");
  let body: any;
  body = JSON.stringify(se_UpdateTrialRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateTrialComponentCommand
 */
export const se_UpdateTrialComponentCommand = async (
  input: UpdateTrialComponentCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateTrialComponent");
  let body: any;
  body = JSON.stringify(se_UpdateTrialComponentRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateUserProfileCommand
 */
export const se_UpdateUserProfileCommand = async (
  input: UpdateUserProfileCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateUserProfile");
  let body: any;
  body = JSON.stringify(se_UpdateUserProfileRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateWorkforceCommand
 */
export const se_UpdateWorkforceCommand = async (
  input: UpdateWorkforceCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateWorkforce");
  let body: any;
  body = JSON.stringify(se_UpdateWorkforceRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * serializeAws_json1_1UpdateWorkteamCommand
 */
export const se_UpdateWorkteamCommand = async (
  input: UpdateWorkteamCommandInput,
  context: __SerdeContext
): Promise<__HttpRequest> => {
  const headers: __HeaderBag = sharedHeaders("UpdateWorkteam");
  let body: any;
  body = JSON.stringify(se_UpdateWorkteamRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", undefined, body);
};

/**
 * deserializeAws_json1_1AddAssociationCommand
 */
export const de_AddAssociationCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AddAssociationCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_AddAssociationCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_AddAssociationResponse(data, context);
  const response: AddAssociationCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1AddAssociationCommandError
 */
const de_AddAssociationCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AddAssociationCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1AddTagsCommand
 */
export const de_AddTagsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AddTagsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_AddTagsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_AddTagsOutput(data, context);
  const response: AddTagsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1AddTagsCommandError
 */
const de_AddTagsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AddTagsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1AssociateTrialComponentCommand
 */
export const de_AssociateTrialComponentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AssociateTrialComponentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_AssociateTrialComponentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_AssociateTrialComponentResponse(data, context);
  const response: AssociateTrialComponentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1AssociateTrialComponentCommandError
 */
const de_AssociateTrialComponentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<AssociateTrialComponentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1BatchDescribeModelPackageCommand
 */
export const de_BatchDescribeModelPackageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchDescribeModelPackageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_BatchDescribeModelPackageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_BatchDescribeModelPackageOutput(data, context);
  const response: BatchDescribeModelPackageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1BatchDescribeModelPackageCommandError
 */
const de_BatchDescribeModelPackageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<BatchDescribeModelPackageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1CreateActionCommand
 */
export const de_CreateActionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateActionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateActionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateActionResponse(data, context);
  const response: CreateActionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateActionCommandError
 */
const de_CreateActionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateActionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateAlgorithmCommand
 */
export const de_CreateAlgorithmCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAlgorithmCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateAlgorithmCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateAlgorithmOutput(data, context);
  const response: CreateAlgorithmCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateAlgorithmCommandError
 */
const de_CreateAlgorithmCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAlgorithmCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1CreateAppCommand
 */
export const de_CreateAppCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAppCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateAppCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateAppResponse(data, context);
  const response: CreateAppCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateAppCommandError
 */
const de_CreateAppCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAppCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateAppImageConfigCommand
 */
export const de_CreateAppImageConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAppImageConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateAppImageConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateAppImageConfigResponse(data, context);
  const response: CreateAppImageConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateAppImageConfigCommandError
 */
const de_CreateAppImageConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAppImageConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateArtifactCommand
 */
export const de_CreateArtifactCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateArtifactCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateArtifactCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateArtifactResponse(data, context);
  const response: CreateArtifactCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateArtifactCommandError
 */
const de_CreateArtifactCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateArtifactCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateAutoMLJobCommand
 */
export const de_CreateAutoMLJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAutoMLJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateAutoMLJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateAutoMLJobResponse(data, context);
  const response: CreateAutoMLJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateAutoMLJobCommandError
 */
const de_CreateAutoMLJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAutoMLJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateAutoMLJobV2Command
 */
export const de_CreateAutoMLJobV2Command = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAutoMLJobV2CommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateAutoMLJobV2CommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateAutoMLJobV2Response(data, context);
  const response: CreateAutoMLJobV2CommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateAutoMLJobV2CommandError
 */
const de_CreateAutoMLJobV2CommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateAutoMLJobV2CommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateCodeRepositoryCommand
 */
export const de_CreateCodeRepositoryCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateCodeRepositoryCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateCodeRepositoryCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateCodeRepositoryOutput(data, context);
  const response: CreateCodeRepositoryCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateCodeRepositoryCommandError
 */
const de_CreateCodeRepositoryCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateCodeRepositoryCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1CreateCompilationJobCommand
 */
export const de_CreateCompilationJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateCompilationJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateCompilationJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateCompilationJobResponse(data, context);
  const response: CreateCompilationJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateCompilationJobCommandError
 */
const de_CreateCompilationJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateCompilationJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateContextCommand
 */
export const de_CreateContextCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateContextCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateContextCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateContextResponse(data, context);
  const response: CreateContextCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateContextCommandError
 */
const de_CreateContextCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateContextCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateDataQualityJobDefinitionCommand
 */
export const de_CreateDataQualityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateDataQualityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateDataQualityJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateDataQualityJobDefinitionResponse(data, context);
  const response: CreateDataQualityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateDataQualityJobDefinitionCommandError
 */
const de_CreateDataQualityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateDataQualityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateDeviceFleetCommand
 */
export const de_CreateDeviceFleetCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateDeviceFleetCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateDeviceFleetCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: CreateDeviceFleetCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateDeviceFleetCommandError
 */
const de_CreateDeviceFleetCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateDeviceFleetCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateDomainCommand
 */
export const de_CreateDomainCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateDomainCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateDomainCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateDomainResponse(data, context);
  const response: CreateDomainCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateDomainCommandError
 */
const de_CreateDomainCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateDomainCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateEdgeDeploymentPlanCommand
 */
export const de_CreateEdgeDeploymentPlanCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEdgeDeploymentPlanCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateEdgeDeploymentPlanCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateEdgeDeploymentPlanResponse(data, context);
  const response: CreateEdgeDeploymentPlanCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateEdgeDeploymentPlanCommandError
 */
const de_CreateEdgeDeploymentPlanCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEdgeDeploymentPlanCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateEdgeDeploymentStageCommand
 */
export const de_CreateEdgeDeploymentStageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEdgeDeploymentStageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateEdgeDeploymentStageCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: CreateEdgeDeploymentStageCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateEdgeDeploymentStageCommandError
 */
const de_CreateEdgeDeploymentStageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEdgeDeploymentStageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateEdgePackagingJobCommand
 */
export const de_CreateEdgePackagingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEdgePackagingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateEdgePackagingJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: CreateEdgePackagingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateEdgePackagingJobCommandError
 */
const de_CreateEdgePackagingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEdgePackagingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateEndpointCommand
 */
export const de_CreateEndpointCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEndpointCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateEndpointCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateEndpointOutput(data, context);
  const response: CreateEndpointCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateEndpointCommandError
 */
const de_CreateEndpointCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEndpointCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateEndpointConfigCommand
 */
export const de_CreateEndpointConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEndpointConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateEndpointConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateEndpointConfigOutput(data, context);
  const response: CreateEndpointConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateEndpointConfigCommandError
 */
const de_CreateEndpointConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateEndpointConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateExperimentCommand
 */
export const de_CreateExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateExperimentResponse(data, context);
  const response: CreateExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateExperimentCommandError
 */
const de_CreateExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateFeatureGroupCommand
 */
export const de_CreateFeatureGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateFeatureGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateFeatureGroupCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateFeatureGroupResponse(data, context);
  const response: CreateFeatureGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateFeatureGroupCommandError
 */
const de_CreateFeatureGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateFeatureGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateFlowDefinitionCommand
 */
export const de_CreateFlowDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateFlowDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateFlowDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateFlowDefinitionResponse(data, context);
  const response: CreateFlowDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateFlowDefinitionCommandError
 */
const de_CreateFlowDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateFlowDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateHubCommand
 */
export const de_CreateHubCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateHubCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateHubCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateHubResponse(data, context);
  const response: CreateHubCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateHubCommandError
 */
const de_CreateHubCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateHubCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateHumanTaskUiCommand
 */
export const de_CreateHumanTaskUiCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateHumanTaskUiCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateHumanTaskUiCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateHumanTaskUiResponse(data, context);
  const response: CreateHumanTaskUiCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateHumanTaskUiCommandError
 */
const de_CreateHumanTaskUiCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateHumanTaskUiCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateHyperParameterTuningJobCommand
 */
export const de_CreateHyperParameterTuningJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateHyperParameterTuningJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateHyperParameterTuningJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateHyperParameterTuningJobResponse(data, context);
  const response: CreateHyperParameterTuningJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateHyperParameterTuningJobCommandError
 */
const de_CreateHyperParameterTuningJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateHyperParameterTuningJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateImageCommand
 */
export const de_CreateImageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateImageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateImageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateImageResponse(data, context);
  const response: CreateImageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateImageCommandError
 */
const de_CreateImageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateImageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateImageVersionCommand
 */
export const de_CreateImageVersionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateImageVersionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateImageVersionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateImageVersionResponse(data, context);
  const response: CreateImageVersionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateImageVersionCommandError
 */
const de_CreateImageVersionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateImageVersionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateInferenceExperimentCommand
 */
export const de_CreateInferenceExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateInferenceExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateInferenceExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateInferenceExperimentResponse(data, context);
  const response: CreateInferenceExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateInferenceExperimentCommandError
 */
const de_CreateInferenceExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateInferenceExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateInferenceRecommendationsJobCommand
 */
export const de_CreateInferenceRecommendationsJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateInferenceRecommendationsJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateInferenceRecommendationsJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateInferenceRecommendationsJobResponse(data, context);
  const response: CreateInferenceRecommendationsJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateInferenceRecommendationsJobCommandError
 */
const de_CreateInferenceRecommendationsJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateInferenceRecommendationsJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateLabelingJobCommand
 */
export const de_CreateLabelingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateLabelingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateLabelingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateLabelingJobResponse(data, context);
  const response: CreateLabelingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateLabelingJobCommandError
 */
const de_CreateLabelingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateLabelingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelCommand
 */
export const de_CreateModelCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelOutput(data, context);
  const response: CreateModelCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelCommandError
 */
const de_CreateModelCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelBiasJobDefinitionCommand
 */
export const de_CreateModelBiasJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelBiasJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelBiasJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelBiasJobDefinitionResponse(data, context);
  const response: CreateModelBiasJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelBiasJobDefinitionCommandError
 */
const de_CreateModelBiasJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelBiasJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelCardCommand
 */
export const de_CreateModelCardCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelCardCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelCardCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelCardResponse(data, context);
  const response: CreateModelCardCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelCardCommandError
 */
const de_CreateModelCardCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelCardCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelCardExportJobCommand
 */
export const de_CreateModelCardExportJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelCardExportJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelCardExportJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelCardExportJobResponse(data, context);
  const response: CreateModelCardExportJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelCardExportJobCommandError
 */
const de_CreateModelCardExportJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelCardExportJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelExplainabilityJobDefinitionCommand
 */
export const de_CreateModelExplainabilityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelExplainabilityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelExplainabilityJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelExplainabilityJobDefinitionResponse(data, context);
  const response: CreateModelExplainabilityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelExplainabilityJobDefinitionCommandError
 */
const de_CreateModelExplainabilityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelExplainabilityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelPackageCommand
 */
export const de_CreateModelPackageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelPackageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelPackageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelPackageOutput(data, context);
  const response: CreateModelPackageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelPackageCommandError
 */
const de_CreateModelPackageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelPackageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelPackageGroupCommand
 */
export const de_CreateModelPackageGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelPackageGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelPackageGroupCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelPackageGroupOutput(data, context);
  const response: CreateModelPackageGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelPackageGroupCommandError
 */
const de_CreateModelPackageGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelPackageGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateModelQualityJobDefinitionCommand
 */
export const de_CreateModelQualityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelQualityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateModelQualityJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateModelQualityJobDefinitionResponse(data, context);
  const response: CreateModelQualityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateModelQualityJobDefinitionCommandError
 */
const de_CreateModelQualityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateModelQualityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateMonitoringScheduleCommand
 */
export const de_CreateMonitoringScheduleCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateMonitoringScheduleCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateMonitoringScheduleCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateMonitoringScheduleResponse(data, context);
  const response: CreateMonitoringScheduleCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateMonitoringScheduleCommandError
 */
const de_CreateMonitoringScheduleCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateMonitoringScheduleCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateNotebookInstanceCommand
 */
export const de_CreateNotebookInstanceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateNotebookInstanceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateNotebookInstanceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateNotebookInstanceOutput(data, context);
  const response: CreateNotebookInstanceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateNotebookInstanceCommandError
 */
const de_CreateNotebookInstanceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateNotebookInstanceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateNotebookInstanceLifecycleConfigCommand
 */
export const de_CreateNotebookInstanceLifecycleConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateNotebookInstanceLifecycleConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateNotebookInstanceLifecycleConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateNotebookInstanceLifecycleConfigOutput(data, context);
  const response: CreateNotebookInstanceLifecycleConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateNotebookInstanceLifecycleConfigCommandError
 */
const de_CreateNotebookInstanceLifecycleConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateNotebookInstanceLifecycleConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreatePipelineCommand
 */
export const de_CreatePipelineCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreatePipelineCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreatePipelineCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreatePipelineResponse(data, context);
  const response: CreatePipelineCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreatePipelineCommandError
 */
const de_CreatePipelineCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreatePipelineCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreatePresignedDomainUrlCommand
 */
export const de_CreatePresignedDomainUrlCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreatePresignedDomainUrlCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreatePresignedDomainUrlCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreatePresignedDomainUrlResponse(data, context);
  const response: CreatePresignedDomainUrlCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreatePresignedDomainUrlCommandError
 */
const de_CreatePresignedDomainUrlCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreatePresignedDomainUrlCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreatePresignedNotebookInstanceUrlCommand
 */
export const de_CreatePresignedNotebookInstanceUrlCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreatePresignedNotebookInstanceUrlCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreatePresignedNotebookInstanceUrlCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreatePresignedNotebookInstanceUrlOutput(data, context);
  const response: CreatePresignedNotebookInstanceUrlCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreatePresignedNotebookInstanceUrlCommandError
 */
const de_CreatePresignedNotebookInstanceUrlCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreatePresignedNotebookInstanceUrlCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1CreateProcessingJobCommand
 */
export const de_CreateProcessingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateProcessingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateProcessingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateProcessingJobResponse(data, context);
  const response: CreateProcessingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateProcessingJobCommandError
 */
const de_CreateProcessingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateProcessingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateProjectCommand
 */
export const de_CreateProjectCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateProjectCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateProjectCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateProjectOutput(data, context);
  const response: CreateProjectCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateProjectCommandError
 */
const de_CreateProjectCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateProjectCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateSpaceCommand
 */
export const de_CreateSpaceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateSpaceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateSpaceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateSpaceResponse(data, context);
  const response: CreateSpaceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateSpaceCommandError
 */
const de_CreateSpaceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateSpaceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateStudioLifecycleConfigCommand
 */
export const de_CreateStudioLifecycleConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateStudioLifecycleConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateStudioLifecycleConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateStudioLifecycleConfigResponse(data, context);
  const response: CreateStudioLifecycleConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateStudioLifecycleConfigCommandError
 */
const de_CreateStudioLifecycleConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateStudioLifecycleConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateTrainingJobCommand
 */
export const de_CreateTrainingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTrainingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateTrainingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateTrainingJobResponse(data, context);
  const response: CreateTrainingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateTrainingJobCommandError
 */
const de_CreateTrainingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTrainingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateTransformJobCommand
 */
export const de_CreateTransformJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTransformJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateTransformJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateTransformJobResponse(data, context);
  const response: CreateTransformJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateTransformJobCommandError
 */
const de_CreateTransformJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTransformJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateTrialCommand
 */
export const de_CreateTrialCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTrialCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateTrialCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateTrialResponse(data, context);
  const response: CreateTrialCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateTrialCommandError
 */
const de_CreateTrialCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTrialCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateTrialComponentCommand
 */
export const de_CreateTrialComponentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTrialComponentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateTrialComponentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateTrialComponentResponse(data, context);
  const response: CreateTrialComponentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateTrialComponentCommandError
 */
const de_CreateTrialComponentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateTrialComponentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateUserProfileCommand
 */
export const de_CreateUserProfileCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateUserProfileCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateUserProfileCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateUserProfileResponse(data, context);
  const response: CreateUserProfileCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateUserProfileCommandError
 */
const de_CreateUserProfileCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateUserProfileCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1CreateWorkforceCommand
 */
export const de_CreateWorkforceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateWorkforceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateWorkforceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateWorkforceResponse(data, context);
  const response: CreateWorkforceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateWorkforceCommandError
 */
const de_CreateWorkforceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateWorkforceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1CreateWorkteamCommand
 */
export const de_CreateWorkteamCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateWorkteamCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_CreateWorkteamCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_CreateWorkteamResponse(data, context);
  const response: CreateWorkteamCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1CreateWorkteamCommandError
 */
const de_CreateWorkteamCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<CreateWorkteamCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteActionCommand
 */
export const de_DeleteActionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteActionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteActionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteActionResponse(data, context);
  const response: DeleteActionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteActionCommandError
 */
const de_DeleteActionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteActionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteAlgorithmCommand
 */
export const de_DeleteAlgorithmCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAlgorithmCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteAlgorithmCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteAlgorithmCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteAlgorithmCommandError
 */
const de_DeleteAlgorithmCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAlgorithmCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteAppCommand
 */
export const de_DeleteAppCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAppCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteAppCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteAppCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteAppCommandError
 */
const de_DeleteAppCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAppCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteAppImageConfigCommand
 */
export const de_DeleteAppImageConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAppImageConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteAppImageConfigCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteAppImageConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteAppImageConfigCommandError
 */
const de_DeleteAppImageConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAppImageConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteArtifactCommand
 */
export const de_DeleteArtifactCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteArtifactCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteArtifactCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteArtifactResponse(data, context);
  const response: DeleteArtifactCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteArtifactCommandError
 */
const de_DeleteArtifactCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteArtifactCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteAssociationCommand
 */
export const de_DeleteAssociationCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAssociationCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteAssociationCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteAssociationResponse(data, context);
  const response: DeleteAssociationCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteAssociationCommandError
 */
const de_DeleteAssociationCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteAssociationCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteCodeRepositoryCommand
 */
export const de_DeleteCodeRepositoryCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteCodeRepositoryCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteCodeRepositoryCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteCodeRepositoryCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteCodeRepositoryCommandError
 */
const de_DeleteCodeRepositoryCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteCodeRepositoryCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteContextCommand
 */
export const de_DeleteContextCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteContextCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteContextCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteContextResponse(data, context);
  const response: DeleteContextCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteContextCommandError
 */
const de_DeleteContextCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteContextCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteDataQualityJobDefinitionCommand
 */
export const de_DeleteDataQualityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteDataQualityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteDataQualityJobDefinitionCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteDataQualityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteDataQualityJobDefinitionCommandError
 */
const de_DeleteDataQualityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteDataQualityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteDeviceFleetCommand
 */
export const de_DeleteDeviceFleetCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteDeviceFleetCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteDeviceFleetCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteDeviceFleetCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteDeviceFleetCommandError
 */
const de_DeleteDeviceFleetCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteDeviceFleetCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteDomainCommand
 */
export const de_DeleteDomainCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteDomainCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteDomainCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteDomainCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteDomainCommandError
 */
const de_DeleteDomainCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteDomainCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteEdgeDeploymentPlanCommand
 */
export const de_DeleteEdgeDeploymentPlanCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEdgeDeploymentPlanCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteEdgeDeploymentPlanCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteEdgeDeploymentPlanCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteEdgeDeploymentPlanCommandError
 */
const de_DeleteEdgeDeploymentPlanCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEdgeDeploymentPlanCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteEdgeDeploymentStageCommand
 */
export const de_DeleteEdgeDeploymentStageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEdgeDeploymentStageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteEdgeDeploymentStageCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteEdgeDeploymentStageCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteEdgeDeploymentStageCommandError
 */
const de_DeleteEdgeDeploymentStageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEdgeDeploymentStageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteEndpointCommand
 */
export const de_DeleteEndpointCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEndpointCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteEndpointCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteEndpointCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteEndpointCommandError
 */
const de_DeleteEndpointCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEndpointCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteEndpointConfigCommand
 */
export const de_DeleteEndpointConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEndpointConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteEndpointConfigCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteEndpointConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteEndpointConfigCommandError
 */
const de_DeleteEndpointConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteEndpointConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteExperimentCommand
 */
export const de_DeleteExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteExperimentResponse(data, context);
  const response: DeleteExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteExperimentCommandError
 */
const de_DeleteExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteFeatureGroupCommand
 */
export const de_DeleteFeatureGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteFeatureGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteFeatureGroupCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteFeatureGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteFeatureGroupCommandError
 */
const de_DeleteFeatureGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteFeatureGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteFlowDefinitionCommand
 */
export const de_DeleteFlowDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteFlowDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteFlowDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteFlowDefinitionResponse(data, context);
  const response: DeleteFlowDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteFlowDefinitionCommandError
 */
const de_DeleteFlowDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteFlowDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteHubCommand
 */
export const de_DeleteHubCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteHubCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteHubCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteHubCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteHubCommandError
 */
const de_DeleteHubCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteHubCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteHubContentCommand
 */
export const de_DeleteHubContentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteHubContentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteHubContentCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteHubContentCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteHubContentCommandError
 */
const de_DeleteHubContentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteHubContentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteHumanTaskUiCommand
 */
export const de_DeleteHumanTaskUiCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteHumanTaskUiCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteHumanTaskUiCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteHumanTaskUiResponse(data, context);
  const response: DeleteHumanTaskUiCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteHumanTaskUiCommandError
 */
const de_DeleteHumanTaskUiCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteHumanTaskUiCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteImageCommand
 */
export const de_DeleteImageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteImageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteImageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteImageResponse(data, context);
  const response: DeleteImageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteImageCommandError
 */
const de_DeleteImageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteImageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteImageVersionCommand
 */
export const de_DeleteImageVersionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteImageVersionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteImageVersionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteImageVersionResponse(data, context);
  const response: DeleteImageVersionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteImageVersionCommandError
 */
const de_DeleteImageVersionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteImageVersionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteInferenceExperimentCommand
 */
export const de_DeleteInferenceExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteInferenceExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteInferenceExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteInferenceExperimentResponse(data, context);
  const response: DeleteInferenceExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteInferenceExperimentCommandError
 */
const de_DeleteInferenceExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteInferenceExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteModelCommand
 */
export const de_DeleteModelCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelCommandError
 */
const de_DeleteModelCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteModelBiasJobDefinitionCommand
 */
export const de_DeleteModelBiasJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelBiasJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelBiasJobDefinitionCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelBiasJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelBiasJobDefinitionCommandError
 */
const de_DeleteModelBiasJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelBiasJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteModelCardCommand
 */
export const de_DeleteModelCardCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelCardCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelCardCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelCardCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelCardCommandError
 */
const de_DeleteModelCardCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelCardCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteModelExplainabilityJobDefinitionCommand
 */
export const de_DeleteModelExplainabilityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelExplainabilityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelExplainabilityJobDefinitionCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelExplainabilityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelExplainabilityJobDefinitionCommandError
 */
const de_DeleteModelExplainabilityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelExplainabilityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteModelPackageCommand
 */
export const de_DeleteModelPackageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelPackageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelPackageCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelPackageCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelPackageCommandError
 */
const de_DeleteModelPackageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelPackageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteModelPackageGroupCommand
 */
export const de_DeleteModelPackageGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelPackageGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelPackageGroupCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelPackageGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelPackageGroupCommandError
 */
const de_DeleteModelPackageGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelPackageGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteModelPackageGroupPolicyCommand
 */
export const de_DeleteModelPackageGroupPolicyCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelPackageGroupPolicyCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelPackageGroupPolicyCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelPackageGroupPolicyCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelPackageGroupPolicyCommandError
 */
const de_DeleteModelPackageGroupPolicyCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelPackageGroupPolicyCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteModelQualityJobDefinitionCommand
 */
export const de_DeleteModelQualityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelQualityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteModelQualityJobDefinitionCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteModelQualityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteModelQualityJobDefinitionCommandError
 */
const de_DeleteModelQualityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteModelQualityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteMonitoringScheduleCommand
 */
export const de_DeleteMonitoringScheduleCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteMonitoringScheduleCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteMonitoringScheduleCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteMonitoringScheduleCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteMonitoringScheduleCommandError
 */
const de_DeleteMonitoringScheduleCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteMonitoringScheduleCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteNotebookInstanceCommand
 */
export const de_DeleteNotebookInstanceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteNotebookInstanceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteNotebookInstanceCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteNotebookInstanceCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteNotebookInstanceCommandError
 */
const de_DeleteNotebookInstanceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteNotebookInstanceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteNotebookInstanceLifecycleConfigCommand
 */
export const de_DeleteNotebookInstanceLifecycleConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteNotebookInstanceLifecycleConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteNotebookInstanceLifecycleConfigCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteNotebookInstanceLifecycleConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteNotebookInstanceLifecycleConfigCommandError
 */
const de_DeleteNotebookInstanceLifecycleConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteNotebookInstanceLifecycleConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeletePipelineCommand
 */
export const de_DeletePipelineCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeletePipelineCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeletePipelineCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeletePipelineResponse(data, context);
  const response: DeletePipelineCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeletePipelineCommandError
 */
const de_DeletePipelineCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeletePipelineCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteProjectCommand
 */
export const de_DeleteProjectCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteProjectCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteProjectCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteProjectCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteProjectCommandError
 */
const de_DeleteProjectCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteProjectCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteSpaceCommand
 */
export const de_DeleteSpaceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteSpaceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteSpaceCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteSpaceCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteSpaceCommandError
 */
const de_DeleteSpaceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteSpaceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteStudioLifecycleConfigCommand
 */
export const de_DeleteStudioLifecycleConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteStudioLifecycleConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteStudioLifecycleConfigCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteStudioLifecycleConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteStudioLifecycleConfigCommandError
 */
const de_DeleteStudioLifecycleConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteStudioLifecycleConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteTagsCommand
 */
export const de_DeleteTagsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteTagsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteTagsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteTagsOutput(data, context);
  const response: DeleteTagsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteTagsCommandError
 */
const de_DeleteTagsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteTagsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteTrialCommand
 */
export const de_DeleteTrialCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteTrialCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteTrialCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteTrialResponse(data, context);
  const response: DeleteTrialCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteTrialCommandError
 */
const de_DeleteTrialCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteTrialCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteTrialComponentCommand
 */
export const de_DeleteTrialComponentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteTrialComponentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteTrialComponentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteTrialComponentResponse(data, context);
  const response: DeleteTrialComponentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteTrialComponentCommandError
 */
const de_DeleteTrialComponentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteTrialComponentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteUserProfileCommand
 */
export const de_DeleteUserProfileCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteUserProfileCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteUserProfileCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeleteUserProfileCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteUserProfileCommandError
 */
const de_DeleteUserProfileCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteUserProfileCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeleteWorkforceCommand
 */
export const de_DeleteWorkforceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteWorkforceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteWorkforceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteWorkforceResponse(data, context);
  const response: DeleteWorkforceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteWorkforceCommandError
 */
const de_DeleteWorkforceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteWorkforceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DeleteWorkteamCommand
 */
export const de_DeleteWorkteamCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteWorkteamCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeleteWorkteamCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DeleteWorkteamResponse(data, context);
  const response: DeleteWorkteamCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeleteWorkteamCommandError
 */
const de_DeleteWorkteamCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeleteWorkteamCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DeregisterDevicesCommand
 */
export const de_DeregisterDevicesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeregisterDevicesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DeregisterDevicesCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: DeregisterDevicesCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DeregisterDevicesCommandError
 */
const de_DeregisterDevicesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DeregisterDevicesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeActionCommand
 */
export const de_DescribeActionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeActionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeActionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeActionResponse(data, context);
  const response: DescribeActionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeActionCommandError
 */
const de_DescribeActionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeActionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeAlgorithmCommand
 */
export const de_DescribeAlgorithmCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAlgorithmCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeAlgorithmCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeAlgorithmOutput(data, context);
  const response: DescribeAlgorithmCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeAlgorithmCommandError
 */
const de_DescribeAlgorithmCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAlgorithmCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeAppCommand
 */
export const de_DescribeAppCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAppCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeAppCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeAppResponse(data, context);
  const response: DescribeAppCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeAppCommandError
 */
const de_DescribeAppCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAppCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeAppImageConfigCommand
 */
export const de_DescribeAppImageConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAppImageConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeAppImageConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeAppImageConfigResponse(data, context);
  const response: DescribeAppImageConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeAppImageConfigCommandError
 */
const de_DescribeAppImageConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAppImageConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeArtifactCommand
 */
export const de_DescribeArtifactCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeArtifactCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeArtifactCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeArtifactResponse(data, context);
  const response: DescribeArtifactCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeArtifactCommandError
 */
const de_DescribeArtifactCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeArtifactCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeAutoMLJobCommand
 */
export const de_DescribeAutoMLJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAutoMLJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeAutoMLJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeAutoMLJobResponse(data, context);
  const response: DescribeAutoMLJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeAutoMLJobCommandError
 */
const de_DescribeAutoMLJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAutoMLJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeAutoMLJobV2Command
 */
export const de_DescribeAutoMLJobV2Command = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAutoMLJobV2CommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeAutoMLJobV2CommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeAutoMLJobV2Response(data, context);
  const response: DescribeAutoMLJobV2CommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeAutoMLJobV2CommandError
 */
const de_DescribeAutoMLJobV2CommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeAutoMLJobV2CommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeCodeRepositoryCommand
 */
export const de_DescribeCodeRepositoryCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeCodeRepositoryCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeCodeRepositoryCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeCodeRepositoryOutput(data, context);
  const response: DescribeCodeRepositoryCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeCodeRepositoryCommandError
 */
const de_DescribeCodeRepositoryCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeCodeRepositoryCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeCompilationJobCommand
 */
export const de_DescribeCompilationJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeCompilationJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeCompilationJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeCompilationJobResponse(data, context);
  const response: DescribeCompilationJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeCompilationJobCommandError
 */
const de_DescribeCompilationJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeCompilationJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeContextCommand
 */
export const de_DescribeContextCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeContextCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeContextCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeContextResponse(data, context);
  const response: DescribeContextCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeContextCommandError
 */
const de_DescribeContextCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeContextCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeDataQualityJobDefinitionCommand
 */
export const de_DescribeDataQualityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDataQualityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeDataQualityJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeDataQualityJobDefinitionResponse(data, context);
  const response: DescribeDataQualityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeDataQualityJobDefinitionCommandError
 */
const de_DescribeDataQualityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDataQualityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeDeviceCommand
 */
export const de_DescribeDeviceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDeviceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeDeviceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeDeviceResponse(data, context);
  const response: DescribeDeviceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeDeviceCommandError
 */
const de_DescribeDeviceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDeviceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeDeviceFleetCommand
 */
export const de_DescribeDeviceFleetCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDeviceFleetCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeDeviceFleetCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeDeviceFleetResponse(data, context);
  const response: DescribeDeviceFleetCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeDeviceFleetCommandError
 */
const de_DescribeDeviceFleetCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDeviceFleetCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeDomainCommand
 */
export const de_DescribeDomainCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDomainCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeDomainCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeDomainResponse(data, context);
  const response: DescribeDomainCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeDomainCommandError
 */
const de_DescribeDomainCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeDomainCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeEdgeDeploymentPlanCommand
 */
export const de_DescribeEdgeDeploymentPlanCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEdgeDeploymentPlanCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeEdgeDeploymentPlanCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeEdgeDeploymentPlanResponse(data, context);
  const response: DescribeEdgeDeploymentPlanCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeEdgeDeploymentPlanCommandError
 */
const de_DescribeEdgeDeploymentPlanCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEdgeDeploymentPlanCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeEdgePackagingJobCommand
 */
export const de_DescribeEdgePackagingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEdgePackagingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeEdgePackagingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeEdgePackagingJobResponse(data, context);
  const response: DescribeEdgePackagingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeEdgePackagingJobCommandError
 */
const de_DescribeEdgePackagingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEdgePackagingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeEndpointCommand
 */
export const de_DescribeEndpointCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEndpointCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeEndpointCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeEndpointOutput(data, context);
  const response: DescribeEndpointCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeEndpointCommandError
 */
const de_DescribeEndpointCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEndpointCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeEndpointConfigCommand
 */
export const de_DescribeEndpointConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEndpointConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeEndpointConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeEndpointConfigOutput(data, context);
  const response: DescribeEndpointConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeEndpointConfigCommandError
 */
const de_DescribeEndpointConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeEndpointConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeExperimentCommand
 */
export const de_DescribeExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeExperimentResponse(data, context);
  const response: DescribeExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeExperimentCommandError
 */
const de_DescribeExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeFeatureGroupCommand
 */
export const de_DescribeFeatureGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeFeatureGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeFeatureGroupCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeFeatureGroupResponse(data, context);
  const response: DescribeFeatureGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeFeatureGroupCommandError
 */
const de_DescribeFeatureGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeFeatureGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeFeatureMetadataCommand
 */
export const de_DescribeFeatureMetadataCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeFeatureMetadataCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeFeatureMetadataCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeFeatureMetadataResponse(data, context);
  const response: DescribeFeatureMetadataCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeFeatureMetadataCommandError
 */
const de_DescribeFeatureMetadataCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeFeatureMetadataCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeFlowDefinitionCommand
 */
export const de_DescribeFlowDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeFlowDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeFlowDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeFlowDefinitionResponse(data, context);
  const response: DescribeFlowDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeFlowDefinitionCommandError
 */
const de_DescribeFlowDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeFlowDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeHubCommand
 */
export const de_DescribeHubCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHubCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeHubCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeHubResponse(data, context);
  const response: DescribeHubCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeHubCommandError
 */
const de_DescribeHubCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHubCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeHubContentCommand
 */
export const de_DescribeHubContentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHubContentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeHubContentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeHubContentResponse(data, context);
  const response: DescribeHubContentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeHubContentCommandError
 */
const de_DescribeHubContentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHubContentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeHumanTaskUiCommand
 */
export const de_DescribeHumanTaskUiCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHumanTaskUiCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeHumanTaskUiCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeHumanTaskUiResponse(data, context);
  const response: DescribeHumanTaskUiCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeHumanTaskUiCommandError
 */
const de_DescribeHumanTaskUiCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHumanTaskUiCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeHyperParameterTuningJobCommand
 */
export const de_DescribeHyperParameterTuningJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHyperParameterTuningJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeHyperParameterTuningJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeHyperParameterTuningJobResponse(data, context);
  const response: DescribeHyperParameterTuningJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeHyperParameterTuningJobCommandError
 */
const de_DescribeHyperParameterTuningJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeHyperParameterTuningJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeImageCommand
 */
export const de_DescribeImageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeImageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeImageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeImageResponse(data, context);
  const response: DescribeImageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeImageCommandError
 */
const de_DescribeImageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeImageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeImageVersionCommand
 */
export const de_DescribeImageVersionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeImageVersionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeImageVersionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeImageVersionResponse(data, context);
  const response: DescribeImageVersionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeImageVersionCommandError
 */
const de_DescribeImageVersionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeImageVersionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeInferenceExperimentCommand
 */
export const de_DescribeInferenceExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeInferenceExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeInferenceExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeInferenceExperimentResponse(data, context);
  const response: DescribeInferenceExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeInferenceExperimentCommandError
 */
const de_DescribeInferenceExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeInferenceExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeInferenceRecommendationsJobCommand
 */
export const de_DescribeInferenceRecommendationsJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeInferenceRecommendationsJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeInferenceRecommendationsJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeInferenceRecommendationsJobResponse(data, context);
  const response: DescribeInferenceRecommendationsJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeInferenceRecommendationsJobCommandError
 */
const de_DescribeInferenceRecommendationsJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeInferenceRecommendationsJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeLabelingJobCommand
 */
export const de_DescribeLabelingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeLabelingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeLabelingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeLabelingJobResponse(data, context);
  const response: DescribeLabelingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeLabelingJobCommandError
 */
const de_DescribeLabelingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeLabelingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeLineageGroupCommand
 */
export const de_DescribeLineageGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeLineageGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeLineageGroupCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeLineageGroupResponse(data, context);
  const response: DescribeLineageGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeLineageGroupCommandError
 */
const de_DescribeLineageGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeLineageGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeModelCommand
 */
export const de_DescribeModelCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelOutput(data, context);
  const response: DescribeModelCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelCommandError
 */
const de_DescribeModelCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeModelBiasJobDefinitionCommand
 */
export const de_DescribeModelBiasJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelBiasJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelBiasJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelBiasJobDefinitionResponse(data, context);
  const response: DescribeModelBiasJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelBiasJobDefinitionCommandError
 */
const de_DescribeModelBiasJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelBiasJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeModelCardCommand
 */
export const de_DescribeModelCardCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelCardCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelCardCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelCardResponse(data, context);
  const response: DescribeModelCardCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelCardCommandError
 */
const de_DescribeModelCardCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelCardCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeModelCardExportJobCommand
 */
export const de_DescribeModelCardExportJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelCardExportJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelCardExportJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelCardExportJobResponse(data, context);
  const response: DescribeModelCardExportJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelCardExportJobCommandError
 */
const de_DescribeModelCardExportJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelCardExportJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeModelExplainabilityJobDefinitionCommand
 */
export const de_DescribeModelExplainabilityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelExplainabilityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelExplainabilityJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelExplainabilityJobDefinitionResponse(data, context);
  const response: DescribeModelExplainabilityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelExplainabilityJobDefinitionCommandError
 */
const de_DescribeModelExplainabilityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelExplainabilityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeModelPackageCommand
 */
export const de_DescribeModelPackageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelPackageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelPackageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelPackageOutput(data, context);
  const response: DescribeModelPackageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelPackageCommandError
 */
const de_DescribeModelPackageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelPackageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeModelPackageGroupCommand
 */
export const de_DescribeModelPackageGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelPackageGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelPackageGroupCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelPackageGroupOutput(data, context);
  const response: DescribeModelPackageGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelPackageGroupCommandError
 */
const de_DescribeModelPackageGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelPackageGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeModelQualityJobDefinitionCommand
 */
export const de_DescribeModelQualityJobDefinitionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelQualityJobDefinitionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeModelQualityJobDefinitionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeModelQualityJobDefinitionResponse(data, context);
  const response: DescribeModelQualityJobDefinitionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeModelQualityJobDefinitionCommandError
 */
const de_DescribeModelQualityJobDefinitionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeModelQualityJobDefinitionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeMonitoringScheduleCommand
 */
export const de_DescribeMonitoringScheduleCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeMonitoringScheduleCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeMonitoringScheduleCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeMonitoringScheduleResponse(data, context);
  const response: DescribeMonitoringScheduleCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeMonitoringScheduleCommandError
 */
const de_DescribeMonitoringScheduleCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeMonitoringScheduleCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeNotebookInstanceCommand
 */
export const de_DescribeNotebookInstanceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeNotebookInstanceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeNotebookInstanceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeNotebookInstanceOutput(data, context);
  const response: DescribeNotebookInstanceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeNotebookInstanceCommandError
 */
const de_DescribeNotebookInstanceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeNotebookInstanceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeNotebookInstanceLifecycleConfigCommand
 */
export const de_DescribeNotebookInstanceLifecycleConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeNotebookInstanceLifecycleConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeNotebookInstanceLifecycleConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeNotebookInstanceLifecycleConfigOutput(data, context);
  const response: DescribeNotebookInstanceLifecycleConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeNotebookInstanceLifecycleConfigCommandError
 */
const de_DescribeNotebookInstanceLifecycleConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeNotebookInstanceLifecycleConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribePipelineCommand
 */
export const de_DescribePipelineCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribePipelineCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribePipelineCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribePipelineResponse(data, context);
  const response: DescribePipelineCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribePipelineCommandError
 */
const de_DescribePipelineCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribePipelineCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribePipelineDefinitionForExecutionCommand
 */
export const de_DescribePipelineDefinitionForExecutionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribePipelineDefinitionForExecutionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribePipelineDefinitionForExecutionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribePipelineDefinitionForExecutionResponse(data, context);
  const response: DescribePipelineDefinitionForExecutionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribePipelineDefinitionForExecutionCommandError
 */
const de_DescribePipelineDefinitionForExecutionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribePipelineDefinitionForExecutionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribePipelineExecutionCommand
 */
export const de_DescribePipelineExecutionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribePipelineExecutionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribePipelineExecutionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribePipelineExecutionResponse(data, context);
  const response: DescribePipelineExecutionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribePipelineExecutionCommandError
 */
const de_DescribePipelineExecutionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribePipelineExecutionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeProcessingJobCommand
 */
export const de_DescribeProcessingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeProcessingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeProcessingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeProcessingJobResponse(data, context);
  const response: DescribeProcessingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeProcessingJobCommandError
 */
const de_DescribeProcessingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeProcessingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeProjectCommand
 */
export const de_DescribeProjectCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeProjectCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeProjectCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeProjectOutput(data, context);
  const response: DescribeProjectCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeProjectCommandError
 */
const de_DescribeProjectCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeProjectCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeSpaceCommand
 */
export const de_DescribeSpaceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeSpaceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeSpaceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeSpaceResponse(data, context);
  const response: DescribeSpaceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeSpaceCommandError
 */
const de_DescribeSpaceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeSpaceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeStudioLifecycleConfigCommand
 */
export const de_DescribeStudioLifecycleConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeStudioLifecycleConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeStudioLifecycleConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeStudioLifecycleConfigResponse(data, context);
  const response: DescribeStudioLifecycleConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeStudioLifecycleConfigCommandError
 */
const de_DescribeStudioLifecycleConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeStudioLifecycleConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeSubscribedWorkteamCommand
 */
export const de_DescribeSubscribedWorkteamCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeSubscribedWorkteamCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeSubscribedWorkteamCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeSubscribedWorkteamResponse(data, context);
  const response: DescribeSubscribedWorkteamCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeSubscribedWorkteamCommandError
 */
const de_DescribeSubscribedWorkteamCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeSubscribedWorkteamCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeTrainingJobCommand
 */
export const de_DescribeTrainingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTrainingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeTrainingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeTrainingJobResponse(data, context);
  const response: DescribeTrainingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeTrainingJobCommandError
 */
const de_DescribeTrainingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTrainingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeTransformJobCommand
 */
export const de_DescribeTransformJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTransformJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeTransformJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeTransformJobResponse(data, context);
  const response: DescribeTransformJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeTransformJobCommandError
 */
const de_DescribeTransformJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTransformJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeTrialCommand
 */
export const de_DescribeTrialCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTrialCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeTrialCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeTrialResponse(data, context);
  const response: DescribeTrialCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeTrialCommandError
 */
const de_DescribeTrialCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTrialCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeTrialComponentCommand
 */
export const de_DescribeTrialComponentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTrialComponentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeTrialComponentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeTrialComponentResponse(data, context);
  const response: DescribeTrialComponentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeTrialComponentCommandError
 */
const de_DescribeTrialComponentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeTrialComponentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeUserProfileCommand
 */
export const de_DescribeUserProfileCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeUserProfileCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeUserProfileCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeUserProfileResponse(data, context);
  const response: DescribeUserProfileCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeUserProfileCommandError
 */
const de_DescribeUserProfileCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeUserProfileCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1DescribeWorkforceCommand
 */
export const de_DescribeWorkforceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeWorkforceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeWorkforceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeWorkforceResponse(data, context);
  const response: DescribeWorkforceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeWorkforceCommandError
 */
const de_DescribeWorkforceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeWorkforceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DescribeWorkteamCommand
 */
export const de_DescribeWorkteamCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeWorkteamCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DescribeWorkteamCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DescribeWorkteamResponse(data, context);
  const response: DescribeWorkteamCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DescribeWorkteamCommandError
 */
const de_DescribeWorkteamCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DescribeWorkteamCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DisableSagemakerServicecatalogPortfolioCommand
 */
export const de_DisableSagemakerServicecatalogPortfolioCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableSagemakerServicecatalogPortfolioCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DisableSagemakerServicecatalogPortfolioCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DisableSagemakerServicecatalogPortfolioOutput(data, context);
  const response: DisableSagemakerServicecatalogPortfolioCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DisableSagemakerServicecatalogPortfolioCommandError
 */
const de_DisableSagemakerServicecatalogPortfolioCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisableSagemakerServicecatalogPortfolioCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1DisassociateTrialComponentCommand
 */
export const de_DisassociateTrialComponentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateTrialComponentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_DisassociateTrialComponentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_DisassociateTrialComponentResponse(data, context);
  const response: DisassociateTrialComponentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1DisassociateTrialComponentCommandError
 */
const de_DisassociateTrialComponentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<DisassociateTrialComponentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1EnableSagemakerServicecatalogPortfolioCommand
 */
export const de_EnableSagemakerServicecatalogPortfolioCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableSagemakerServicecatalogPortfolioCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_EnableSagemakerServicecatalogPortfolioCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_EnableSagemakerServicecatalogPortfolioOutput(data, context);
  const response: EnableSagemakerServicecatalogPortfolioCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1EnableSagemakerServicecatalogPortfolioCommandError
 */
const de_EnableSagemakerServicecatalogPortfolioCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<EnableSagemakerServicecatalogPortfolioCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1GetDeviceFleetReportCommand
 */
export const de_GetDeviceFleetReportCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetDeviceFleetReportCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_GetDeviceFleetReportCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_GetDeviceFleetReportResponse(data, context);
  const response: GetDeviceFleetReportCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1GetDeviceFleetReportCommandError
 */
const de_GetDeviceFleetReportCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetDeviceFleetReportCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1GetLineageGroupPolicyCommand
 */
export const de_GetLineageGroupPolicyCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetLineageGroupPolicyCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_GetLineageGroupPolicyCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_GetLineageGroupPolicyResponse(data, context);
  const response: GetLineageGroupPolicyCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1GetLineageGroupPolicyCommandError
 */
const de_GetLineageGroupPolicyCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetLineageGroupPolicyCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1GetModelPackageGroupPolicyCommand
 */
export const de_GetModelPackageGroupPolicyCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetModelPackageGroupPolicyCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_GetModelPackageGroupPolicyCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_GetModelPackageGroupPolicyOutput(data, context);
  const response: GetModelPackageGroupPolicyCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1GetModelPackageGroupPolicyCommandError
 */
const de_GetModelPackageGroupPolicyCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetModelPackageGroupPolicyCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1GetSagemakerServicecatalogPortfolioStatusCommand
 */
export const de_GetSagemakerServicecatalogPortfolioStatusCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetSagemakerServicecatalogPortfolioStatusCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_GetSagemakerServicecatalogPortfolioStatusCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_GetSagemakerServicecatalogPortfolioStatusOutput(data, context);
  const response: GetSagemakerServicecatalogPortfolioStatusCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1GetSagemakerServicecatalogPortfolioStatusCommandError
 */
const de_GetSagemakerServicecatalogPortfolioStatusCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetSagemakerServicecatalogPortfolioStatusCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1GetSearchSuggestionsCommand
 */
export const de_GetSearchSuggestionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetSearchSuggestionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_GetSearchSuggestionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_GetSearchSuggestionsResponse(data, context);
  const response: GetSearchSuggestionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1GetSearchSuggestionsCommandError
 */
const de_GetSearchSuggestionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<GetSearchSuggestionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ImportHubContentCommand
 */
export const de_ImportHubContentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ImportHubContentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ImportHubContentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ImportHubContentResponse(data, context);
  const response: ImportHubContentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ImportHubContentCommandError
 */
const de_ImportHubContentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ImportHubContentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListActionsCommand
 */
export const de_ListActionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListActionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListActionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListActionsResponse(data, context);
  const response: ListActionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListActionsCommandError
 */
const de_ListActionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListActionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListAlgorithmsCommand
 */
export const de_ListAlgorithmsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAlgorithmsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListAlgorithmsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListAlgorithmsOutput(data, context);
  const response: ListAlgorithmsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListAlgorithmsCommandError
 */
const de_ListAlgorithmsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAlgorithmsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListAliasesCommand
 */
export const de_ListAliasesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAliasesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListAliasesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListAliasesResponse(data, context);
  const response: ListAliasesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListAliasesCommandError
 */
const de_ListAliasesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAliasesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListAppImageConfigsCommand
 */
export const de_ListAppImageConfigsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAppImageConfigsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListAppImageConfigsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListAppImageConfigsResponse(data, context);
  const response: ListAppImageConfigsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListAppImageConfigsCommandError
 */
const de_ListAppImageConfigsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAppImageConfigsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListAppsCommand
 */
export const de_ListAppsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAppsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListAppsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListAppsResponse(data, context);
  const response: ListAppsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListAppsCommandError
 */
const de_ListAppsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAppsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListArtifactsCommand
 */
export const de_ListArtifactsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListArtifactsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListArtifactsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListArtifactsResponse(data, context);
  const response: ListArtifactsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListArtifactsCommandError
 */
const de_ListArtifactsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListArtifactsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListAssociationsCommand
 */
export const de_ListAssociationsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAssociationsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListAssociationsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListAssociationsResponse(data, context);
  const response: ListAssociationsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListAssociationsCommandError
 */
const de_ListAssociationsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAssociationsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListAutoMLJobsCommand
 */
export const de_ListAutoMLJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAutoMLJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListAutoMLJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListAutoMLJobsResponse(data, context);
  const response: ListAutoMLJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListAutoMLJobsCommandError
 */
const de_ListAutoMLJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListAutoMLJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListCandidatesForAutoMLJobCommand
 */
export const de_ListCandidatesForAutoMLJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListCandidatesForAutoMLJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListCandidatesForAutoMLJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListCandidatesForAutoMLJobResponse(data, context);
  const response: ListCandidatesForAutoMLJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListCandidatesForAutoMLJobCommandError
 */
const de_ListCandidatesForAutoMLJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListCandidatesForAutoMLJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListCodeRepositoriesCommand
 */
export const de_ListCodeRepositoriesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListCodeRepositoriesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListCodeRepositoriesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListCodeRepositoriesOutput(data, context);
  const response: ListCodeRepositoriesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListCodeRepositoriesCommandError
 */
const de_ListCodeRepositoriesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListCodeRepositoriesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListCompilationJobsCommand
 */
export const de_ListCompilationJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListCompilationJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListCompilationJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListCompilationJobsResponse(data, context);
  const response: ListCompilationJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListCompilationJobsCommandError
 */
const de_ListCompilationJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListCompilationJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListContextsCommand
 */
export const de_ListContextsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListContextsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListContextsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListContextsResponse(data, context);
  const response: ListContextsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListContextsCommandError
 */
const de_ListContextsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListContextsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListDataQualityJobDefinitionsCommand
 */
export const de_ListDataQualityJobDefinitionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDataQualityJobDefinitionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListDataQualityJobDefinitionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListDataQualityJobDefinitionsResponse(data, context);
  const response: ListDataQualityJobDefinitionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListDataQualityJobDefinitionsCommandError
 */
const de_ListDataQualityJobDefinitionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDataQualityJobDefinitionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListDeviceFleetsCommand
 */
export const de_ListDeviceFleetsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDeviceFleetsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListDeviceFleetsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListDeviceFleetsResponse(data, context);
  const response: ListDeviceFleetsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListDeviceFleetsCommandError
 */
const de_ListDeviceFleetsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDeviceFleetsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListDevicesCommand
 */
export const de_ListDevicesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDevicesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListDevicesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListDevicesResponse(data, context);
  const response: ListDevicesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListDevicesCommandError
 */
const de_ListDevicesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDevicesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListDomainsCommand
 */
export const de_ListDomainsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDomainsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListDomainsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListDomainsResponse(data, context);
  const response: ListDomainsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListDomainsCommandError
 */
const de_ListDomainsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListDomainsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListEdgeDeploymentPlansCommand
 */
export const de_ListEdgeDeploymentPlansCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEdgeDeploymentPlansCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListEdgeDeploymentPlansCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListEdgeDeploymentPlansResponse(data, context);
  const response: ListEdgeDeploymentPlansCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListEdgeDeploymentPlansCommandError
 */
const de_ListEdgeDeploymentPlansCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEdgeDeploymentPlansCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListEdgePackagingJobsCommand
 */
export const de_ListEdgePackagingJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEdgePackagingJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListEdgePackagingJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListEdgePackagingJobsResponse(data, context);
  const response: ListEdgePackagingJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListEdgePackagingJobsCommandError
 */
const de_ListEdgePackagingJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEdgePackagingJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListEndpointConfigsCommand
 */
export const de_ListEndpointConfigsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEndpointConfigsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListEndpointConfigsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListEndpointConfigsOutput(data, context);
  const response: ListEndpointConfigsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListEndpointConfigsCommandError
 */
const de_ListEndpointConfigsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEndpointConfigsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListEndpointsCommand
 */
export const de_ListEndpointsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEndpointsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListEndpointsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListEndpointsOutput(data, context);
  const response: ListEndpointsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListEndpointsCommandError
 */
const de_ListEndpointsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListEndpointsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListExperimentsCommand
 */
export const de_ListExperimentsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListExperimentsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListExperimentsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListExperimentsResponse(data, context);
  const response: ListExperimentsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListExperimentsCommandError
 */
const de_ListExperimentsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListExperimentsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListFeatureGroupsCommand
 */
export const de_ListFeatureGroupsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListFeatureGroupsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListFeatureGroupsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListFeatureGroupsResponse(data, context);
  const response: ListFeatureGroupsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListFeatureGroupsCommandError
 */
const de_ListFeatureGroupsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListFeatureGroupsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListFlowDefinitionsCommand
 */
export const de_ListFlowDefinitionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListFlowDefinitionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListFlowDefinitionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListFlowDefinitionsResponse(data, context);
  const response: ListFlowDefinitionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListFlowDefinitionsCommandError
 */
const de_ListFlowDefinitionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListFlowDefinitionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListHubContentsCommand
 */
export const de_ListHubContentsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHubContentsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListHubContentsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListHubContentsResponse(data, context);
  const response: ListHubContentsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListHubContentsCommandError
 */
const de_ListHubContentsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHubContentsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListHubContentVersionsCommand
 */
export const de_ListHubContentVersionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHubContentVersionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListHubContentVersionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListHubContentVersionsResponse(data, context);
  const response: ListHubContentVersionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListHubContentVersionsCommandError
 */
const de_ListHubContentVersionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHubContentVersionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListHubsCommand
 */
export const de_ListHubsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHubsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListHubsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListHubsResponse(data, context);
  const response: ListHubsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListHubsCommandError
 */
const de_ListHubsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHubsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListHumanTaskUisCommand
 */
export const de_ListHumanTaskUisCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHumanTaskUisCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListHumanTaskUisCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListHumanTaskUisResponse(data, context);
  const response: ListHumanTaskUisCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListHumanTaskUisCommandError
 */
const de_ListHumanTaskUisCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHumanTaskUisCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListHyperParameterTuningJobsCommand
 */
export const de_ListHyperParameterTuningJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHyperParameterTuningJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListHyperParameterTuningJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListHyperParameterTuningJobsResponse(data, context);
  const response: ListHyperParameterTuningJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListHyperParameterTuningJobsCommandError
 */
const de_ListHyperParameterTuningJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListHyperParameterTuningJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListImagesCommand
 */
export const de_ListImagesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListImagesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListImagesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListImagesResponse(data, context);
  const response: ListImagesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListImagesCommandError
 */
const de_ListImagesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListImagesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListImageVersionsCommand
 */
export const de_ListImageVersionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListImageVersionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListImageVersionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListImageVersionsResponse(data, context);
  const response: ListImageVersionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListImageVersionsCommandError
 */
const de_ListImageVersionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListImageVersionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListInferenceExperimentsCommand
 */
export const de_ListInferenceExperimentsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInferenceExperimentsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListInferenceExperimentsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListInferenceExperimentsResponse(data, context);
  const response: ListInferenceExperimentsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListInferenceExperimentsCommandError
 */
const de_ListInferenceExperimentsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInferenceExperimentsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListInferenceRecommendationsJobsCommand
 */
export const de_ListInferenceRecommendationsJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInferenceRecommendationsJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListInferenceRecommendationsJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListInferenceRecommendationsJobsResponse(data, context);
  const response: ListInferenceRecommendationsJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListInferenceRecommendationsJobsCommandError
 */
const de_ListInferenceRecommendationsJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInferenceRecommendationsJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListInferenceRecommendationsJobStepsCommand
 */
export const de_ListInferenceRecommendationsJobStepsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInferenceRecommendationsJobStepsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListInferenceRecommendationsJobStepsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListInferenceRecommendationsJobStepsResponse(data, context);
  const response: ListInferenceRecommendationsJobStepsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListInferenceRecommendationsJobStepsCommandError
 */
const de_ListInferenceRecommendationsJobStepsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListInferenceRecommendationsJobStepsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListLabelingJobsCommand
 */
export const de_ListLabelingJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListLabelingJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListLabelingJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListLabelingJobsResponse(data, context);
  const response: ListLabelingJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListLabelingJobsCommandError
 */
const de_ListLabelingJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListLabelingJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListLabelingJobsForWorkteamCommand
 */
export const de_ListLabelingJobsForWorkteamCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListLabelingJobsForWorkteamCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListLabelingJobsForWorkteamCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListLabelingJobsForWorkteamResponse(data, context);
  const response: ListLabelingJobsForWorkteamCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListLabelingJobsForWorkteamCommandError
 */
const de_ListLabelingJobsForWorkteamCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListLabelingJobsForWorkteamCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListLineageGroupsCommand
 */
export const de_ListLineageGroupsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListLineageGroupsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListLineageGroupsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListLineageGroupsResponse(data, context);
  const response: ListLineageGroupsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListLineageGroupsCommandError
 */
const de_ListLineageGroupsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListLineageGroupsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelBiasJobDefinitionsCommand
 */
export const de_ListModelBiasJobDefinitionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelBiasJobDefinitionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelBiasJobDefinitionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelBiasJobDefinitionsResponse(data, context);
  const response: ListModelBiasJobDefinitionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelBiasJobDefinitionsCommandError
 */
const de_ListModelBiasJobDefinitionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelBiasJobDefinitionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelCardExportJobsCommand
 */
export const de_ListModelCardExportJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelCardExportJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelCardExportJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelCardExportJobsResponse(data, context);
  const response: ListModelCardExportJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelCardExportJobsCommandError
 */
const de_ListModelCardExportJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelCardExportJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelCardsCommand
 */
export const de_ListModelCardsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelCardsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelCardsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelCardsResponse(data, context);
  const response: ListModelCardsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelCardsCommandError
 */
const de_ListModelCardsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelCardsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelCardVersionsCommand
 */
export const de_ListModelCardVersionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelCardVersionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelCardVersionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelCardVersionsResponse(data, context);
  const response: ListModelCardVersionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelCardVersionsCommandError
 */
const de_ListModelCardVersionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelCardVersionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListModelExplainabilityJobDefinitionsCommand
 */
export const de_ListModelExplainabilityJobDefinitionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelExplainabilityJobDefinitionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelExplainabilityJobDefinitionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelExplainabilityJobDefinitionsResponse(data, context);
  const response: ListModelExplainabilityJobDefinitionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelExplainabilityJobDefinitionsCommandError
 */
const de_ListModelExplainabilityJobDefinitionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelExplainabilityJobDefinitionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelMetadataCommand
 */
export const de_ListModelMetadataCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelMetadataCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelMetadataCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelMetadataResponse(data, context);
  const response: ListModelMetadataCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelMetadataCommandError
 */
const de_ListModelMetadataCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelMetadataCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelPackageGroupsCommand
 */
export const de_ListModelPackageGroupsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelPackageGroupsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelPackageGroupsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelPackageGroupsOutput(data, context);
  const response: ListModelPackageGroupsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelPackageGroupsCommandError
 */
const de_ListModelPackageGroupsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelPackageGroupsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelPackagesCommand
 */
export const de_ListModelPackagesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelPackagesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelPackagesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelPackagesOutput(data, context);
  const response: ListModelPackagesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelPackagesCommandError
 */
const de_ListModelPackagesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelPackagesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelQualityJobDefinitionsCommand
 */
export const de_ListModelQualityJobDefinitionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelQualityJobDefinitionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelQualityJobDefinitionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelQualityJobDefinitionsResponse(data, context);
  const response: ListModelQualityJobDefinitionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelQualityJobDefinitionsCommandError
 */
const de_ListModelQualityJobDefinitionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelQualityJobDefinitionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListModelsCommand
 */
export const de_ListModelsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListModelsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListModelsOutput(data, context);
  const response: ListModelsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListModelsCommandError
 */
const de_ListModelsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListModelsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListMonitoringAlertHistoryCommand
 */
export const de_ListMonitoringAlertHistoryCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringAlertHistoryCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListMonitoringAlertHistoryCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListMonitoringAlertHistoryResponse(data, context);
  const response: ListMonitoringAlertHistoryCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListMonitoringAlertHistoryCommandError
 */
const de_ListMonitoringAlertHistoryCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringAlertHistoryCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListMonitoringAlertsCommand
 */
export const de_ListMonitoringAlertsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringAlertsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListMonitoringAlertsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListMonitoringAlertsResponse(data, context);
  const response: ListMonitoringAlertsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListMonitoringAlertsCommandError
 */
const de_ListMonitoringAlertsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringAlertsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListMonitoringExecutionsCommand
 */
export const de_ListMonitoringExecutionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringExecutionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListMonitoringExecutionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListMonitoringExecutionsResponse(data, context);
  const response: ListMonitoringExecutionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListMonitoringExecutionsCommandError
 */
const de_ListMonitoringExecutionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringExecutionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListMonitoringSchedulesCommand
 */
export const de_ListMonitoringSchedulesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringSchedulesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListMonitoringSchedulesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListMonitoringSchedulesResponse(data, context);
  const response: ListMonitoringSchedulesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListMonitoringSchedulesCommandError
 */
const de_ListMonitoringSchedulesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListMonitoringSchedulesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListNotebookInstanceLifecycleConfigsCommand
 */
export const de_ListNotebookInstanceLifecycleConfigsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListNotebookInstanceLifecycleConfigsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListNotebookInstanceLifecycleConfigsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListNotebookInstanceLifecycleConfigsOutput(data, context);
  const response: ListNotebookInstanceLifecycleConfigsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListNotebookInstanceLifecycleConfigsCommandError
 */
const de_ListNotebookInstanceLifecycleConfigsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListNotebookInstanceLifecycleConfigsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListNotebookInstancesCommand
 */
export const de_ListNotebookInstancesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListNotebookInstancesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListNotebookInstancesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListNotebookInstancesOutput(data, context);
  const response: ListNotebookInstancesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListNotebookInstancesCommandError
 */
const de_ListNotebookInstancesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListNotebookInstancesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListPipelineExecutionsCommand
 */
export const de_ListPipelineExecutionsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelineExecutionsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListPipelineExecutionsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListPipelineExecutionsResponse(data, context);
  const response: ListPipelineExecutionsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListPipelineExecutionsCommandError
 */
const de_ListPipelineExecutionsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelineExecutionsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListPipelineExecutionStepsCommand
 */
export const de_ListPipelineExecutionStepsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelineExecutionStepsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListPipelineExecutionStepsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListPipelineExecutionStepsResponse(data, context);
  const response: ListPipelineExecutionStepsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListPipelineExecutionStepsCommandError
 */
const de_ListPipelineExecutionStepsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelineExecutionStepsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListPipelineParametersForExecutionCommand
 */
export const de_ListPipelineParametersForExecutionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelineParametersForExecutionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListPipelineParametersForExecutionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListPipelineParametersForExecutionResponse(data, context);
  const response: ListPipelineParametersForExecutionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListPipelineParametersForExecutionCommandError
 */
const de_ListPipelineParametersForExecutionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelineParametersForExecutionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListPipelinesCommand
 */
export const de_ListPipelinesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelinesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListPipelinesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListPipelinesResponse(data, context);
  const response: ListPipelinesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListPipelinesCommandError
 */
const de_ListPipelinesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListPipelinesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListProcessingJobsCommand
 */
export const de_ListProcessingJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListProcessingJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListProcessingJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListProcessingJobsResponse(data, context);
  const response: ListProcessingJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListProcessingJobsCommandError
 */
const de_ListProcessingJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListProcessingJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListProjectsCommand
 */
export const de_ListProjectsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListProjectsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListProjectsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListProjectsOutput(data, context);
  const response: ListProjectsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListProjectsCommandError
 */
const de_ListProjectsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListProjectsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListSpacesCommand
 */
export const de_ListSpacesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListSpacesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListSpacesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListSpacesResponse(data, context);
  const response: ListSpacesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListSpacesCommandError
 */
const de_ListSpacesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListSpacesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListStageDevicesCommand
 */
export const de_ListStageDevicesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListStageDevicesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListStageDevicesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListStageDevicesResponse(data, context);
  const response: ListStageDevicesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListStageDevicesCommandError
 */
const de_ListStageDevicesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListStageDevicesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListStudioLifecycleConfigsCommand
 */
export const de_ListStudioLifecycleConfigsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListStudioLifecycleConfigsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListStudioLifecycleConfigsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListStudioLifecycleConfigsResponse(data, context);
  const response: ListStudioLifecycleConfigsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListStudioLifecycleConfigsCommandError
 */
const de_ListStudioLifecycleConfigsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListStudioLifecycleConfigsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListSubscribedWorkteamsCommand
 */
export const de_ListSubscribedWorkteamsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListSubscribedWorkteamsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListSubscribedWorkteamsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListSubscribedWorkteamsResponse(data, context);
  const response: ListSubscribedWorkteamsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListSubscribedWorkteamsCommandError
 */
const de_ListSubscribedWorkteamsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListSubscribedWorkteamsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListTagsCommand
 */
export const de_ListTagsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTagsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListTagsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListTagsOutput(data, context);
  const response: ListTagsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListTagsCommandError
 */
const de_ListTagsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTagsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListTrainingJobsCommand
 */
export const de_ListTrainingJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrainingJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListTrainingJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListTrainingJobsResponse(data, context);
  const response: ListTrainingJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListTrainingJobsCommandError
 */
const de_ListTrainingJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrainingJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListTrainingJobsForHyperParameterTuningJobCommand
 */
export const de_ListTrainingJobsForHyperParameterTuningJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrainingJobsForHyperParameterTuningJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListTrainingJobsForHyperParameterTuningJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListTrainingJobsForHyperParameterTuningJobResponse(data, context);
  const response: ListTrainingJobsForHyperParameterTuningJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListTrainingJobsForHyperParameterTuningJobCommandError
 */
const de_ListTrainingJobsForHyperParameterTuningJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrainingJobsForHyperParameterTuningJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListTransformJobsCommand
 */
export const de_ListTransformJobsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTransformJobsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListTransformJobsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListTransformJobsResponse(data, context);
  const response: ListTransformJobsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListTransformJobsCommandError
 */
const de_ListTransformJobsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTransformJobsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListTrialComponentsCommand
 */
export const de_ListTrialComponentsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrialComponentsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListTrialComponentsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListTrialComponentsResponse(data, context);
  const response: ListTrialComponentsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListTrialComponentsCommandError
 */
const de_ListTrialComponentsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrialComponentsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListTrialsCommand
 */
export const de_ListTrialsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrialsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListTrialsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListTrialsResponse(data, context);
  const response: ListTrialsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListTrialsCommandError
 */
const de_ListTrialsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListTrialsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ListUserProfilesCommand
 */
export const de_ListUserProfilesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListUserProfilesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListUserProfilesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListUserProfilesResponse(data, context);
  const response: ListUserProfilesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListUserProfilesCommandError
 */
const de_ListUserProfilesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListUserProfilesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListWorkforcesCommand
 */
export const de_ListWorkforcesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListWorkforcesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListWorkforcesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListWorkforcesResponse(data, context);
  const response: ListWorkforcesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListWorkforcesCommandError
 */
const de_ListWorkforcesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListWorkforcesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1ListWorkteamsCommand
 */
export const de_ListWorkteamsCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListWorkteamsCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_ListWorkteamsCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_ListWorkteamsResponse(data, context);
  const response: ListWorkteamsCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1ListWorkteamsCommandError
 */
const de_ListWorkteamsCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<ListWorkteamsCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1PutModelPackageGroupPolicyCommand
 */
export const de_PutModelPackageGroupPolicyCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<PutModelPackageGroupPolicyCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_PutModelPackageGroupPolicyCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_PutModelPackageGroupPolicyOutput(data, context);
  const response: PutModelPackageGroupPolicyCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1PutModelPackageGroupPolicyCommandError
 */
const de_PutModelPackageGroupPolicyCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<PutModelPackageGroupPolicyCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1QueryLineageCommand
 */
export const de_QueryLineageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<QueryLineageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_QueryLineageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_QueryLineageResponse(data, context);
  const response: QueryLineageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1QueryLineageCommandError
 */
const de_QueryLineageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<QueryLineageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1RegisterDevicesCommand
 */
export const de_RegisterDevicesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<RegisterDevicesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_RegisterDevicesCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: RegisterDevicesCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1RegisterDevicesCommandError
 */
const de_RegisterDevicesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<RegisterDevicesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1RenderUiTemplateCommand
 */
export const de_RenderUiTemplateCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<RenderUiTemplateCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_RenderUiTemplateCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_RenderUiTemplateResponse(data, context);
  const response: RenderUiTemplateCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1RenderUiTemplateCommandError
 */
const de_RenderUiTemplateCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<RenderUiTemplateCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1RetryPipelineExecutionCommand
 */
export const de_RetryPipelineExecutionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<RetryPipelineExecutionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_RetryPipelineExecutionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_RetryPipelineExecutionResponse(data, context);
  const response: RetryPipelineExecutionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1RetryPipelineExecutionCommandError
 */
const de_RetryPipelineExecutionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<RetryPipelineExecutionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1SearchCommand
 */
export const de_SearchCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<SearchCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_SearchCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_SearchResponse(data, context);
  const response: SearchCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1SearchCommandError
 */
const de_SearchCommandError = async (output: __HttpResponse, context: __SerdeContext): Promise<SearchCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1SendPipelineExecutionStepFailureCommand
 */
export const de_SendPipelineExecutionStepFailureCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<SendPipelineExecutionStepFailureCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_SendPipelineExecutionStepFailureCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_SendPipelineExecutionStepFailureResponse(data, context);
  const response: SendPipelineExecutionStepFailureCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1SendPipelineExecutionStepFailureCommandError
 */
const de_SendPipelineExecutionStepFailureCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<SendPipelineExecutionStepFailureCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1SendPipelineExecutionStepSuccessCommand
 */
export const de_SendPipelineExecutionStepSuccessCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<SendPipelineExecutionStepSuccessCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_SendPipelineExecutionStepSuccessCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_SendPipelineExecutionStepSuccessResponse(data, context);
  const response: SendPipelineExecutionStepSuccessCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1SendPipelineExecutionStepSuccessCommandError
 */
const de_SendPipelineExecutionStepSuccessCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<SendPipelineExecutionStepSuccessCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StartEdgeDeploymentStageCommand
 */
export const de_StartEdgeDeploymentStageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartEdgeDeploymentStageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StartEdgeDeploymentStageCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StartEdgeDeploymentStageCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StartEdgeDeploymentStageCommandError
 */
const de_StartEdgeDeploymentStageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartEdgeDeploymentStageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1StartInferenceExperimentCommand
 */
export const de_StartInferenceExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartInferenceExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StartInferenceExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_StartInferenceExperimentResponse(data, context);
  const response: StartInferenceExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StartInferenceExperimentCommandError
 */
const de_StartInferenceExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartInferenceExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StartMonitoringScheduleCommand
 */
export const de_StartMonitoringScheduleCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartMonitoringScheduleCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StartMonitoringScheduleCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StartMonitoringScheduleCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StartMonitoringScheduleCommandError
 */
const de_StartMonitoringScheduleCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartMonitoringScheduleCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StartNotebookInstanceCommand
 */
export const de_StartNotebookInstanceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartNotebookInstanceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StartNotebookInstanceCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StartNotebookInstanceCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StartNotebookInstanceCommandError
 */
const de_StartNotebookInstanceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartNotebookInstanceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StartPipelineExecutionCommand
 */
export const de_StartPipelineExecutionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartPipelineExecutionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StartPipelineExecutionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_StartPipelineExecutionResponse(data, context);
  const response: StartPipelineExecutionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StartPipelineExecutionCommandError
 */
const de_StartPipelineExecutionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StartPipelineExecutionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopAutoMLJobCommand
 */
export const de_StopAutoMLJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopAutoMLJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopAutoMLJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopAutoMLJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopAutoMLJobCommandError
 */
const de_StopAutoMLJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopAutoMLJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopCompilationJobCommand
 */
export const de_StopCompilationJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopCompilationJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopCompilationJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopCompilationJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopCompilationJobCommandError
 */
const de_StopCompilationJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopCompilationJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopEdgeDeploymentStageCommand
 */
export const de_StopEdgeDeploymentStageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopEdgeDeploymentStageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopEdgeDeploymentStageCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopEdgeDeploymentStageCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopEdgeDeploymentStageCommandError
 */
const de_StopEdgeDeploymentStageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopEdgeDeploymentStageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1StopEdgePackagingJobCommand
 */
export const de_StopEdgePackagingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopEdgePackagingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopEdgePackagingJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopEdgePackagingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopEdgePackagingJobCommandError
 */
const de_StopEdgePackagingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopEdgePackagingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1StopHyperParameterTuningJobCommand
 */
export const de_StopHyperParameterTuningJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopHyperParameterTuningJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopHyperParameterTuningJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopHyperParameterTuningJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopHyperParameterTuningJobCommandError
 */
const de_StopHyperParameterTuningJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopHyperParameterTuningJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopInferenceExperimentCommand
 */
export const de_StopInferenceExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopInferenceExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopInferenceExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_StopInferenceExperimentResponse(data, context);
  const response: StopInferenceExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopInferenceExperimentCommandError
 */
const de_StopInferenceExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopInferenceExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopInferenceRecommendationsJobCommand
 */
export const de_StopInferenceRecommendationsJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopInferenceRecommendationsJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopInferenceRecommendationsJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopInferenceRecommendationsJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopInferenceRecommendationsJobCommandError
 */
const de_StopInferenceRecommendationsJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopInferenceRecommendationsJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopLabelingJobCommand
 */
export const de_StopLabelingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopLabelingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopLabelingJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopLabelingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopLabelingJobCommandError
 */
const de_StopLabelingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopLabelingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopMonitoringScheduleCommand
 */
export const de_StopMonitoringScheduleCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopMonitoringScheduleCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopMonitoringScheduleCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopMonitoringScheduleCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopMonitoringScheduleCommandError
 */
const de_StopMonitoringScheduleCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopMonitoringScheduleCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopNotebookInstanceCommand
 */
export const de_StopNotebookInstanceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopNotebookInstanceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopNotebookInstanceCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopNotebookInstanceCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopNotebookInstanceCommandError
 */
const de_StopNotebookInstanceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopNotebookInstanceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1StopPipelineExecutionCommand
 */
export const de_StopPipelineExecutionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopPipelineExecutionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopPipelineExecutionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_StopPipelineExecutionResponse(data, context);
  const response: StopPipelineExecutionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopPipelineExecutionCommandError
 */
const de_StopPipelineExecutionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopPipelineExecutionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopProcessingJobCommand
 */
export const de_StopProcessingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopProcessingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopProcessingJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopProcessingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopProcessingJobCommandError
 */
const de_StopProcessingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopProcessingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopTrainingJobCommand
 */
export const de_StopTrainingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopTrainingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopTrainingJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopTrainingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopTrainingJobCommandError
 */
const de_StopTrainingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopTrainingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1StopTransformJobCommand
 */
export const de_StopTransformJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopTransformJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_StopTransformJobCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: StopTransformJobCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1StopTransformJobCommandError
 */
const de_StopTransformJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<StopTransformJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateActionCommand
 */
export const de_UpdateActionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateActionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateActionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateActionResponse(data, context);
  const response: UpdateActionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateActionCommandError
 */
const de_UpdateActionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateActionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateAppImageConfigCommand
 */
export const de_UpdateAppImageConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateAppImageConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateAppImageConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateAppImageConfigResponse(data, context);
  const response: UpdateAppImageConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateAppImageConfigCommandError
 */
const de_UpdateAppImageConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateAppImageConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateArtifactCommand
 */
export const de_UpdateArtifactCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateArtifactCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateArtifactCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateArtifactResponse(data, context);
  const response: UpdateArtifactCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateArtifactCommandError
 */
const de_UpdateArtifactCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateArtifactCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateCodeRepositoryCommand
 */
export const de_UpdateCodeRepositoryCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateCodeRepositoryCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateCodeRepositoryCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateCodeRepositoryOutput(data, context);
  const response: UpdateCodeRepositoryCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateCodeRepositoryCommandError
 */
const de_UpdateCodeRepositoryCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateCodeRepositoryCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1UpdateContextCommand
 */
export const de_UpdateContextCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateContextCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateContextCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateContextResponse(data, context);
  const response: UpdateContextCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateContextCommandError
 */
const de_UpdateContextCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateContextCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateDeviceFleetCommand
 */
export const de_UpdateDeviceFleetCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateDeviceFleetCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateDeviceFleetCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: UpdateDeviceFleetCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateDeviceFleetCommandError
 */
const de_UpdateDeviceFleetCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateDeviceFleetCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateDevicesCommand
 */
export const de_UpdateDevicesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateDevicesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateDevicesCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: UpdateDevicesCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateDevicesCommandError
 */
const de_UpdateDevicesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateDevicesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1UpdateDomainCommand
 */
export const de_UpdateDomainCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateDomainCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateDomainCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateDomainResponse(data, context);
  const response: UpdateDomainCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateDomainCommandError
 */
const de_UpdateDomainCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateDomainCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateEndpointCommand
 */
export const de_UpdateEndpointCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateEndpointCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateEndpointCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateEndpointOutput(data, context);
  const response: UpdateEndpointCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateEndpointCommandError
 */
const de_UpdateEndpointCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateEndpointCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateEndpointWeightsAndCapacitiesCommand
 */
export const de_UpdateEndpointWeightsAndCapacitiesCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateEndpointWeightsAndCapacitiesCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateEndpointWeightsAndCapacitiesCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateEndpointWeightsAndCapacitiesOutput(data, context);
  const response: UpdateEndpointWeightsAndCapacitiesCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateEndpointWeightsAndCapacitiesCommandError
 */
const de_UpdateEndpointWeightsAndCapacitiesCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateEndpointWeightsAndCapacitiesCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateExperimentCommand
 */
export const de_UpdateExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateExperimentResponse(data, context);
  const response: UpdateExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateExperimentCommandError
 */
const de_UpdateExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateFeatureGroupCommand
 */
export const de_UpdateFeatureGroupCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFeatureGroupCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateFeatureGroupCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateFeatureGroupResponse(data, context);
  const response: UpdateFeatureGroupCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateFeatureGroupCommandError
 */
const de_UpdateFeatureGroupCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFeatureGroupCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateFeatureMetadataCommand
 */
export const de_UpdateFeatureMetadataCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFeatureMetadataCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateFeatureMetadataCommandError(output, context);
  }
  await collectBody(output.body, context);
  const response: UpdateFeatureMetadataCommandOutput = {
    $metadata: deserializeMetadata(output),
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateFeatureMetadataCommandError
 */
const de_UpdateFeatureMetadataCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateFeatureMetadataCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateHubCommand
 */
export const de_UpdateHubCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateHubCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateHubCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateHubResponse(data, context);
  const response: UpdateHubCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateHubCommandError
 */
const de_UpdateHubCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateHubCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateImageCommand
 */
export const de_UpdateImageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateImageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateImageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateImageResponse(data, context);
  const response: UpdateImageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateImageCommandError
 */
const de_UpdateImageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateImageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateImageVersionCommand
 */
export const de_UpdateImageVersionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateImageVersionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateImageVersionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateImageVersionResponse(data, context);
  const response: UpdateImageVersionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateImageVersionCommandError
 */
const de_UpdateImageVersionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateImageVersionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateInferenceExperimentCommand
 */
export const de_UpdateInferenceExperimentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateInferenceExperimentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateInferenceExperimentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateInferenceExperimentResponse(data, context);
  const response: UpdateInferenceExperimentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateInferenceExperimentCommandError
 */
const de_UpdateInferenceExperimentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateInferenceExperimentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateModelCardCommand
 */
export const de_UpdateModelCardCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateModelCardCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateModelCardCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateModelCardResponse(data, context);
  const response: UpdateModelCardCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateModelCardCommandError
 */
const de_UpdateModelCardCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateModelCardCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateModelPackageCommand
 */
export const de_UpdateModelPackageCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateModelPackageCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateModelPackageCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateModelPackageOutput(data, context);
  const response: UpdateModelPackageCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateModelPackageCommandError
 */
const de_UpdateModelPackageCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateModelPackageCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1UpdateMonitoringAlertCommand
 */
export const de_UpdateMonitoringAlertCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateMonitoringAlertCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateMonitoringAlertCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateMonitoringAlertResponse(data, context);
  const response: UpdateMonitoringAlertCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateMonitoringAlertCommandError
 */
const de_UpdateMonitoringAlertCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateMonitoringAlertCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateMonitoringScheduleCommand
 */
export const de_UpdateMonitoringScheduleCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateMonitoringScheduleCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateMonitoringScheduleCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateMonitoringScheduleResponse(data, context);
  const response: UpdateMonitoringScheduleCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateMonitoringScheduleCommandError
 */
const de_UpdateMonitoringScheduleCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateMonitoringScheduleCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateNotebookInstanceCommand
 */
export const de_UpdateNotebookInstanceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateNotebookInstanceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateNotebookInstanceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateNotebookInstanceOutput(data, context);
  const response: UpdateNotebookInstanceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateNotebookInstanceCommandError
 */
const de_UpdateNotebookInstanceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateNotebookInstanceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateNotebookInstanceLifecycleConfigCommand
 */
export const de_UpdateNotebookInstanceLifecycleConfigCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateNotebookInstanceLifecycleConfigCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateNotebookInstanceLifecycleConfigCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateNotebookInstanceLifecycleConfigOutput(data, context);
  const response: UpdateNotebookInstanceLifecycleConfigCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateNotebookInstanceLifecycleConfigCommandError
 */
const de_UpdateNotebookInstanceLifecycleConfigCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateNotebookInstanceLifecycleConfigCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdatePipelineCommand
 */
export const de_UpdatePipelineCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdatePipelineCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdatePipelineCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdatePipelineResponse(data, context);
  const response: UpdatePipelineCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdatePipelineCommandError
 */
const de_UpdatePipelineCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdatePipelineCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdatePipelineExecutionCommand
 */
export const de_UpdatePipelineExecutionCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdatePipelineExecutionCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdatePipelineExecutionCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdatePipelineExecutionResponse(data, context);
  const response: UpdatePipelineExecutionCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdatePipelineExecutionCommandError
 */
const de_UpdatePipelineExecutionCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdatePipelineExecutionCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateProjectCommand
 */
export const de_UpdateProjectCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateProjectCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateProjectCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateProjectOutput(data, context);
  const response: UpdateProjectCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateProjectCommandError
 */
const de_UpdateProjectCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateProjectCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  const parsedBody = parsedOutput.body;
  throwDefaultError({
    output,
    parsedBody,
    exceptionCtor: __BaseException,
    errorCode,
  });
};

/**
 * deserializeAws_json1_1UpdateSpaceCommand
 */
export const de_UpdateSpaceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateSpaceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateSpaceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateSpaceResponse(data, context);
  const response: UpdateSpaceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateSpaceCommandError
 */
const de_UpdateSpaceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateSpaceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateTrainingJobCommand
 */
export const de_UpdateTrainingJobCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateTrainingJobCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateTrainingJobCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateTrainingJobResponse(data, context);
  const response: UpdateTrainingJobCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateTrainingJobCommandError
 */
const de_UpdateTrainingJobCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateTrainingJobCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateTrialCommand
 */
export const de_UpdateTrialCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateTrialCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateTrialCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateTrialResponse(data, context);
  const response: UpdateTrialCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateTrialCommandError
 */
const de_UpdateTrialCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateTrialCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateTrialComponentCommand
 */
export const de_UpdateTrialComponentCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateTrialComponentCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateTrialComponentCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateTrialComponentResponse(data, context);
  const response: UpdateTrialComponentCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateTrialComponentCommandError
 */
const de_UpdateTrialComponentCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateTrialComponentCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateUserProfileCommand
 */
export const de_UpdateUserProfileCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateUserProfileCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateUserProfileCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateUserProfileResponse(data, context);
  const response: UpdateUserProfileCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateUserProfileCommandError
 */
const de_UpdateUserProfileCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateUserProfileCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceInUse":
    case "com.amazonaws.sagemaker#ResourceInUse":
      throw await de_ResourceInUseRes(parsedOutput, context);
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    case "ResourceNotFound":
    case "com.amazonaws.sagemaker#ResourceNotFound":
      throw await de_ResourceNotFoundRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateWorkforceCommand
 */
export const de_UpdateWorkforceCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateWorkforceCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateWorkforceCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateWorkforceResponse(data, context);
  const response: UpdateWorkforceCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateWorkforceCommandError
 */
const de_UpdateWorkforceCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateWorkforceCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ConflictException":
    case "com.amazonaws.sagemaker#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1UpdateWorkteamCommand
 */
export const de_UpdateWorkteamCommand = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateWorkteamCommandOutput> => {
  if (output.statusCode >= 300) {
    return de_UpdateWorkteamCommandError(output, context);
  }
  const data: any = await parseBody(output.body, context);
  let contents: any = {};
  contents = de_UpdateWorkteamResponse(data, context);
  const response: UpdateWorkteamCommandOutput = {
    $metadata: deserializeMetadata(output),
    ...contents,
  };
  return Promise.resolve(response);
};

/**
 * deserializeAws_json1_1UpdateWorkteamCommandError
 */
const de_UpdateWorkteamCommandError = async (
  output: __HttpResponse,
  context: __SerdeContext
): Promise<UpdateWorkteamCommandOutput> => {
  const parsedOutput: any = {
    ...output,
    body: await parseErrorBody(output.body, context),
  };
  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
  switch (errorCode) {
    case "ResourceLimitExceeded":
    case "com.amazonaws.sagemaker#ResourceLimitExceeded":
      throw await de_ResourceLimitExceededRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      throwDefaultError({
        output,
        parsedBody,
        exceptionCtor: __BaseException,
        errorCode,
      });
  }
};

/**
 * deserializeAws_json1_1ConflictExceptionRes
 */
const de_ConflictExceptionRes = async (parsedOutput: any, context: __SerdeContext): Promise<ConflictException> => {
  const body = parsedOutput.body;
  const deserialized: any = de_ConflictException(body, context);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized,
  });
  return __decorateServiceException(exception, body);
};

/**
 * deserializeAws_json1_1ResourceInUseRes
 */
const de_ResourceInUseRes = async (parsedOutput: any, context: __SerdeContext): Promise<ResourceInUse> => {
  const body = parsedOutput.body;
  const deserialized: any = de_ResourceInUse(body, context);
  const exception = new ResourceInUse({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized,
  });
  return __decorateServiceException(exception, body);
};

/**
 * deserializeAws_json1_1ResourceLimitExceededRes
 */
const de_ResourceLimitExceededRes = async (
  parsedOutput: any,
  context: __SerdeContext
): Promise<ResourceLimitExceeded> => {
  const body = parsedOutput.body;
  const deserialized: any = de_ResourceLimitExceeded(body, context);
  const exception = new ResourceLimitExceeded({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized,
  });
  return __decorateServiceException(exception, body);
};

/**
 * deserializeAws_json1_1ResourceNotFoundRes
 */
const de_ResourceNotFoundRes = async (parsedOutput: any, context: __SerdeContext): Promise<ResourceNotFound> => {
  const body = parsedOutput.body;
  const deserialized: any = de_ResourceNotFound(body, context);
  const exception = new ResourceNotFound({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized,
  });
  return __decorateServiceException(exception, body);
};

/**
 * serializeAws_json1_1ActionSource
 */
const se_ActionSource = (input: ActionSource, context: __SerdeContext): any => {
  return {
    ...(input.SourceId != null && { SourceId: input.SourceId }),
    ...(input.SourceType != null && { SourceType: input.SourceType }),
    ...(input.SourceUri != null && { SourceUri: input.SourceUri }),
  };
};

/**
 * serializeAws_json1_1AddAssociationRequest
 */
const se_AddAssociationRequest = (input: AddAssociationRequest, context: __SerdeContext): any => {
  return {
    ...(input.AssociationType != null && { AssociationType: input.AssociationType }),
    ...(input.DestinationArn != null && { DestinationArn: input.DestinationArn }),
    ...(input.SourceArn != null && { SourceArn: input.SourceArn }),
  };
};

/**
 * serializeAws_json1_1AdditionalCodeRepositoryNamesOrUrls
 */
const se_AdditionalCodeRepositoryNamesOrUrls = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1AdditionalInferenceSpecificationDefinition
 */
const se_AdditionalInferenceSpecificationDefinition = (
  input: AdditionalInferenceSpecificationDefinition,
  context: __SerdeContext
): any => {
  return {
    ...(input.Containers != null && { Containers: se_ModelPackageContainerDefinitionList(input.Containers, context) }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.SupportedContentTypes != null && {
      SupportedContentTypes: se_ContentTypes(input.SupportedContentTypes, context),
    }),
    ...(input.SupportedRealtimeInferenceInstanceTypes != null && {
      SupportedRealtimeInferenceInstanceTypes: se_RealtimeInferenceInstanceTypes(
        input.SupportedRealtimeInferenceInstanceTypes,
        context
      ),
    }),
    ...(input.SupportedResponseMIMETypes != null && {
      SupportedResponseMIMETypes: se_ResponseMIMETypes(input.SupportedResponseMIMETypes, context),
    }),
    ...(input.SupportedTransformInstanceTypes != null && {
      SupportedTransformInstanceTypes: se_TransformInstanceTypes(input.SupportedTransformInstanceTypes, context),
    }),
  };
};

/**
 * serializeAws_json1_1AdditionalInferenceSpecifications
 */
const se_AdditionalInferenceSpecifications = (
  input: AdditionalInferenceSpecificationDefinition[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AdditionalInferenceSpecificationDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1AddTagsInput
 */
const se_AddTagsInput = (input: AddTagsInput, context: __SerdeContext): any => {
  return {
    ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1Alarm
 */
const se_Alarm = (input: Alarm, context: __SerdeContext): any => {
  return {
    ...(input.AlarmName != null && { AlarmName: input.AlarmName }),
  };
};

/**
 * serializeAws_json1_1AlarmList
 */
const se_AlarmList = (input: Alarm[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Alarm(entry, context);
    });
};

/**
 * serializeAws_json1_1AlgorithmSpecification
 */
const se_AlgorithmSpecification = (input: AlgorithmSpecification, context: __SerdeContext): any => {
  return {
    ...(input.AlgorithmName != null && { AlgorithmName: input.AlgorithmName }),
    ...(input.ContainerArguments != null && {
      ContainerArguments: se_TrainingContainerArguments(input.ContainerArguments, context),
    }),
    ...(input.ContainerEntrypoint != null && {
      ContainerEntrypoint: se_TrainingContainerEntrypoint(input.ContainerEntrypoint, context),
    }),
    ...(input.EnableSageMakerMetricsTimeSeries != null && {
      EnableSageMakerMetricsTimeSeries: input.EnableSageMakerMetricsTimeSeries,
    }),
    ...(input.MetricDefinitions != null && {
      MetricDefinitions: se_MetricDefinitionList(input.MetricDefinitions, context),
    }),
    ...(input.TrainingImage != null && { TrainingImage: input.TrainingImage }),
    ...(input.TrainingImageConfig != null && {
      TrainingImageConfig: se_TrainingImageConfig(input.TrainingImageConfig, context),
    }),
    ...(input.TrainingInputMode != null && { TrainingInputMode: input.TrainingInputMode }),
  };
};

/**
 * serializeAws_json1_1AlgorithmValidationProfile
 */
const se_AlgorithmValidationProfile = (input: AlgorithmValidationProfile, context: __SerdeContext): any => {
  return {
    ...(input.ProfileName != null && { ProfileName: input.ProfileName }),
    ...(input.TrainingJobDefinition != null && {
      TrainingJobDefinition: se_TrainingJobDefinition(input.TrainingJobDefinition, context),
    }),
    ...(input.TransformJobDefinition != null && {
      TransformJobDefinition: se_TransformJobDefinition(input.TransformJobDefinition, context),
    }),
  };
};

/**
 * serializeAws_json1_1AlgorithmValidationProfiles
 */
const se_AlgorithmValidationProfiles = (input: AlgorithmValidationProfile[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AlgorithmValidationProfile(entry, context);
    });
};

/**
 * serializeAws_json1_1AlgorithmValidationSpecification
 */
const se_AlgorithmValidationSpecification = (input: AlgorithmValidationSpecification, context: __SerdeContext): any => {
  return {
    ...(input.ValidationProfiles != null && {
      ValidationProfiles: se_AlgorithmValidationProfiles(input.ValidationProfiles, context),
    }),
    ...(input.ValidationRole != null && { ValidationRole: input.ValidationRole }),
  };
};

/**
 * serializeAws_json1_1AnnotationConsolidationConfig
 */
const se_AnnotationConsolidationConfig = (input: AnnotationConsolidationConfig, context: __SerdeContext): any => {
  return {
    ...(input.AnnotationConsolidationLambdaArn != null && {
      AnnotationConsolidationLambdaArn: input.AnnotationConsolidationLambdaArn,
    }),
  };
};

/**
 * serializeAws_json1_1AppSpecification
 */
const se_AppSpecification = (input: AppSpecification, context: __SerdeContext): any => {
  return {
    ...(input.ContainerArguments != null && {
      ContainerArguments: se_ContainerArguments(input.ContainerArguments, context),
    }),
    ...(input.ContainerEntrypoint != null && {
      ContainerEntrypoint: se_ContainerEntrypoint(input.ContainerEntrypoint, context),
    }),
    ...(input.ImageUri != null && { ImageUri: input.ImageUri }),
  };
};

/**
 * serializeAws_json1_1ArtifactSource
 */
const se_ArtifactSource = (input: ArtifactSource, context: __SerdeContext): any => {
  return {
    ...(input.SourceTypes != null && { SourceTypes: se_ArtifactSourceTypes(input.SourceTypes, context) }),
    ...(input.SourceUri != null && { SourceUri: input.SourceUri }),
  };
};

/**
 * serializeAws_json1_1ArtifactSourceType
 */
const se_ArtifactSourceType = (input: ArtifactSourceType, context: __SerdeContext): any => {
  return {
    ...(input.SourceIdType != null && { SourceIdType: input.SourceIdType }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1ArtifactSourceTypes
 */
const se_ArtifactSourceTypes = (input: ArtifactSourceType[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ArtifactSourceType(entry, context);
    });
};

/**
 * serializeAws_json1_1AssociateTrialComponentRequest
 */
const se_AssociateTrialComponentRequest = (input: AssociateTrialComponentRequest, context: __SerdeContext): any => {
  return {
    ...(input.TrialComponentName != null && { TrialComponentName: input.TrialComponentName }),
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1AsyncInferenceClientConfig
 */
const se_AsyncInferenceClientConfig = (input: AsyncInferenceClientConfig, context: __SerdeContext): any => {
  return {
    ...(input.MaxConcurrentInvocationsPerInstance != null && {
      MaxConcurrentInvocationsPerInstance: input.MaxConcurrentInvocationsPerInstance,
    }),
  };
};

/**
 * serializeAws_json1_1AsyncInferenceConfig
 */
const se_AsyncInferenceConfig = (input: AsyncInferenceConfig, context: __SerdeContext): any => {
  return {
    ...(input.ClientConfig != null && { ClientConfig: se_AsyncInferenceClientConfig(input.ClientConfig, context) }),
    ...(input.OutputConfig != null && { OutputConfig: se_AsyncInferenceOutputConfig(input.OutputConfig, context) }),
  };
};

/**
 * serializeAws_json1_1AsyncInferenceNotificationConfig
 */
const se_AsyncInferenceNotificationConfig = (input: AsyncInferenceNotificationConfig, context: __SerdeContext): any => {
  return {
    ...(input.ErrorTopic != null && { ErrorTopic: input.ErrorTopic }),
    ...(input.IncludeInferenceResponseIn != null && {
      IncludeInferenceResponseIn: se_AsyncNotificationTopicTypeList(input.IncludeInferenceResponseIn, context),
    }),
    ...(input.SuccessTopic != null && { SuccessTopic: input.SuccessTopic }),
  };
};

/**
 * serializeAws_json1_1AsyncInferenceOutputConfig
 */
const se_AsyncInferenceOutputConfig = (input: AsyncInferenceOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.NotificationConfig != null && {
      NotificationConfig: se_AsyncInferenceNotificationConfig(input.NotificationConfig, context),
    }),
    ...(input.S3FailurePath != null && { S3FailurePath: input.S3FailurePath }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1AsyncNotificationTopicTypeList
 */
const se_AsyncNotificationTopicTypeList = (
  input: (AsyncNotificationTopicTypes | string)[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1AthenaDatasetDefinition
 */
const se_AthenaDatasetDefinition = (input: AthenaDatasetDefinition, context: __SerdeContext): any => {
  return {
    ...(input.Catalog != null && { Catalog: input.Catalog }),
    ...(input.Database != null && { Database: input.Database }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.OutputCompression != null && { OutputCompression: input.OutputCompression }),
    ...(input.OutputFormat != null && { OutputFormat: input.OutputFormat }),
    ...(input.OutputS3Uri != null && { OutputS3Uri: input.OutputS3Uri }),
    ...(input.QueryString != null && { QueryString: input.QueryString }),
    ...(input.WorkGroup != null && { WorkGroup: input.WorkGroup }),
  };
};

/**
 * serializeAws_json1_1AttributeNames
 */
const se_AttributeNames = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1AutoMLAlgorithmConfig
 */
const se_AutoMLAlgorithmConfig = (input: AutoMLAlgorithmConfig, context: __SerdeContext): any => {
  return {
    ...(input.AutoMLAlgorithms != null && { AutoMLAlgorithms: se_AutoMLAlgorithms(input.AutoMLAlgorithms, context) }),
  };
};

/**
 * serializeAws_json1_1AutoMLAlgorithms
 */
const se_AutoMLAlgorithms = (input: (AutoMLAlgorithm | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1AutoMLAlgorithmsConfig
 */
const se_AutoMLAlgorithmsConfig = (input: AutoMLAlgorithmConfig[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AutoMLAlgorithmConfig(entry, context);
    });
};

/**
 * serializeAws_json1_1AutoMLCandidateGenerationConfig
 */
const se_AutoMLCandidateGenerationConfig = (input: AutoMLCandidateGenerationConfig, context: __SerdeContext): any => {
  return {
    ...(input.AlgorithmsConfig != null && {
      AlgorithmsConfig: se_AutoMLAlgorithmsConfig(input.AlgorithmsConfig, context),
    }),
    ...(input.FeatureSpecificationS3Uri != null && { FeatureSpecificationS3Uri: input.FeatureSpecificationS3Uri }),
  };
};

/**
 * serializeAws_json1_1AutoMLChannel
 */
const se_AutoMLChannel = (input: AutoMLChannel, context: __SerdeContext): any => {
  return {
    ...(input.ChannelType != null && { ChannelType: input.ChannelType }),
    ...(input.CompressionType != null && { CompressionType: input.CompressionType }),
    ...(input.ContentType != null && { ContentType: input.ContentType }),
    ...(input.DataSource != null && { DataSource: se_AutoMLDataSource(input.DataSource, context) }),
    ...(input.TargetAttributeName != null && { TargetAttributeName: input.TargetAttributeName }),
  };
};

/**
 * serializeAws_json1_1AutoMLDataSource
 */
const se_AutoMLDataSource = (input: AutoMLDataSource, context: __SerdeContext): any => {
  return {
    ...(input.S3DataSource != null && { S3DataSource: se_AutoMLS3DataSource(input.S3DataSource, context) }),
  };
};

/**
 * serializeAws_json1_1AutoMLDataSplitConfig
 */
const se_AutoMLDataSplitConfig = (input: AutoMLDataSplitConfig, context: __SerdeContext): any => {
  return {
    ...(input.ValidationFraction != null && { ValidationFraction: __serializeFloat(input.ValidationFraction) }),
  };
};

/**
 * serializeAws_json1_1AutoMLInputDataConfig
 */
const se_AutoMLInputDataConfig = (input: AutoMLChannel[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AutoMLChannel(entry, context);
    });
};

/**
 * serializeAws_json1_1AutoMLJobChannel
 */
const se_AutoMLJobChannel = (input: AutoMLJobChannel, context: __SerdeContext): any => {
  return {
    ...(input.ChannelType != null && { ChannelType: input.ChannelType }),
    ...(input.CompressionType != null && { CompressionType: input.CompressionType }),
    ...(input.ContentType != null && { ContentType: input.ContentType }),
    ...(input.DataSource != null && { DataSource: se_AutoMLDataSource(input.DataSource, context) }),
  };
};

/**
 * serializeAws_json1_1AutoMLJobCompletionCriteria
 */
const se_AutoMLJobCompletionCriteria = (input: AutoMLJobCompletionCriteria, context: __SerdeContext): any => {
  return {
    ...(input.MaxAutoMLJobRuntimeInSeconds != null && {
      MaxAutoMLJobRuntimeInSeconds: input.MaxAutoMLJobRuntimeInSeconds,
    }),
    ...(input.MaxCandidates != null && { MaxCandidates: input.MaxCandidates }),
    ...(input.MaxRuntimePerTrainingJobInSeconds != null && {
      MaxRuntimePerTrainingJobInSeconds: input.MaxRuntimePerTrainingJobInSeconds,
    }),
  };
};

/**
 * serializeAws_json1_1AutoMLJobConfig
 */
const se_AutoMLJobConfig = (input: AutoMLJobConfig, context: __SerdeContext): any => {
  return {
    ...(input.CandidateGenerationConfig != null && {
      CandidateGenerationConfig: se_AutoMLCandidateGenerationConfig(input.CandidateGenerationConfig, context),
    }),
    ...(input.CompletionCriteria != null && {
      CompletionCriteria: se_AutoMLJobCompletionCriteria(input.CompletionCriteria, context),
    }),
    ...(input.DataSplitConfig != null && { DataSplitConfig: se_AutoMLDataSplitConfig(input.DataSplitConfig, context) }),
    ...(input.Mode != null && { Mode: input.Mode }),
    ...(input.SecurityConfig != null && { SecurityConfig: se_AutoMLSecurityConfig(input.SecurityConfig, context) }),
  };
};

/**
 * serializeAws_json1_1AutoMLJobInputDataConfig
 */
const se_AutoMLJobInputDataConfig = (input: AutoMLJobChannel[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_AutoMLJobChannel(entry, context);
    });
};

/**
 * serializeAws_json1_1AutoMLJobObjective
 */
const se_AutoMLJobObjective = (input: AutoMLJobObjective, context: __SerdeContext): any => {
  return {
    ...(input.MetricName != null && { MetricName: input.MetricName }),
  };
};

/**
 * serializeAws_json1_1AutoMLOutputDataConfig
 */
const se_AutoMLOutputDataConfig = (input: AutoMLOutputDataConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1AutoMLProblemTypeConfig
 */
const se_AutoMLProblemTypeConfig = (input: AutoMLProblemTypeConfig, context: __SerdeContext): any => {
  return AutoMLProblemTypeConfig.visit(input, {
    ImageClassificationJobConfig: (value) => ({
      ImageClassificationJobConfig: se_ImageClassificationJobConfig(value, context),
    }),
    TextClassificationJobConfig: (value) => ({
      TextClassificationJobConfig: se_TextClassificationJobConfig(value, context),
    }),
    _: (name, value) => ({ name: value } as any),
  });
};

/**
 * serializeAws_json1_1AutoMLS3DataSource
 */
const se_AutoMLS3DataSource = (input: AutoMLS3DataSource, context: __SerdeContext): any => {
  return {
    ...(input.S3DataType != null && { S3DataType: input.S3DataType }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1AutoMLSecurityConfig
 */
const se_AutoMLSecurityConfig = (input: AutoMLSecurityConfig, context: __SerdeContext): any => {
  return {
    ...(input.EnableInterContainerTrafficEncryption != null && {
      EnableInterContainerTrafficEncryption: input.EnableInterContainerTrafficEncryption,
    }),
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
    ...(input.VpcConfig != null && { VpcConfig: se_VpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1AutoRollbackConfig
 */
const se_AutoRollbackConfig = (input: AutoRollbackConfig, context: __SerdeContext): any => {
  return {
    ...(input.Alarms != null && { Alarms: se_AlarmList(input.Alarms, context) }),
  };
};

/**
 * serializeAws_json1_1BatchDataCaptureConfig
 */
const se_BatchDataCaptureConfig = (input: BatchDataCaptureConfig, context: __SerdeContext): any => {
  return {
    ...(input.DestinationS3Uri != null && { DestinationS3Uri: input.DestinationS3Uri }),
    ...(input.GenerateInferenceId != null && { GenerateInferenceId: input.GenerateInferenceId }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_json1_1BatchDescribeModelPackageInput
 */
const se_BatchDescribeModelPackageInput = (input: BatchDescribeModelPackageInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageArnList != null && {
      ModelPackageArnList: se_ModelPackageArnList(input.ModelPackageArnList, context),
    }),
  };
};

/**
 * serializeAws_json1_1BatchTransformInput
 */
const se_BatchTransformInput = (input: BatchTransformInput, context: __SerdeContext): any => {
  return {
    ...(input.DataCapturedDestinationS3Uri != null && {
      DataCapturedDestinationS3Uri: input.DataCapturedDestinationS3Uri,
    }),
    ...(input.DatasetFormat != null && { DatasetFormat: se_MonitoringDatasetFormat(input.DatasetFormat, context) }),
    ...(input.EndTimeOffset != null && { EndTimeOffset: input.EndTimeOffset }),
    ...(input.FeaturesAttribute != null && { FeaturesAttribute: input.FeaturesAttribute }),
    ...(input.InferenceAttribute != null && { InferenceAttribute: input.InferenceAttribute }),
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.ProbabilityAttribute != null && { ProbabilityAttribute: input.ProbabilityAttribute }),
    ...(input.ProbabilityThresholdAttribute != null && {
      ProbabilityThresholdAttribute: __serializeFloat(input.ProbabilityThresholdAttribute),
    }),
    ...(input.S3DataDistributionType != null && { S3DataDistributionType: input.S3DataDistributionType }),
    ...(input.S3InputMode != null && { S3InputMode: input.S3InputMode }),
    ...(input.StartTimeOffset != null && { StartTimeOffset: input.StartTimeOffset }),
  };
};

/**
 * serializeAws_json1_1BestObjectiveNotImproving
 */
const se_BestObjectiveNotImproving = (input: BestObjectiveNotImproving, context: __SerdeContext): any => {
  return {
    ...(input.MaxNumberOfTrainingJobsNotImproving != null && {
      MaxNumberOfTrainingJobsNotImproving: input.MaxNumberOfTrainingJobsNotImproving,
    }),
  };
};

/**
 * serializeAws_json1_1Bias
 */
const se_Bias = (input: Bias, context: __SerdeContext): any => {
  return {
    ...(input.PostTrainingReport != null && {
      PostTrainingReport: se_MetricsSource(input.PostTrainingReport, context),
    }),
    ...(input.PreTrainingReport != null && { PreTrainingReport: se_MetricsSource(input.PreTrainingReport, context) }),
    ...(input.Report != null && { Report: se_MetricsSource(input.Report, context) }),
  };
};

/**
 * serializeAws_json1_1BlueGreenUpdatePolicy
 */
const se_BlueGreenUpdatePolicy = (input: BlueGreenUpdatePolicy, context: __SerdeContext): any => {
  return {
    ...(input.MaximumExecutionTimeoutInSeconds != null && {
      MaximumExecutionTimeoutInSeconds: input.MaximumExecutionTimeoutInSeconds,
    }),
    ...(input.TerminationWaitInSeconds != null && { TerminationWaitInSeconds: input.TerminationWaitInSeconds }),
    ...(input.TrafficRoutingConfiguration != null && {
      TrafficRoutingConfiguration: se_TrafficRoutingConfig(input.TrafficRoutingConfiguration, context),
    }),
  };
};

/**
 * serializeAws_json1_1CanvasAppSettings
 */
const se_CanvasAppSettings = (input: CanvasAppSettings, context: __SerdeContext): any => {
  return {
    ...(input.TimeSeriesForecastingSettings != null && {
      TimeSeriesForecastingSettings: se_TimeSeriesForecastingSettings(input.TimeSeriesForecastingSettings, context),
    }),
  };
};

/**
 * serializeAws_json1_1CapacitySize
 */
const se_CapacitySize = (input: CapacitySize, context: __SerdeContext): any => {
  return {
    ...(input.Type != null && { Type: input.Type }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1CaptureContentTypeHeader
 */
const se_CaptureContentTypeHeader = (input: CaptureContentTypeHeader, context: __SerdeContext): any => {
  return {
    ...(input.CsvContentTypes != null && { CsvContentTypes: se_CsvContentTypes(input.CsvContentTypes, context) }),
    ...(input.JsonContentTypes != null && { JsonContentTypes: se_JsonContentTypes(input.JsonContentTypes, context) }),
  };
};

/**
 * serializeAws_json1_1CaptureOption
 */
const se_CaptureOption = (input: CaptureOption, context: __SerdeContext): any => {
  return {
    ...(input.CaptureMode != null && { CaptureMode: input.CaptureMode }),
  };
};

/**
 * serializeAws_json1_1CaptureOptionList
 */
const se_CaptureOptionList = (input: CaptureOption[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CaptureOption(entry, context);
    });
};

/**
 * serializeAws_json1_1CategoricalParameter
 */
const se_CategoricalParameter = (input: CategoricalParameter, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: se_CategoricalParameterRangeValues(input.Value, context) }),
  };
};

/**
 * serializeAws_json1_1CategoricalParameterRange
 */
const se_CategoricalParameterRange = (input: CategoricalParameterRange, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Values != null && { Values: se_ParameterValues(input.Values, context) }),
  };
};

/**
 * serializeAws_json1_1CategoricalParameterRanges
 */
const se_CategoricalParameterRanges = (input: CategoricalParameterRange[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CategoricalParameterRange(entry, context);
    });
};

/**
 * serializeAws_json1_1CategoricalParameterRangeSpecification
 */
const se_CategoricalParameterRangeSpecification = (
  input: CategoricalParameterRangeSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.Values != null && { Values: se_ParameterValues(input.Values, context) }),
  };
};

/**
 * serializeAws_json1_1CategoricalParameterRangeValues
 */
const se_CategoricalParameterRangeValues = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1CategoricalParameters
 */
const se_CategoricalParameters = (input: CategoricalParameter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CategoricalParameter(entry, context);
    });
};

/**
 * serializeAws_json1_1Channel
 */
const se_Channel = (input: Channel, context: __SerdeContext): any => {
  return {
    ...(input.ChannelName != null && { ChannelName: input.ChannelName }),
    ...(input.CompressionType != null && { CompressionType: input.CompressionType }),
    ...(input.ContentType != null && { ContentType: input.ContentType }),
    ...(input.DataSource != null && { DataSource: se_DataSource(input.DataSource, context) }),
    ...(input.InputMode != null && { InputMode: input.InputMode }),
    ...(input.RecordWrapperType != null && { RecordWrapperType: input.RecordWrapperType }),
    ...(input.ShuffleConfig != null && { ShuffleConfig: se_ShuffleConfig(input.ShuffleConfig, context) }),
  };
};

/**
 * serializeAws_json1_1ChannelSpecification
 */
const se_ChannelSpecification = (input: ChannelSpecification, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.IsRequired != null && { IsRequired: input.IsRequired }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.SupportedCompressionTypes != null && {
      SupportedCompressionTypes: se_CompressionTypes(input.SupportedCompressionTypes, context),
    }),
    ...(input.SupportedContentTypes != null && {
      SupportedContentTypes: se_ContentTypes(input.SupportedContentTypes, context),
    }),
    ...(input.SupportedInputModes != null && {
      SupportedInputModes: se_InputModes(input.SupportedInputModes, context),
    }),
  };
};

/**
 * serializeAws_json1_1ChannelSpecifications
 */
const se_ChannelSpecifications = (input: ChannelSpecification[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ChannelSpecification(entry, context);
    });
};

/**
 * serializeAws_json1_1CheckpointConfig
 */
const se_CheckpointConfig = (input: CheckpointConfig, context: __SerdeContext): any => {
  return {
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1Cidrs
 */
const se_Cidrs = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ClarifyExplainerConfig
 */
const se_ClarifyExplainerConfig = (input: ClarifyExplainerConfig, context: __SerdeContext): any => {
  return {
    ...(input.EnableExplanations != null && { EnableExplanations: input.EnableExplanations }),
    ...(input.InferenceConfig != null && {
      InferenceConfig: se_ClarifyInferenceConfig(input.InferenceConfig, context),
    }),
    ...(input.ShapConfig != null && { ShapConfig: se_ClarifyShapConfig(input.ShapConfig, context) }),
  };
};

/**
 * serializeAws_json1_1ClarifyFeatureHeaders
 */
const se_ClarifyFeatureHeaders = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ClarifyFeatureTypes
 */
const se_ClarifyFeatureTypes = (input: (ClarifyFeatureType | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ClarifyInferenceConfig
 */
const se_ClarifyInferenceConfig = (input: ClarifyInferenceConfig, context: __SerdeContext): any => {
  return {
    ...(input.ContentTemplate != null && { ContentTemplate: input.ContentTemplate }),
    ...(input.FeatureHeaders != null && { FeatureHeaders: se_ClarifyFeatureHeaders(input.FeatureHeaders, context) }),
    ...(input.FeatureTypes != null && { FeatureTypes: se_ClarifyFeatureTypes(input.FeatureTypes, context) }),
    ...(input.FeaturesAttribute != null && { FeaturesAttribute: input.FeaturesAttribute }),
    ...(input.LabelAttribute != null && { LabelAttribute: input.LabelAttribute }),
    ...(input.LabelHeaders != null && { LabelHeaders: se_ClarifyLabelHeaders(input.LabelHeaders, context) }),
    ...(input.LabelIndex != null && { LabelIndex: input.LabelIndex }),
    ...(input.MaxPayloadInMB != null && { MaxPayloadInMB: input.MaxPayloadInMB }),
    ...(input.MaxRecordCount != null && { MaxRecordCount: input.MaxRecordCount }),
    ...(input.ProbabilityAttribute != null && { ProbabilityAttribute: input.ProbabilityAttribute }),
    ...(input.ProbabilityIndex != null && { ProbabilityIndex: input.ProbabilityIndex }),
  };
};

/**
 * serializeAws_json1_1ClarifyLabelHeaders
 */
const se_ClarifyLabelHeaders = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ClarifyShapBaselineConfig
 */
const se_ClarifyShapBaselineConfig = (input: ClarifyShapBaselineConfig, context: __SerdeContext): any => {
  return {
    ...(input.MimeType != null && { MimeType: input.MimeType }),
    ...(input.ShapBaseline != null && { ShapBaseline: input.ShapBaseline }),
    ...(input.ShapBaselineUri != null && { ShapBaselineUri: input.ShapBaselineUri }),
  };
};

/**
 * serializeAws_json1_1ClarifyShapConfig
 */
const se_ClarifyShapConfig = (input: ClarifyShapConfig, context: __SerdeContext): any => {
  return {
    ...(input.NumberOfSamples != null && { NumberOfSamples: input.NumberOfSamples }),
    ...(input.Seed != null && { Seed: input.Seed }),
    ...(input.ShapBaselineConfig != null && {
      ShapBaselineConfig: se_ClarifyShapBaselineConfig(input.ShapBaselineConfig, context),
    }),
    ...(input.TextConfig != null && { TextConfig: se_ClarifyTextConfig(input.TextConfig, context) }),
    ...(input.UseLogit != null && { UseLogit: input.UseLogit }),
  };
};

/**
 * serializeAws_json1_1ClarifyTextConfig
 */
const se_ClarifyTextConfig = (input: ClarifyTextConfig, context: __SerdeContext): any => {
  return {
    ...(input.Granularity != null && { Granularity: input.Granularity }),
    ...(input.Language != null && { Language: input.Language }),
  };
};

/**
 * serializeAws_json1_1CodeRepositories
 */
const se_CodeRepositories = (input: CodeRepository[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CodeRepository(entry, context);
    });
};

/**
 * serializeAws_json1_1CodeRepository
 */
const se_CodeRepository = (input: CodeRepository, context: __SerdeContext): any => {
  return {
    ...(input.RepositoryUrl != null && { RepositoryUrl: input.RepositoryUrl }),
  };
};

/**
 * serializeAws_json1_1CognitoConfig
 */
const se_CognitoConfig = (input: CognitoConfig, context: __SerdeContext): any => {
  return {
    ...(input.ClientId != null && { ClientId: input.ClientId }),
    ...(input.UserPool != null && { UserPool: input.UserPool }),
  };
};

/**
 * serializeAws_json1_1CognitoMemberDefinition
 */
const se_CognitoMemberDefinition = (input: CognitoMemberDefinition, context: __SerdeContext): any => {
  return {
    ...(input.ClientId != null && { ClientId: input.ClientId }),
    ...(input.UserGroup != null && { UserGroup: input.UserGroup }),
    ...(input.UserPool != null && { UserPool: input.UserPool }),
  };
};

/**
 * serializeAws_json1_1CollectionConfiguration
 */
const se_CollectionConfiguration = (input: CollectionConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.CollectionName != null && { CollectionName: input.CollectionName }),
    ...(input.CollectionParameters != null && {
      CollectionParameters: se_CollectionParameters(input.CollectionParameters, context),
    }),
  };
};

/**
 * serializeAws_json1_1CollectionConfigurations
 */
const se_CollectionConfigurations = (input: CollectionConfiguration[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CollectionConfiguration(entry, context);
    });
};

/**
 * serializeAws_json1_1CollectionParameters
 */
const se_CollectionParameters = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1CompressionTypes
 */
const se_CompressionTypes = (input: (CompressionType | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ContainerArguments
 */
const se_ContainerArguments = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ContainerDefinition
 */
const se_ContainerDefinition = (input: ContainerDefinition, context: __SerdeContext): any => {
  return {
    ...(input.ContainerHostname != null && { ContainerHostname: input.ContainerHostname }),
    ...(input.Environment != null && { Environment: se_EnvironmentMap(input.Environment, context) }),
    ...(input.Image != null && { Image: input.Image }),
    ...(input.ImageConfig != null && { ImageConfig: se_ImageConfig(input.ImageConfig, context) }),
    ...(input.InferenceSpecificationName != null && { InferenceSpecificationName: input.InferenceSpecificationName }),
    ...(input.Mode != null && { Mode: input.Mode }),
    ...(input.ModelDataUrl != null && { ModelDataUrl: input.ModelDataUrl }),
    ...(input.ModelPackageName != null && { ModelPackageName: input.ModelPackageName }),
    ...(input.MultiModelConfig != null && { MultiModelConfig: se_MultiModelConfig(input.MultiModelConfig, context) }),
  };
};

/**
 * serializeAws_json1_1ContainerDefinitionList
 */
const se_ContainerDefinitionList = (input: ContainerDefinition[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ContainerDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1ContainerEntrypoint
 */
const se_ContainerEntrypoint = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ContentClassifiers
 */
const se_ContentClassifiers = (input: (ContentClassifier | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ContentTypes
 */
const se_ContentTypes = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ContextSource
 */
const se_ContextSource = (input: ContextSource, context: __SerdeContext): any => {
  return {
    ...(input.SourceId != null && { SourceId: input.SourceId }),
    ...(input.SourceType != null && { SourceType: input.SourceType }),
    ...(input.SourceUri != null && { SourceUri: input.SourceUri }),
  };
};

/**
 * serializeAws_json1_1ContinuousParameterRange
 */
const se_ContinuousParameterRange = (input: ContinuousParameterRange, context: __SerdeContext): any => {
  return {
    ...(input.MaxValue != null && { MaxValue: input.MaxValue }),
    ...(input.MinValue != null && { MinValue: input.MinValue }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.ScalingType != null && { ScalingType: input.ScalingType }),
  };
};

/**
 * serializeAws_json1_1ContinuousParameterRanges
 */
const se_ContinuousParameterRanges = (input: ContinuousParameterRange[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ContinuousParameterRange(entry, context);
    });
};

/**
 * serializeAws_json1_1ContinuousParameterRangeSpecification
 */
const se_ContinuousParameterRangeSpecification = (
  input: ContinuousParameterRangeSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.MaxValue != null && { MaxValue: input.MaxValue }),
    ...(input.MinValue != null && { MinValue: input.MinValue }),
  };
};

/**
 * serializeAws_json1_1ConvergenceDetected
 */
const se_ConvergenceDetected = (input: ConvergenceDetected, context: __SerdeContext): any => {
  return {
    ...(input.CompleteOnConvergence != null && { CompleteOnConvergence: input.CompleteOnConvergence }),
  };
};

/**
 * serializeAws_json1_1CreateActionRequest
 */
const se_CreateActionRequest = (input: CreateActionRequest, context: __SerdeContext): any => {
  return {
    ...(input.ActionName != null && { ActionName: input.ActionName }),
    ...(input.ActionType != null && { ActionType: input.ActionType }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.MetadataProperties != null && {
      MetadataProperties: se_MetadataProperties(input.MetadataProperties, context),
    }),
    ...(input.Properties != null && { Properties: se_LineageEntityParameters(input.Properties, context) }),
    ...(input.Source != null && { Source: se_ActionSource(input.Source, context) }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateAlgorithmInput
 */
const se_CreateAlgorithmInput = (input: CreateAlgorithmInput, context: __SerdeContext): any => {
  return {
    ...(input.AlgorithmDescription != null && { AlgorithmDescription: input.AlgorithmDescription }),
    ...(input.AlgorithmName != null && { AlgorithmName: input.AlgorithmName }),
    ...(input.CertifyForMarketplace != null && { CertifyForMarketplace: input.CertifyForMarketplace }),
    ...(input.InferenceSpecification != null && {
      InferenceSpecification: se_InferenceSpecification(input.InferenceSpecification, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.TrainingSpecification != null && {
      TrainingSpecification: se_TrainingSpecification(input.TrainingSpecification, context),
    }),
    ...(input.ValidationSpecification != null && {
      ValidationSpecification: se_AlgorithmValidationSpecification(input.ValidationSpecification, context),
    }),
  };
};

/**
 * serializeAws_json1_1CreateAppImageConfigRequest
 */
const se_CreateAppImageConfigRequest = (input: CreateAppImageConfigRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppImageConfigName != null && { AppImageConfigName: input.AppImageConfigName }),
    ...(input.KernelGatewayImageConfig != null && {
      KernelGatewayImageConfig: se_KernelGatewayImageConfig(input.KernelGatewayImageConfig, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateAppRequest
 */
const se_CreateAppRequest = (input: CreateAppRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppName != null && { AppName: input.AppName }),
    ...(input.AppType != null && { AppType: input.AppType }),
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.ResourceSpec != null && { ResourceSpec: se_ResourceSpec(input.ResourceSpec, context) }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
  };
};

/**
 * serializeAws_json1_1CreateArtifactRequest
 */
const se_CreateArtifactRequest = (input: CreateArtifactRequest, context: __SerdeContext): any => {
  return {
    ...(input.ArtifactName != null && { ArtifactName: input.ArtifactName }),
    ...(input.ArtifactType != null && { ArtifactType: input.ArtifactType }),
    ...(input.MetadataProperties != null && {
      MetadataProperties: se_MetadataProperties(input.MetadataProperties, context),
    }),
    ...(input.Properties != null && { Properties: se_LineageEntityParameters(input.Properties, context) }),
    ...(input.Source != null && { Source: se_ArtifactSource(input.Source, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateAutoMLJobRequest
 */
const se_CreateAutoMLJobRequest = (input: CreateAutoMLJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.AutoMLJobConfig != null && { AutoMLJobConfig: se_AutoMLJobConfig(input.AutoMLJobConfig, context) }),
    ...(input.AutoMLJobName != null && { AutoMLJobName: input.AutoMLJobName }),
    ...(input.AutoMLJobObjective != null && {
      AutoMLJobObjective: se_AutoMLJobObjective(input.AutoMLJobObjective, context),
    }),
    ...(input.GenerateCandidateDefinitionsOnly != null && {
      GenerateCandidateDefinitionsOnly: input.GenerateCandidateDefinitionsOnly,
    }),
    ...(input.InputDataConfig != null && { InputDataConfig: se_AutoMLInputDataConfig(input.InputDataConfig, context) }),
    ...(input.ModelDeployConfig != null && {
      ModelDeployConfig: se_ModelDeployConfig(input.ModelDeployConfig, context),
    }),
    ...(input.OutputDataConfig != null && {
      OutputDataConfig: se_AutoMLOutputDataConfig(input.OutputDataConfig, context),
    }),
    ...(input.ProblemType != null && { ProblemType: input.ProblemType }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateAutoMLJobV2Request
 */
const se_CreateAutoMLJobV2Request = (input: CreateAutoMLJobV2Request, context: __SerdeContext): any => {
  return {
    ...(input.AutoMLJobInputDataConfig != null && {
      AutoMLJobInputDataConfig: se_AutoMLJobInputDataConfig(input.AutoMLJobInputDataConfig, context),
    }),
    ...(input.AutoMLJobName != null && { AutoMLJobName: input.AutoMLJobName }),
    ...(input.AutoMLJobObjective != null && {
      AutoMLJobObjective: se_AutoMLJobObjective(input.AutoMLJobObjective, context),
    }),
    ...(input.AutoMLProblemTypeConfig != null && {
      AutoMLProblemTypeConfig: se_AutoMLProblemTypeConfig(input.AutoMLProblemTypeConfig, context),
    }),
    ...(input.DataSplitConfig != null && { DataSplitConfig: se_AutoMLDataSplitConfig(input.DataSplitConfig, context) }),
    ...(input.ModelDeployConfig != null && {
      ModelDeployConfig: se_ModelDeployConfig(input.ModelDeployConfig, context),
    }),
    ...(input.OutputDataConfig != null && {
      OutputDataConfig: se_AutoMLOutputDataConfig(input.OutputDataConfig, context),
    }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.SecurityConfig != null && { SecurityConfig: se_AutoMLSecurityConfig(input.SecurityConfig, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateCodeRepositoryInput
 */
const se_CreateCodeRepositoryInput = (input: CreateCodeRepositoryInput, context: __SerdeContext): any => {
  return {
    ...(input.CodeRepositoryName != null && { CodeRepositoryName: input.CodeRepositoryName }),
    ...(input.GitConfig != null && { GitConfig: se_GitConfig(input.GitConfig, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateCompilationJobRequest
 */
const se_CreateCompilationJobRequest = (input: CreateCompilationJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.CompilationJobName != null && { CompilationJobName: input.CompilationJobName }),
    ...(input.InputConfig != null && { InputConfig: se_InputConfig(input.InputConfig, context) }),
    ...(input.ModelPackageVersionArn != null && { ModelPackageVersionArn: input.ModelPackageVersionArn }),
    ...(input.OutputConfig != null && { OutputConfig: se_OutputConfig(input.OutputConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_StoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.VpcConfig != null && { VpcConfig: se_NeoVpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1CreateContextRequest
 */
const se_CreateContextRequest = (input: CreateContextRequest, context: __SerdeContext): any => {
  return {
    ...(input.ContextName != null && { ContextName: input.ContextName }),
    ...(input.ContextType != null && { ContextType: input.ContextType }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Properties != null && { Properties: se_LineageEntityParameters(input.Properties, context) }),
    ...(input.Source != null && { Source: se_ContextSource(input.Source, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateDataQualityJobDefinitionRequest
 */
const se_CreateDataQualityJobDefinitionRequest = (
  input: CreateDataQualityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.DataQualityAppSpecification != null && {
      DataQualityAppSpecification: se_DataQualityAppSpecification(input.DataQualityAppSpecification, context),
    }),
    ...(input.DataQualityBaselineConfig != null && {
      DataQualityBaselineConfig: se_DataQualityBaselineConfig(input.DataQualityBaselineConfig, context),
    }),
    ...(input.DataQualityJobInput != null && {
      DataQualityJobInput: se_DataQualityJobInput(input.DataQualityJobInput, context),
    }),
    ...(input.DataQualityJobOutputConfig != null && {
      DataQualityJobOutputConfig: se_MonitoringOutputConfig(input.DataQualityJobOutputConfig, context),
    }),
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
    ...(input.JobResources != null && { JobResources: se_MonitoringResources(input.JobResources, context) }),
    ...(input.NetworkConfig != null && { NetworkConfig: se_MonitoringNetworkConfig(input.NetworkConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_MonitoringStoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateDeviceFleetRequest
 */
const se_CreateDeviceFleetRequest = (input: CreateDeviceFleetRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.EnableIotRoleAlias != null && { EnableIotRoleAlias: input.EnableIotRoleAlias }),
    ...(input.OutputConfig != null && { OutputConfig: se_EdgeOutputConfig(input.OutputConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateDomainRequest
 */
const se_CreateDomainRequest = (input: CreateDomainRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppNetworkAccessType != null && { AppNetworkAccessType: input.AppNetworkAccessType }),
    ...(input.AppSecurityGroupManagement != null && { AppSecurityGroupManagement: input.AppSecurityGroupManagement }),
    ...(input.AuthMode != null && { AuthMode: input.AuthMode }),
    ...(input.DefaultSpaceSettings != null && {
      DefaultSpaceSettings: se_DefaultSpaceSettings(input.DefaultSpaceSettings, context),
    }),
    ...(input.DefaultUserSettings != null && {
      DefaultUserSettings: se_UserSettings(input.DefaultUserSettings, context),
    }),
    ...(input.DomainName != null && { DomainName: input.DomainName }),
    ...(input.DomainSettings != null && { DomainSettings: se_DomainSettings(input.DomainSettings, context) }),
    ...(input.HomeEfsFileSystemKmsKeyId != null && { HomeEfsFileSystemKmsKeyId: input.HomeEfsFileSystemKmsKeyId }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.SubnetIds != null && { SubnetIds: se_Subnets(input.SubnetIds, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * serializeAws_json1_1CreateEdgeDeploymentPlanRequest
 */
const se_CreateEdgeDeploymentPlanRequest = (input: CreateEdgeDeploymentPlanRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
    ...(input.ModelConfigs != null && { ModelConfigs: se_EdgeDeploymentModelConfigs(input.ModelConfigs, context) }),
    ...(input.Stages != null && { Stages: se_DeploymentStages(input.Stages, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateEdgeDeploymentStageRequest
 */
const se_CreateEdgeDeploymentStageRequest = (input: CreateEdgeDeploymentStageRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
    ...(input.Stages != null && { Stages: se_DeploymentStages(input.Stages, context) }),
  };
};

/**
 * serializeAws_json1_1CreateEdgePackagingJobRequest
 */
const se_CreateEdgePackagingJobRequest = (input: CreateEdgePackagingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.CompilationJobName != null && { CompilationJobName: input.CompilationJobName }),
    ...(input.EdgePackagingJobName != null && { EdgePackagingJobName: input.EdgePackagingJobName }),
    ...(input.ModelName != null && { ModelName: input.ModelName }),
    ...(input.ModelVersion != null && { ModelVersion: input.ModelVersion }),
    ...(input.OutputConfig != null && { OutputConfig: se_EdgeOutputConfig(input.OutputConfig, context) }),
    ...(input.ResourceKey != null && { ResourceKey: input.ResourceKey }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateEndpointConfigInput
 */
const se_CreateEndpointConfigInput = (input: CreateEndpointConfigInput, context: __SerdeContext): any => {
  return {
    ...(input.AsyncInferenceConfig != null && {
      AsyncInferenceConfig: se_AsyncInferenceConfig(input.AsyncInferenceConfig, context),
    }),
    ...(input.DataCaptureConfig != null && {
      DataCaptureConfig: se_DataCaptureConfig(input.DataCaptureConfig, context),
    }),
    ...(input.EndpointConfigName != null && { EndpointConfigName: input.EndpointConfigName }),
    ...(input.ExplainerConfig != null && { ExplainerConfig: se_ExplainerConfig(input.ExplainerConfig, context) }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.ProductionVariants != null && {
      ProductionVariants: se_ProductionVariantList(input.ProductionVariants, context),
    }),
    ...(input.ShadowProductionVariants != null && {
      ShadowProductionVariants: se_ProductionVariantList(input.ShadowProductionVariants, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateEndpointInput
 */
const se_CreateEndpointInput = (input: CreateEndpointInput, context: __SerdeContext): any => {
  return {
    ...(input.DeploymentConfig != null && { DeploymentConfig: se_DeploymentConfig(input.DeploymentConfig, context) }),
    ...(input.EndpointConfigName != null && { EndpointConfigName: input.EndpointConfigName }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateExperimentRequest
 */
const se_CreateExperimentRequest = (input: CreateExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateFeatureGroupRequest
 */
const se_CreateFeatureGroupRequest = (input: CreateFeatureGroupRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.EventTimeFeatureName != null && { EventTimeFeatureName: input.EventTimeFeatureName }),
    ...(input.FeatureDefinitions != null && {
      FeatureDefinitions: se_FeatureDefinitions(input.FeatureDefinitions, context),
    }),
    ...(input.FeatureGroupName != null && { FeatureGroupName: input.FeatureGroupName }),
    ...(input.OfflineStoreConfig != null && {
      OfflineStoreConfig: se_OfflineStoreConfig(input.OfflineStoreConfig, context),
    }),
    ...(input.OnlineStoreConfig != null && {
      OnlineStoreConfig: se_OnlineStoreConfig(input.OnlineStoreConfig, context),
    }),
    ...(input.RecordIdentifierFeatureName != null && {
      RecordIdentifierFeatureName: input.RecordIdentifierFeatureName,
    }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateFlowDefinitionRequest
 */
const se_CreateFlowDefinitionRequest = (input: CreateFlowDefinitionRequest, context: __SerdeContext): any => {
  return {
    ...(input.FlowDefinitionName != null && { FlowDefinitionName: input.FlowDefinitionName }),
    ...(input.HumanLoopActivationConfig != null && {
      HumanLoopActivationConfig: se_HumanLoopActivationConfig(input.HumanLoopActivationConfig, context),
    }),
    ...(input.HumanLoopConfig != null && { HumanLoopConfig: se_HumanLoopConfig(input.HumanLoopConfig, context) }),
    ...(input.HumanLoopRequestSource != null && {
      HumanLoopRequestSource: se_HumanLoopRequestSource(input.HumanLoopRequestSource, context),
    }),
    ...(input.OutputConfig != null && { OutputConfig: se_FlowDefinitionOutputConfig(input.OutputConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateHubRequest
 */
const se_CreateHubRequest = (input: CreateHubRequest, context: __SerdeContext): any => {
  return {
    ...(input.HubDescription != null && { HubDescription: input.HubDescription }),
    ...(input.HubDisplayName != null && { HubDisplayName: input.HubDisplayName }),
    ...(input.HubName != null && { HubName: input.HubName }),
    ...(input.HubSearchKeywords != null && {
      HubSearchKeywords: se_HubSearchKeywordList(input.HubSearchKeywords, context),
    }),
    ...(input.S3StorageConfig != null && { S3StorageConfig: se_HubS3StorageConfig(input.S3StorageConfig, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateHumanTaskUiRequest
 */
const se_CreateHumanTaskUiRequest = (input: CreateHumanTaskUiRequest, context: __SerdeContext): any => {
  return {
    ...(input.HumanTaskUiName != null && { HumanTaskUiName: input.HumanTaskUiName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.UiTemplate != null && { UiTemplate: se_UiTemplate(input.UiTemplate, context) }),
  };
};

/**
 * serializeAws_json1_1CreateHyperParameterTuningJobRequest
 */
const se_CreateHyperParameterTuningJobRequest = (
  input: CreateHyperParameterTuningJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.HyperParameterTuningJobConfig != null && {
      HyperParameterTuningJobConfig: se_HyperParameterTuningJobConfig(input.HyperParameterTuningJobConfig, context),
    }),
    ...(input.HyperParameterTuningJobName != null && {
      HyperParameterTuningJobName: input.HyperParameterTuningJobName,
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.TrainingJobDefinition != null && {
      TrainingJobDefinition: se_HyperParameterTrainingJobDefinition(input.TrainingJobDefinition, context),
    }),
    ...(input.TrainingJobDefinitions != null && {
      TrainingJobDefinitions: se_HyperParameterTrainingJobDefinitions(input.TrainingJobDefinitions, context),
    }),
    ...(input.WarmStartConfig != null && {
      WarmStartConfig: se_HyperParameterTuningJobWarmStartConfig(input.WarmStartConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1CreateImageRequest
 */
const se_CreateImageRequest = (input: CreateImageRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateImageVersionRequest
 */
const se_CreateImageVersionRequest = (input: CreateImageVersionRequest, context: __SerdeContext): any => {
  return {
    ...(input.Aliases != null && { Aliases: se_SageMakerImageVersionAliases(input.Aliases, context) }),
    ...(input.BaseImage != null && { BaseImage: input.BaseImage }),
    ClientToken: input.ClientToken ?? generateIdempotencyToken(),
    ...(input.Horovod != null && { Horovod: input.Horovod }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.JobType != null && { JobType: input.JobType }),
    ...(input.MLFramework != null && { MLFramework: input.MLFramework }),
    ...(input.Processor != null && { Processor: input.Processor }),
    ...(input.ProgrammingLang != null && { ProgrammingLang: input.ProgrammingLang }),
    ...(input.ReleaseNotes != null && { ReleaseNotes: input.ReleaseNotes }),
    ...(input.VendorGuidance != null && { VendorGuidance: input.VendorGuidance }),
  };
};

/**
 * serializeAws_json1_1CreateInferenceExperimentRequest
 */
const se_CreateInferenceExperimentRequest = (input: CreateInferenceExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.DataStorageConfig != null && {
      DataStorageConfig: se_InferenceExperimentDataStorageConfig(input.DataStorageConfig, context),
    }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.KmsKey != null && { KmsKey: input.KmsKey }),
    ...(input.ModelVariants != null && { ModelVariants: se_ModelVariantConfigList(input.ModelVariants, context) }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Schedule != null && { Schedule: se_InferenceExperimentSchedule(input.Schedule, context) }),
    ...(input.ShadowModeConfig != null && { ShadowModeConfig: se_ShadowModeConfig(input.ShadowModeConfig, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_json1_1CreateInferenceRecommendationsJobRequest
 */
const se_CreateInferenceRecommendationsJobRequest = (
  input: CreateInferenceRecommendationsJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.InputConfig != null && { InputConfig: se_RecommendationJobInputConfig(input.InputConfig, context) }),
    ...(input.JobDescription != null && { JobDescription: input.JobDescription }),
    ...(input.JobName != null && { JobName: input.JobName }),
    ...(input.JobType != null && { JobType: input.JobType }),
    ...(input.OutputConfig != null && { OutputConfig: se_RecommendationJobOutputConfig(input.OutputConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingConditions != null && {
      StoppingConditions: se_RecommendationJobStoppingConditions(input.StoppingConditions, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateLabelingJobRequest
 */
const se_CreateLabelingJobRequest = (input: CreateLabelingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.HumanTaskConfig != null && { HumanTaskConfig: se_HumanTaskConfig(input.HumanTaskConfig, context) }),
    ...(input.InputConfig != null && { InputConfig: se_LabelingJobInputConfig(input.InputConfig, context) }),
    ...(input.LabelAttributeName != null && { LabelAttributeName: input.LabelAttributeName }),
    ...(input.LabelCategoryConfigS3Uri != null && { LabelCategoryConfigS3Uri: input.LabelCategoryConfigS3Uri }),
    ...(input.LabelingJobAlgorithmsConfig != null && {
      LabelingJobAlgorithmsConfig: se_LabelingJobAlgorithmsConfig(input.LabelingJobAlgorithmsConfig, context),
    }),
    ...(input.LabelingJobName != null && { LabelingJobName: input.LabelingJobName }),
    ...(input.OutputConfig != null && { OutputConfig: se_LabelingJobOutputConfig(input.OutputConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingConditions != null && {
      StoppingConditions: se_LabelingJobStoppingConditions(input.StoppingConditions, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateModelBiasJobDefinitionRequest
 */
const se_CreateModelBiasJobDefinitionRequest = (
  input: CreateModelBiasJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
    ...(input.JobResources != null && { JobResources: se_MonitoringResources(input.JobResources, context) }),
    ...(input.ModelBiasAppSpecification != null && {
      ModelBiasAppSpecification: se_ModelBiasAppSpecification(input.ModelBiasAppSpecification, context),
    }),
    ...(input.ModelBiasBaselineConfig != null && {
      ModelBiasBaselineConfig: se_ModelBiasBaselineConfig(input.ModelBiasBaselineConfig, context),
    }),
    ...(input.ModelBiasJobInput != null && {
      ModelBiasJobInput: se_ModelBiasJobInput(input.ModelBiasJobInput, context),
    }),
    ...(input.ModelBiasJobOutputConfig != null && {
      ModelBiasJobOutputConfig: se_MonitoringOutputConfig(input.ModelBiasJobOutputConfig, context),
    }),
    ...(input.NetworkConfig != null && { NetworkConfig: se_MonitoringNetworkConfig(input.NetworkConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_MonitoringStoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateModelCardExportJobRequest
 */
const se_CreateModelCardExportJobRequest = (input: CreateModelCardExportJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.ModelCardExportJobName != null && { ModelCardExportJobName: input.ModelCardExportJobName }),
    ...(input.ModelCardName != null && { ModelCardName: input.ModelCardName }),
    ...(input.ModelCardVersion != null && { ModelCardVersion: input.ModelCardVersion }),
    ...(input.OutputConfig != null && { OutputConfig: se_ModelCardExportOutputConfig(input.OutputConfig, context) }),
  };
};

/**
 * serializeAws_json1_1CreateModelCardRequest
 */
const se_CreateModelCardRequest = (input: CreateModelCardRequest, context: __SerdeContext): any => {
  return {
    ...(input.Content != null && { Content: input.Content }),
    ...(input.ModelCardName != null && { ModelCardName: input.ModelCardName }),
    ...(input.ModelCardStatus != null && { ModelCardStatus: input.ModelCardStatus }),
    ...(input.SecurityConfig != null && { SecurityConfig: se_ModelCardSecurityConfig(input.SecurityConfig, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateModelExplainabilityJobDefinitionRequest
 */
const se_CreateModelExplainabilityJobDefinitionRequest = (
  input: CreateModelExplainabilityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
    ...(input.JobResources != null && { JobResources: se_MonitoringResources(input.JobResources, context) }),
    ...(input.ModelExplainabilityAppSpecification != null && {
      ModelExplainabilityAppSpecification: se_ModelExplainabilityAppSpecification(
        input.ModelExplainabilityAppSpecification,
        context
      ),
    }),
    ...(input.ModelExplainabilityBaselineConfig != null && {
      ModelExplainabilityBaselineConfig: se_ModelExplainabilityBaselineConfig(
        input.ModelExplainabilityBaselineConfig,
        context
      ),
    }),
    ...(input.ModelExplainabilityJobInput != null && {
      ModelExplainabilityJobInput: se_ModelExplainabilityJobInput(input.ModelExplainabilityJobInput, context),
    }),
    ...(input.ModelExplainabilityJobOutputConfig != null && {
      ModelExplainabilityJobOutputConfig: se_MonitoringOutputConfig(input.ModelExplainabilityJobOutputConfig, context),
    }),
    ...(input.NetworkConfig != null && { NetworkConfig: se_MonitoringNetworkConfig(input.NetworkConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_MonitoringStoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateModelInput
 */
const se_CreateModelInput = (input: CreateModelInput, context: __SerdeContext): any => {
  return {
    ...(input.Containers != null && { Containers: se_ContainerDefinitionList(input.Containers, context) }),
    ...(input.EnableNetworkIsolation != null && { EnableNetworkIsolation: input.EnableNetworkIsolation }),
    ...(input.ExecutionRoleArn != null && { ExecutionRoleArn: input.ExecutionRoleArn }),
    ...(input.InferenceExecutionConfig != null && {
      InferenceExecutionConfig: se_InferenceExecutionConfig(input.InferenceExecutionConfig, context),
    }),
    ...(input.ModelName != null && { ModelName: input.ModelName }),
    ...(input.PrimaryContainer != null && {
      PrimaryContainer: se_ContainerDefinition(input.PrimaryContainer, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.VpcConfig != null && { VpcConfig: se_VpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1CreateModelPackageGroupInput
 */
const se_CreateModelPackageGroupInput = (input: CreateModelPackageGroupInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageGroupDescription != null && {
      ModelPackageGroupDescription: input.ModelPackageGroupDescription,
    }),
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateModelPackageInput
 */
const se_CreateModelPackageInput = (input: CreateModelPackageInput, context: __SerdeContext): any => {
  return {
    ...(input.AdditionalInferenceSpecifications != null && {
      AdditionalInferenceSpecifications: se_AdditionalInferenceSpecifications(
        input.AdditionalInferenceSpecifications,
        context
      ),
    }),
    ...(input.CertifyForMarketplace != null && { CertifyForMarketplace: input.CertifyForMarketplace }),
    ClientToken: input.ClientToken ?? generateIdempotencyToken(),
    ...(input.CustomerMetadataProperties != null && {
      CustomerMetadataProperties: se_CustomerMetadataMap(input.CustomerMetadataProperties, context),
    }),
    ...(input.Domain != null && { Domain: input.Domain }),
    ...(input.DriftCheckBaselines != null && {
      DriftCheckBaselines: se_DriftCheckBaselines(input.DriftCheckBaselines, context),
    }),
    ...(input.InferenceSpecification != null && {
      InferenceSpecification: se_InferenceSpecification(input.InferenceSpecification, context),
    }),
    ...(input.MetadataProperties != null && {
      MetadataProperties: se_MetadataProperties(input.MetadataProperties, context),
    }),
    ...(input.ModelApprovalStatus != null && { ModelApprovalStatus: input.ModelApprovalStatus }),
    ...(input.ModelMetrics != null && { ModelMetrics: se_ModelMetrics(input.ModelMetrics, context) }),
    ...(input.ModelPackageDescription != null && { ModelPackageDescription: input.ModelPackageDescription }),
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
    ...(input.ModelPackageName != null && { ModelPackageName: input.ModelPackageName }),
    ...(input.SamplePayloadUrl != null && { SamplePayloadUrl: input.SamplePayloadUrl }),
    ...(input.SourceAlgorithmSpecification != null && {
      SourceAlgorithmSpecification: se_SourceAlgorithmSpecification(input.SourceAlgorithmSpecification, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.Task != null && { Task: input.Task }),
    ...(input.ValidationSpecification != null && {
      ValidationSpecification: se_ModelPackageValidationSpecification(input.ValidationSpecification, context),
    }),
  };
};

/**
 * serializeAws_json1_1CreateModelQualityJobDefinitionRequest
 */
const se_CreateModelQualityJobDefinitionRequest = (
  input: CreateModelQualityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
    ...(input.JobResources != null && { JobResources: se_MonitoringResources(input.JobResources, context) }),
    ...(input.ModelQualityAppSpecification != null && {
      ModelQualityAppSpecification: se_ModelQualityAppSpecification(input.ModelQualityAppSpecification, context),
    }),
    ...(input.ModelQualityBaselineConfig != null && {
      ModelQualityBaselineConfig: se_ModelQualityBaselineConfig(input.ModelQualityBaselineConfig, context),
    }),
    ...(input.ModelQualityJobInput != null && {
      ModelQualityJobInput: se_ModelQualityJobInput(input.ModelQualityJobInput, context),
    }),
    ...(input.ModelQualityJobOutputConfig != null && {
      ModelQualityJobOutputConfig: se_MonitoringOutputConfig(input.ModelQualityJobOutputConfig, context),
    }),
    ...(input.NetworkConfig != null && { NetworkConfig: se_MonitoringNetworkConfig(input.NetworkConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_MonitoringStoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateMonitoringScheduleRequest
 */
const se_CreateMonitoringScheduleRequest = (input: CreateMonitoringScheduleRequest, context: __SerdeContext): any => {
  return {
    ...(input.MonitoringScheduleConfig != null && {
      MonitoringScheduleConfig: se_MonitoringScheduleConfig(input.MonitoringScheduleConfig, context),
    }),
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateNotebookInstanceInput
 */
const se_CreateNotebookInstanceInput = (input: CreateNotebookInstanceInput, context: __SerdeContext): any => {
  return {
    ...(input.AcceleratorTypes != null && {
      AcceleratorTypes: se_NotebookInstanceAcceleratorTypes(input.AcceleratorTypes, context),
    }),
    ...(input.AdditionalCodeRepositories != null && {
      AdditionalCodeRepositories: se_AdditionalCodeRepositoryNamesOrUrls(input.AdditionalCodeRepositories, context),
    }),
    ...(input.DefaultCodeRepository != null && { DefaultCodeRepository: input.DefaultCodeRepository }),
    ...(input.DirectInternetAccess != null && { DirectInternetAccess: input.DirectInternetAccess }),
    ...(input.InstanceMetadataServiceConfiguration != null && {
      InstanceMetadataServiceConfiguration: se_InstanceMetadataServiceConfiguration(
        input.InstanceMetadataServiceConfiguration,
        context
      ),
    }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.LifecycleConfigName != null && { LifecycleConfigName: input.LifecycleConfigName }),
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
    ...(input.PlatformIdentifier != null && { PlatformIdentifier: input.PlatformIdentifier }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.RootAccess != null && { RootAccess: input.RootAccess }),
    ...(input.SecurityGroupIds != null && { SecurityGroupIds: se_SecurityGroupIds(input.SecurityGroupIds, context) }),
    ...(input.SubnetId != null && { SubnetId: input.SubnetId }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1CreateNotebookInstanceLifecycleConfigInput
 */
const se_CreateNotebookInstanceLifecycleConfigInput = (
  input: CreateNotebookInstanceLifecycleConfigInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.NotebookInstanceLifecycleConfigName != null && {
      NotebookInstanceLifecycleConfigName: input.NotebookInstanceLifecycleConfigName,
    }),
    ...(input.OnCreate != null && { OnCreate: se_NotebookInstanceLifecycleConfigList(input.OnCreate, context) }),
    ...(input.OnStart != null && { OnStart: se_NotebookInstanceLifecycleConfigList(input.OnStart, context) }),
  };
};

/**
 * serializeAws_json1_1CreatePipelineRequest
 */
const se_CreatePipelineRequest = (input: CreatePipelineRequest, context: __SerdeContext): any => {
  return {
    ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),
    ...(input.ParallelismConfiguration != null && {
      ParallelismConfiguration: se_ParallelismConfiguration(input.ParallelismConfiguration, context),
    }),
    ...(input.PipelineDefinition != null && { PipelineDefinition: input.PipelineDefinition }),
    ...(input.PipelineDefinitionS3Location != null && {
      PipelineDefinitionS3Location: se_PipelineDefinitionS3Location(input.PipelineDefinitionS3Location, context),
    }),
    ...(input.PipelineDescription != null && { PipelineDescription: input.PipelineDescription }),
    ...(input.PipelineDisplayName != null && { PipelineDisplayName: input.PipelineDisplayName }),
    ...(input.PipelineName != null && { PipelineName: input.PipelineName }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreatePresignedDomainUrlRequest
 */
const se_CreatePresignedDomainUrlRequest = (input: CreatePresignedDomainUrlRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.ExpiresInSeconds != null && { ExpiresInSeconds: input.ExpiresInSeconds }),
    ...(input.SessionExpirationDurationInSeconds != null && {
      SessionExpirationDurationInSeconds: input.SessionExpirationDurationInSeconds,
    }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
  };
};

/**
 * serializeAws_json1_1CreatePresignedNotebookInstanceUrlInput
 */
const se_CreatePresignedNotebookInstanceUrlInput = (
  input: CreatePresignedNotebookInstanceUrlInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
    ...(input.SessionExpirationDurationInSeconds != null && {
      SessionExpirationDurationInSeconds: input.SessionExpirationDurationInSeconds,
    }),
  };
};

/**
 * serializeAws_json1_1CreateProcessingJobRequest
 */
const se_CreateProcessingJobRequest = (input: CreateProcessingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppSpecification != null && { AppSpecification: se_AppSpecification(input.AppSpecification, context) }),
    ...(input.Environment != null && { Environment: se_ProcessingEnvironmentMap(input.Environment, context) }),
    ...(input.ExperimentConfig != null && { ExperimentConfig: se_ExperimentConfig(input.ExperimentConfig, context) }),
    ...(input.NetworkConfig != null && { NetworkConfig: se_NetworkConfig(input.NetworkConfig, context) }),
    ...(input.ProcessingInputs != null && { ProcessingInputs: se_ProcessingInputs(input.ProcessingInputs, context) }),
    ...(input.ProcessingJobName != null && { ProcessingJobName: input.ProcessingJobName }),
    ...(input.ProcessingOutputConfig != null && {
      ProcessingOutputConfig: se_ProcessingOutputConfig(input.ProcessingOutputConfig, context),
    }),
    ...(input.ProcessingResources != null && {
      ProcessingResources: se_ProcessingResources(input.ProcessingResources, context),
    }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_ProcessingStoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateProjectInput
 */
const se_CreateProjectInput = (input: CreateProjectInput, context: __SerdeContext): any => {
  return {
    ...(input.ProjectDescription != null && { ProjectDescription: input.ProjectDescription }),
    ...(input.ProjectName != null && { ProjectName: input.ProjectName }),
    ...(input.ServiceCatalogProvisioningDetails != null && {
      ServiceCatalogProvisioningDetails: se_ServiceCatalogProvisioningDetails(
        input.ServiceCatalogProvisioningDetails,
        context
      ),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateSpaceRequest
 */
const se_CreateSpaceRequest = (input: CreateSpaceRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
    ...(input.SpaceSettings != null && { SpaceSettings: se_SpaceSettings(input.SpaceSettings, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateStudioLifecycleConfigRequest
 */
const se_CreateStudioLifecycleConfigRequest = (
  input: CreateStudioLifecycleConfigRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.StudioLifecycleConfigAppType != null && {
      StudioLifecycleConfigAppType: input.StudioLifecycleConfigAppType,
    }),
    ...(input.StudioLifecycleConfigContent != null && {
      StudioLifecycleConfigContent: input.StudioLifecycleConfigContent,
    }),
    ...(input.StudioLifecycleConfigName != null && { StudioLifecycleConfigName: input.StudioLifecycleConfigName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1CreateTrainingJobRequest
 */
const se_CreateTrainingJobRequest = (input: CreateTrainingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.AlgorithmSpecification != null && {
      AlgorithmSpecification: se_AlgorithmSpecification(input.AlgorithmSpecification, context),
    }),
    ...(input.CheckpointConfig != null && { CheckpointConfig: se_CheckpointConfig(input.CheckpointConfig, context) }),
    ...(input.DebugHookConfig != null && { DebugHookConfig: se_DebugHookConfig(input.DebugHookConfig, context) }),
    ...(input.DebugRuleConfigurations != null && {
      DebugRuleConfigurations: se_DebugRuleConfigurations(input.DebugRuleConfigurations, context),
    }),
    ...(input.EnableInterContainerTrafficEncryption != null && {
      EnableInterContainerTrafficEncryption: input.EnableInterContainerTrafficEncryption,
    }),
    ...(input.EnableManagedSpotTraining != null && { EnableManagedSpotTraining: input.EnableManagedSpotTraining }),
    ...(input.EnableNetworkIsolation != null && { EnableNetworkIsolation: input.EnableNetworkIsolation }),
    ...(input.Environment != null && { Environment: se_TrainingEnvironmentMap(input.Environment, context) }),
    ...(input.ExperimentConfig != null && { ExperimentConfig: se_ExperimentConfig(input.ExperimentConfig, context) }),
    ...(input.HyperParameters != null && { HyperParameters: se_HyperParameters(input.HyperParameters, context) }),
    ...(input.InputDataConfig != null && { InputDataConfig: se_InputDataConfig(input.InputDataConfig, context) }),
    ...(input.OutputDataConfig != null && { OutputDataConfig: se_OutputDataConfig(input.OutputDataConfig, context) }),
    ...(input.ProfilerConfig != null && { ProfilerConfig: se_ProfilerConfig(input.ProfilerConfig, context) }),
    ...(input.ProfilerRuleConfigurations != null && {
      ProfilerRuleConfigurations: se_ProfilerRuleConfigurations(input.ProfilerRuleConfigurations, context),
    }),
    ...(input.ResourceConfig != null && { ResourceConfig: se_ResourceConfig(input.ResourceConfig, context) }),
    ...(input.RetryStrategy != null && { RetryStrategy: se_RetryStrategy(input.RetryStrategy, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_StoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.TensorBoardOutputConfig != null && {
      TensorBoardOutputConfig: se_TensorBoardOutputConfig(input.TensorBoardOutputConfig, context),
    }),
    ...(input.TrainingJobName != null && { TrainingJobName: input.TrainingJobName }),
    ...(input.VpcConfig != null && { VpcConfig: se_VpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1CreateTransformJobRequest
 */
const se_CreateTransformJobRequest = (input: CreateTransformJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.BatchStrategy != null && { BatchStrategy: input.BatchStrategy }),
    ...(input.DataCaptureConfig != null && {
      DataCaptureConfig: se_BatchDataCaptureConfig(input.DataCaptureConfig, context),
    }),
    ...(input.DataProcessing != null && { DataProcessing: se_DataProcessing(input.DataProcessing, context) }),
    ...(input.Environment != null && { Environment: se_TransformEnvironmentMap(input.Environment, context) }),
    ...(input.ExperimentConfig != null && { ExperimentConfig: se_ExperimentConfig(input.ExperimentConfig, context) }),
    ...(input.MaxConcurrentTransforms != null && { MaxConcurrentTransforms: input.MaxConcurrentTransforms }),
    ...(input.MaxPayloadInMB != null && { MaxPayloadInMB: input.MaxPayloadInMB }),
    ...(input.ModelClientConfig != null && {
      ModelClientConfig: se_ModelClientConfig(input.ModelClientConfig, context),
    }),
    ...(input.ModelName != null && { ModelName: input.ModelName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.TransformInput != null && { TransformInput: se_TransformInput(input.TransformInput, context) }),
    ...(input.TransformJobName != null && { TransformJobName: input.TransformJobName }),
    ...(input.TransformOutput != null && { TransformOutput: se_TransformOutput(input.TransformOutput, context) }),
    ...(input.TransformResources != null && {
      TransformResources: se_TransformResources(input.TransformResources, context),
    }),
  };
};

/**
 * serializeAws_json1_1CreateTrialComponentRequest
 */
const se_CreateTrialComponentRequest = (input: CreateTrialComponentRequest, context: __SerdeContext): any => {
  return {
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.EndTime != null && { EndTime: Math.round(input.EndTime.getTime() / 1000) }),
    ...(input.InputArtifacts != null && { InputArtifacts: se_TrialComponentArtifacts(input.InputArtifacts, context) }),
    ...(input.MetadataProperties != null && {
      MetadataProperties: se_MetadataProperties(input.MetadataProperties, context),
    }),
    ...(input.OutputArtifacts != null && {
      OutputArtifacts: se_TrialComponentArtifacts(input.OutputArtifacts, context),
    }),
    ...(input.Parameters != null && { Parameters: se_TrialComponentParameters(input.Parameters, context) }),
    ...(input.StartTime != null && { StartTime: Math.round(input.StartTime.getTime() / 1000) }),
    ...(input.Status != null && { Status: se_TrialComponentStatus(input.Status, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.TrialComponentName != null && { TrialComponentName: input.TrialComponentName }),
  };
};

/**
 * serializeAws_json1_1CreateTrialRequest
 */
const se_CreateTrialRequest = (input: CreateTrialRequest, context: __SerdeContext): any => {
  return {
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
    ...(input.MetadataProperties != null && {
      MetadataProperties: se_MetadataProperties(input.MetadataProperties, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1CreateUserProfileRequest
 */
const se_CreateUserProfileRequest = (input: CreateUserProfileRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.SingleSignOnUserIdentifier != null && { SingleSignOnUserIdentifier: input.SingleSignOnUserIdentifier }),
    ...(input.SingleSignOnUserValue != null && { SingleSignOnUserValue: input.SingleSignOnUserValue }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
    ...(input.UserSettings != null && { UserSettings: se_UserSettings(input.UserSettings, context) }),
  };
};

/**
 * serializeAws_json1_1CreateWorkforceRequest
 */
const se_CreateWorkforceRequest = (input: CreateWorkforceRequest, context: __SerdeContext): any => {
  return {
    ...(input.CognitoConfig != null && { CognitoConfig: se_CognitoConfig(input.CognitoConfig, context) }),
    ...(input.OidcConfig != null && { OidcConfig: se_OidcConfig(input.OidcConfig, context) }),
    ...(input.SourceIpConfig != null && { SourceIpConfig: se_SourceIpConfig(input.SourceIpConfig, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.WorkforceName != null && { WorkforceName: input.WorkforceName }),
    ...(input.WorkforceVpcConfig != null && {
      WorkforceVpcConfig: se_WorkforceVpcConfigRequest(input.WorkforceVpcConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1CreateWorkteamRequest
 */
const se_CreateWorkteamRequest = (input: CreateWorkteamRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.MemberDefinitions != null && {
      MemberDefinitions: se_MemberDefinitions(input.MemberDefinitions, context),
    }),
    ...(input.NotificationConfiguration != null && {
      NotificationConfiguration: se_NotificationConfiguration(input.NotificationConfiguration, context),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
    ...(input.WorkforceName != null && { WorkforceName: input.WorkforceName }),
    ...(input.WorkteamName != null && { WorkteamName: input.WorkteamName }),
  };
};

/**
 * serializeAws_json1_1CsvContentTypes
 */
const se_CsvContentTypes = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1CustomerMetadataKeyList
 */
const se_CustomerMetadataKeyList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1CustomerMetadataMap
 */
const se_CustomerMetadataMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1CustomImage
 */
const se_CustomImage = (input: CustomImage, context: __SerdeContext): any => {
  return {
    ...(input.AppImageConfigName != null && { AppImageConfigName: input.AppImageConfigName }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.ImageVersionNumber != null && { ImageVersionNumber: input.ImageVersionNumber }),
  };
};

/**
 * serializeAws_json1_1CustomImages
 */
const se_CustomImages = (input: CustomImage[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_CustomImage(entry, context);
    });
};

/**
 * serializeAws_json1_1DataCaptureConfig
 */
const se_DataCaptureConfig = (input: DataCaptureConfig, context: __SerdeContext): any => {
  return {
    ...(input.CaptureContentTypeHeader != null && {
      CaptureContentTypeHeader: se_CaptureContentTypeHeader(input.CaptureContentTypeHeader, context),
    }),
    ...(input.CaptureOptions != null && { CaptureOptions: se_CaptureOptionList(input.CaptureOptions, context) }),
    ...(input.DestinationS3Uri != null && { DestinationS3Uri: input.DestinationS3Uri }),
    ...(input.EnableCapture != null && { EnableCapture: input.EnableCapture }),
    ...(input.InitialSamplingPercentage != null && { InitialSamplingPercentage: input.InitialSamplingPercentage }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_json1_1DataCatalogConfig
 */
const se_DataCatalogConfig = (input: DataCatalogConfig, context: __SerdeContext): any => {
  return {
    ...(input.Catalog != null && { Catalog: input.Catalog }),
    ...(input.Database != null && { Database: input.Database }),
    ...(input.TableName != null && { TableName: input.TableName }),
  };
};

/**
 * serializeAws_json1_1DataProcessing
 */
const se_DataProcessing = (input: DataProcessing, context: __SerdeContext): any => {
  return {
    ...(input.InputFilter != null && { InputFilter: input.InputFilter }),
    ...(input.JoinSource != null && { JoinSource: input.JoinSource }),
    ...(input.OutputFilter != null && { OutputFilter: input.OutputFilter }),
  };
};

/**
 * serializeAws_json1_1DataQualityAppSpecification
 */
const se_DataQualityAppSpecification = (input: DataQualityAppSpecification, context: __SerdeContext): any => {
  return {
    ...(input.ContainerArguments != null && {
      ContainerArguments: se_MonitoringContainerArguments(input.ContainerArguments, context),
    }),
    ...(input.ContainerEntrypoint != null && {
      ContainerEntrypoint: se_ContainerEntrypoint(input.ContainerEntrypoint, context),
    }),
    ...(input.Environment != null && { Environment: se_MonitoringEnvironmentMap(input.Environment, context) }),
    ...(input.ImageUri != null && { ImageUri: input.ImageUri }),
    ...(input.PostAnalyticsProcessorSourceUri != null && {
      PostAnalyticsProcessorSourceUri: input.PostAnalyticsProcessorSourceUri,
    }),
    ...(input.RecordPreprocessorSourceUri != null && {
      RecordPreprocessorSourceUri: input.RecordPreprocessorSourceUri,
    }),
  };
};

/**
 * serializeAws_json1_1DataQualityBaselineConfig
 */
const se_DataQualityBaselineConfig = (input: DataQualityBaselineConfig, context: __SerdeContext): any => {
  return {
    ...(input.BaseliningJobName != null && { BaseliningJobName: input.BaseliningJobName }),
    ...(input.ConstraintsResource != null && {
      ConstraintsResource: se_MonitoringConstraintsResource(input.ConstraintsResource, context),
    }),
    ...(input.StatisticsResource != null && {
      StatisticsResource: se_MonitoringStatisticsResource(input.StatisticsResource, context),
    }),
  };
};

/**
 * serializeAws_json1_1DataQualityJobInput
 */
const se_DataQualityJobInput = (input: DataQualityJobInput, context: __SerdeContext): any => {
  return {
    ...(input.BatchTransformInput != null && {
      BatchTransformInput: se_BatchTransformInput(input.BatchTransformInput, context),
    }),
    ...(input.EndpointInput != null && { EndpointInput: se_EndpointInput(input.EndpointInput, context) }),
  };
};

/**
 * serializeAws_json1_1DatasetDefinition
 */
const se_DatasetDefinition = (input: DatasetDefinition, context: __SerdeContext): any => {
  return {
    ...(input.AthenaDatasetDefinition != null && {
      AthenaDatasetDefinition: se_AthenaDatasetDefinition(input.AthenaDatasetDefinition, context),
    }),
    ...(input.DataDistributionType != null && { DataDistributionType: input.DataDistributionType }),
    ...(input.InputMode != null && { InputMode: input.InputMode }),
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.RedshiftDatasetDefinition != null && {
      RedshiftDatasetDefinition: se_RedshiftDatasetDefinition(input.RedshiftDatasetDefinition, context),
    }),
  };
};

/**
 * serializeAws_json1_1DataSource
 */
const se_DataSource = (input: DataSource, context: __SerdeContext): any => {
  return {
    ...(input.FileSystemDataSource != null && {
      FileSystemDataSource: se_FileSystemDataSource(input.FileSystemDataSource, context),
    }),
    ...(input.S3DataSource != null && { S3DataSource: se_S3DataSource(input.S3DataSource, context) }),
  };
};

/**
 * serializeAws_json1_1DebugHookConfig
 */
const se_DebugHookConfig = (input: DebugHookConfig, context: __SerdeContext): any => {
  return {
    ...(input.CollectionConfigurations != null && {
      CollectionConfigurations: se_CollectionConfigurations(input.CollectionConfigurations, context),
    }),
    ...(input.HookParameters != null && { HookParameters: se_HookParameters(input.HookParameters, context) }),
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1DebugRuleConfiguration
 */
const se_DebugRuleConfiguration = (input: DebugRuleConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.RuleConfigurationName != null && { RuleConfigurationName: input.RuleConfigurationName }),
    ...(input.RuleEvaluatorImage != null && { RuleEvaluatorImage: input.RuleEvaluatorImage }),
    ...(input.RuleParameters != null && { RuleParameters: se_RuleParameters(input.RuleParameters, context) }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1DebugRuleConfigurations
 */
const se_DebugRuleConfigurations = (input: DebugRuleConfiguration[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_DebugRuleConfiguration(entry, context);
    });
};

/**
 * serializeAws_json1_1DefaultSpaceSettings
 */
const se_DefaultSpaceSettings = (input: DefaultSpaceSettings, context: __SerdeContext): any => {
  return {
    ...(input.ExecutionRole != null && { ExecutionRole: input.ExecutionRole }),
    ...(input.JupyterServerAppSettings != null && {
      JupyterServerAppSettings: se_JupyterServerAppSettings(input.JupyterServerAppSettings, context),
    }),
    ...(input.KernelGatewayAppSettings != null && {
      KernelGatewayAppSettings: se_KernelGatewayAppSettings(input.KernelGatewayAppSettings, context),
    }),
    ...(input.SecurityGroups != null && { SecurityGroups: se_SecurityGroupIds(input.SecurityGroups, context) }),
  };
};

/**
 * serializeAws_json1_1DeleteActionRequest
 */
const se_DeleteActionRequest = (input: DeleteActionRequest, context: __SerdeContext): any => {
  return {
    ...(input.ActionName != null && { ActionName: input.ActionName }),
  };
};

/**
 * serializeAws_json1_1DeleteAlgorithmInput
 */
const se_DeleteAlgorithmInput = (input: DeleteAlgorithmInput, context: __SerdeContext): any => {
  return {
    ...(input.AlgorithmName != null && { AlgorithmName: input.AlgorithmName }),
  };
};

/**
 * serializeAws_json1_1DeleteAppImageConfigRequest
 */
const se_DeleteAppImageConfigRequest = (input: DeleteAppImageConfigRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppImageConfigName != null && { AppImageConfigName: input.AppImageConfigName }),
  };
};

/**
 * serializeAws_json1_1DeleteAppRequest
 */
const se_DeleteAppRequest = (input: DeleteAppRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppName != null && { AppName: input.AppName }),
    ...(input.AppType != null && { AppType: input.AppType }),
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
  };
};

/**
 * serializeAws_json1_1DeleteArtifactRequest
 */
const se_DeleteArtifactRequest = (input: DeleteArtifactRequest, context: __SerdeContext): any => {
  return {
    ...(input.ArtifactArn != null && { ArtifactArn: input.ArtifactArn }),
    ...(input.Source != null && { Source: se_ArtifactSource(input.Source, context) }),
  };
};

/**
 * serializeAws_json1_1DeleteAssociationRequest
 */
const se_DeleteAssociationRequest = (input: DeleteAssociationRequest, context: __SerdeContext): any => {
  return {
    ...(input.DestinationArn != null && { DestinationArn: input.DestinationArn }),
    ...(input.SourceArn != null && { SourceArn: input.SourceArn }),
  };
};

/**
 * serializeAws_json1_1DeleteCodeRepositoryInput
 */
const se_DeleteCodeRepositoryInput = (input: DeleteCodeRepositoryInput, context: __SerdeContext): any => {
  return {
    ...(input.CodeRepositoryName != null && { CodeRepositoryName: input.CodeRepositoryName }),
  };
};

/**
 * serializeAws_json1_1DeleteContextRequest
 */
const se_DeleteContextRequest = (input: DeleteContextRequest, context: __SerdeContext): any => {
  return {
    ...(input.ContextName != null && { ContextName: input.ContextName }),
  };
};

/**
 * serializeAws_json1_1DeleteDataQualityJobDefinitionRequest
 */
const se_DeleteDataQualityJobDefinitionRequest = (
  input: DeleteDataQualityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DeleteDeviceFleetRequest
 */
const se_DeleteDeviceFleetRequest = (input: DeleteDeviceFleetRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
  };
};

/**
 * serializeAws_json1_1DeleteDomainRequest
 */
const se_DeleteDomainRequest = (input: DeleteDomainRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.RetentionPolicy != null && { RetentionPolicy: se_RetentionPolicy(input.RetentionPolicy, context) }),
  };
};

/**
 * serializeAws_json1_1DeleteEdgeDeploymentPlanRequest
 */
const se_DeleteEdgeDeploymentPlanRequest = (input: DeleteEdgeDeploymentPlanRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
  };
};

/**
 * serializeAws_json1_1DeleteEdgeDeploymentStageRequest
 */
const se_DeleteEdgeDeploymentStageRequest = (input: DeleteEdgeDeploymentStageRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
    ...(input.StageName != null && { StageName: input.StageName }),
  };
};

/**
 * serializeAws_json1_1DeleteEndpointConfigInput
 */
const se_DeleteEndpointConfigInput = (input: DeleteEndpointConfigInput, context: __SerdeContext): any => {
  return {
    ...(input.EndpointConfigName != null && { EndpointConfigName: input.EndpointConfigName }),
  };
};

/**
 * serializeAws_json1_1DeleteEndpointInput
 */
const se_DeleteEndpointInput = (input: DeleteEndpointInput, context: __SerdeContext): any => {
  return {
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
  };
};

/**
 * serializeAws_json1_1DeleteExperimentRequest
 */
const se_DeleteExperimentRequest = (input: DeleteExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
  };
};

/**
 * serializeAws_json1_1DeleteFeatureGroupRequest
 */
const se_DeleteFeatureGroupRequest = (input: DeleteFeatureGroupRequest, context: __SerdeContext): any => {
  return {
    ...(input.FeatureGroupName != null && { FeatureGroupName: input.FeatureGroupName }),
  };
};

/**
 * serializeAws_json1_1DeleteFlowDefinitionRequest
 */
const se_DeleteFlowDefinitionRequest = (input: DeleteFlowDefinitionRequest, context: __SerdeContext): any => {
  return {
    ...(input.FlowDefinitionName != null && { FlowDefinitionName: input.FlowDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DeleteHubContentRequest
 */
const se_DeleteHubContentRequest = (input: DeleteHubContentRequest, context: __SerdeContext): any => {
  return {
    ...(input.HubContentName != null && { HubContentName: input.HubContentName }),
    ...(input.HubContentType != null && { HubContentType: input.HubContentType }),
    ...(input.HubContentVersion != null && { HubContentVersion: input.HubContentVersion }),
    ...(input.HubName != null && { HubName: input.HubName }),
  };
};

/**
 * serializeAws_json1_1DeleteHubRequest
 */
const se_DeleteHubRequest = (input: DeleteHubRequest, context: __SerdeContext): any => {
  return {
    ...(input.HubName != null && { HubName: input.HubName }),
  };
};

/**
 * serializeAws_json1_1DeleteHumanTaskUiRequest
 */
const se_DeleteHumanTaskUiRequest = (input: DeleteHumanTaskUiRequest, context: __SerdeContext): any => {
  return {
    ...(input.HumanTaskUiName != null && { HumanTaskUiName: input.HumanTaskUiName }),
  };
};

/**
 * serializeAws_json1_1DeleteImageRequest
 */
const se_DeleteImageRequest = (input: DeleteImageRequest, context: __SerdeContext): any => {
  return {
    ...(input.ImageName != null && { ImageName: input.ImageName }),
  };
};

/**
 * serializeAws_json1_1DeleteImageVersionRequest
 */
const se_DeleteImageVersionRequest = (input: DeleteImageVersionRequest, context: __SerdeContext): any => {
  return {
    ...(input.Alias != null && { Alias: input.Alias }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_json1_1DeleteInferenceExperimentRequest
 */
const se_DeleteInferenceExperimentRequest = (input: DeleteInferenceExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_json1_1DeleteModelBiasJobDefinitionRequest
 */
const se_DeleteModelBiasJobDefinitionRequest = (
  input: DeleteModelBiasJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DeleteModelCardRequest
 */
const se_DeleteModelCardRequest = (input: DeleteModelCardRequest, context: __SerdeContext): any => {
  return {
    ...(input.ModelCardName != null && { ModelCardName: input.ModelCardName }),
  };
};

/**
 * serializeAws_json1_1DeleteModelExplainabilityJobDefinitionRequest
 */
const se_DeleteModelExplainabilityJobDefinitionRequest = (
  input: DeleteModelExplainabilityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DeleteModelInput
 */
const se_DeleteModelInput = (input: DeleteModelInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelName != null && { ModelName: input.ModelName }),
  };
};

/**
 * serializeAws_json1_1DeleteModelPackageGroupInput
 */
const se_DeleteModelPackageGroupInput = (input: DeleteModelPackageGroupInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
  };
};

/**
 * serializeAws_json1_1DeleteModelPackageGroupPolicyInput
 */
const se_DeleteModelPackageGroupPolicyInput = (
  input: DeleteModelPackageGroupPolicyInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
  };
};

/**
 * serializeAws_json1_1DeleteModelPackageInput
 */
const se_DeleteModelPackageInput = (input: DeleteModelPackageInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageName != null && { ModelPackageName: input.ModelPackageName }),
  };
};

/**
 * serializeAws_json1_1DeleteModelQualityJobDefinitionRequest
 */
const se_DeleteModelQualityJobDefinitionRequest = (
  input: DeleteModelQualityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DeleteMonitoringScheduleRequest
 */
const se_DeleteMonitoringScheduleRequest = (input: DeleteMonitoringScheduleRequest, context: __SerdeContext): any => {
  return {
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
  };
};

/**
 * serializeAws_json1_1DeleteNotebookInstanceInput
 */
const se_DeleteNotebookInstanceInput = (input: DeleteNotebookInstanceInput, context: __SerdeContext): any => {
  return {
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
  };
};

/**
 * serializeAws_json1_1DeleteNotebookInstanceLifecycleConfigInput
 */
const se_DeleteNotebookInstanceLifecycleConfigInput = (
  input: DeleteNotebookInstanceLifecycleConfigInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.NotebookInstanceLifecycleConfigName != null && {
      NotebookInstanceLifecycleConfigName: input.NotebookInstanceLifecycleConfigName,
    }),
  };
};

/**
 * serializeAws_json1_1DeletePipelineRequest
 */
const se_DeletePipelineRequest = (input: DeletePipelineRequest, context: __SerdeContext): any => {
  return {
    ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),
    ...(input.PipelineName != null && { PipelineName: input.PipelineName }),
  };
};

/**
 * serializeAws_json1_1DeleteProjectInput
 */
const se_DeleteProjectInput = (input: DeleteProjectInput, context: __SerdeContext): any => {
  return {
    ...(input.ProjectName != null && { ProjectName: input.ProjectName }),
  };
};

/**
 * serializeAws_json1_1DeleteSpaceRequest
 */
const se_DeleteSpaceRequest = (input: DeleteSpaceRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
  };
};

/**
 * serializeAws_json1_1DeleteStudioLifecycleConfigRequest
 */
const se_DeleteStudioLifecycleConfigRequest = (
  input: DeleteStudioLifecycleConfigRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.StudioLifecycleConfigName != null && { StudioLifecycleConfigName: input.StudioLifecycleConfigName }),
  };
};

/**
 * serializeAws_json1_1DeleteTagsInput
 */
const se_DeleteTagsInput = (input: DeleteTagsInput, context: __SerdeContext): any => {
  return {
    ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),
    ...(input.TagKeys != null && { TagKeys: se_TagKeyList(input.TagKeys, context) }),
  };
};

/**
 * serializeAws_json1_1DeleteTrialComponentRequest
 */
const se_DeleteTrialComponentRequest = (input: DeleteTrialComponentRequest, context: __SerdeContext): any => {
  return {
    ...(input.TrialComponentName != null && { TrialComponentName: input.TrialComponentName }),
  };
};

/**
 * serializeAws_json1_1DeleteTrialRequest
 */
const se_DeleteTrialRequest = (input: DeleteTrialRequest, context: __SerdeContext): any => {
  return {
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1DeleteUserProfileRequest
 */
const se_DeleteUserProfileRequest = (input: DeleteUserProfileRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
  };
};

/**
 * serializeAws_json1_1DeleteWorkforceRequest
 */
const se_DeleteWorkforceRequest = (input: DeleteWorkforceRequest, context: __SerdeContext): any => {
  return {
    ...(input.WorkforceName != null && { WorkforceName: input.WorkforceName }),
  };
};

/**
 * serializeAws_json1_1DeleteWorkteamRequest
 */
const se_DeleteWorkteamRequest = (input: DeleteWorkteamRequest, context: __SerdeContext): any => {
  return {
    ...(input.WorkteamName != null && { WorkteamName: input.WorkteamName }),
  };
};

/**
 * serializeAws_json1_1DeploymentConfig
 */
const se_DeploymentConfig = (input: DeploymentConfig, context: __SerdeContext): any => {
  return {
    ...(input.AutoRollbackConfiguration != null && {
      AutoRollbackConfiguration: se_AutoRollbackConfig(input.AutoRollbackConfiguration, context),
    }),
    ...(input.BlueGreenUpdatePolicy != null && {
      BlueGreenUpdatePolicy: se_BlueGreenUpdatePolicy(input.BlueGreenUpdatePolicy, context),
    }),
  };
};

/**
 * serializeAws_json1_1DeploymentStage
 */
const se_DeploymentStage = (input: DeploymentStage, context: __SerdeContext): any => {
  return {
    ...(input.DeploymentConfig != null && {
      DeploymentConfig: se_EdgeDeploymentConfig(input.DeploymentConfig, context),
    }),
    ...(input.DeviceSelectionConfig != null && {
      DeviceSelectionConfig: se_DeviceSelectionConfig(input.DeviceSelectionConfig, context),
    }),
    ...(input.StageName != null && { StageName: input.StageName }),
  };
};

/**
 * serializeAws_json1_1DeploymentStages
 */
const se_DeploymentStages = (input: DeploymentStage[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_DeploymentStage(entry, context);
    });
};

/**
 * serializeAws_json1_1DeregisterDevicesRequest
 */
const se_DeregisterDevicesRequest = (input: DeregisterDevicesRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.DeviceNames != null && { DeviceNames: se_DeviceNames(input.DeviceNames, context) }),
  };
};

/**
 * serializeAws_json1_1DescribeActionRequest
 */
const se_DescribeActionRequest = (input: DescribeActionRequest, context: __SerdeContext): any => {
  return {
    ...(input.ActionName != null && { ActionName: input.ActionName }),
  };
};

/**
 * serializeAws_json1_1DescribeAlgorithmInput
 */
const se_DescribeAlgorithmInput = (input: DescribeAlgorithmInput, context: __SerdeContext): any => {
  return {
    ...(input.AlgorithmName != null && { AlgorithmName: input.AlgorithmName }),
  };
};

/**
 * serializeAws_json1_1DescribeAppImageConfigRequest
 */
const se_DescribeAppImageConfigRequest = (input: DescribeAppImageConfigRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppImageConfigName != null && { AppImageConfigName: input.AppImageConfigName }),
  };
};

/**
 * serializeAws_json1_1DescribeAppRequest
 */
const se_DescribeAppRequest = (input: DescribeAppRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppName != null && { AppName: input.AppName }),
    ...(input.AppType != null && { AppType: input.AppType }),
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
  };
};

/**
 * serializeAws_json1_1DescribeArtifactRequest
 */
const se_DescribeArtifactRequest = (input: DescribeArtifactRequest, context: __SerdeContext): any => {
  return {
    ...(input.ArtifactArn != null && { ArtifactArn: input.ArtifactArn }),
  };
};

/**
 * serializeAws_json1_1DescribeAutoMLJobRequest
 */
const se_DescribeAutoMLJobRequest = (input: DescribeAutoMLJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.AutoMLJobName != null && { AutoMLJobName: input.AutoMLJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeAutoMLJobV2Request
 */
const se_DescribeAutoMLJobV2Request = (input: DescribeAutoMLJobV2Request, context: __SerdeContext): any => {
  return {
    ...(input.AutoMLJobName != null && { AutoMLJobName: input.AutoMLJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeCodeRepositoryInput
 */
const se_DescribeCodeRepositoryInput = (input: DescribeCodeRepositoryInput, context: __SerdeContext): any => {
  return {
    ...(input.CodeRepositoryName != null && { CodeRepositoryName: input.CodeRepositoryName }),
  };
};

/**
 * serializeAws_json1_1DescribeCompilationJobRequest
 */
const se_DescribeCompilationJobRequest = (input: DescribeCompilationJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.CompilationJobName != null && { CompilationJobName: input.CompilationJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeContextRequest
 */
const se_DescribeContextRequest = (input: DescribeContextRequest, context: __SerdeContext): any => {
  return {
    ...(input.ContextName != null && { ContextName: input.ContextName }),
  };
};

/**
 * serializeAws_json1_1DescribeDataQualityJobDefinitionRequest
 */
const se_DescribeDataQualityJobDefinitionRequest = (
  input: DescribeDataQualityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DescribeDeviceFleetRequest
 */
const se_DescribeDeviceFleetRequest = (input: DescribeDeviceFleetRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
  };
};

/**
 * serializeAws_json1_1DescribeDeviceRequest
 */
const se_DescribeDeviceRequest = (input: DescribeDeviceRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.DeviceName != null && { DeviceName: input.DeviceName }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  };
};

/**
 * serializeAws_json1_1DescribeDomainRequest
 */
const se_DescribeDomainRequest = (input: DescribeDomainRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
  };
};

/**
 * serializeAws_json1_1DescribeEdgeDeploymentPlanRequest
 */
const se_DescribeEdgeDeploymentPlanRequest = (
  input: DescribeEdgeDeploymentPlanRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  };
};

/**
 * serializeAws_json1_1DescribeEdgePackagingJobRequest
 */
const se_DescribeEdgePackagingJobRequest = (input: DescribeEdgePackagingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgePackagingJobName != null && { EdgePackagingJobName: input.EdgePackagingJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeEndpointConfigInput
 */
const se_DescribeEndpointConfigInput = (input: DescribeEndpointConfigInput, context: __SerdeContext): any => {
  return {
    ...(input.EndpointConfigName != null && { EndpointConfigName: input.EndpointConfigName }),
  };
};

/**
 * serializeAws_json1_1DescribeEndpointInput
 */
const se_DescribeEndpointInput = (input: DescribeEndpointInput, context: __SerdeContext): any => {
  return {
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
  };
};

/**
 * serializeAws_json1_1DescribeExperimentRequest
 */
const se_DescribeExperimentRequest = (input: DescribeExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
  };
};

/**
 * serializeAws_json1_1DescribeFeatureGroupRequest
 */
const se_DescribeFeatureGroupRequest = (input: DescribeFeatureGroupRequest, context: __SerdeContext): any => {
  return {
    ...(input.FeatureGroupName != null && { FeatureGroupName: input.FeatureGroupName }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  };
};

/**
 * serializeAws_json1_1DescribeFeatureMetadataRequest
 */
const se_DescribeFeatureMetadataRequest = (input: DescribeFeatureMetadataRequest, context: __SerdeContext): any => {
  return {
    ...(input.FeatureGroupName != null && { FeatureGroupName: input.FeatureGroupName }),
    ...(input.FeatureName != null && { FeatureName: input.FeatureName }),
  };
};

/**
 * serializeAws_json1_1DescribeFlowDefinitionRequest
 */
const se_DescribeFlowDefinitionRequest = (input: DescribeFlowDefinitionRequest, context: __SerdeContext): any => {
  return {
    ...(input.FlowDefinitionName != null && { FlowDefinitionName: input.FlowDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DescribeHubContentRequest
 */
const se_DescribeHubContentRequest = (input: DescribeHubContentRequest, context: __SerdeContext): any => {
  return {
    ...(input.HubContentName != null && { HubContentName: input.HubContentName }),
    ...(input.HubContentType != null && { HubContentType: input.HubContentType }),
    ...(input.HubContentVersion != null && { HubContentVersion: input.HubContentVersion }),
    ...(input.HubName != null && { HubName: input.HubName }),
  };
};

/**
 * serializeAws_json1_1DescribeHubRequest
 */
const se_DescribeHubRequest = (input: DescribeHubRequest, context: __SerdeContext): any => {
  return {
    ...(input.HubName != null && { HubName: input.HubName }),
  };
};

/**
 * serializeAws_json1_1DescribeHumanTaskUiRequest
 */
const se_DescribeHumanTaskUiRequest = (input: DescribeHumanTaskUiRequest, context: __SerdeContext): any => {
  return {
    ...(input.HumanTaskUiName != null && { HumanTaskUiName: input.HumanTaskUiName }),
  };
};

/**
 * serializeAws_json1_1DescribeHyperParameterTuningJobRequest
 */
const se_DescribeHyperParameterTuningJobRequest = (
  input: DescribeHyperParameterTuningJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.HyperParameterTuningJobName != null && {
      HyperParameterTuningJobName: input.HyperParameterTuningJobName,
    }),
  };
};

/**
 * serializeAws_json1_1DescribeImageRequest
 */
const se_DescribeImageRequest = (input: DescribeImageRequest, context: __SerdeContext): any => {
  return {
    ...(input.ImageName != null && { ImageName: input.ImageName }),
  };
};

/**
 * serializeAws_json1_1DescribeImageVersionRequest
 */
const se_DescribeImageVersionRequest = (input: DescribeImageVersionRequest, context: __SerdeContext): any => {
  return {
    ...(input.Alias != null && { Alias: input.Alias }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_json1_1DescribeInferenceExperimentRequest
 */
const se_DescribeInferenceExperimentRequest = (
  input: DescribeInferenceExperimentRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_json1_1DescribeInferenceRecommendationsJobRequest
 */
const se_DescribeInferenceRecommendationsJobRequest = (
  input: DescribeInferenceRecommendationsJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobName != null && { JobName: input.JobName }),
  };
};

/**
 * serializeAws_json1_1DescribeLabelingJobRequest
 */
const se_DescribeLabelingJobRequest = (input: DescribeLabelingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.LabelingJobName != null && { LabelingJobName: input.LabelingJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeLineageGroupRequest
 */
const se_DescribeLineageGroupRequest = (input: DescribeLineageGroupRequest, context: __SerdeContext): any => {
  return {
    ...(input.LineageGroupName != null && { LineageGroupName: input.LineageGroupName }),
  };
};

/**
 * serializeAws_json1_1DescribeModelBiasJobDefinitionRequest
 */
const se_DescribeModelBiasJobDefinitionRequest = (
  input: DescribeModelBiasJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DescribeModelCardExportJobRequest
 */
const se_DescribeModelCardExportJobRequest = (
  input: DescribeModelCardExportJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.ModelCardExportJobArn != null && { ModelCardExportJobArn: input.ModelCardExportJobArn }),
  };
};

/**
 * serializeAws_json1_1DescribeModelCardRequest
 */
const se_DescribeModelCardRequest = (input: DescribeModelCardRequest, context: __SerdeContext): any => {
  return {
    ...(input.ModelCardName != null && { ModelCardName: input.ModelCardName }),
    ...(input.ModelCardVersion != null && { ModelCardVersion: input.ModelCardVersion }),
  };
};

/**
 * serializeAws_json1_1DescribeModelExplainabilityJobDefinitionRequest
 */
const se_DescribeModelExplainabilityJobDefinitionRequest = (
  input: DescribeModelExplainabilityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DescribeModelInput
 */
const se_DescribeModelInput = (input: DescribeModelInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelName != null && { ModelName: input.ModelName }),
  };
};

/**
 * serializeAws_json1_1DescribeModelPackageGroupInput
 */
const se_DescribeModelPackageGroupInput = (input: DescribeModelPackageGroupInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
  };
};

/**
 * serializeAws_json1_1DescribeModelPackageInput
 */
const se_DescribeModelPackageInput = (input: DescribeModelPackageInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageName != null && { ModelPackageName: input.ModelPackageName }),
  };
};

/**
 * serializeAws_json1_1DescribeModelQualityJobDefinitionRequest
 */
const se_DescribeModelQualityJobDefinitionRequest = (
  input: DescribeModelQualityJobDefinitionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobDefinitionName != null && { JobDefinitionName: input.JobDefinitionName }),
  };
};

/**
 * serializeAws_json1_1DescribeMonitoringScheduleRequest
 */
const se_DescribeMonitoringScheduleRequest = (
  input: DescribeMonitoringScheduleRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
  };
};

/**
 * serializeAws_json1_1DescribeNotebookInstanceInput
 */
const se_DescribeNotebookInstanceInput = (input: DescribeNotebookInstanceInput, context: __SerdeContext): any => {
  return {
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
  };
};

/**
 * serializeAws_json1_1DescribeNotebookInstanceLifecycleConfigInput
 */
const se_DescribeNotebookInstanceLifecycleConfigInput = (
  input: DescribeNotebookInstanceLifecycleConfigInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.NotebookInstanceLifecycleConfigName != null && {
      NotebookInstanceLifecycleConfigName: input.NotebookInstanceLifecycleConfigName,
    }),
  };
};

/**
 * serializeAws_json1_1DescribePipelineDefinitionForExecutionRequest
 */
const se_DescribePipelineDefinitionForExecutionRequest = (
  input: DescribePipelineDefinitionForExecutionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.PipelineExecutionArn != null && { PipelineExecutionArn: input.PipelineExecutionArn }),
  };
};

/**
 * serializeAws_json1_1DescribePipelineExecutionRequest
 */
const se_DescribePipelineExecutionRequest = (input: DescribePipelineExecutionRequest, context: __SerdeContext): any => {
  return {
    ...(input.PipelineExecutionArn != null && { PipelineExecutionArn: input.PipelineExecutionArn }),
  };
};

/**
 * serializeAws_json1_1DescribePipelineRequest
 */
const se_DescribePipelineRequest = (input: DescribePipelineRequest, context: __SerdeContext): any => {
  return {
    ...(input.PipelineName != null && { PipelineName: input.PipelineName }),
  };
};

/**
 * serializeAws_json1_1DescribeProcessingJobRequest
 */
const se_DescribeProcessingJobRequest = (input: DescribeProcessingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.ProcessingJobName != null && { ProcessingJobName: input.ProcessingJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeProjectInput
 */
const se_DescribeProjectInput = (input: DescribeProjectInput, context: __SerdeContext): any => {
  return {
    ...(input.ProjectName != null && { ProjectName: input.ProjectName }),
  };
};

/**
 * serializeAws_json1_1DescribeSpaceRequest
 */
const se_DescribeSpaceRequest = (input: DescribeSpaceRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
  };
};

/**
 * serializeAws_json1_1DescribeStudioLifecycleConfigRequest
 */
const se_DescribeStudioLifecycleConfigRequest = (
  input: DescribeStudioLifecycleConfigRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.StudioLifecycleConfigName != null && { StudioLifecycleConfigName: input.StudioLifecycleConfigName }),
  };
};

/**
 * serializeAws_json1_1DescribeSubscribedWorkteamRequest
 */
const se_DescribeSubscribedWorkteamRequest = (
  input: DescribeSubscribedWorkteamRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.WorkteamArn != null && { WorkteamArn: input.WorkteamArn }),
  };
};

/**
 * serializeAws_json1_1DescribeTrainingJobRequest
 */
const se_DescribeTrainingJobRequest = (input: DescribeTrainingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.TrainingJobName != null && { TrainingJobName: input.TrainingJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeTransformJobRequest
 */
const se_DescribeTransformJobRequest = (input: DescribeTransformJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.TransformJobName != null && { TransformJobName: input.TransformJobName }),
  };
};

/**
 * serializeAws_json1_1DescribeTrialComponentRequest
 */
const se_DescribeTrialComponentRequest = (input: DescribeTrialComponentRequest, context: __SerdeContext): any => {
  return {
    ...(input.TrialComponentName != null && { TrialComponentName: input.TrialComponentName }),
  };
};

/**
 * serializeAws_json1_1DescribeTrialRequest
 */
const se_DescribeTrialRequest = (input: DescribeTrialRequest, context: __SerdeContext): any => {
  return {
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1DescribeUserProfileRequest
 */
const se_DescribeUserProfileRequest = (input: DescribeUserProfileRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
  };
};

/**
 * serializeAws_json1_1DescribeWorkforceRequest
 */
const se_DescribeWorkforceRequest = (input: DescribeWorkforceRequest, context: __SerdeContext): any => {
  return {
    ...(input.WorkforceName != null && { WorkforceName: input.WorkforceName }),
  };
};

/**
 * serializeAws_json1_1DescribeWorkteamRequest
 */
const se_DescribeWorkteamRequest = (input: DescribeWorkteamRequest, context: __SerdeContext): any => {
  return {
    ...(input.WorkteamName != null && { WorkteamName: input.WorkteamName }),
  };
};

/**
 * serializeAws_json1_1DesiredWeightAndCapacity
 */
const se_DesiredWeightAndCapacity = (input: DesiredWeightAndCapacity, context: __SerdeContext): any => {
  return {
    ...(input.DesiredInstanceCount != null && { DesiredInstanceCount: input.DesiredInstanceCount }),
    ...(input.DesiredWeight != null && { DesiredWeight: __serializeFloat(input.DesiredWeight) }),
    ...(input.VariantName != null && { VariantName: input.VariantName }),
  };
};

/**
 * serializeAws_json1_1DesiredWeightAndCapacityList
 */
const se_DesiredWeightAndCapacityList = (input: DesiredWeightAndCapacity[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_DesiredWeightAndCapacity(entry, context);
    });
};

/**
 * serializeAws_json1_1Device
 */
const se_Device = (input: Device, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DeviceName != null && { DeviceName: input.DeviceName }),
    ...(input.IotThingName != null && { IotThingName: input.IotThingName }),
  };
};

/**
 * serializeAws_json1_1DeviceNames
 */
const se_DeviceNames = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1Devices
 */
const se_Devices = (input: Device[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Device(entry, context);
    });
};

/**
 * serializeAws_json1_1DeviceSelectionConfig
 */
const se_DeviceSelectionConfig = (input: DeviceSelectionConfig, context: __SerdeContext): any => {
  return {
    ...(input.DeviceNameContains != null && { DeviceNameContains: input.DeviceNameContains }),
    ...(input.DeviceNames != null && { DeviceNames: se_DeviceNames(input.DeviceNames, context) }),
    ...(input.DeviceSubsetType != null && { DeviceSubsetType: input.DeviceSubsetType }),
    ...(input.Percentage != null && { Percentage: input.Percentage }),
  };
};

/**
 * serializeAws_json1_1DisableSagemakerServicecatalogPortfolioInput
 */
const se_DisableSagemakerServicecatalogPortfolioInput = (
  input: DisableSagemakerServicecatalogPortfolioInput,
  context: __SerdeContext
): any => {
  return {};
};

/**
 * serializeAws_json1_1DisassociateTrialComponentRequest
 */
const se_DisassociateTrialComponentRequest = (
  input: DisassociateTrialComponentRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.TrialComponentName != null && { TrialComponentName: input.TrialComponentName }),
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1DomainSecurityGroupIds
 */
const se_DomainSecurityGroupIds = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1DomainSettings
 */
const se_DomainSettings = (input: DomainSettings, context: __SerdeContext): any => {
  return {
    ...(input.ExecutionRoleIdentityConfig != null && {
      ExecutionRoleIdentityConfig: input.ExecutionRoleIdentityConfig,
    }),
    ...(input.RStudioServerProDomainSettings != null && {
      RStudioServerProDomainSettings: se_RStudioServerProDomainSettings(input.RStudioServerProDomainSettings, context),
    }),
    ...(input.SecurityGroupIds != null && {
      SecurityGroupIds: se_DomainSecurityGroupIds(input.SecurityGroupIds, context),
    }),
  };
};

/**
 * serializeAws_json1_1DomainSettingsForUpdate
 */
const se_DomainSettingsForUpdate = (input: DomainSettingsForUpdate, context: __SerdeContext): any => {
  return {
    ...(input.ExecutionRoleIdentityConfig != null && {
      ExecutionRoleIdentityConfig: input.ExecutionRoleIdentityConfig,
    }),
    ...(input.RStudioServerProDomainSettingsForUpdate != null && {
      RStudioServerProDomainSettingsForUpdate: se_RStudioServerProDomainSettingsForUpdate(
        input.RStudioServerProDomainSettingsForUpdate,
        context
      ),
    }),
    ...(input.SecurityGroupIds != null && {
      SecurityGroupIds: se_DomainSecurityGroupIds(input.SecurityGroupIds, context),
    }),
  };
};

/**
 * serializeAws_json1_1DriftCheckBaselines
 */
const se_DriftCheckBaselines = (input: DriftCheckBaselines, context: __SerdeContext): any => {
  return {
    ...(input.Bias != null && { Bias: se_DriftCheckBias(input.Bias, context) }),
    ...(input.Explainability != null && { Explainability: se_DriftCheckExplainability(input.Explainability, context) }),
    ...(input.ModelDataQuality != null && {
      ModelDataQuality: se_DriftCheckModelDataQuality(input.ModelDataQuality, context),
    }),
    ...(input.ModelQuality != null && { ModelQuality: se_DriftCheckModelQuality(input.ModelQuality, context) }),
  };
};

/**
 * serializeAws_json1_1DriftCheckBias
 */
const se_DriftCheckBias = (input: DriftCheckBias, context: __SerdeContext): any => {
  return {
    ...(input.ConfigFile != null && { ConfigFile: se_FileSource(input.ConfigFile, context) }),
    ...(input.PostTrainingConstraints != null && {
      PostTrainingConstraints: se_MetricsSource(input.PostTrainingConstraints, context),
    }),
    ...(input.PreTrainingConstraints != null && {
      PreTrainingConstraints: se_MetricsSource(input.PreTrainingConstraints, context),
    }),
  };
};

/**
 * serializeAws_json1_1DriftCheckExplainability
 */
const se_DriftCheckExplainability = (input: DriftCheckExplainability, context: __SerdeContext): any => {
  return {
    ...(input.ConfigFile != null && { ConfigFile: se_FileSource(input.ConfigFile, context) }),
    ...(input.Constraints != null && { Constraints: se_MetricsSource(input.Constraints, context) }),
  };
};

/**
 * serializeAws_json1_1DriftCheckModelDataQuality
 */
const se_DriftCheckModelDataQuality = (input: DriftCheckModelDataQuality, context: __SerdeContext): any => {
  return {
    ...(input.Constraints != null && { Constraints: se_MetricsSource(input.Constraints, context) }),
    ...(input.Statistics != null && { Statistics: se_MetricsSource(input.Statistics, context) }),
  };
};

/**
 * serializeAws_json1_1DriftCheckModelQuality
 */
const se_DriftCheckModelQuality = (input: DriftCheckModelQuality, context: __SerdeContext): any => {
  return {
    ...(input.Constraints != null && { Constraints: se_MetricsSource(input.Constraints, context) }),
    ...(input.Statistics != null && { Statistics: se_MetricsSource(input.Statistics, context) }),
  };
};

/**
 * serializeAws_json1_1EdgeDeploymentConfig
 */
const se_EdgeDeploymentConfig = (input: EdgeDeploymentConfig, context: __SerdeContext): any => {
  return {
    ...(input.FailureHandlingPolicy != null && { FailureHandlingPolicy: input.FailureHandlingPolicy }),
  };
};

/**
 * serializeAws_json1_1EdgeDeploymentModelConfig
 */
const se_EdgeDeploymentModelConfig = (input: EdgeDeploymentModelConfig, context: __SerdeContext): any => {
  return {
    ...(input.EdgePackagingJobName != null && { EdgePackagingJobName: input.EdgePackagingJobName }),
    ...(input.ModelHandle != null && { ModelHandle: input.ModelHandle }),
  };
};

/**
 * serializeAws_json1_1EdgeDeploymentModelConfigs
 */
const se_EdgeDeploymentModelConfigs = (input: EdgeDeploymentModelConfig[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_EdgeDeploymentModelConfig(entry, context);
    });
};

/**
 * serializeAws_json1_1EdgeOutputConfig
 */
const se_EdgeOutputConfig = (input: EdgeOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.PresetDeploymentConfig != null && { PresetDeploymentConfig: input.PresetDeploymentConfig }),
    ...(input.PresetDeploymentType != null && { PresetDeploymentType: input.PresetDeploymentType }),
    ...(input.S3OutputLocation != null && { S3OutputLocation: input.S3OutputLocation }),
  };
};

/**
 * serializeAws_json1_1EnableSagemakerServicecatalogPortfolioInput
 */
const se_EnableSagemakerServicecatalogPortfolioInput = (
  input: EnableSagemakerServicecatalogPortfolioInput,
  context: __SerdeContext
): any => {
  return {};
};

/**
 * serializeAws_json1_1EndpointInfo
 */
const se_EndpointInfo = (input: EndpointInfo, context: __SerdeContext): any => {
  return {
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
  };
};

/**
 * serializeAws_json1_1EndpointInput
 */
const se_EndpointInput = (input: EndpointInput, context: __SerdeContext): any => {
  return {
    ...(input.EndTimeOffset != null && { EndTimeOffset: input.EndTimeOffset }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.FeaturesAttribute != null && { FeaturesAttribute: input.FeaturesAttribute }),
    ...(input.InferenceAttribute != null && { InferenceAttribute: input.InferenceAttribute }),
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.ProbabilityAttribute != null && { ProbabilityAttribute: input.ProbabilityAttribute }),
    ...(input.ProbabilityThresholdAttribute != null && {
      ProbabilityThresholdAttribute: __serializeFloat(input.ProbabilityThresholdAttribute),
    }),
    ...(input.S3DataDistributionType != null && { S3DataDistributionType: input.S3DataDistributionType }),
    ...(input.S3InputMode != null && { S3InputMode: input.S3InputMode }),
    ...(input.StartTimeOffset != null && { StartTimeOffset: input.StartTimeOffset }),
  };
};

/**
 * serializeAws_json1_1EndpointInputConfiguration
 */
const se_EndpointInputConfiguration = (input: EndpointInputConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.EnvironmentParameterRanges != null && {
      EnvironmentParameterRanges: se_EnvironmentParameterRanges(input.EnvironmentParameterRanges, context),
    }),
    ...(input.InferenceSpecificationName != null && { InferenceSpecificationName: input.InferenceSpecificationName }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
  };
};

/**
 * serializeAws_json1_1EndpointInputConfigurations
 */
const se_EndpointInputConfigurations = (input: EndpointInputConfiguration[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_EndpointInputConfiguration(entry, context);
    });
};

/**
 * serializeAws_json1_1Endpoints
 */
const se_Endpoints = (input: EndpointInfo[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_EndpointInfo(entry, context);
    });
};

/**
 * serializeAws_json1_1EnvironmentMap
 */
const se_EnvironmentMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1EnvironmentParameterRanges
 */
const se_EnvironmentParameterRanges = (input: EnvironmentParameterRanges, context: __SerdeContext): any => {
  return {
    ...(input.CategoricalParameterRanges != null && {
      CategoricalParameterRanges: se_CategoricalParameters(input.CategoricalParameterRanges, context),
    }),
  };
};

/**
 * serializeAws_json1_1ExperimentConfig
 */
const se_ExperimentConfig = (input: ExperimentConfig, context: __SerdeContext): any => {
  return {
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
    ...(input.RunName != null && { RunName: input.RunName }),
    ...(input.TrialComponentDisplayName != null && { TrialComponentDisplayName: input.TrialComponentDisplayName }),
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1Explainability
 */
const se_Explainability = (input: Explainability, context: __SerdeContext): any => {
  return {
    ...(input.Report != null && { Report: se_MetricsSource(input.Report, context) }),
  };
};

/**
 * serializeAws_json1_1ExplainerConfig
 */
const se_ExplainerConfig = (input: ExplainerConfig, context: __SerdeContext): any => {
  return {
    ...(input.ClarifyExplainerConfig != null && {
      ClarifyExplainerConfig: se_ClarifyExplainerConfig(input.ClarifyExplainerConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1FeatureAdditions
 */
const se_FeatureAdditions = (input: FeatureDefinition[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_FeatureDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1FeatureDefinition
 */
const se_FeatureDefinition = (input: FeatureDefinition, context: __SerdeContext): any => {
  return {
    ...(input.FeatureName != null && { FeatureName: input.FeatureName }),
    ...(input.FeatureType != null && { FeatureType: input.FeatureType }),
  };
};

/**
 * serializeAws_json1_1FeatureDefinitions
 */
const se_FeatureDefinitions = (input: FeatureDefinition[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_FeatureDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1FeatureParameter
 */
const se_FeatureParameter = (input: FeatureParameter, context: __SerdeContext): any => {
  return {
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1FeatureParameterAdditions
 */
const se_FeatureParameterAdditions = (input: FeatureParameter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_FeatureParameter(entry, context);
    });
};

/**
 * serializeAws_json1_1FeatureParameterRemovals
 */
const se_FeatureParameterRemovals = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1FileSource
 */
const se_FileSource = (input: FileSource, context: __SerdeContext): any => {
  return {
    ...(input.ContentDigest != null && { ContentDigest: input.ContentDigest }),
    ...(input.ContentType != null && { ContentType: input.ContentType }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1FileSystemConfig
 */
const se_FileSystemConfig = (input: FileSystemConfig, context: __SerdeContext): any => {
  return {
    ...(input.DefaultGid != null && { DefaultGid: input.DefaultGid }),
    ...(input.DefaultUid != null && { DefaultUid: input.DefaultUid }),
    ...(input.MountPath != null && { MountPath: input.MountPath }),
  };
};

/**
 * serializeAws_json1_1FileSystemDataSource
 */
const se_FileSystemDataSource = (input: FileSystemDataSource, context: __SerdeContext): any => {
  return {
    ...(input.DirectoryPath != null && { DirectoryPath: input.DirectoryPath }),
    ...(input.FileSystemAccessMode != null && { FileSystemAccessMode: input.FileSystemAccessMode }),
    ...(input.FileSystemId != null && { FileSystemId: input.FileSystemId }),
    ...(input.FileSystemType != null && { FileSystemType: input.FileSystemType }),
  };
};

/**
 * serializeAws_json1_1Filter
 */
const se_Filter = (input: Filter, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Operator != null && { Operator: input.Operator }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1FilterList
 */
const se_FilterList = (input: Filter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Filter(entry, context);
    });
};

/**
 * serializeAws_json1_1FlowDefinitionOutputConfig
 */
const se_FlowDefinitionOutputConfig = (input: FlowDefinitionOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1FlowDefinitionTaskKeywords
 */
const se_FlowDefinitionTaskKeywords = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1GetDeviceFleetReportRequest
 */
const se_GetDeviceFleetReportRequest = (input: GetDeviceFleetReportRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
  };
};

/**
 * serializeAws_json1_1GetLineageGroupPolicyRequest
 */
const se_GetLineageGroupPolicyRequest = (input: GetLineageGroupPolicyRequest, context: __SerdeContext): any => {
  return {
    ...(input.LineageGroupName != null && { LineageGroupName: input.LineageGroupName }),
  };
};

/**
 * serializeAws_json1_1GetModelPackageGroupPolicyInput
 */
const se_GetModelPackageGroupPolicyInput = (input: GetModelPackageGroupPolicyInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
  };
};

/**
 * serializeAws_json1_1GetSagemakerServicecatalogPortfolioStatusInput
 */
const se_GetSagemakerServicecatalogPortfolioStatusInput = (
  input: GetSagemakerServicecatalogPortfolioStatusInput,
  context: __SerdeContext
): any => {
  return {};
};

/**
 * serializeAws_json1_1GetSearchSuggestionsRequest
 */
const se_GetSearchSuggestionsRequest = (input: GetSearchSuggestionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.Resource != null && { Resource: input.Resource }),
    ...(input.SuggestionQuery != null && { SuggestionQuery: se_SuggestionQuery(input.SuggestionQuery, context) }),
  };
};

/**
 * serializeAws_json1_1GitConfig
 */
const se_GitConfig = (input: GitConfig, context: __SerdeContext): any => {
  return {
    ...(input.Branch != null && { Branch: input.Branch }),
    ...(input.RepositoryUrl != null && { RepositoryUrl: input.RepositoryUrl }),
    ...(input.SecretArn != null && { SecretArn: input.SecretArn }),
  };
};

/**
 * serializeAws_json1_1GitConfigForUpdate
 */
const se_GitConfigForUpdate = (input: GitConfigForUpdate, context: __SerdeContext): any => {
  return {
    ...(input.SecretArn != null && { SecretArn: input.SecretArn }),
  };
};

/**
 * serializeAws_json1_1Groups
 */
const se_Groups = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1HookParameters
 */
const se_HookParameters = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1HubContentSearchKeywordList
 */
const se_HubContentSearchKeywordList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1HubS3StorageConfig
 */
const se_HubS3StorageConfig = (input: HubS3StorageConfig, context: __SerdeContext): any => {
  return {
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1HubSearchKeywordList
 */
const se_HubSearchKeywordList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1HumanLoopActivationConditionsConfig
 */
const se_HumanLoopActivationConditionsConfig = (
  input: HumanLoopActivationConditionsConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.HumanLoopActivationConditions != null && {
      HumanLoopActivationConditions: __LazyJsonString.fromObject(input.HumanLoopActivationConditions),
    }),
  };
};

/**
 * serializeAws_json1_1HumanLoopActivationConfig
 */
const se_HumanLoopActivationConfig = (input: HumanLoopActivationConfig, context: __SerdeContext): any => {
  return {
    ...(input.HumanLoopActivationConditionsConfig != null && {
      HumanLoopActivationConditionsConfig: se_HumanLoopActivationConditionsConfig(
        input.HumanLoopActivationConditionsConfig,
        context
      ),
    }),
  };
};

/**
 * serializeAws_json1_1HumanLoopConfig
 */
const se_HumanLoopConfig = (input: HumanLoopConfig, context: __SerdeContext): any => {
  return {
    ...(input.HumanTaskUiArn != null && { HumanTaskUiArn: input.HumanTaskUiArn }),
    ...(input.PublicWorkforceTaskPrice != null && {
      PublicWorkforceTaskPrice: se_PublicWorkforceTaskPrice(input.PublicWorkforceTaskPrice, context),
    }),
    ...(input.TaskAvailabilityLifetimeInSeconds != null && {
      TaskAvailabilityLifetimeInSeconds: input.TaskAvailabilityLifetimeInSeconds,
    }),
    ...(input.TaskCount != null && { TaskCount: input.TaskCount }),
    ...(input.TaskDescription != null && { TaskDescription: input.TaskDescription }),
    ...(input.TaskKeywords != null && { TaskKeywords: se_FlowDefinitionTaskKeywords(input.TaskKeywords, context) }),
    ...(input.TaskTimeLimitInSeconds != null && { TaskTimeLimitInSeconds: input.TaskTimeLimitInSeconds }),
    ...(input.TaskTitle != null && { TaskTitle: input.TaskTitle }),
    ...(input.WorkteamArn != null && { WorkteamArn: input.WorkteamArn }),
  };
};

/**
 * serializeAws_json1_1HumanLoopRequestSource
 */
const se_HumanLoopRequestSource = (input: HumanLoopRequestSource, context: __SerdeContext): any => {
  return {
    ...(input.AwsManagedHumanLoopRequestSource != null && {
      AwsManagedHumanLoopRequestSource: input.AwsManagedHumanLoopRequestSource,
    }),
  };
};

/**
 * serializeAws_json1_1HumanTaskConfig
 */
const se_HumanTaskConfig = (input: HumanTaskConfig, context: __SerdeContext): any => {
  return {
    ...(input.AnnotationConsolidationConfig != null && {
      AnnotationConsolidationConfig: se_AnnotationConsolidationConfig(input.AnnotationConsolidationConfig, context),
    }),
    ...(input.MaxConcurrentTaskCount != null && { MaxConcurrentTaskCount: input.MaxConcurrentTaskCount }),
    ...(input.NumberOfHumanWorkersPerDataObject != null && {
      NumberOfHumanWorkersPerDataObject: input.NumberOfHumanWorkersPerDataObject,
    }),
    ...(input.PreHumanTaskLambdaArn != null && { PreHumanTaskLambdaArn: input.PreHumanTaskLambdaArn }),
    ...(input.PublicWorkforceTaskPrice != null && {
      PublicWorkforceTaskPrice: se_PublicWorkforceTaskPrice(input.PublicWorkforceTaskPrice, context),
    }),
    ...(input.TaskAvailabilityLifetimeInSeconds != null && {
      TaskAvailabilityLifetimeInSeconds: input.TaskAvailabilityLifetimeInSeconds,
    }),
    ...(input.TaskDescription != null && { TaskDescription: input.TaskDescription }),
    ...(input.TaskKeywords != null && { TaskKeywords: se_TaskKeywords(input.TaskKeywords, context) }),
    ...(input.TaskTimeLimitInSeconds != null && { TaskTimeLimitInSeconds: input.TaskTimeLimitInSeconds }),
    ...(input.TaskTitle != null && { TaskTitle: input.TaskTitle }),
    ...(input.UiConfig != null && { UiConfig: se_UiConfig(input.UiConfig, context) }),
    ...(input.WorkteamArn != null && { WorkteamArn: input.WorkteamArn }),
  };
};

/**
 * serializeAws_json1_1HyperbandStrategyConfig
 */
const se_HyperbandStrategyConfig = (input: HyperbandStrategyConfig, context: __SerdeContext): any => {
  return {
    ...(input.MaxResource != null && { MaxResource: input.MaxResource }),
    ...(input.MinResource != null && { MinResource: input.MinResource }),
  };
};

/**
 * serializeAws_json1_1HyperParameterAlgorithmSpecification
 */
const se_HyperParameterAlgorithmSpecification = (
  input: HyperParameterAlgorithmSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.AlgorithmName != null && { AlgorithmName: input.AlgorithmName }),
    ...(input.MetricDefinitions != null && {
      MetricDefinitions: se_MetricDefinitionList(input.MetricDefinitions, context),
    }),
    ...(input.TrainingImage != null && { TrainingImage: input.TrainingImage }),
    ...(input.TrainingInputMode != null && { TrainingInputMode: input.TrainingInputMode }),
  };
};

/**
 * serializeAws_json1_1HyperParameters
 */
const se_HyperParameters = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1HyperParameterSpecification
 */
const se_HyperParameterSpecification = (input: HyperParameterSpecification, context: __SerdeContext): any => {
  return {
    ...(input.DefaultValue != null && { DefaultValue: input.DefaultValue }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.IsRequired != null && { IsRequired: input.IsRequired }),
    ...(input.IsTunable != null && { IsTunable: input.IsTunable }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Range != null && { Range: se_ParameterRange(input.Range, context) }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_json1_1HyperParameterSpecifications
 */
const se_HyperParameterSpecifications = (input: HyperParameterSpecification[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_HyperParameterSpecification(entry, context);
    });
};

/**
 * serializeAws_json1_1HyperParameterTrainingJobDefinition
 */
const se_HyperParameterTrainingJobDefinition = (
  input: HyperParameterTrainingJobDefinition,
  context: __SerdeContext
): any => {
  return {
    ...(input.AlgorithmSpecification != null && {
      AlgorithmSpecification: se_HyperParameterAlgorithmSpecification(input.AlgorithmSpecification, context),
    }),
    ...(input.CheckpointConfig != null && { CheckpointConfig: se_CheckpointConfig(input.CheckpointConfig, context) }),
    ...(input.DefinitionName != null && { DefinitionName: input.DefinitionName }),
    ...(input.EnableInterContainerTrafficEncryption != null && {
      EnableInterContainerTrafficEncryption: input.EnableInterContainerTrafficEncryption,
    }),
    ...(input.EnableManagedSpotTraining != null && { EnableManagedSpotTraining: input.EnableManagedSpotTraining }),
    ...(input.EnableNetworkIsolation != null && { EnableNetworkIsolation: input.EnableNetworkIsolation }),
    ...(input.Environment != null && {
      Environment: se_HyperParameterTrainingJobEnvironmentMap(input.Environment, context),
    }),
    ...(input.HyperParameterRanges != null && {
      HyperParameterRanges: se_ParameterRanges(input.HyperParameterRanges, context),
    }),
    ...(input.HyperParameterTuningResourceConfig != null && {
      HyperParameterTuningResourceConfig: se_HyperParameterTuningResourceConfig(
        input.HyperParameterTuningResourceConfig,
        context
      ),
    }),
    ...(input.InputDataConfig != null && { InputDataConfig: se_InputDataConfig(input.InputDataConfig, context) }),
    ...(input.OutputDataConfig != null && { OutputDataConfig: se_OutputDataConfig(input.OutputDataConfig, context) }),
    ...(input.ResourceConfig != null && { ResourceConfig: se_ResourceConfig(input.ResourceConfig, context) }),
    ...(input.RetryStrategy != null && { RetryStrategy: se_RetryStrategy(input.RetryStrategy, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StaticHyperParameters != null && {
      StaticHyperParameters: se_HyperParameters(input.StaticHyperParameters, context),
    }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_StoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.TuningObjective != null && {
      TuningObjective: se_HyperParameterTuningJobObjective(input.TuningObjective, context),
    }),
    ...(input.VpcConfig != null && { VpcConfig: se_VpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1HyperParameterTrainingJobDefinitions
 */
const se_HyperParameterTrainingJobDefinitions = (
  input: HyperParameterTrainingJobDefinition[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_HyperParameterTrainingJobDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1HyperParameterTrainingJobEnvironmentMap
 */
const se_HyperParameterTrainingJobEnvironmentMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1HyperParameterTuningInstanceConfig
 */
const se_HyperParameterTuningInstanceConfig = (
  input: HyperParameterTuningInstanceConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1HyperParameterTuningInstanceConfigs
 */
const se_HyperParameterTuningInstanceConfigs = (
  input: HyperParameterTuningInstanceConfig[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_HyperParameterTuningInstanceConfig(entry, context);
    });
};

/**
 * serializeAws_json1_1HyperParameterTuningJobConfig
 */
const se_HyperParameterTuningJobConfig = (input: HyperParameterTuningJobConfig, context: __SerdeContext): any => {
  return {
    ...(input.HyperParameterTuningJobObjective != null && {
      HyperParameterTuningJobObjective: se_HyperParameterTuningJobObjective(
        input.HyperParameterTuningJobObjective,
        context
      ),
    }),
    ...(input.ParameterRanges != null && { ParameterRanges: se_ParameterRanges(input.ParameterRanges, context) }),
    ...(input.RandomSeed != null && { RandomSeed: input.RandomSeed }),
    ...(input.ResourceLimits != null && { ResourceLimits: se_ResourceLimits(input.ResourceLimits, context) }),
    ...(input.Strategy != null && { Strategy: input.Strategy }),
    ...(input.StrategyConfig != null && {
      StrategyConfig: se_HyperParameterTuningJobStrategyConfig(input.StrategyConfig, context),
    }),
    ...(input.TrainingJobEarlyStoppingType != null && {
      TrainingJobEarlyStoppingType: input.TrainingJobEarlyStoppingType,
    }),
    ...(input.TuningJobCompletionCriteria != null && {
      TuningJobCompletionCriteria: se_TuningJobCompletionCriteria(input.TuningJobCompletionCriteria, context),
    }),
  };
};

/**
 * serializeAws_json1_1HyperParameterTuningJobObjective
 */
const se_HyperParameterTuningJobObjective = (input: HyperParameterTuningJobObjective, context: __SerdeContext): any => {
  return {
    ...(input.MetricName != null && { MetricName: input.MetricName }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_json1_1HyperParameterTuningJobObjectives
 */
const se_HyperParameterTuningJobObjectives = (
  input: HyperParameterTuningJobObjective[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_HyperParameterTuningJobObjective(entry, context);
    });
};

/**
 * serializeAws_json1_1HyperParameterTuningJobStrategyConfig
 */
const se_HyperParameterTuningJobStrategyConfig = (
  input: HyperParameterTuningJobStrategyConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.HyperbandStrategyConfig != null && {
      HyperbandStrategyConfig: se_HyperbandStrategyConfig(input.HyperbandStrategyConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1HyperParameterTuningJobWarmStartConfig
 */
const se_HyperParameterTuningJobWarmStartConfig = (
  input: HyperParameterTuningJobWarmStartConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.ParentHyperParameterTuningJobs != null && {
      ParentHyperParameterTuningJobs: se_ParentHyperParameterTuningJobs(input.ParentHyperParameterTuningJobs, context),
    }),
    ...(input.WarmStartType != null && { WarmStartType: input.WarmStartType }),
  };
};

/**
 * serializeAws_json1_1HyperParameterTuningResourceConfig
 */
const se_HyperParameterTuningResourceConfig = (
  input: HyperParameterTuningResourceConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.AllocationStrategy != null && { AllocationStrategy: input.AllocationStrategy }),
    ...(input.InstanceConfigs != null && {
      InstanceConfigs: se_HyperParameterTuningInstanceConfigs(input.InstanceConfigs, context),
    }),
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1ImageClassificationJobConfig
 */
const se_ImageClassificationJobConfig = (input: ImageClassificationJobConfig, context: __SerdeContext): any => {
  return {
    ...(input.CompletionCriteria != null && {
      CompletionCriteria: se_AutoMLJobCompletionCriteria(input.CompletionCriteria, context),
    }),
  };
};

/**
 * serializeAws_json1_1ImageConfig
 */
const se_ImageConfig = (input: ImageConfig, context: __SerdeContext): any => {
  return {
    ...(input.RepositoryAccessMode != null && { RepositoryAccessMode: input.RepositoryAccessMode }),
    ...(input.RepositoryAuthConfig != null && {
      RepositoryAuthConfig: se_RepositoryAuthConfig(input.RepositoryAuthConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1ImageDeletePropertyList
 */
const se_ImageDeletePropertyList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ImportHubContentRequest
 */
const se_ImportHubContentRequest = (input: ImportHubContentRequest, context: __SerdeContext): any => {
  return {
    ...(input.DocumentSchemaVersion != null && { DocumentSchemaVersion: input.DocumentSchemaVersion }),
    ...(input.HubContentDescription != null && { HubContentDescription: input.HubContentDescription }),
    ...(input.HubContentDisplayName != null && { HubContentDisplayName: input.HubContentDisplayName }),
    ...(input.HubContentDocument != null && { HubContentDocument: input.HubContentDocument }),
    ...(input.HubContentMarkdown != null && { HubContentMarkdown: input.HubContentMarkdown }),
    ...(input.HubContentName != null && { HubContentName: input.HubContentName }),
    ...(input.HubContentSearchKeywords != null && {
      HubContentSearchKeywords: se_HubContentSearchKeywordList(input.HubContentSearchKeywords, context),
    }),
    ...(input.HubContentType != null && { HubContentType: input.HubContentType }),
    ...(input.HubContentVersion != null && { HubContentVersion: input.HubContentVersion }),
    ...(input.HubName != null && { HubName: input.HubName }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1InferenceExecutionConfig
 */
const se_InferenceExecutionConfig = (input: InferenceExecutionConfig, context: __SerdeContext): any => {
  return {
    ...(input.Mode != null && { Mode: input.Mode }),
  };
};

/**
 * serializeAws_json1_1InferenceExperimentDataStorageConfig
 */
const se_InferenceExperimentDataStorageConfig = (
  input: InferenceExperimentDataStorageConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.ContentType != null && { ContentType: se_CaptureContentTypeHeader(input.ContentType, context) }),
    ...(input.Destination != null && { Destination: input.Destination }),
    ...(input.KmsKey != null && { KmsKey: input.KmsKey }),
  };
};

/**
 * serializeAws_json1_1InferenceExperimentSchedule
 */
const se_InferenceExperimentSchedule = (input: InferenceExperimentSchedule, context: __SerdeContext): any => {
  return {
    ...(input.EndTime != null && { EndTime: Math.round(input.EndTime.getTime() / 1000) }),
    ...(input.StartTime != null && { StartTime: Math.round(input.StartTime.getTime() / 1000) }),
  };
};

/**
 * serializeAws_json1_1InferenceSpecification
 */
const se_InferenceSpecification = (input: InferenceSpecification, context: __SerdeContext): any => {
  return {
    ...(input.Containers != null && { Containers: se_ModelPackageContainerDefinitionList(input.Containers, context) }),
    ...(input.SupportedContentTypes != null && {
      SupportedContentTypes: se_ContentTypes(input.SupportedContentTypes, context),
    }),
    ...(input.SupportedRealtimeInferenceInstanceTypes != null && {
      SupportedRealtimeInferenceInstanceTypes: se_RealtimeInferenceInstanceTypes(
        input.SupportedRealtimeInferenceInstanceTypes,
        context
      ),
    }),
    ...(input.SupportedResponseMIMETypes != null && {
      SupportedResponseMIMETypes: se_ResponseMIMETypes(input.SupportedResponseMIMETypes, context),
    }),
    ...(input.SupportedTransformInstanceTypes != null && {
      SupportedTransformInstanceTypes: se_TransformInstanceTypes(input.SupportedTransformInstanceTypes, context),
    }),
  };
};

/**
 * serializeAws_json1_1InputConfig
 */
const se_InputConfig = (input: InputConfig, context: __SerdeContext): any => {
  return {
    ...(input.DataInputConfig != null && { DataInputConfig: input.DataInputConfig }),
    ...(input.Framework != null && { Framework: input.Framework }),
    ...(input.FrameworkVersion != null && { FrameworkVersion: input.FrameworkVersion }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1InputDataConfig
 */
const se_InputDataConfig = (input: Channel[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Channel(entry, context);
    });
};

/**
 * serializeAws_json1_1InputModes
 */
const se_InputModes = (input: (TrainingInputMode | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1InstanceGroup
 */
const se_InstanceGroup = (input: InstanceGroup, context: __SerdeContext): any => {
  return {
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceGroupName != null && { InstanceGroupName: input.InstanceGroupName }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
  };
};

/**
 * serializeAws_json1_1InstanceGroupNames
 */
const se_InstanceGroupNames = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1InstanceGroups
 */
const se_InstanceGroups = (input: InstanceGroup[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_InstanceGroup(entry, context);
    });
};

/**
 * serializeAws_json1_1InstanceMetadataServiceConfiguration
 */
const se_InstanceMetadataServiceConfiguration = (
  input: InstanceMetadataServiceConfiguration,
  context: __SerdeContext
): any => {
  return {
    ...(input.MinimumInstanceMetadataServiceVersion != null && {
      MinimumInstanceMetadataServiceVersion: input.MinimumInstanceMetadataServiceVersion,
    }),
  };
};

/**
 * serializeAws_json1_1IntegerParameterRange
 */
const se_IntegerParameterRange = (input: IntegerParameterRange, context: __SerdeContext): any => {
  return {
    ...(input.MaxValue != null && { MaxValue: input.MaxValue }),
    ...(input.MinValue != null && { MinValue: input.MinValue }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.ScalingType != null && { ScalingType: input.ScalingType }),
  };
};

/**
 * serializeAws_json1_1IntegerParameterRanges
 */
const se_IntegerParameterRanges = (input: IntegerParameterRange[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_IntegerParameterRange(entry, context);
    });
};

/**
 * serializeAws_json1_1IntegerParameterRangeSpecification
 */
const se_IntegerParameterRangeSpecification = (
  input: IntegerParameterRangeSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.MaxValue != null && { MaxValue: input.MaxValue }),
    ...(input.MinValue != null && { MinValue: input.MinValue }),
  };
};

/**
 * serializeAws_json1_1JsonContentTypes
 */
const se_JsonContentTypes = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1JupyterServerAppSettings
 */
const se_JupyterServerAppSettings = (input: JupyterServerAppSettings, context: __SerdeContext): any => {
  return {
    ...(input.CodeRepositories != null && { CodeRepositories: se_CodeRepositories(input.CodeRepositories, context) }),
    ...(input.DefaultResourceSpec != null && {
      DefaultResourceSpec: se_ResourceSpec(input.DefaultResourceSpec, context),
    }),
    ...(input.LifecycleConfigArns != null && {
      LifecycleConfigArns: se_LifecycleConfigArns(input.LifecycleConfigArns, context),
    }),
  };
};

/**
 * serializeAws_json1_1KernelGatewayAppSettings
 */
const se_KernelGatewayAppSettings = (input: KernelGatewayAppSettings, context: __SerdeContext): any => {
  return {
    ...(input.CustomImages != null && { CustomImages: se_CustomImages(input.CustomImages, context) }),
    ...(input.DefaultResourceSpec != null && {
      DefaultResourceSpec: se_ResourceSpec(input.DefaultResourceSpec, context),
    }),
    ...(input.LifecycleConfigArns != null && {
      LifecycleConfigArns: se_LifecycleConfigArns(input.LifecycleConfigArns, context),
    }),
  };
};

/**
 * serializeAws_json1_1KernelGatewayImageConfig
 */
const se_KernelGatewayImageConfig = (input: KernelGatewayImageConfig, context: __SerdeContext): any => {
  return {
    ...(input.FileSystemConfig != null && { FileSystemConfig: se_FileSystemConfig(input.FileSystemConfig, context) }),
    ...(input.KernelSpecs != null && { KernelSpecs: se_KernelSpecs(input.KernelSpecs, context) }),
  };
};

/**
 * serializeAws_json1_1KernelSpec
 */
const se_KernelSpec = (input: KernelSpec, context: __SerdeContext): any => {
  return {
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_json1_1KernelSpecs
 */
const se_KernelSpecs = (input: KernelSpec[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_KernelSpec(entry, context);
    });
};

/**
 * serializeAws_json1_1LabelingJobAlgorithmsConfig
 */
const se_LabelingJobAlgorithmsConfig = (input: LabelingJobAlgorithmsConfig, context: __SerdeContext): any => {
  return {
    ...(input.InitialActiveLearningModelArn != null && {
      InitialActiveLearningModelArn: input.InitialActiveLearningModelArn,
    }),
    ...(input.LabelingJobAlgorithmSpecificationArn != null && {
      LabelingJobAlgorithmSpecificationArn: input.LabelingJobAlgorithmSpecificationArn,
    }),
    ...(input.LabelingJobResourceConfig != null && {
      LabelingJobResourceConfig: se_LabelingJobResourceConfig(input.LabelingJobResourceConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1LabelingJobDataAttributes
 */
const se_LabelingJobDataAttributes = (input: LabelingJobDataAttributes, context: __SerdeContext): any => {
  return {
    ...(input.ContentClassifiers != null && {
      ContentClassifiers: se_ContentClassifiers(input.ContentClassifiers, context),
    }),
  };
};

/**
 * serializeAws_json1_1LabelingJobDataSource
 */
const se_LabelingJobDataSource = (input: LabelingJobDataSource, context: __SerdeContext): any => {
  return {
    ...(input.S3DataSource != null && { S3DataSource: se_LabelingJobS3DataSource(input.S3DataSource, context) }),
    ...(input.SnsDataSource != null && { SnsDataSource: se_LabelingJobSnsDataSource(input.SnsDataSource, context) }),
  };
};

/**
 * serializeAws_json1_1LabelingJobInputConfig
 */
const se_LabelingJobInputConfig = (input: LabelingJobInputConfig, context: __SerdeContext): any => {
  return {
    ...(input.DataAttributes != null && {
      DataAttributes: se_LabelingJobDataAttributes(input.DataAttributes, context),
    }),
    ...(input.DataSource != null && { DataSource: se_LabelingJobDataSource(input.DataSource, context) }),
  };
};

/**
 * serializeAws_json1_1LabelingJobOutputConfig
 */
const se_LabelingJobOutputConfig = (input: LabelingJobOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
    ...(input.SnsTopicArn != null && { SnsTopicArn: input.SnsTopicArn }),
  };
};

/**
 * serializeAws_json1_1LabelingJobResourceConfig
 */
const se_LabelingJobResourceConfig = (input: LabelingJobResourceConfig, context: __SerdeContext): any => {
  return {
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
    ...(input.VpcConfig != null && { VpcConfig: se_VpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1LabelingJobS3DataSource
 */
const se_LabelingJobS3DataSource = (input: LabelingJobS3DataSource, context: __SerdeContext): any => {
  return {
    ...(input.ManifestS3Uri != null && { ManifestS3Uri: input.ManifestS3Uri }),
  };
};

/**
 * serializeAws_json1_1LabelingJobSnsDataSource
 */
const se_LabelingJobSnsDataSource = (input: LabelingJobSnsDataSource, context: __SerdeContext): any => {
  return {
    ...(input.SnsTopicArn != null && { SnsTopicArn: input.SnsTopicArn }),
  };
};

/**
 * serializeAws_json1_1LabelingJobStoppingConditions
 */
const se_LabelingJobStoppingConditions = (input: LabelingJobStoppingConditions, context: __SerdeContext): any => {
  return {
    ...(input.MaxHumanLabeledObjectCount != null && { MaxHumanLabeledObjectCount: input.MaxHumanLabeledObjectCount }),
    ...(input.MaxPercentageOfInputDatasetLabeled != null && {
      MaxPercentageOfInputDatasetLabeled: input.MaxPercentageOfInputDatasetLabeled,
    }),
  };
};

/**
 * serializeAws_json1_1LifecycleConfigArns
 */
const se_LifecycleConfigArns = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1LineageEntityParameters
 */
const se_LineageEntityParameters = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1ListActionsRequest
 */
const se_ListActionsRequest = (input: ListActionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.ActionType != null && { ActionType: input.ActionType }),
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.SourceUri != null && { SourceUri: input.SourceUri }),
  };
};

/**
 * serializeAws_json1_1ListAlgorithmsInput
 */
const se_ListAlgorithmsInput = (input: ListAlgorithmsInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListAliasesRequest
 */
const se_ListAliasesRequest = (input: ListAliasesRequest, context: __SerdeContext): any => {
  return {
    ...(input.Alias != null && { Alias: input.Alias }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_json1_1ListAppImageConfigsRequest
 */
const se_ListAppImageConfigsRequest = (input: ListAppImageConfigsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModifiedTimeAfter != null && { ModifiedTimeAfter: Math.round(input.ModifiedTimeAfter.getTime() / 1000) }),
    ...(input.ModifiedTimeBefore != null && {
      ModifiedTimeBefore: Math.round(input.ModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListAppsRequest
 */
const se_ListAppsRequest = (input: ListAppsRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainIdEquals != null && { DomainIdEquals: input.DomainIdEquals }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.SpaceNameEquals != null && { SpaceNameEquals: input.SpaceNameEquals }),
    ...(input.UserProfileNameEquals != null && { UserProfileNameEquals: input.UserProfileNameEquals }),
  };
};

/**
 * serializeAws_json1_1ListArtifactsRequest
 */
const se_ListArtifactsRequest = (input: ListArtifactsRequest, context: __SerdeContext): any => {
  return {
    ...(input.ArtifactType != null && { ArtifactType: input.ArtifactType }),
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.SourceUri != null && { SourceUri: input.SourceUri }),
  };
};

/**
 * serializeAws_json1_1ListAssociationsRequest
 */
const se_ListAssociationsRequest = (input: ListAssociationsRequest, context: __SerdeContext): any => {
  return {
    ...(input.AssociationType != null && { AssociationType: input.AssociationType }),
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.DestinationArn != null && { DestinationArn: input.DestinationArn }),
    ...(input.DestinationType != null && { DestinationType: input.DestinationType }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.SourceArn != null && { SourceArn: input.SourceArn }),
    ...(input.SourceType != null && { SourceType: input.SourceType }),
  };
};

/**
 * serializeAws_json1_1ListAutoMLJobsRequest
 */
const se_ListAutoMLJobsRequest = (input: ListAutoMLJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListCandidatesForAutoMLJobRequest
 */
const se_ListCandidatesForAutoMLJobRequest = (
  input: ListCandidatesForAutoMLJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.AutoMLJobName != null && { AutoMLJobName: input.AutoMLJobName }),
    ...(input.CandidateNameEquals != null && { CandidateNameEquals: input.CandidateNameEquals }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListCodeRepositoriesInput
 */
const se_ListCodeRepositoriesInput = (input: ListCodeRepositoriesInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListCompilationJobsRequest
 */
const se_ListCompilationJobsRequest = (input: ListCompilationJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListContextsRequest
 */
const se_ListContextsRequest = (input: ListContextsRequest, context: __SerdeContext): any => {
  return {
    ...(input.ContextType != null && { ContextType: input.ContextType }),
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.SourceUri != null && { SourceUri: input.SourceUri }),
  };
};

/**
 * serializeAws_json1_1ListDataQualityJobDefinitionsRequest
 */
const se_ListDataQualityJobDefinitionsRequest = (
  input: ListDataQualityJobDefinitionsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListDeviceFleetsRequest
 */
const se_ListDeviceFleetsRequest = (input: ListDeviceFleetsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListDevicesRequest
 */
const se_ListDevicesRequest = (input: ListDevicesRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.LatestHeartbeatAfter != null && {
      LatestHeartbeatAfter: Math.round(input.LatestHeartbeatAfter.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModelName != null && { ModelName: input.ModelName }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  };
};

/**
 * serializeAws_json1_1ListDomainsRequest
 */
const se_ListDomainsRequest = (input: ListDomainsRequest, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  };
};

/**
 * serializeAws_json1_1ListEdgeDeploymentPlansRequest
 */
const se_ListEdgeDeploymentPlansRequest = (input: ListEdgeDeploymentPlansRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.DeviceFleetNameContains != null && { DeviceFleetNameContains: input.DeviceFleetNameContains }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListEdgePackagingJobsRequest
 */
const se_ListEdgePackagingJobsRequest = (input: ListEdgePackagingJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModelNameContains != null && { ModelNameContains: input.ModelNameContains }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListEndpointConfigsInput
 */
const se_ListEndpointConfigsInput = (input: ListEndpointConfigsInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListEndpointsInput
 */
const se_ListEndpointsInput = (input: ListEndpointsInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListExperimentsRequest
 */
const se_ListExperimentsRequest = (input: ListExperimentsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListFeatureGroupsRequest
 */
const se_ListFeatureGroupsRequest = (input: ListFeatureGroupsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.FeatureGroupStatusEquals != null && { FeatureGroupStatusEquals: input.FeatureGroupStatusEquals }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.OfflineStoreStatusEquals != null && { OfflineStoreStatusEquals: input.OfflineStoreStatusEquals }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListFlowDefinitionsRequest
 */
const se_ListFlowDefinitionsRequest = (input: ListFlowDefinitionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListHubContentsRequest
 */
const se_ListHubContentsRequest = (input: ListHubContentsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.HubContentType != null && { HubContentType: input.HubContentType }),
    ...(input.HubName != null && { HubName: input.HubName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.MaxSchemaVersion != null && { MaxSchemaVersion: input.MaxSchemaVersion }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListHubContentVersionsRequest
 */
const se_ListHubContentVersionsRequest = (input: ListHubContentVersionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.HubContentName != null && { HubContentName: input.HubContentName }),
    ...(input.HubContentType != null && { HubContentType: input.HubContentType }),
    ...(input.HubName != null && { HubName: input.HubName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.MaxSchemaVersion != null && { MaxSchemaVersion: input.MaxSchemaVersion }),
    ...(input.MinVersion != null && { MinVersion: input.MinVersion }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListHubsRequest
 */
const se_ListHubsRequest = (input: ListHubsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListHumanTaskUisRequest
 */
const se_ListHumanTaskUisRequest = (input: ListHumanTaskUisRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListHyperParameterTuningJobsRequest
 */
const se_ListHyperParameterTuningJobsRequest = (
  input: ListHyperParameterTuningJobsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListImagesRequest
 */
const se_ListImagesRequest = (input: ListImagesRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListImageVersionsRequest
 */
const se_ListImageVersionsRequest = (input: ListImageVersionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListInferenceExperimentsRequest
 */
const se_ListInferenceExperimentsRequest = (input: ListInferenceExperimentsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
    ...(input.Type != null && { Type: input.Type }),
  };
};

/**
 * serializeAws_json1_1ListInferenceRecommendationsJobsRequest
 */
const se_ListInferenceRecommendationsJobsRequest = (
  input: ListInferenceRecommendationsJobsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListInferenceRecommendationsJobStepsRequest
 */
const se_ListInferenceRecommendationsJobStepsRequest = (
  input: ListInferenceRecommendationsJobStepsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobName != null && { JobName: input.JobName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.Status != null && { Status: input.Status }),
    ...(input.StepType != null && { StepType: input.StepType }),
  };
};

/**
 * serializeAws_json1_1ListLabelingJobsForWorkteamRequest
 */
const se_ListLabelingJobsForWorkteamRequest = (
  input: ListLabelingJobsForWorkteamRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.JobReferenceCodeContains != null && { JobReferenceCodeContains: input.JobReferenceCodeContains }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.WorkteamArn != null && { WorkteamArn: input.WorkteamArn }),
  };
};

/**
 * serializeAws_json1_1ListLabelingJobsRequest
 */
const se_ListLabelingJobsRequest = (input: ListLabelingJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListLineageEntityParameterKey
 */
const se_ListLineageEntityParameterKey = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ListLineageGroupsRequest
 */
const se_ListLineageGroupsRequest = (input: ListLineageGroupsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelBiasJobDefinitionsRequest
 */
const se_ListModelBiasJobDefinitionsRequest = (
  input: ListModelBiasJobDefinitionsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelCardExportJobsRequest
 */
const se_ListModelCardExportJobsRequest = (input: ListModelCardExportJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModelCardExportJobNameContains != null && {
      ModelCardExportJobNameContains: input.ModelCardExportJobNameContains,
    }),
    ...(input.ModelCardName != null && { ModelCardName: input.ModelCardName }),
    ...(input.ModelCardVersion != null && { ModelCardVersion: input.ModelCardVersion }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListModelCardsRequest
 */
const se_ListModelCardsRequest = (input: ListModelCardsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModelCardStatus != null && { ModelCardStatus: input.ModelCardStatus }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelCardVersionsRequest
 */
const se_ListModelCardVersionsRequest = (input: ListModelCardVersionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModelCardName != null && { ModelCardName: input.ModelCardName }),
    ...(input.ModelCardStatus != null && { ModelCardStatus: input.ModelCardStatus }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelExplainabilityJobDefinitionsRequest
 */
const se_ListModelExplainabilityJobDefinitionsRequest = (
  input: ListModelExplainabilityJobDefinitionsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelMetadataRequest
 */
const se_ListModelMetadataRequest = (input: ListModelMetadataRequest, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SearchExpression != null && {
      SearchExpression: se_ModelMetadataSearchExpression(input.SearchExpression, context),
    }),
  };
};

/**
 * serializeAws_json1_1ListModelPackageGroupsInput
 */
const se_ListModelPackageGroupsInput = (input: ListModelPackageGroupsInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelPackagesInput
 */
const se_ListModelPackagesInput = (input: ListModelPackagesInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModelApprovalStatus != null && { ModelApprovalStatus: input.ModelApprovalStatus }),
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
    ...(input.ModelPackageType != null && { ModelPackageType: input.ModelPackageType }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelQualityJobDefinitionsRequest
 */
const se_ListModelQualityJobDefinitionsRequest = (
  input: ListModelQualityJobDefinitionsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListModelsInput
 */
const se_ListModelsInput = (input: ListModelsInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListMonitoringAlertHistoryRequest
 */
const se_ListMonitoringAlertHistoryRequest = (
  input: ListMonitoringAlertHistoryRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.MonitoringAlertName != null && { MonitoringAlertName: input.MonitoringAlertName }),
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListMonitoringAlertsRequest
 */
const se_ListMonitoringAlertsRequest = (input: ListMonitoringAlertsRequest, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  };
};

/**
 * serializeAws_json1_1ListMonitoringExecutionsRequest
 */
const se_ListMonitoringExecutionsRequest = (input: ListMonitoringExecutionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.MonitoringJobDefinitionName != null && {
      MonitoringJobDefinitionName: input.MonitoringJobDefinitionName,
    }),
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
    ...(input.MonitoringTypeEquals != null && { MonitoringTypeEquals: input.MonitoringTypeEquals }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.ScheduledTimeAfter != null && {
      ScheduledTimeAfter: Math.round(input.ScheduledTimeAfter.getTime() / 1000),
    }),
    ...(input.ScheduledTimeBefore != null && {
      ScheduledTimeBefore: Math.round(input.ScheduledTimeBefore.getTime() / 1000),
    }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListMonitoringSchedulesRequest
 */
const se_ListMonitoringSchedulesRequest = (input: ListMonitoringSchedulesRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.MonitoringJobDefinitionName != null && {
      MonitoringJobDefinitionName: input.MonitoringJobDefinitionName,
    }),
    ...(input.MonitoringTypeEquals != null && { MonitoringTypeEquals: input.MonitoringTypeEquals }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListNotebookInstanceLifecycleConfigsInput
 */
const se_ListNotebookInstanceLifecycleConfigsInput = (
  input: ListNotebookInstanceLifecycleConfigsInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListNotebookInstancesInput
 */
const se_ListNotebookInstancesInput = (input: ListNotebookInstancesInput, context: __SerdeContext): any => {
  return {
    ...(input.AdditionalCodeRepositoryEquals != null && {
      AdditionalCodeRepositoryEquals: input.AdditionalCodeRepositoryEquals,
    }),
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.DefaultCodeRepositoryContains != null && {
      DefaultCodeRepositoryContains: input.DefaultCodeRepositoryContains,
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.NotebookInstanceLifecycleConfigNameContains != null && {
      NotebookInstanceLifecycleConfigNameContains: input.NotebookInstanceLifecycleConfigNameContains,
    }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListPipelineExecutionsRequest
 */
const se_ListPipelineExecutionsRequest = (input: ListPipelineExecutionsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.PipelineName != null && { PipelineName: input.PipelineName }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListPipelineExecutionStepsRequest
 */
const se_ListPipelineExecutionStepsRequest = (
  input: ListPipelineExecutionStepsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.PipelineExecutionArn != null && { PipelineExecutionArn: input.PipelineExecutionArn }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListPipelineParametersForExecutionRequest
 */
const se_ListPipelineParametersForExecutionRequest = (
  input: ListPipelineParametersForExecutionRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.PipelineExecutionArn != null && { PipelineExecutionArn: input.PipelineExecutionArn }),
  };
};

/**
 * serializeAws_json1_1ListPipelinesRequest
 */
const se_ListPipelinesRequest = (input: ListPipelinesRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.PipelineNamePrefix != null && { PipelineNamePrefix: input.PipelineNamePrefix }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListProcessingJobsRequest
 */
const se_ListProcessingJobsRequest = (input: ListProcessingJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListProjectsInput
 */
const se_ListProjectsInput = (input: ListProjectsInput, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListSpacesRequest
 */
const se_ListSpacesRequest = (input: ListSpacesRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainIdEquals != null && { DomainIdEquals: input.DomainIdEquals }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.SpaceNameContains != null && { SpaceNameContains: input.SpaceNameContains }),
  };
};

/**
 * serializeAws_json1_1ListStageDevicesRequest
 */
const se_ListStageDevicesRequest = (input: ListStageDevicesRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
    ...(input.ExcludeDevicesDeployedInOtherStage != null && {
      ExcludeDevicesDeployedInOtherStage: input.ExcludeDevicesDeployedInOtherStage,
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.StageName != null && { StageName: input.StageName }),
  };
};

/**
 * serializeAws_json1_1ListStudioLifecycleConfigsRequest
 */
const se_ListStudioLifecycleConfigsRequest = (
  input: ListStudioLifecycleConfigsRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.AppTypeEquals != null && { AppTypeEquals: input.AppTypeEquals }),
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.ModifiedTimeAfter != null && { ModifiedTimeAfter: Math.round(input.ModifiedTimeAfter.getTime() / 1000) }),
    ...(input.ModifiedTimeBefore != null && {
      ModifiedTimeBefore: Math.round(input.ModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListSubscribedWorkteamsRequest
 */
const se_ListSubscribedWorkteamsRequest = (input: ListSubscribedWorkteamsRequest, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
  };
};

/**
 * serializeAws_json1_1ListTagsInput
 */
const se_ListTagsInput = (input: ListTagsInput, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),
  };
};

/**
 * serializeAws_json1_1ListTrainingJobsForHyperParameterTuningJobRequest
 */
const se_ListTrainingJobsForHyperParameterTuningJobRequest = (
  input: ListTrainingJobsForHyperParameterTuningJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.HyperParameterTuningJobName != null && {
      HyperParameterTuningJobName: input.HyperParameterTuningJobName,
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListTrainingJobsRequest
 */
const se_ListTrainingJobsRequest = (input: ListTrainingJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
    ...(input.WarmPoolStatusEquals != null && { WarmPoolStatusEquals: input.WarmPoolStatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListTransformJobsRequest
 */
const se_ListTransformJobsRequest = (input: ListTransformJobsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreationTimeAfter != null && { CreationTimeAfter: Math.round(input.CreationTimeAfter.getTime() / 1000) }),
    ...(input.CreationTimeBefore != null && {
      CreationTimeBefore: Math.round(input.CreationTimeBefore.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeAfter != null && {
      LastModifiedTimeAfter: Math.round(input.LastModifiedTimeAfter.getTime() / 1000),
    }),
    ...(input.LastModifiedTimeBefore != null && {
      LastModifiedTimeBefore: Math.round(input.LastModifiedTimeBefore.getTime() / 1000),
    }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.StatusEquals != null && { StatusEquals: input.StatusEquals }),
  };
};

/**
 * serializeAws_json1_1ListTrialComponentKey256
 */
const se_ListTrialComponentKey256 = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ListTrialComponentsRequest
 */
const se_ListTrialComponentsRequest = (input: ListTrialComponentsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.SourceArn != null && { SourceArn: input.SourceArn }),
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1ListTrialsRequest
 */
const se_ListTrialsRequest = (input: ListTrialsRequest, context: __SerdeContext): any => {
  return {
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.TrialComponentName != null && { TrialComponentName: input.TrialComponentName }),
  };
};

/**
 * serializeAws_json1_1ListUserProfilesRequest
 */
const se_ListUserProfilesRequest = (input: ListUserProfilesRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainIdEquals != null && { DomainIdEquals: input.DomainIdEquals }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
    ...(input.UserProfileNameContains != null && { UserProfileNameContains: input.UserProfileNameContains }),
  };
};

/**
 * serializeAws_json1_1ListWorkforcesRequest
 */
const se_ListWorkforcesRequest = (input: ListWorkforcesRequest, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1ListWorkteamsRequest
 */
const se_ListWorkteamsRequest = (input: ListWorkteamsRequest, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NameContains != null && { NameContains: input.NameContains }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1MemberDefinition
 */
const se_MemberDefinition = (input: MemberDefinition, context: __SerdeContext): any => {
  return {
    ...(input.CognitoMemberDefinition != null && {
      CognitoMemberDefinition: se_CognitoMemberDefinition(input.CognitoMemberDefinition, context),
    }),
    ...(input.OidcMemberDefinition != null && {
      OidcMemberDefinition: se_OidcMemberDefinition(input.OidcMemberDefinition, context),
    }),
  };
};

/**
 * serializeAws_json1_1MemberDefinitions
 */
const se_MemberDefinitions = (input: MemberDefinition[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_MemberDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1MetadataProperties
 */
const se_MetadataProperties = (input: MetadataProperties, context: __SerdeContext): any => {
  return {
    ...(input.CommitId != null && { CommitId: input.CommitId }),
    ...(input.GeneratedBy != null && { GeneratedBy: input.GeneratedBy }),
    ...(input.ProjectId != null && { ProjectId: input.ProjectId }),
    ...(input.Repository != null && { Repository: input.Repository }),
  };
};

/**
 * serializeAws_json1_1MetricDefinition
 */
const se_MetricDefinition = (input: MetricDefinition, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Regex != null && { Regex: input.Regex }),
  };
};

/**
 * serializeAws_json1_1MetricDefinitionList
 */
const se_MetricDefinitionList = (input: MetricDefinition[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_MetricDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1MetricsSource
 */
const se_MetricsSource = (input: MetricsSource, context: __SerdeContext): any => {
  return {
    ...(input.ContentDigest != null && { ContentDigest: input.ContentDigest }),
    ...(input.ContentType != null && { ContentType: input.ContentType }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1ModelBiasAppSpecification
 */
const se_ModelBiasAppSpecification = (input: ModelBiasAppSpecification, context: __SerdeContext): any => {
  return {
    ...(input.ConfigUri != null && { ConfigUri: input.ConfigUri }),
    ...(input.Environment != null && { Environment: se_MonitoringEnvironmentMap(input.Environment, context) }),
    ...(input.ImageUri != null && { ImageUri: input.ImageUri }),
  };
};

/**
 * serializeAws_json1_1ModelBiasBaselineConfig
 */
const se_ModelBiasBaselineConfig = (input: ModelBiasBaselineConfig, context: __SerdeContext): any => {
  return {
    ...(input.BaseliningJobName != null && { BaseliningJobName: input.BaseliningJobName }),
    ...(input.ConstraintsResource != null && {
      ConstraintsResource: se_MonitoringConstraintsResource(input.ConstraintsResource, context),
    }),
  };
};

/**
 * serializeAws_json1_1ModelBiasJobInput
 */
const se_ModelBiasJobInput = (input: ModelBiasJobInput, context: __SerdeContext): any => {
  return {
    ...(input.BatchTransformInput != null && {
      BatchTransformInput: se_BatchTransformInput(input.BatchTransformInput, context),
    }),
    ...(input.EndpointInput != null && { EndpointInput: se_EndpointInput(input.EndpointInput, context) }),
    ...(input.GroundTruthS3Input != null && {
      GroundTruthS3Input: se_MonitoringGroundTruthS3Input(input.GroundTruthS3Input, context),
    }),
  };
};

/**
 * serializeAws_json1_1ModelCardExportOutputConfig
 */
const se_ModelCardExportOutputConfig = (input: ModelCardExportOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1ModelCardSecurityConfig
 */
const se_ModelCardSecurityConfig = (input: ModelCardSecurityConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_json1_1ModelClientConfig
 */
const se_ModelClientConfig = (input: ModelClientConfig, context: __SerdeContext): any => {
  return {
    ...(input.InvocationsMaxRetries != null && { InvocationsMaxRetries: input.InvocationsMaxRetries }),
    ...(input.InvocationsTimeoutInSeconds != null && {
      InvocationsTimeoutInSeconds: input.InvocationsTimeoutInSeconds,
    }),
  };
};

/**
 * serializeAws_json1_1ModelDataQuality
 */
const se_ModelDataQuality = (input: ModelDataQuality, context: __SerdeContext): any => {
  return {
    ...(input.Constraints != null && { Constraints: se_MetricsSource(input.Constraints, context) }),
    ...(input.Statistics != null && { Statistics: se_MetricsSource(input.Statistics, context) }),
  };
};

/**
 * serializeAws_json1_1ModelDeployConfig
 */
const se_ModelDeployConfig = (input: ModelDeployConfig, context: __SerdeContext): any => {
  return {
    ...(input.AutoGenerateEndpointName != null && { AutoGenerateEndpointName: input.AutoGenerateEndpointName }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
  };
};

/**
 * serializeAws_json1_1ModelExplainabilityAppSpecification
 */
const se_ModelExplainabilityAppSpecification = (
  input: ModelExplainabilityAppSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.ConfigUri != null && { ConfigUri: input.ConfigUri }),
    ...(input.Environment != null && { Environment: se_MonitoringEnvironmentMap(input.Environment, context) }),
    ...(input.ImageUri != null && { ImageUri: input.ImageUri }),
  };
};

/**
 * serializeAws_json1_1ModelExplainabilityBaselineConfig
 */
const se_ModelExplainabilityBaselineConfig = (
  input: ModelExplainabilityBaselineConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.BaseliningJobName != null && { BaseliningJobName: input.BaseliningJobName }),
    ...(input.ConstraintsResource != null && {
      ConstraintsResource: se_MonitoringConstraintsResource(input.ConstraintsResource, context),
    }),
  };
};

/**
 * serializeAws_json1_1ModelExplainabilityJobInput
 */
const se_ModelExplainabilityJobInput = (input: ModelExplainabilityJobInput, context: __SerdeContext): any => {
  return {
    ...(input.BatchTransformInput != null && {
      BatchTransformInput: se_BatchTransformInput(input.BatchTransformInput, context),
    }),
    ...(input.EndpointInput != null && { EndpointInput: se_EndpointInput(input.EndpointInput, context) }),
  };
};

/**
 * serializeAws_json1_1ModelInfrastructureConfig
 */
const se_ModelInfrastructureConfig = (input: ModelInfrastructureConfig, context: __SerdeContext): any => {
  return {
    ...(input.InfrastructureType != null && { InfrastructureType: input.InfrastructureType }),
    ...(input.RealTimeInferenceConfig != null && {
      RealTimeInferenceConfig: se_RealTimeInferenceConfig(input.RealTimeInferenceConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1ModelInput
 */
const se_ModelInput = (input: ModelInput, context: __SerdeContext): any => {
  return {
    ...(input.DataInputConfig != null && { DataInputConfig: input.DataInputConfig }),
  };
};

/**
 * serializeAws_json1_1ModelLatencyThreshold
 */
const se_ModelLatencyThreshold = (input: ModelLatencyThreshold, context: __SerdeContext): any => {
  return {
    ...(input.Percentile != null && { Percentile: input.Percentile }),
    ...(input.ValueInMilliseconds != null && { ValueInMilliseconds: input.ValueInMilliseconds }),
  };
};

/**
 * serializeAws_json1_1ModelLatencyThresholds
 */
const se_ModelLatencyThresholds = (input: ModelLatencyThreshold[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ModelLatencyThreshold(entry, context);
    });
};

/**
 * serializeAws_json1_1ModelMetadataFilter
 */
const se_ModelMetadataFilter = (input: ModelMetadataFilter, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1ModelMetadataFilters
 */
const se_ModelMetadataFilters = (input: ModelMetadataFilter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ModelMetadataFilter(entry, context);
    });
};

/**
 * serializeAws_json1_1ModelMetadataSearchExpression
 */
const se_ModelMetadataSearchExpression = (input: ModelMetadataSearchExpression, context: __SerdeContext): any => {
  return {
    ...(input.Filters != null && { Filters: se_ModelMetadataFilters(input.Filters, context) }),
  };
};

/**
 * serializeAws_json1_1ModelMetrics
 */
const se_ModelMetrics = (input: ModelMetrics, context: __SerdeContext): any => {
  return {
    ...(input.Bias != null && { Bias: se_Bias(input.Bias, context) }),
    ...(input.Explainability != null && { Explainability: se_Explainability(input.Explainability, context) }),
    ...(input.ModelDataQuality != null && { ModelDataQuality: se_ModelDataQuality(input.ModelDataQuality, context) }),
    ...(input.ModelQuality != null && { ModelQuality: se_ModelQuality(input.ModelQuality, context) }),
  };
};

/**
 * serializeAws_json1_1ModelPackageArnList
 */
const se_ModelPackageArnList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ModelPackageContainerDefinition
 */
const se_ModelPackageContainerDefinition = (input: ModelPackageContainerDefinition, context: __SerdeContext): any => {
  return {
    ...(input.ContainerHostname != null && { ContainerHostname: input.ContainerHostname }),
    ...(input.Environment != null && { Environment: se_EnvironmentMap(input.Environment, context) }),
    ...(input.Framework != null && { Framework: input.Framework }),
    ...(input.FrameworkVersion != null && { FrameworkVersion: input.FrameworkVersion }),
    ...(input.Image != null && { Image: input.Image }),
    ...(input.ImageDigest != null && { ImageDigest: input.ImageDigest }),
    ...(input.ModelDataUrl != null && { ModelDataUrl: input.ModelDataUrl }),
    ...(input.ModelInput != null && { ModelInput: se_ModelInput(input.ModelInput, context) }),
    ...(input.NearestModelName != null && { NearestModelName: input.NearestModelName }),
    ...(input.ProductId != null && { ProductId: input.ProductId }),
  };
};

/**
 * serializeAws_json1_1ModelPackageContainerDefinitionList
 */
const se_ModelPackageContainerDefinitionList = (
  input: ModelPackageContainerDefinition[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ModelPackageContainerDefinition(entry, context);
    });
};

/**
 * serializeAws_json1_1ModelPackageValidationProfile
 */
const se_ModelPackageValidationProfile = (input: ModelPackageValidationProfile, context: __SerdeContext): any => {
  return {
    ...(input.ProfileName != null && { ProfileName: input.ProfileName }),
    ...(input.TransformJobDefinition != null && {
      TransformJobDefinition: se_TransformJobDefinition(input.TransformJobDefinition, context),
    }),
  };
};

/**
 * serializeAws_json1_1ModelPackageValidationProfiles
 */
const se_ModelPackageValidationProfiles = (input: ModelPackageValidationProfile[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ModelPackageValidationProfile(entry, context);
    });
};

/**
 * serializeAws_json1_1ModelPackageValidationSpecification
 */
const se_ModelPackageValidationSpecification = (
  input: ModelPackageValidationSpecification,
  context: __SerdeContext
): any => {
  return {
    ...(input.ValidationProfiles != null && {
      ValidationProfiles: se_ModelPackageValidationProfiles(input.ValidationProfiles, context),
    }),
    ...(input.ValidationRole != null && { ValidationRole: input.ValidationRole }),
  };
};

/**
 * serializeAws_json1_1ModelQuality
 */
const se_ModelQuality = (input: ModelQuality, context: __SerdeContext): any => {
  return {
    ...(input.Constraints != null && { Constraints: se_MetricsSource(input.Constraints, context) }),
    ...(input.Statistics != null && { Statistics: se_MetricsSource(input.Statistics, context) }),
  };
};

/**
 * serializeAws_json1_1ModelQualityAppSpecification
 */
const se_ModelQualityAppSpecification = (input: ModelQualityAppSpecification, context: __SerdeContext): any => {
  return {
    ...(input.ContainerArguments != null && {
      ContainerArguments: se_MonitoringContainerArguments(input.ContainerArguments, context),
    }),
    ...(input.ContainerEntrypoint != null && {
      ContainerEntrypoint: se_ContainerEntrypoint(input.ContainerEntrypoint, context),
    }),
    ...(input.Environment != null && { Environment: se_MonitoringEnvironmentMap(input.Environment, context) }),
    ...(input.ImageUri != null && { ImageUri: input.ImageUri }),
    ...(input.PostAnalyticsProcessorSourceUri != null && {
      PostAnalyticsProcessorSourceUri: input.PostAnalyticsProcessorSourceUri,
    }),
    ...(input.ProblemType != null && { ProblemType: input.ProblemType }),
    ...(input.RecordPreprocessorSourceUri != null && {
      RecordPreprocessorSourceUri: input.RecordPreprocessorSourceUri,
    }),
  };
};

/**
 * serializeAws_json1_1ModelQualityBaselineConfig
 */
const se_ModelQualityBaselineConfig = (input: ModelQualityBaselineConfig, context: __SerdeContext): any => {
  return {
    ...(input.BaseliningJobName != null && { BaseliningJobName: input.BaseliningJobName }),
    ...(input.ConstraintsResource != null && {
      ConstraintsResource: se_MonitoringConstraintsResource(input.ConstraintsResource, context),
    }),
  };
};

/**
 * serializeAws_json1_1ModelQualityJobInput
 */
const se_ModelQualityJobInput = (input: ModelQualityJobInput, context: __SerdeContext): any => {
  return {
    ...(input.BatchTransformInput != null && {
      BatchTransformInput: se_BatchTransformInput(input.BatchTransformInput, context),
    }),
    ...(input.EndpointInput != null && { EndpointInput: se_EndpointInput(input.EndpointInput, context) }),
    ...(input.GroundTruthS3Input != null && {
      GroundTruthS3Input: se_MonitoringGroundTruthS3Input(input.GroundTruthS3Input, context),
    }),
  };
};

/**
 * serializeAws_json1_1ModelVariantActionMap
 */
const se_ModelVariantActionMap = (input: Record<string, ModelVariantAction | string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1ModelVariantConfig
 */
const se_ModelVariantConfig = (input: ModelVariantConfig, context: __SerdeContext): any => {
  return {
    ...(input.InfrastructureConfig != null && {
      InfrastructureConfig: se_ModelInfrastructureConfig(input.InfrastructureConfig, context),
    }),
    ...(input.ModelName != null && { ModelName: input.ModelName }),
    ...(input.VariantName != null && { VariantName: input.VariantName }),
  };
};

/**
 * serializeAws_json1_1ModelVariantConfigList
 */
const se_ModelVariantConfigList = (input: ModelVariantConfig[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ModelVariantConfig(entry, context);
    });
};

/**
 * serializeAws_json1_1MonitoringAppSpecification
 */
const se_MonitoringAppSpecification = (input: MonitoringAppSpecification, context: __SerdeContext): any => {
  return {
    ...(input.ContainerArguments != null && {
      ContainerArguments: se_MonitoringContainerArguments(input.ContainerArguments, context),
    }),
    ...(input.ContainerEntrypoint != null && {
      ContainerEntrypoint: se_ContainerEntrypoint(input.ContainerEntrypoint, context),
    }),
    ...(input.ImageUri != null && { ImageUri: input.ImageUri }),
    ...(input.PostAnalyticsProcessorSourceUri != null && {
      PostAnalyticsProcessorSourceUri: input.PostAnalyticsProcessorSourceUri,
    }),
    ...(input.RecordPreprocessorSourceUri != null && {
      RecordPreprocessorSourceUri: input.RecordPreprocessorSourceUri,
    }),
  };
};

/**
 * serializeAws_json1_1MonitoringBaselineConfig
 */
const se_MonitoringBaselineConfig = (input: MonitoringBaselineConfig, context: __SerdeContext): any => {
  return {
    ...(input.BaseliningJobName != null && { BaseliningJobName: input.BaseliningJobName }),
    ...(input.ConstraintsResource != null && {
      ConstraintsResource: se_MonitoringConstraintsResource(input.ConstraintsResource, context),
    }),
    ...(input.StatisticsResource != null && {
      StatisticsResource: se_MonitoringStatisticsResource(input.StatisticsResource, context),
    }),
  };
};

/**
 * serializeAws_json1_1MonitoringClusterConfig
 */
const se_MonitoringClusterConfig = (input: MonitoringClusterConfig, context: __SerdeContext): any => {
  return {
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1MonitoringConstraintsResource
 */
const se_MonitoringConstraintsResource = (input: MonitoringConstraintsResource, context: __SerdeContext): any => {
  return {
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1MonitoringContainerArguments
 */
const se_MonitoringContainerArguments = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1MonitoringCsvDatasetFormat
 */
const se_MonitoringCsvDatasetFormat = (input: MonitoringCsvDatasetFormat, context: __SerdeContext): any => {
  return {
    ...(input.Header != null && { Header: input.Header }),
  };
};

/**
 * serializeAws_json1_1MonitoringDatasetFormat
 */
const se_MonitoringDatasetFormat = (input: MonitoringDatasetFormat, context: __SerdeContext): any => {
  return {
    ...(input.Csv != null && { Csv: se_MonitoringCsvDatasetFormat(input.Csv, context) }),
    ...(input.Json != null && { Json: se_MonitoringJsonDatasetFormat(input.Json, context) }),
    ...(input.Parquet != null && { Parquet: se_MonitoringParquetDatasetFormat(input.Parquet, context) }),
  };
};

/**
 * serializeAws_json1_1MonitoringEnvironmentMap
 */
const se_MonitoringEnvironmentMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1MonitoringGroundTruthS3Input
 */
const se_MonitoringGroundTruthS3Input = (input: MonitoringGroundTruthS3Input, context: __SerdeContext): any => {
  return {
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1MonitoringInput
 */
const se_MonitoringInput = (input: MonitoringInput, context: __SerdeContext): any => {
  return {
    ...(input.BatchTransformInput != null && {
      BatchTransformInput: se_BatchTransformInput(input.BatchTransformInput, context),
    }),
    ...(input.EndpointInput != null && { EndpointInput: se_EndpointInput(input.EndpointInput, context) }),
  };
};

/**
 * serializeAws_json1_1MonitoringInputs
 */
const se_MonitoringInputs = (input: MonitoringInput[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_MonitoringInput(entry, context);
    });
};

/**
 * serializeAws_json1_1MonitoringJobDefinition
 */
const se_MonitoringJobDefinition = (input: MonitoringJobDefinition, context: __SerdeContext): any => {
  return {
    ...(input.BaselineConfig != null && { BaselineConfig: se_MonitoringBaselineConfig(input.BaselineConfig, context) }),
    ...(input.Environment != null && { Environment: se_MonitoringEnvironmentMap(input.Environment, context) }),
    ...(input.MonitoringAppSpecification != null && {
      MonitoringAppSpecification: se_MonitoringAppSpecification(input.MonitoringAppSpecification, context),
    }),
    ...(input.MonitoringInputs != null && { MonitoringInputs: se_MonitoringInputs(input.MonitoringInputs, context) }),
    ...(input.MonitoringOutputConfig != null && {
      MonitoringOutputConfig: se_MonitoringOutputConfig(input.MonitoringOutputConfig, context),
    }),
    ...(input.MonitoringResources != null && {
      MonitoringResources: se_MonitoringResources(input.MonitoringResources, context),
    }),
    ...(input.NetworkConfig != null && { NetworkConfig: se_NetworkConfig(input.NetworkConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_MonitoringStoppingCondition(input.StoppingCondition, context),
    }),
  };
};

/**
 * serializeAws_json1_1MonitoringJsonDatasetFormat
 */
const se_MonitoringJsonDatasetFormat = (input: MonitoringJsonDatasetFormat, context: __SerdeContext): any => {
  return {
    ...(input.Line != null && { Line: input.Line }),
  };
};

/**
 * serializeAws_json1_1MonitoringNetworkConfig
 */
const se_MonitoringNetworkConfig = (input: MonitoringNetworkConfig, context: __SerdeContext): any => {
  return {
    ...(input.EnableInterContainerTrafficEncryption != null && {
      EnableInterContainerTrafficEncryption: input.EnableInterContainerTrafficEncryption,
    }),
    ...(input.EnableNetworkIsolation != null && { EnableNetworkIsolation: input.EnableNetworkIsolation }),
    ...(input.VpcConfig != null && { VpcConfig: se_VpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1MonitoringOutput
 */
const se_MonitoringOutput = (input: MonitoringOutput, context: __SerdeContext): any => {
  return {
    ...(input.S3Output != null && { S3Output: se_MonitoringS3Output(input.S3Output, context) }),
  };
};

/**
 * serializeAws_json1_1MonitoringOutputConfig
 */
const se_MonitoringOutputConfig = (input: MonitoringOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.MonitoringOutputs != null && {
      MonitoringOutputs: se_MonitoringOutputs(input.MonitoringOutputs, context),
    }),
  };
};

/**
 * serializeAws_json1_1MonitoringOutputs
 */
const se_MonitoringOutputs = (input: MonitoringOutput[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_MonitoringOutput(entry, context);
    });
};

/**
 * serializeAws_json1_1MonitoringParquetDatasetFormat
 */
const se_MonitoringParquetDatasetFormat = (input: MonitoringParquetDatasetFormat, context: __SerdeContext): any => {
  return {};
};

/**
 * serializeAws_json1_1MonitoringResources
 */
const se_MonitoringResources = (input: MonitoringResources, context: __SerdeContext): any => {
  return {
    ...(input.ClusterConfig != null && { ClusterConfig: se_MonitoringClusterConfig(input.ClusterConfig, context) }),
  };
};

/**
 * serializeAws_json1_1MonitoringS3Output
 */
const se_MonitoringS3Output = (input: MonitoringS3Output, context: __SerdeContext): any => {
  return {
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.S3UploadMode != null && { S3UploadMode: input.S3UploadMode }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1MonitoringScheduleConfig
 */
const se_MonitoringScheduleConfig = (input: MonitoringScheduleConfig, context: __SerdeContext): any => {
  return {
    ...(input.MonitoringJobDefinition != null && {
      MonitoringJobDefinition: se_MonitoringJobDefinition(input.MonitoringJobDefinition, context),
    }),
    ...(input.MonitoringJobDefinitionName != null && {
      MonitoringJobDefinitionName: input.MonitoringJobDefinitionName,
    }),
    ...(input.MonitoringType != null && { MonitoringType: input.MonitoringType }),
    ...(input.ScheduleConfig != null && { ScheduleConfig: se_ScheduleConfig(input.ScheduleConfig, context) }),
  };
};

/**
 * serializeAws_json1_1MonitoringStatisticsResource
 */
const se_MonitoringStatisticsResource = (input: MonitoringStatisticsResource, context: __SerdeContext): any => {
  return {
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1MonitoringStoppingCondition
 */
const se_MonitoringStoppingCondition = (input: MonitoringStoppingCondition, context: __SerdeContext): any => {
  return {
    ...(input.MaxRuntimeInSeconds != null && { MaxRuntimeInSeconds: input.MaxRuntimeInSeconds }),
  };
};

/**
 * serializeAws_json1_1MultiModelConfig
 */
const se_MultiModelConfig = (input: MultiModelConfig, context: __SerdeContext): any => {
  return {
    ...(input.ModelCacheSetting != null && { ModelCacheSetting: input.ModelCacheSetting }),
  };
};

/**
 * serializeAws_json1_1NeoVpcConfig
 */
const se_NeoVpcConfig = (input: NeoVpcConfig, context: __SerdeContext): any => {
  return {
    ...(input.SecurityGroupIds != null && {
      SecurityGroupIds: se_NeoVpcSecurityGroupIds(input.SecurityGroupIds, context),
    }),
    ...(input.Subnets != null && { Subnets: se_NeoVpcSubnets(input.Subnets, context) }),
  };
};

/**
 * serializeAws_json1_1NeoVpcSecurityGroupIds
 */
const se_NeoVpcSecurityGroupIds = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1NeoVpcSubnets
 */
const se_NeoVpcSubnets = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1NestedFilters
 */
const se_NestedFilters = (input: NestedFilters, context: __SerdeContext): any => {
  return {
    ...(input.Filters != null && { Filters: se_FilterList(input.Filters, context) }),
    ...(input.NestedPropertyName != null && { NestedPropertyName: input.NestedPropertyName }),
  };
};

/**
 * serializeAws_json1_1NestedFiltersList
 */
const se_NestedFiltersList = (input: NestedFilters[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_NestedFilters(entry, context);
    });
};

/**
 * serializeAws_json1_1NetworkConfig
 */
const se_NetworkConfig = (input: NetworkConfig, context: __SerdeContext): any => {
  return {
    ...(input.EnableInterContainerTrafficEncryption != null && {
      EnableInterContainerTrafficEncryption: input.EnableInterContainerTrafficEncryption,
    }),
    ...(input.EnableNetworkIsolation != null && { EnableNetworkIsolation: input.EnableNetworkIsolation }),
    ...(input.VpcConfig != null && { VpcConfig: se_VpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1NotebookInstanceAcceleratorTypes
 */
const se_NotebookInstanceAcceleratorTypes = (
  input: (NotebookInstanceAcceleratorType | string)[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1NotebookInstanceLifecycleConfigList
 */
const se_NotebookInstanceLifecycleConfigList = (
  input: NotebookInstanceLifecycleHook[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_NotebookInstanceLifecycleHook(entry, context);
    });
};

/**
 * serializeAws_json1_1NotebookInstanceLifecycleHook
 */
const se_NotebookInstanceLifecycleHook = (input: NotebookInstanceLifecycleHook, context: __SerdeContext): any => {
  return {
    ...(input.Content != null && { Content: input.Content }),
  };
};

/**
 * serializeAws_json1_1NotificationConfiguration
 */
const se_NotificationConfiguration = (input: NotificationConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.NotificationTopicArn != null && { NotificationTopicArn: input.NotificationTopicArn }),
  };
};

/**
 * serializeAws_json1_1OfflineStoreConfig
 */
const se_OfflineStoreConfig = (input: OfflineStoreConfig, context: __SerdeContext): any => {
  return {
    ...(input.DataCatalogConfig != null && {
      DataCatalogConfig: se_DataCatalogConfig(input.DataCatalogConfig, context),
    }),
    ...(input.DisableGlueTableCreation != null && { DisableGlueTableCreation: input.DisableGlueTableCreation }),
    ...(input.S3StorageConfig != null && { S3StorageConfig: se_S3StorageConfig(input.S3StorageConfig, context) }),
    ...(input.TableFormat != null && { TableFormat: input.TableFormat }),
  };
};

/**
 * serializeAws_json1_1OidcConfig
 */
const se_OidcConfig = (input: OidcConfig, context: __SerdeContext): any => {
  return {
    ...(input.AuthorizationEndpoint != null && { AuthorizationEndpoint: input.AuthorizationEndpoint }),
    ...(input.ClientId != null && { ClientId: input.ClientId }),
    ...(input.ClientSecret != null && { ClientSecret: input.ClientSecret }),
    ...(input.Issuer != null && { Issuer: input.Issuer }),
    ...(input.JwksUri != null && { JwksUri: input.JwksUri }),
    ...(input.LogoutEndpoint != null && { LogoutEndpoint: input.LogoutEndpoint }),
    ...(input.TokenEndpoint != null && { TokenEndpoint: input.TokenEndpoint }),
    ...(input.UserInfoEndpoint != null && { UserInfoEndpoint: input.UserInfoEndpoint }),
  };
};

/**
 * serializeAws_json1_1OidcMemberDefinition
 */
const se_OidcMemberDefinition = (input: OidcMemberDefinition, context: __SerdeContext): any => {
  return {
    ...(input.Groups != null && { Groups: se_Groups(input.Groups, context) }),
  };
};

/**
 * serializeAws_json1_1OnlineStoreConfig
 */
const se_OnlineStoreConfig = (input: OnlineStoreConfig, context: __SerdeContext): any => {
  return {
    ...(input.EnableOnlineStore != null && { EnableOnlineStore: input.EnableOnlineStore }),
    ...(input.SecurityConfig != null && {
      SecurityConfig: se_OnlineStoreSecurityConfig(input.SecurityConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1OnlineStoreSecurityConfig
 */
const se_OnlineStoreSecurityConfig = (input: OnlineStoreSecurityConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_json1_1OutputConfig
 */
const se_OutputConfig = (input: OutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.CompilerOptions != null && { CompilerOptions: input.CompilerOptions }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.S3OutputLocation != null && { S3OutputLocation: input.S3OutputLocation }),
    ...(input.TargetDevice != null && { TargetDevice: input.TargetDevice }),
    ...(input.TargetPlatform != null && { TargetPlatform: se_TargetPlatform(input.TargetPlatform, context) }),
  };
};

/**
 * serializeAws_json1_1OutputDataConfig
 */
const se_OutputDataConfig = (input: OutputDataConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1OutputParameter
 */
const se_OutputParameter = (input: OutputParameter, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1OutputParameterList
 */
const se_OutputParameterList = (input: OutputParameter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_OutputParameter(entry, context);
    });
};

/**
 * serializeAws_json1_1ParallelismConfiguration
 */
const se_ParallelismConfiguration = (input: ParallelismConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.MaxParallelExecutionSteps != null && { MaxParallelExecutionSteps: input.MaxParallelExecutionSteps }),
  };
};

/**
 * serializeAws_json1_1Parameter
 */
const se_Parameter = (input: Parameter, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1ParameterList
 */
const se_ParameterList = (input: Parameter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Parameter(entry, context);
    });
};

/**
 * serializeAws_json1_1ParameterRange
 */
const se_ParameterRange = (input: ParameterRange, context: __SerdeContext): any => {
  return {
    ...(input.CategoricalParameterRangeSpecification != null && {
      CategoricalParameterRangeSpecification: se_CategoricalParameterRangeSpecification(
        input.CategoricalParameterRangeSpecification,
        context
      ),
    }),
    ...(input.ContinuousParameterRangeSpecification != null && {
      ContinuousParameterRangeSpecification: se_ContinuousParameterRangeSpecification(
        input.ContinuousParameterRangeSpecification,
        context
      ),
    }),
    ...(input.IntegerParameterRangeSpecification != null && {
      IntegerParameterRangeSpecification: se_IntegerParameterRangeSpecification(
        input.IntegerParameterRangeSpecification,
        context
      ),
    }),
  };
};

/**
 * serializeAws_json1_1ParameterRanges
 */
const se_ParameterRanges = (input: ParameterRanges, context: __SerdeContext): any => {
  return {
    ...(input.CategoricalParameterRanges != null && {
      CategoricalParameterRanges: se_CategoricalParameterRanges(input.CategoricalParameterRanges, context),
    }),
    ...(input.ContinuousParameterRanges != null && {
      ContinuousParameterRanges: se_ContinuousParameterRanges(input.ContinuousParameterRanges, context),
    }),
    ...(input.IntegerParameterRanges != null && {
      IntegerParameterRanges: se_IntegerParameterRanges(input.IntegerParameterRanges, context),
    }),
  };
};

/**
 * serializeAws_json1_1ParameterValues
 */
const se_ParameterValues = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ParentHyperParameterTuningJob
 */
const se_ParentHyperParameterTuningJob = (input: ParentHyperParameterTuningJob, context: __SerdeContext): any => {
  return {
    ...(input.HyperParameterTuningJobName != null && {
      HyperParameterTuningJobName: input.HyperParameterTuningJobName,
    }),
  };
};

/**
 * serializeAws_json1_1ParentHyperParameterTuningJobs
 */
const se_ParentHyperParameterTuningJobs = (input: ParentHyperParameterTuningJob[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ParentHyperParameterTuningJob(entry, context);
    });
};

/**
 * serializeAws_json1_1Phase
 */
const se_Phase = (input: Phase, context: __SerdeContext): any => {
  return {
    ...(input.DurationInSeconds != null && { DurationInSeconds: input.DurationInSeconds }),
    ...(input.InitialNumberOfUsers != null && { InitialNumberOfUsers: input.InitialNumberOfUsers }),
    ...(input.SpawnRate != null && { SpawnRate: input.SpawnRate }),
  };
};

/**
 * serializeAws_json1_1Phases
 */
const se_Phases = (input: Phase[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Phase(entry, context);
    });
};

/**
 * serializeAws_json1_1PipelineDefinitionS3Location
 */
const se_PipelineDefinitionS3Location = (input: PipelineDefinitionS3Location, context: __SerdeContext): any => {
  return {
    ...(input.Bucket != null && { Bucket: input.Bucket }),
    ...(input.ObjectKey != null && { ObjectKey: input.ObjectKey }),
    ...(input.VersionId != null && { VersionId: input.VersionId }),
  };
};

/**
 * serializeAws_json1_1ProcessingClusterConfig
 */
const se_ProcessingClusterConfig = (input: ProcessingClusterConfig, context: __SerdeContext): any => {
  return {
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1ProcessingEnvironmentMap
 */
const se_ProcessingEnvironmentMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1ProcessingFeatureStoreOutput
 */
const se_ProcessingFeatureStoreOutput = (input: ProcessingFeatureStoreOutput, context: __SerdeContext): any => {
  return {
    ...(input.FeatureGroupName != null && { FeatureGroupName: input.FeatureGroupName }),
  };
};

/**
 * serializeAws_json1_1ProcessingInput
 */
const se_ProcessingInput = (input: ProcessingInput, context: __SerdeContext): any => {
  return {
    ...(input.AppManaged != null && { AppManaged: input.AppManaged }),
    ...(input.DatasetDefinition != null && {
      DatasetDefinition: se_DatasetDefinition(input.DatasetDefinition, context),
    }),
    ...(input.InputName != null && { InputName: input.InputName }),
    ...(input.S3Input != null && { S3Input: se_ProcessingS3Input(input.S3Input, context) }),
  };
};

/**
 * serializeAws_json1_1ProcessingInputs
 */
const se_ProcessingInputs = (input: ProcessingInput[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ProcessingInput(entry, context);
    });
};

/**
 * serializeAws_json1_1ProcessingOutput
 */
const se_ProcessingOutput = (input: ProcessingOutput, context: __SerdeContext): any => {
  return {
    ...(input.AppManaged != null && { AppManaged: input.AppManaged }),
    ...(input.FeatureStoreOutput != null && {
      FeatureStoreOutput: se_ProcessingFeatureStoreOutput(input.FeatureStoreOutput, context),
    }),
    ...(input.OutputName != null && { OutputName: input.OutputName }),
    ...(input.S3Output != null && { S3Output: se_ProcessingS3Output(input.S3Output, context) }),
  };
};

/**
 * serializeAws_json1_1ProcessingOutputConfig
 */
const se_ProcessingOutputConfig = (input: ProcessingOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.Outputs != null && { Outputs: se_ProcessingOutputs(input.Outputs, context) }),
  };
};

/**
 * serializeAws_json1_1ProcessingOutputs
 */
const se_ProcessingOutputs = (input: ProcessingOutput[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ProcessingOutput(entry, context);
    });
};

/**
 * serializeAws_json1_1ProcessingResources
 */
const se_ProcessingResources = (input: ProcessingResources, context: __SerdeContext): any => {
  return {
    ...(input.ClusterConfig != null && { ClusterConfig: se_ProcessingClusterConfig(input.ClusterConfig, context) }),
  };
};

/**
 * serializeAws_json1_1ProcessingS3Input
 */
const se_ProcessingS3Input = (input: ProcessingS3Input, context: __SerdeContext): any => {
  return {
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.S3CompressionType != null && { S3CompressionType: input.S3CompressionType }),
    ...(input.S3DataDistributionType != null && { S3DataDistributionType: input.S3DataDistributionType }),
    ...(input.S3DataType != null && { S3DataType: input.S3DataType }),
    ...(input.S3InputMode != null && { S3InputMode: input.S3InputMode }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1ProcessingS3Output
 */
const se_ProcessingS3Output = (input: ProcessingS3Output, context: __SerdeContext): any => {
  return {
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.S3UploadMode != null && { S3UploadMode: input.S3UploadMode }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1ProcessingStoppingCondition
 */
const se_ProcessingStoppingCondition = (input: ProcessingStoppingCondition, context: __SerdeContext): any => {
  return {
    ...(input.MaxRuntimeInSeconds != null && { MaxRuntimeInSeconds: input.MaxRuntimeInSeconds }),
  };
};

/**
 * serializeAws_json1_1ProductionVariant
 */
const se_ProductionVariant = (input: ProductionVariant, context: __SerdeContext): any => {
  return {
    ...(input.AcceleratorType != null && { AcceleratorType: input.AcceleratorType }),
    ...(input.ContainerStartupHealthCheckTimeoutInSeconds != null && {
      ContainerStartupHealthCheckTimeoutInSeconds: input.ContainerStartupHealthCheckTimeoutInSeconds,
    }),
    ...(input.CoreDumpConfig != null && {
      CoreDumpConfig: se_ProductionVariantCoreDumpConfig(input.CoreDumpConfig, context),
    }),
    ...(input.EnableSSMAccess != null && { EnableSSMAccess: input.EnableSSMAccess }),
    ...(input.InitialInstanceCount != null && { InitialInstanceCount: input.InitialInstanceCount }),
    ...(input.InitialVariantWeight != null && { InitialVariantWeight: __serializeFloat(input.InitialVariantWeight) }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.ModelDataDownloadTimeoutInSeconds != null && {
      ModelDataDownloadTimeoutInSeconds: input.ModelDataDownloadTimeoutInSeconds,
    }),
    ...(input.ModelName != null && { ModelName: input.ModelName }),
    ...(input.ServerlessConfig != null && {
      ServerlessConfig: se_ProductionVariantServerlessConfig(input.ServerlessConfig, context),
    }),
    ...(input.VariantName != null && { VariantName: input.VariantName }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1ProductionVariantCoreDumpConfig
 */
const se_ProductionVariantCoreDumpConfig = (input: ProductionVariantCoreDumpConfig, context: __SerdeContext): any => {
  return {
    ...(input.DestinationS3Uri != null && { DestinationS3Uri: input.DestinationS3Uri }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_json1_1ProductionVariantList
 */
const se_ProductionVariantList = (input: ProductionVariant[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ProductionVariant(entry, context);
    });
};

/**
 * serializeAws_json1_1ProductionVariantServerlessConfig
 */
const se_ProductionVariantServerlessConfig = (
  input: ProductionVariantServerlessConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.MaxConcurrency != null && { MaxConcurrency: input.MaxConcurrency }),
    ...(input.MemorySizeInMB != null && { MemorySizeInMB: input.MemorySizeInMB }),
  };
};

/**
 * serializeAws_json1_1ProfilerConfig
 */
const se_ProfilerConfig = (input: ProfilerConfig, context: __SerdeContext): any => {
  return {
    ...(input.DisableProfiler != null && { DisableProfiler: input.DisableProfiler }),
    ...(input.ProfilingIntervalInMilliseconds != null && {
      ProfilingIntervalInMilliseconds: input.ProfilingIntervalInMilliseconds,
    }),
    ...(input.ProfilingParameters != null && {
      ProfilingParameters: se_ProfilingParameters(input.ProfilingParameters, context),
    }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1ProfilerConfigForUpdate
 */
const se_ProfilerConfigForUpdate = (input: ProfilerConfigForUpdate, context: __SerdeContext): any => {
  return {
    ...(input.DisableProfiler != null && { DisableProfiler: input.DisableProfiler }),
    ...(input.ProfilingIntervalInMilliseconds != null && {
      ProfilingIntervalInMilliseconds: input.ProfilingIntervalInMilliseconds,
    }),
    ...(input.ProfilingParameters != null && {
      ProfilingParameters: se_ProfilingParameters(input.ProfilingParameters, context),
    }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1ProfilerRuleConfiguration
 */
const se_ProfilerRuleConfiguration = (input: ProfilerRuleConfiguration, context: __SerdeContext): any => {
  return {
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.RuleConfigurationName != null && { RuleConfigurationName: input.RuleConfigurationName }),
    ...(input.RuleEvaluatorImage != null && { RuleEvaluatorImage: input.RuleEvaluatorImage }),
    ...(input.RuleParameters != null && { RuleParameters: se_RuleParameters(input.RuleParameters, context) }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1ProfilerRuleConfigurations
 */
const se_ProfilerRuleConfigurations = (input: ProfilerRuleConfiguration[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ProfilerRuleConfiguration(entry, context);
    });
};

/**
 * serializeAws_json1_1ProfilingParameters
 */
const se_ProfilingParameters = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1PropertyNameQuery
 */
const se_PropertyNameQuery = (input: PropertyNameQuery, context: __SerdeContext): any => {
  return {
    ...(input.PropertyNameHint != null && { PropertyNameHint: input.PropertyNameHint }),
  };
};

/**
 * serializeAws_json1_1ProvisioningParameter
 */
const se_ProvisioningParameter = (input: ProvisioningParameter, context: __SerdeContext): any => {
  return {
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1ProvisioningParameters
 */
const se_ProvisioningParameters = (input: ProvisioningParameter[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ProvisioningParameter(entry, context);
    });
};

/**
 * serializeAws_json1_1PublicWorkforceTaskPrice
 */
const se_PublicWorkforceTaskPrice = (input: PublicWorkforceTaskPrice, context: __SerdeContext): any => {
  return {
    ...(input.AmountInUsd != null && { AmountInUsd: se_USD(input.AmountInUsd, context) }),
  };
};

/**
 * serializeAws_json1_1PutModelPackageGroupPolicyInput
 */
const se_PutModelPackageGroupPolicyInput = (input: PutModelPackageGroupPolicyInput, context: __SerdeContext): any => {
  return {
    ...(input.ModelPackageGroupName != null && { ModelPackageGroupName: input.ModelPackageGroupName }),
    ...(input.ResourcePolicy != null && { ResourcePolicy: input.ResourcePolicy }),
  };
};

/**
 * serializeAws_json1_1QueryFilters
 */
const se_QueryFilters = (input: QueryFilters, context: __SerdeContext): any => {
  return {
    ...(input.CreatedAfter != null && { CreatedAfter: Math.round(input.CreatedAfter.getTime() / 1000) }),
    ...(input.CreatedBefore != null && { CreatedBefore: Math.round(input.CreatedBefore.getTime() / 1000) }),
    ...(input.LineageTypes != null && { LineageTypes: se_QueryLineageTypes(input.LineageTypes, context) }),
    ...(input.ModifiedAfter != null && { ModifiedAfter: Math.round(input.ModifiedAfter.getTime() / 1000) }),
    ...(input.ModifiedBefore != null && { ModifiedBefore: Math.round(input.ModifiedBefore.getTime() / 1000) }),
    ...(input.Properties != null && { Properties: se_QueryProperties(input.Properties, context) }),
    ...(input.Types != null && { Types: se_QueryTypes(input.Types, context) }),
  };
};

/**
 * serializeAws_json1_1QueryLineageRequest
 */
const se_QueryLineageRequest = (input: QueryLineageRequest, context: __SerdeContext): any => {
  return {
    ...(input.Direction != null && { Direction: input.Direction }),
    ...(input.Filters != null && { Filters: se_QueryFilters(input.Filters, context) }),
    ...(input.IncludeEdges != null && { IncludeEdges: input.IncludeEdges }),
    ...(input.MaxDepth != null && { MaxDepth: input.MaxDepth }),
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.StartArns != null && { StartArns: se_QueryLineageStartArns(input.StartArns, context) }),
  };
};

/**
 * serializeAws_json1_1QueryLineageStartArns
 */
const se_QueryLineageStartArns = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1QueryLineageTypes
 */
const se_QueryLineageTypes = (input: (LineageType | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1QueryProperties
 */
const se_QueryProperties = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1QueryTypes
 */
const se_QueryTypes = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1RealTimeInferenceConfig
 */
const se_RealTimeInferenceConfig = (input: RealTimeInferenceConfig, context: __SerdeContext): any => {
  return {
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
  };
};

/**
 * serializeAws_json1_1RealtimeInferenceInstanceTypes
 */
const se_RealtimeInferenceInstanceTypes = (
  input: (ProductionVariantInstanceType | string)[],
  context: __SerdeContext
): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1RecommendationJobCompiledOutputConfig
 */
const se_RecommendationJobCompiledOutputConfig = (
  input: RecommendationJobCompiledOutputConfig,
  context: __SerdeContext
): any => {
  return {
    ...(input.S3OutputUri != null && { S3OutputUri: input.S3OutputUri }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobContainerConfig
 */
const se_RecommendationJobContainerConfig = (input: RecommendationJobContainerConfig, context: __SerdeContext): any => {
  return {
    ...(input.DataInputConfig != null && { DataInputConfig: input.DataInputConfig }),
    ...(input.Domain != null && { Domain: input.Domain }),
    ...(input.Framework != null && { Framework: input.Framework }),
    ...(input.FrameworkVersion != null && { FrameworkVersion: input.FrameworkVersion }),
    ...(input.NearestModelName != null && { NearestModelName: input.NearestModelName }),
    ...(input.PayloadConfig != null && {
      PayloadConfig: se_RecommendationJobPayloadConfig(input.PayloadConfig, context),
    }),
    ...(input.SupportedInstanceTypes != null && {
      SupportedInstanceTypes: se_RecommendationJobSupportedInstanceTypes(input.SupportedInstanceTypes, context),
    }),
    ...(input.Task != null && { Task: input.Task }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobInputConfig
 */
const se_RecommendationJobInputConfig = (input: RecommendationJobInputConfig, context: __SerdeContext): any => {
  return {
    ...(input.ContainerConfig != null && {
      ContainerConfig: se_RecommendationJobContainerConfig(input.ContainerConfig, context),
    }),
    ...(input.EndpointConfigurations != null && {
      EndpointConfigurations: se_EndpointInputConfigurations(input.EndpointConfigurations, context),
    }),
    ...(input.Endpoints != null && { Endpoints: se_Endpoints(input.Endpoints, context) }),
    ...(input.JobDurationInSeconds != null && { JobDurationInSeconds: input.JobDurationInSeconds }),
    ...(input.ModelName != null && { ModelName: input.ModelName }),
    ...(input.ModelPackageVersionArn != null && { ModelPackageVersionArn: input.ModelPackageVersionArn }),
    ...(input.ResourceLimit != null && {
      ResourceLimit: se_RecommendationJobResourceLimit(input.ResourceLimit, context),
    }),
    ...(input.TrafficPattern != null && { TrafficPattern: se_TrafficPattern(input.TrafficPattern, context) }),
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
    ...(input.VpcConfig != null && { VpcConfig: se_RecommendationJobVpcConfig(input.VpcConfig, context) }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobOutputConfig
 */
const se_RecommendationJobOutputConfig = (input: RecommendationJobOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.CompiledOutputConfig != null && {
      CompiledOutputConfig: se_RecommendationJobCompiledOutputConfig(input.CompiledOutputConfig, context),
    }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobPayloadConfig
 */
const se_RecommendationJobPayloadConfig = (input: RecommendationJobPayloadConfig, context: __SerdeContext): any => {
  return {
    ...(input.SamplePayloadUrl != null && { SamplePayloadUrl: input.SamplePayloadUrl }),
    ...(input.SupportedContentTypes != null && {
      SupportedContentTypes: se_RecommendationJobSupportedContentTypes(input.SupportedContentTypes, context),
    }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobResourceLimit
 */
const se_RecommendationJobResourceLimit = (input: RecommendationJobResourceLimit, context: __SerdeContext): any => {
  return {
    ...(input.MaxNumberOfTests != null && { MaxNumberOfTests: input.MaxNumberOfTests }),
    ...(input.MaxParallelOfTests != null && { MaxParallelOfTests: input.MaxParallelOfTests }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobStoppingConditions
 */
const se_RecommendationJobStoppingConditions = (
  input: RecommendationJobStoppingConditions,
  context: __SerdeContext
): any => {
  return {
    ...(input.MaxInvocations != null && { MaxInvocations: input.MaxInvocations }),
    ...(input.ModelLatencyThresholds != null && {
      ModelLatencyThresholds: se_ModelLatencyThresholds(input.ModelLatencyThresholds, context),
    }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobSupportedContentTypes
 */
const se_RecommendationJobSupportedContentTypes = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1RecommendationJobSupportedInstanceTypes
 */
const se_RecommendationJobSupportedInstanceTypes = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1RecommendationJobVpcConfig
 */
const se_RecommendationJobVpcConfig = (input: RecommendationJobVpcConfig, context: __SerdeContext): any => {
  return {
    ...(input.SecurityGroupIds != null && {
      SecurityGroupIds: se_RecommendationJobVpcSecurityGroupIds(input.SecurityGroupIds, context),
    }),
    ...(input.Subnets != null && { Subnets: se_RecommendationJobVpcSubnets(input.Subnets, context) }),
  };
};

/**
 * serializeAws_json1_1RecommendationJobVpcSecurityGroupIds
 */
const se_RecommendationJobVpcSecurityGroupIds = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1RecommendationJobVpcSubnets
 */
const se_RecommendationJobVpcSubnets = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1RedshiftDatasetDefinition
 */
const se_RedshiftDatasetDefinition = (input: RedshiftDatasetDefinition, context: __SerdeContext): any => {
  return {
    ...(input.ClusterId != null && { ClusterId: input.ClusterId }),
    ...(input.ClusterRoleArn != null && { ClusterRoleArn: input.ClusterRoleArn }),
    ...(input.Database != null && { Database: input.Database }),
    ...(input.DbUser != null && { DbUser: input.DbUser }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.OutputCompression != null && { OutputCompression: input.OutputCompression }),
    ...(input.OutputFormat != null && { OutputFormat: input.OutputFormat }),
    ...(input.OutputS3Uri != null && { OutputS3Uri: input.OutputS3Uri }),
    ...(input.QueryString != null && { QueryString: input.QueryString }),
  };
};

/**
 * serializeAws_json1_1RegisterDevicesRequest
 */
const se_RegisterDevicesRequest = (input: RegisterDevicesRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.Devices != null && { Devices: se_Devices(input.Devices, context) }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1RenderableTask
 */
const se_RenderableTask = (input: RenderableTask, context: __SerdeContext): any => {
  return {
    ...(input.Input != null && { Input: input.Input }),
  };
};

/**
 * serializeAws_json1_1RenderUiTemplateRequest
 */
const se_RenderUiTemplateRequest = (input: RenderUiTemplateRequest, context: __SerdeContext): any => {
  return {
    ...(input.HumanTaskUiArn != null && { HumanTaskUiArn: input.HumanTaskUiArn }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.Task != null && { Task: se_RenderableTask(input.Task, context) }),
    ...(input.UiTemplate != null && { UiTemplate: se_UiTemplate(input.UiTemplate, context) }),
  };
};

/**
 * serializeAws_json1_1RepositoryAuthConfig
 */
const se_RepositoryAuthConfig = (input: RepositoryAuthConfig, context: __SerdeContext): any => {
  return {
    ...(input.RepositoryCredentialsProviderArn != null && {
      RepositoryCredentialsProviderArn: input.RepositoryCredentialsProviderArn,
    }),
  };
};

/**
 * serializeAws_json1_1ResourceConfig
 */
const se_ResourceConfig = (input: ResourceConfig, context: __SerdeContext): any => {
  return {
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceGroups != null && { InstanceGroups: se_InstanceGroups(input.InstanceGroups, context) }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.KeepAlivePeriodInSeconds != null && { KeepAlivePeriodInSeconds: input.KeepAlivePeriodInSeconds }),
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1ResourceConfigForUpdate
 */
const se_ResourceConfigForUpdate = (input: ResourceConfigForUpdate, context: __SerdeContext): any => {
  return {
    ...(input.KeepAlivePeriodInSeconds != null && { KeepAlivePeriodInSeconds: input.KeepAlivePeriodInSeconds }),
  };
};

/**
 * serializeAws_json1_1ResourceLimits
 */
const se_ResourceLimits = (input: ResourceLimits, context: __SerdeContext): any => {
  return {
    ...(input.MaxNumberOfTrainingJobs != null && { MaxNumberOfTrainingJobs: input.MaxNumberOfTrainingJobs }),
    ...(input.MaxParallelTrainingJobs != null && { MaxParallelTrainingJobs: input.MaxParallelTrainingJobs }),
    ...(input.MaxRuntimeInSeconds != null && { MaxRuntimeInSeconds: input.MaxRuntimeInSeconds }),
  };
};

/**
 * serializeAws_json1_1ResourceSpec
 */
const se_ResourceSpec = (input: ResourceSpec, context: __SerdeContext): any => {
  return {
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.LifecycleConfigArn != null && { LifecycleConfigArn: input.LifecycleConfigArn }),
    ...(input.SageMakerImageArn != null && { SageMakerImageArn: input.SageMakerImageArn }),
    ...(input.SageMakerImageVersionArn != null && { SageMakerImageVersionArn: input.SageMakerImageVersionArn }),
  };
};

/**
 * serializeAws_json1_1ResponseMIMETypes
 */
const se_ResponseMIMETypes = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1RetentionPolicy
 */
const se_RetentionPolicy = (input: RetentionPolicy, context: __SerdeContext): any => {
  return {
    ...(input.HomeEfsFileSystem != null && { HomeEfsFileSystem: input.HomeEfsFileSystem }),
  };
};

/**
 * serializeAws_json1_1RetryPipelineExecutionRequest
 */
const se_RetryPipelineExecutionRequest = (input: RetryPipelineExecutionRequest, context: __SerdeContext): any => {
  return {
    ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),
    ...(input.ParallelismConfiguration != null && {
      ParallelismConfiguration: se_ParallelismConfiguration(input.ParallelismConfiguration, context),
    }),
    ...(input.PipelineExecutionArn != null && { PipelineExecutionArn: input.PipelineExecutionArn }),
  };
};

/**
 * serializeAws_json1_1RetryStrategy
 */
const se_RetryStrategy = (input: RetryStrategy, context: __SerdeContext): any => {
  return {
    ...(input.MaximumRetryAttempts != null && { MaximumRetryAttempts: input.MaximumRetryAttempts }),
  };
};

/**
 * serializeAws_json1_1RSessionAppSettings
 */
const se_RSessionAppSettings = (input: RSessionAppSettings, context: __SerdeContext): any => {
  return {
    ...(input.CustomImages != null && { CustomImages: se_CustomImages(input.CustomImages, context) }),
    ...(input.DefaultResourceSpec != null && {
      DefaultResourceSpec: se_ResourceSpec(input.DefaultResourceSpec, context),
    }),
  };
};

/**
 * serializeAws_json1_1RStudioServerProAppSettings
 */
const se_RStudioServerProAppSettings = (input: RStudioServerProAppSettings, context: __SerdeContext): any => {
  return {
    ...(input.AccessStatus != null && { AccessStatus: input.AccessStatus }),
    ...(input.UserGroup != null && { UserGroup: input.UserGroup }),
  };
};

/**
 * serializeAws_json1_1RStudioServerProDomainSettings
 */
const se_RStudioServerProDomainSettings = (input: RStudioServerProDomainSettings, context: __SerdeContext): any => {
  return {
    ...(input.DefaultResourceSpec != null && {
      DefaultResourceSpec: se_ResourceSpec(input.DefaultResourceSpec, context),
    }),
    ...(input.DomainExecutionRoleArn != null && { DomainExecutionRoleArn: input.DomainExecutionRoleArn }),
    ...(input.RStudioConnectUrl != null && { RStudioConnectUrl: input.RStudioConnectUrl }),
    ...(input.RStudioPackageManagerUrl != null && { RStudioPackageManagerUrl: input.RStudioPackageManagerUrl }),
  };
};

/**
 * serializeAws_json1_1RStudioServerProDomainSettingsForUpdate
 */
const se_RStudioServerProDomainSettingsForUpdate = (
  input: RStudioServerProDomainSettingsForUpdate,
  context: __SerdeContext
): any => {
  return {
    ...(input.DefaultResourceSpec != null && {
      DefaultResourceSpec: se_ResourceSpec(input.DefaultResourceSpec, context),
    }),
    ...(input.DomainExecutionRoleArn != null && { DomainExecutionRoleArn: input.DomainExecutionRoleArn }),
    ...(input.RStudioConnectUrl != null && { RStudioConnectUrl: input.RStudioConnectUrl }),
    ...(input.RStudioPackageManagerUrl != null && { RStudioPackageManagerUrl: input.RStudioPackageManagerUrl }),
  };
};

/**
 * serializeAws_json1_1RuleParameters
 */
const se_RuleParameters = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1S3DataSource
 */
const se_S3DataSource = (input: S3DataSource, context: __SerdeContext): any => {
  return {
    ...(input.AttributeNames != null && { AttributeNames: se_AttributeNames(input.AttributeNames, context) }),
    ...(input.InstanceGroupNames != null && {
      InstanceGroupNames: se_InstanceGroupNames(input.InstanceGroupNames, context),
    }),
    ...(input.S3DataDistributionType != null && { S3DataDistributionType: input.S3DataDistributionType }),
    ...(input.S3DataType != null && { S3DataType: input.S3DataType }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1S3StorageConfig
 */
const se_S3StorageConfig = (input: S3StorageConfig, context: __SerdeContext): any => {
  return {
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.ResolvedOutputS3Uri != null && { ResolvedOutputS3Uri: input.ResolvedOutputS3Uri }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1SageMakerImageVersionAliases
 */
const se_SageMakerImageVersionAliases = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1ScheduleConfig
 */
const se_ScheduleConfig = (input: ScheduleConfig, context: __SerdeContext): any => {
  return {
    ...(input.ScheduleExpression != null && { ScheduleExpression: input.ScheduleExpression }),
  };
};

/**
 * serializeAws_json1_1SearchExpression
 */
const se_SearchExpression = (input: SearchExpression, context: __SerdeContext): any => {
  return {
    ...(input.Filters != null && { Filters: se_FilterList(input.Filters, context) }),
    ...(input.NestedFilters != null && { NestedFilters: se_NestedFiltersList(input.NestedFilters, context) }),
    ...(input.Operator != null && { Operator: input.Operator }),
    ...(input.SubExpressions != null && { SubExpressions: se_SearchExpressionList(input.SubExpressions, context) }),
  };
};

/**
 * serializeAws_json1_1SearchExpressionList
 */
const se_SearchExpressionList = (input: SearchExpression[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_SearchExpression(entry, context);
    });
};

/**
 * serializeAws_json1_1SearchRequest
 */
const se_SearchRequest = (input: SearchRequest, context: __SerdeContext): any => {
  return {
    ...(input.MaxResults != null && { MaxResults: input.MaxResults }),
    ...(input.NextToken != null && { NextToken: input.NextToken }),
    ...(input.Resource != null && { Resource: input.Resource }),
    ...(input.SearchExpression != null && { SearchExpression: se_SearchExpression(input.SearchExpression, context) }),
    ...(input.SortBy != null && { SortBy: input.SortBy }),
    ...(input.SortOrder != null && { SortOrder: input.SortOrder }),
  };
};

/**
 * serializeAws_json1_1SecurityGroupIds
 */
const se_SecurityGroupIds = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1SendPipelineExecutionStepFailureRequest
 */
const se_SendPipelineExecutionStepFailureRequest = (
  input: SendPipelineExecutionStepFailureRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CallbackToken != null && { CallbackToken: input.CallbackToken }),
    ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),
    ...(input.FailureReason != null && { FailureReason: input.FailureReason }),
  };
};

/**
 * serializeAws_json1_1SendPipelineExecutionStepSuccessRequest
 */
const se_SendPipelineExecutionStepSuccessRequest = (
  input: SendPipelineExecutionStepSuccessRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.CallbackToken != null && { CallbackToken: input.CallbackToken }),
    ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),
    ...(input.OutputParameters != null && {
      OutputParameters: se_OutputParameterList(input.OutputParameters, context),
    }),
  };
};

/**
 * serializeAws_json1_1ServiceCatalogProvisioningDetails
 */
const se_ServiceCatalogProvisioningDetails = (
  input: ServiceCatalogProvisioningDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.PathId != null && { PathId: input.PathId }),
    ...(input.ProductId != null && { ProductId: input.ProductId }),
    ...(input.ProvisioningArtifactId != null && { ProvisioningArtifactId: input.ProvisioningArtifactId }),
    ...(input.ProvisioningParameters != null && {
      ProvisioningParameters: se_ProvisioningParameters(input.ProvisioningParameters, context),
    }),
  };
};

/**
 * serializeAws_json1_1ServiceCatalogProvisioningUpdateDetails
 */
const se_ServiceCatalogProvisioningUpdateDetails = (
  input: ServiceCatalogProvisioningUpdateDetails,
  context: __SerdeContext
): any => {
  return {
    ...(input.ProvisioningArtifactId != null && { ProvisioningArtifactId: input.ProvisioningArtifactId }),
    ...(input.ProvisioningParameters != null && {
      ProvisioningParameters: se_ProvisioningParameters(input.ProvisioningParameters, context),
    }),
  };
};

/**
 * serializeAws_json1_1ShadowModeConfig
 */
const se_ShadowModeConfig = (input: ShadowModeConfig, context: __SerdeContext): any => {
  return {
    ...(input.ShadowModelVariants != null && {
      ShadowModelVariants: se_ShadowModelVariantConfigList(input.ShadowModelVariants, context),
    }),
    ...(input.SourceModelVariantName != null && { SourceModelVariantName: input.SourceModelVariantName }),
  };
};

/**
 * serializeAws_json1_1ShadowModelVariantConfig
 */
const se_ShadowModelVariantConfig = (input: ShadowModelVariantConfig, context: __SerdeContext): any => {
  return {
    ...(input.SamplingPercentage != null && { SamplingPercentage: input.SamplingPercentage }),
    ...(input.ShadowModelVariantName != null && { ShadowModelVariantName: input.ShadowModelVariantName }),
  };
};

/**
 * serializeAws_json1_1ShadowModelVariantConfigList
 */
const se_ShadowModelVariantConfigList = (input: ShadowModelVariantConfig[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_ShadowModelVariantConfig(entry, context);
    });
};

/**
 * serializeAws_json1_1SharingSettings
 */
const se_SharingSettings = (input: SharingSettings, context: __SerdeContext): any => {
  return {
    ...(input.NotebookOutputOption != null && { NotebookOutputOption: input.NotebookOutputOption }),
    ...(input.S3KmsKeyId != null && { S3KmsKeyId: input.S3KmsKeyId }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1ShuffleConfig
 */
const se_ShuffleConfig = (input: ShuffleConfig, context: __SerdeContext): any => {
  return {
    ...(input.Seed != null && { Seed: input.Seed }),
  };
};

/**
 * serializeAws_json1_1SourceAlgorithm
 */
const se_SourceAlgorithm = (input: SourceAlgorithm, context: __SerdeContext): any => {
  return {
    ...(input.AlgorithmName != null && { AlgorithmName: input.AlgorithmName }),
    ...(input.ModelDataUrl != null && { ModelDataUrl: input.ModelDataUrl }),
  };
};

/**
 * serializeAws_json1_1SourceAlgorithmList
 */
const se_SourceAlgorithmList = (input: SourceAlgorithm[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_SourceAlgorithm(entry, context);
    });
};

/**
 * serializeAws_json1_1SourceAlgorithmSpecification
 */
const se_SourceAlgorithmSpecification = (input: SourceAlgorithmSpecification, context: __SerdeContext): any => {
  return {
    ...(input.SourceAlgorithms != null && {
      SourceAlgorithms: se_SourceAlgorithmList(input.SourceAlgorithms, context),
    }),
  };
};

/**
 * serializeAws_json1_1SourceIpConfig
 */
const se_SourceIpConfig = (input: SourceIpConfig, context: __SerdeContext): any => {
  return {
    ...(input.Cidrs != null && { Cidrs: se_Cidrs(input.Cidrs, context) }),
  };
};

/**
 * serializeAws_json1_1SpaceSettings
 */
const se_SpaceSettings = (input: SpaceSettings, context: __SerdeContext): any => {
  return {
    ...(input.JupyterServerAppSettings != null && {
      JupyterServerAppSettings: se_JupyterServerAppSettings(input.JupyterServerAppSettings, context),
    }),
    ...(input.KernelGatewayAppSettings != null && {
      KernelGatewayAppSettings: se_KernelGatewayAppSettings(input.KernelGatewayAppSettings, context),
    }),
  };
};

/**
 * serializeAws_json1_1StartEdgeDeploymentStageRequest
 */
const se_StartEdgeDeploymentStageRequest = (input: StartEdgeDeploymentStageRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
    ...(input.StageName != null && { StageName: input.StageName }),
  };
};

/**
 * serializeAws_json1_1StartInferenceExperimentRequest
 */
const se_StartInferenceExperimentRequest = (input: StartInferenceExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.Name != null && { Name: input.Name }),
  };
};

/**
 * serializeAws_json1_1StartMonitoringScheduleRequest
 */
const se_StartMonitoringScheduleRequest = (input: StartMonitoringScheduleRequest, context: __SerdeContext): any => {
  return {
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
  };
};

/**
 * serializeAws_json1_1StartNotebookInstanceInput
 */
const se_StartNotebookInstanceInput = (input: StartNotebookInstanceInput, context: __SerdeContext): any => {
  return {
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
  };
};

/**
 * serializeAws_json1_1StartPipelineExecutionRequest
 */
const se_StartPipelineExecutionRequest = (input: StartPipelineExecutionRequest, context: __SerdeContext): any => {
  return {
    ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),
    ...(input.ParallelismConfiguration != null && {
      ParallelismConfiguration: se_ParallelismConfiguration(input.ParallelismConfiguration, context),
    }),
    ...(input.PipelineExecutionDescription != null && {
      PipelineExecutionDescription: input.PipelineExecutionDescription,
    }),
    ...(input.PipelineExecutionDisplayName != null && {
      PipelineExecutionDisplayName: input.PipelineExecutionDisplayName,
    }),
    ...(input.PipelineName != null && { PipelineName: input.PipelineName }),
    ...(input.PipelineParameters != null && {
      PipelineParameters: se_ParameterList(input.PipelineParameters, context),
    }),
  };
};

/**
 * serializeAws_json1_1StopAutoMLJobRequest
 */
const se_StopAutoMLJobRequest = (input: StopAutoMLJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.AutoMLJobName != null && { AutoMLJobName: input.AutoMLJobName }),
  };
};

/**
 * serializeAws_json1_1StopCompilationJobRequest
 */
const se_StopCompilationJobRequest = (input: StopCompilationJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.CompilationJobName != null && { CompilationJobName: input.CompilationJobName }),
  };
};

/**
 * serializeAws_json1_1StopEdgeDeploymentStageRequest
 */
const se_StopEdgeDeploymentStageRequest = (input: StopEdgeDeploymentStageRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgeDeploymentPlanName != null && { EdgeDeploymentPlanName: input.EdgeDeploymentPlanName }),
    ...(input.StageName != null && { StageName: input.StageName }),
  };
};

/**
 * serializeAws_json1_1StopEdgePackagingJobRequest
 */
const se_StopEdgePackagingJobRequest = (input: StopEdgePackagingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.EdgePackagingJobName != null && { EdgePackagingJobName: input.EdgePackagingJobName }),
  };
};

/**
 * serializeAws_json1_1StopHyperParameterTuningJobRequest
 */
const se_StopHyperParameterTuningJobRequest = (
  input: StopHyperParameterTuningJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.HyperParameterTuningJobName != null && {
      HyperParameterTuningJobName: input.HyperParameterTuningJobName,
    }),
  };
};

/**
 * serializeAws_json1_1StopInferenceExperimentRequest
 */
const se_StopInferenceExperimentRequest = (input: StopInferenceExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.DesiredModelVariants != null && {
      DesiredModelVariants: se_ModelVariantConfigList(input.DesiredModelVariants, context),
    }),
    ...(input.DesiredState != null && { DesiredState: input.DesiredState }),
    ...(input.ModelVariantActions != null && {
      ModelVariantActions: se_ModelVariantActionMap(input.ModelVariantActions, context),
    }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Reason != null && { Reason: input.Reason }),
  };
};

/**
 * serializeAws_json1_1StopInferenceRecommendationsJobRequest
 */
const se_StopInferenceRecommendationsJobRequest = (
  input: StopInferenceRecommendationsJobRequest,
  context: __SerdeContext
): any => {
  return {
    ...(input.JobName != null && { JobName: input.JobName }),
  };
};

/**
 * serializeAws_json1_1StopLabelingJobRequest
 */
const se_StopLabelingJobRequest = (input: StopLabelingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.LabelingJobName != null && { LabelingJobName: input.LabelingJobName }),
  };
};

/**
 * serializeAws_json1_1StopMonitoringScheduleRequest
 */
const se_StopMonitoringScheduleRequest = (input: StopMonitoringScheduleRequest, context: __SerdeContext): any => {
  return {
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
  };
};

/**
 * serializeAws_json1_1StopNotebookInstanceInput
 */
const se_StopNotebookInstanceInput = (input: StopNotebookInstanceInput, context: __SerdeContext): any => {
  return {
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
  };
};

/**
 * serializeAws_json1_1StoppingCondition
 */
const se_StoppingCondition = (input: StoppingCondition, context: __SerdeContext): any => {
  return {
    ...(input.MaxRuntimeInSeconds != null && { MaxRuntimeInSeconds: input.MaxRuntimeInSeconds }),
    ...(input.MaxWaitTimeInSeconds != null && { MaxWaitTimeInSeconds: input.MaxWaitTimeInSeconds }),
  };
};

/**
 * serializeAws_json1_1StopPipelineExecutionRequest
 */
const se_StopPipelineExecutionRequest = (input: StopPipelineExecutionRequest, context: __SerdeContext): any => {
  return {
    ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),
    ...(input.PipelineExecutionArn != null && { PipelineExecutionArn: input.PipelineExecutionArn }),
  };
};

/**
 * serializeAws_json1_1StopProcessingJobRequest
 */
const se_StopProcessingJobRequest = (input: StopProcessingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.ProcessingJobName != null && { ProcessingJobName: input.ProcessingJobName }),
  };
};

/**
 * serializeAws_json1_1StopTrainingJobRequest
 */
const se_StopTrainingJobRequest = (input: StopTrainingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.TrainingJobName != null && { TrainingJobName: input.TrainingJobName }),
  };
};

/**
 * serializeAws_json1_1StopTransformJobRequest
 */
const se_StopTransformJobRequest = (input: StopTransformJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.TransformJobName != null && { TransformJobName: input.TransformJobName }),
  };
};

/**
 * serializeAws_json1_1Subnets
 */
const se_Subnets = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1SuggestionQuery
 */
const se_SuggestionQuery = (input: SuggestionQuery, context: __SerdeContext): any => {
  return {
    ...(input.PropertyNameQuery != null && {
      PropertyNameQuery: se_PropertyNameQuery(input.PropertyNameQuery, context),
    }),
  };
};

/**
 * serializeAws_json1_1Tag
 */
const se_Tag = (input: Tag, context: __SerdeContext): any => {
  return {
    ...(input.Key != null && { Key: input.Key }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1TagKeyList
 */
const se_TagKeyList = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1TagList
 */
const se_TagList = (input: Tag[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_Tag(entry, context);
    });
};

/**
 * serializeAws_json1_1TargetPlatform
 */
const se_TargetPlatform = (input: TargetPlatform, context: __SerdeContext): any => {
  return {
    ...(input.Accelerator != null && { Accelerator: input.Accelerator }),
    ...(input.Arch != null && { Arch: input.Arch }),
    ...(input.Os != null && { Os: input.Os }),
  };
};

/**
 * serializeAws_json1_1TaskKeywords
 */
const se_TaskKeywords = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1TensorBoardAppSettings
 */
const se_TensorBoardAppSettings = (input: TensorBoardAppSettings, context: __SerdeContext): any => {
  return {
    ...(input.DefaultResourceSpec != null && {
      DefaultResourceSpec: se_ResourceSpec(input.DefaultResourceSpec, context),
    }),
  };
};

/**
 * serializeAws_json1_1TensorBoardOutputConfig
 */
const se_TensorBoardOutputConfig = (input: TensorBoardOutputConfig, context: __SerdeContext): any => {
  return {
    ...(input.LocalPath != null && { LocalPath: input.LocalPath }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1TextClassificationJobConfig
 */
const se_TextClassificationJobConfig = (input: TextClassificationJobConfig, context: __SerdeContext): any => {
  return {
    ...(input.CompletionCriteria != null && {
      CompletionCriteria: se_AutoMLJobCompletionCriteria(input.CompletionCriteria, context),
    }),
    ...(input.ContentColumn != null && { ContentColumn: input.ContentColumn }),
    ...(input.TargetLabelColumn != null && { TargetLabelColumn: input.TargetLabelColumn }),
  };
};

/**
 * serializeAws_json1_1TimeSeriesForecastingSettings
 */
const se_TimeSeriesForecastingSettings = (input: TimeSeriesForecastingSettings, context: __SerdeContext): any => {
  return {
    ...(input.AmazonForecastRoleArn != null && { AmazonForecastRoleArn: input.AmazonForecastRoleArn }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_json1_1TrafficPattern
 */
const se_TrafficPattern = (input: TrafficPattern, context: __SerdeContext): any => {
  return {
    ...(input.Phases != null && { Phases: se_Phases(input.Phases, context) }),
    ...(input.TrafficType != null && { TrafficType: input.TrafficType }),
  };
};

/**
 * serializeAws_json1_1TrafficRoutingConfig
 */
const se_TrafficRoutingConfig = (input: TrafficRoutingConfig, context: __SerdeContext): any => {
  return {
    ...(input.CanarySize != null && { CanarySize: se_CapacitySize(input.CanarySize, context) }),
    ...(input.LinearStepSize != null && { LinearStepSize: se_CapacitySize(input.LinearStepSize, context) }),
    ...(input.Type != null && { Type: input.Type }),
    ...(input.WaitIntervalInSeconds != null && { WaitIntervalInSeconds: input.WaitIntervalInSeconds }),
  };
};

/**
 * serializeAws_json1_1TrainingContainerArguments
 */
const se_TrainingContainerArguments = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1TrainingContainerEntrypoint
 */
const se_TrainingContainerEntrypoint = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1TrainingEnvironmentMap
 */
const se_TrainingEnvironmentMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1TrainingImageConfig
 */
const se_TrainingImageConfig = (input: TrainingImageConfig, context: __SerdeContext): any => {
  return {
    ...(input.TrainingRepositoryAccessMode != null && {
      TrainingRepositoryAccessMode: input.TrainingRepositoryAccessMode,
    }),
    ...(input.TrainingRepositoryAuthConfig != null && {
      TrainingRepositoryAuthConfig: se_TrainingRepositoryAuthConfig(input.TrainingRepositoryAuthConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1TrainingInstanceTypes
 */
const se_TrainingInstanceTypes = (input: (TrainingInstanceType | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1TrainingJobDefinition
 */
const se_TrainingJobDefinition = (input: TrainingJobDefinition, context: __SerdeContext): any => {
  return {
    ...(input.HyperParameters != null && { HyperParameters: se_HyperParameters(input.HyperParameters, context) }),
    ...(input.InputDataConfig != null && { InputDataConfig: se_InputDataConfig(input.InputDataConfig, context) }),
    ...(input.OutputDataConfig != null && { OutputDataConfig: se_OutputDataConfig(input.OutputDataConfig, context) }),
    ...(input.ResourceConfig != null && { ResourceConfig: se_ResourceConfig(input.ResourceConfig, context) }),
    ...(input.StoppingCondition != null && {
      StoppingCondition: se_StoppingCondition(input.StoppingCondition, context),
    }),
    ...(input.TrainingInputMode != null && { TrainingInputMode: input.TrainingInputMode }),
  };
};

/**
 * serializeAws_json1_1TrainingRepositoryAuthConfig
 */
const se_TrainingRepositoryAuthConfig = (input: TrainingRepositoryAuthConfig, context: __SerdeContext): any => {
  return {
    ...(input.TrainingRepositoryCredentialsProviderArn != null && {
      TrainingRepositoryCredentialsProviderArn: input.TrainingRepositoryCredentialsProviderArn,
    }),
  };
};

/**
 * serializeAws_json1_1TrainingSpecification
 */
const se_TrainingSpecification = (input: TrainingSpecification, context: __SerdeContext): any => {
  return {
    ...(input.MetricDefinitions != null && {
      MetricDefinitions: se_MetricDefinitionList(input.MetricDefinitions, context),
    }),
    ...(input.SupportedHyperParameters != null && {
      SupportedHyperParameters: se_HyperParameterSpecifications(input.SupportedHyperParameters, context),
    }),
    ...(input.SupportedTrainingInstanceTypes != null && {
      SupportedTrainingInstanceTypes: se_TrainingInstanceTypes(input.SupportedTrainingInstanceTypes, context),
    }),
    ...(input.SupportedTuningJobObjectiveMetrics != null && {
      SupportedTuningJobObjectiveMetrics: se_HyperParameterTuningJobObjectives(
        input.SupportedTuningJobObjectiveMetrics,
        context
      ),
    }),
    ...(input.SupportsDistributedTraining != null && {
      SupportsDistributedTraining: input.SupportsDistributedTraining,
    }),
    ...(input.TrainingChannels != null && {
      TrainingChannels: se_ChannelSpecifications(input.TrainingChannels, context),
    }),
    ...(input.TrainingImage != null && { TrainingImage: input.TrainingImage }),
    ...(input.TrainingImageDigest != null && { TrainingImageDigest: input.TrainingImageDigest }),
  };
};

/**
 * serializeAws_json1_1TransformDataSource
 */
const se_TransformDataSource = (input: TransformDataSource, context: __SerdeContext): any => {
  return {
    ...(input.S3DataSource != null && { S3DataSource: se_TransformS3DataSource(input.S3DataSource, context) }),
  };
};

/**
 * serializeAws_json1_1TransformEnvironmentMap
 */
const se_TransformEnvironmentMap = (input: Record<string, string>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = value;
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1TransformInput
 */
const se_TransformInput = (input: TransformInput, context: __SerdeContext): any => {
  return {
    ...(input.CompressionType != null && { CompressionType: input.CompressionType }),
    ...(input.ContentType != null && { ContentType: input.ContentType }),
    ...(input.DataSource != null && { DataSource: se_TransformDataSource(input.DataSource, context) }),
    ...(input.SplitType != null && { SplitType: input.SplitType }),
  };
};

/**
 * serializeAws_json1_1TransformInstanceTypes
 */
const se_TransformInstanceTypes = (input: (TransformInstanceType | string)[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1TransformJobDefinition
 */
const se_TransformJobDefinition = (input: TransformJobDefinition, context: __SerdeContext): any => {
  return {
    ...(input.BatchStrategy != null && { BatchStrategy: input.BatchStrategy }),
    ...(input.Environment != null && { Environment: se_TransformEnvironmentMap(input.Environment, context) }),
    ...(input.MaxConcurrentTransforms != null && { MaxConcurrentTransforms: input.MaxConcurrentTransforms }),
    ...(input.MaxPayloadInMB != null && { MaxPayloadInMB: input.MaxPayloadInMB }),
    ...(input.TransformInput != null && { TransformInput: se_TransformInput(input.TransformInput, context) }),
    ...(input.TransformOutput != null && { TransformOutput: se_TransformOutput(input.TransformOutput, context) }),
    ...(input.TransformResources != null && {
      TransformResources: se_TransformResources(input.TransformResources, context),
    }),
  };
};

/**
 * serializeAws_json1_1TransformOutput
 */
const se_TransformOutput = (input: TransformOutput, context: __SerdeContext): any => {
  return {
    ...(input.Accept != null && { Accept: input.Accept }),
    ...(input.AssembleWith != null && { AssembleWith: input.AssembleWith }),
    ...(input.KmsKeyId != null && { KmsKeyId: input.KmsKeyId }),
    ...(input.S3OutputPath != null && { S3OutputPath: input.S3OutputPath }),
  };
};

/**
 * serializeAws_json1_1TransformResources
 */
const se_TransformResources = (input: TransformResources, context: __SerdeContext): any => {
  return {
    ...(input.InstanceCount != null && { InstanceCount: input.InstanceCount }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.VolumeKmsKeyId != null && { VolumeKmsKeyId: input.VolumeKmsKeyId }),
  };
};

/**
 * serializeAws_json1_1TransformS3DataSource
 */
const se_TransformS3DataSource = (input: TransformS3DataSource, context: __SerdeContext): any => {
  return {
    ...(input.S3DataType != null && { S3DataType: input.S3DataType }),
    ...(input.S3Uri != null && { S3Uri: input.S3Uri }),
  };
};

/**
 * serializeAws_json1_1TrialComponentArtifact
 */
const se_TrialComponentArtifact = (input: TrialComponentArtifact, context: __SerdeContext): any => {
  return {
    ...(input.MediaType != null && { MediaType: input.MediaType }),
    ...(input.Value != null && { Value: input.Value }),
  };
};

/**
 * serializeAws_json1_1TrialComponentArtifacts
 */
const se_TrialComponentArtifacts = (input: Record<string, TrialComponentArtifact>, context: __SerdeContext): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_TrialComponentArtifact(value, context);
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1TrialComponentParameters
 */
const se_TrialComponentParameters = (
  input: Record<string, TrialComponentParameterValue>,
  context: __SerdeContext
): any => {
  return Object.entries(input).reduce((acc: Record<string, any>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_TrialComponentParameterValue(value, context);
    return acc;
  }, {});
};

/**
 * serializeAws_json1_1TrialComponentParameterValue
 */
const se_TrialComponentParameterValue = (input: TrialComponentParameterValue, context: __SerdeContext): any => {
  return TrialComponentParameterValue.visit(input, {
    NumberValue: (value) => ({ NumberValue: __serializeFloat(value) }),
    StringValue: (value) => ({ StringValue: value }),
    _: (name, value) => ({ name: value } as any),
  });
};

/**
 * serializeAws_json1_1TrialComponentStatus
 */
const se_TrialComponentStatus = (input: TrialComponentStatus, context: __SerdeContext): any => {
  return {
    ...(input.Message != null && { Message: input.Message }),
    ...(input.PrimaryStatus != null && { PrimaryStatus: input.PrimaryStatus }),
  };
};

/**
 * serializeAws_json1_1TuningJobCompletionCriteria
 */
const se_TuningJobCompletionCriteria = (input: TuningJobCompletionCriteria, context: __SerdeContext): any => {
  return {
    ...(input.BestObjectiveNotImproving != null && {
      BestObjectiveNotImproving: se_BestObjectiveNotImproving(input.BestObjectiveNotImproving, context),
    }),
    ...(input.ConvergenceDetected != null && {
      ConvergenceDetected: se_ConvergenceDetected(input.ConvergenceDetected, context),
    }),
    ...(input.TargetObjectiveMetricValue != null && {
      TargetObjectiveMetricValue: __serializeFloat(input.TargetObjectiveMetricValue),
    }),
  };
};

/**
 * serializeAws_json1_1UiConfig
 */
const se_UiConfig = (input: UiConfig, context: __SerdeContext): any => {
  return {
    ...(input.HumanTaskUiArn != null && { HumanTaskUiArn: input.HumanTaskUiArn }),
    ...(input.UiTemplateS3Uri != null && { UiTemplateS3Uri: input.UiTemplateS3Uri }),
  };
};

/**
 * serializeAws_json1_1UiTemplate
 */
const se_UiTemplate = (input: UiTemplate, context: __SerdeContext): any => {
  return {
    ...(input.Content != null && { Content: input.Content }),
  };
};

/**
 * serializeAws_json1_1UpdateActionRequest
 */
const se_UpdateActionRequest = (input: UpdateActionRequest, context: __SerdeContext): any => {
  return {
    ...(input.ActionName != null && { ActionName: input.ActionName }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Properties != null && { Properties: se_LineageEntityParameters(input.Properties, context) }),
    ...(input.PropertiesToRemove != null && {
      PropertiesToRemove: se_ListLineageEntityParameterKey(input.PropertiesToRemove, context),
    }),
    ...(input.Status != null && { Status: input.Status }),
  };
};

/**
 * serializeAws_json1_1UpdateAppImageConfigRequest
 */
const se_UpdateAppImageConfigRequest = (input: UpdateAppImageConfigRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppImageConfigName != null && { AppImageConfigName: input.AppImageConfigName }),
    ...(input.KernelGatewayImageConfig != null && {
      KernelGatewayImageConfig: se_KernelGatewayImageConfig(input.KernelGatewayImageConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1UpdateArtifactRequest
 */
const se_UpdateArtifactRequest = (input: UpdateArtifactRequest, context: __SerdeContext): any => {
  return {
    ...(input.ArtifactArn != null && { ArtifactArn: input.ArtifactArn }),
    ...(input.ArtifactName != null && { ArtifactName: input.ArtifactName }),
    ...(input.Properties != null && { Properties: se_LineageEntityParameters(input.Properties, context) }),
    ...(input.PropertiesToRemove != null && {
      PropertiesToRemove: se_ListLineageEntityParameterKey(input.PropertiesToRemove, context),
    }),
  };
};

/**
 * serializeAws_json1_1UpdateCodeRepositoryInput
 */
const se_UpdateCodeRepositoryInput = (input: UpdateCodeRepositoryInput, context: __SerdeContext): any => {
  return {
    ...(input.CodeRepositoryName != null && { CodeRepositoryName: input.CodeRepositoryName }),
    ...(input.GitConfig != null && { GitConfig: se_GitConfigForUpdate(input.GitConfig, context) }),
  };
};

/**
 * serializeAws_json1_1UpdateContextRequest
 */
const se_UpdateContextRequest = (input: UpdateContextRequest, context: __SerdeContext): any => {
  return {
    ...(input.ContextName != null && { ContextName: input.ContextName }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.Properties != null && { Properties: se_LineageEntityParameters(input.Properties, context) }),
    ...(input.PropertiesToRemove != null && {
      PropertiesToRemove: se_ListLineageEntityParameterKey(input.PropertiesToRemove, context),
    }),
  };
};

/**
 * serializeAws_json1_1UpdateDeviceFleetRequest
 */
const se_UpdateDeviceFleetRequest = (input: UpdateDeviceFleetRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.EnableIotRoleAlias != null && { EnableIotRoleAlias: input.EnableIotRoleAlias }),
    ...(input.OutputConfig != null && { OutputConfig: se_EdgeOutputConfig(input.OutputConfig, context) }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
  };
};

/**
 * serializeAws_json1_1UpdateDevicesRequest
 */
const se_UpdateDevicesRequest = (input: UpdateDevicesRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeviceFleetName != null && { DeviceFleetName: input.DeviceFleetName }),
    ...(input.Devices != null && { Devices: se_Devices(input.Devices, context) }),
  };
};

/**
 * serializeAws_json1_1UpdateDomainRequest
 */
const se_UpdateDomainRequest = (input: UpdateDomainRequest, context: __SerdeContext): any => {
  return {
    ...(input.AppSecurityGroupManagement != null && { AppSecurityGroupManagement: input.AppSecurityGroupManagement }),
    ...(input.DefaultSpaceSettings != null && {
      DefaultSpaceSettings: se_DefaultSpaceSettings(input.DefaultSpaceSettings, context),
    }),
    ...(input.DefaultUserSettings != null && {
      DefaultUserSettings: se_UserSettings(input.DefaultUserSettings, context),
    }),
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.DomainSettingsForUpdate != null && {
      DomainSettingsForUpdate: se_DomainSettingsForUpdate(input.DomainSettingsForUpdate, context),
    }),
  };
};

/**
 * serializeAws_json1_1UpdateEndpointInput
 */
const se_UpdateEndpointInput = (input: UpdateEndpointInput, context: __SerdeContext): any => {
  return {
    ...(input.DeploymentConfig != null && { DeploymentConfig: se_DeploymentConfig(input.DeploymentConfig, context) }),
    ...(input.EndpointConfigName != null && { EndpointConfigName: input.EndpointConfigName }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
    ...(input.ExcludeRetainedVariantProperties != null && {
      ExcludeRetainedVariantProperties: se_VariantPropertyList(input.ExcludeRetainedVariantProperties, context),
    }),
    ...(input.RetainAllVariantProperties != null && { RetainAllVariantProperties: input.RetainAllVariantProperties }),
    ...(input.RetainDeploymentConfig != null && { RetainDeploymentConfig: input.RetainDeploymentConfig }),
  };
};

/**
 * serializeAws_json1_1UpdateEndpointWeightsAndCapacitiesInput
 */
const se_UpdateEndpointWeightsAndCapacitiesInput = (
  input: UpdateEndpointWeightsAndCapacitiesInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.DesiredWeightsAndCapacities != null && {
      DesiredWeightsAndCapacities: se_DesiredWeightAndCapacityList(input.DesiredWeightsAndCapacities, context),
    }),
    ...(input.EndpointName != null && { EndpointName: input.EndpointName }),
  };
};

/**
 * serializeAws_json1_1UpdateExperimentRequest
 */
const se_UpdateExperimentRequest = (input: UpdateExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.ExperimentName != null && { ExperimentName: input.ExperimentName }),
  };
};

/**
 * serializeAws_json1_1UpdateFeatureGroupRequest
 */
const se_UpdateFeatureGroupRequest = (input: UpdateFeatureGroupRequest, context: __SerdeContext): any => {
  return {
    ...(input.FeatureAdditions != null && { FeatureAdditions: se_FeatureAdditions(input.FeatureAdditions, context) }),
    ...(input.FeatureGroupName != null && { FeatureGroupName: input.FeatureGroupName }),
  };
};

/**
 * serializeAws_json1_1UpdateFeatureMetadataRequest
 */
const se_UpdateFeatureMetadataRequest = (input: UpdateFeatureMetadataRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.FeatureGroupName != null && { FeatureGroupName: input.FeatureGroupName }),
    ...(input.FeatureName != null && { FeatureName: input.FeatureName }),
    ...(input.ParameterAdditions != null && {
      ParameterAdditions: se_FeatureParameterAdditions(input.ParameterAdditions, context),
    }),
    ...(input.ParameterRemovals != null && {
      ParameterRemovals: se_FeatureParameterRemovals(input.ParameterRemovals, context),
    }),
  };
};

/**
 * serializeAws_json1_1UpdateHubRequest
 */
const se_UpdateHubRequest = (input: UpdateHubRequest, context: __SerdeContext): any => {
  return {
    ...(input.HubDescription != null && { HubDescription: input.HubDescription }),
    ...(input.HubDisplayName != null && { HubDisplayName: input.HubDisplayName }),
    ...(input.HubName != null && { HubName: input.HubName }),
    ...(input.HubSearchKeywords != null && {
      HubSearchKeywords: se_HubSearchKeywordList(input.HubSearchKeywords, context),
    }),
  };
};

/**
 * serializeAws_json1_1UpdateImageRequest
 */
const se_UpdateImageRequest = (input: UpdateImageRequest, context: __SerdeContext): any => {
  return {
    ...(input.DeleteProperties != null && {
      DeleteProperties: se_ImageDeletePropertyList(input.DeleteProperties, context),
    }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
  };
};

/**
 * serializeAws_json1_1UpdateImageVersionRequest
 */
const se_UpdateImageVersionRequest = (input: UpdateImageVersionRequest, context: __SerdeContext): any => {
  return {
    ...(input.Alias != null && { Alias: input.Alias }),
    ...(input.AliasesToAdd != null && { AliasesToAdd: se_SageMakerImageVersionAliases(input.AliasesToAdd, context) }),
    ...(input.AliasesToDelete != null && {
      AliasesToDelete: se_SageMakerImageVersionAliases(input.AliasesToDelete, context),
    }),
    ...(input.Horovod != null && { Horovod: input.Horovod }),
    ...(input.ImageName != null && { ImageName: input.ImageName }),
    ...(input.JobType != null && { JobType: input.JobType }),
    ...(input.MLFramework != null && { MLFramework: input.MLFramework }),
    ...(input.Processor != null && { Processor: input.Processor }),
    ...(input.ProgrammingLang != null && { ProgrammingLang: input.ProgrammingLang }),
    ...(input.ReleaseNotes != null && { ReleaseNotes: input.ReleaseNotes }),
    ...(input.VendorGuidance != null && { VendorGuidance: input.VendorGuidance }),
    ...(input.Version != null && { Version: input.Version }),
  };
};

/**
 * serializeAws_json1_1UpdateInferenceExperimentRequest
 */
const se_UpdateInferenceExperimentRequest = (input: UpdateInferenceExperimentRequest, context: __SerdeContext): any => {
  return {
    ...(input.DataStorageConfig != null && {
      DataStorageConfig: se_InferenceExperimentDataStorageConfig(input.DataStorageConfig, context),
    }),
    ...(input.Description != null && { Description: input.Description }),
    ...(input.ModelVariants != null && { ModelVariants: se_ModelVariantConfigList(input.ModelVariants, context) }),
    ...(input.Name != null && { Name: input.Name }),
    ...(input.Schedule != null && { Schedule: se_InferenceExperimentSchedule(input.Schedule, context) }),
    ...(input.ShadowModeConfig != null && { ShadowModeConfig: se_ShadowModeConfig(input.ShadowModeConfig, context) }),
  };
};

/**
 * serializeAws_json1_1UpdateModelCardRequest
 */
const se_UpdateModelCardRequest = (input: UpdateModelCardRequest, context: __SerdeContext): any => {
  return {
    ...(input.Content != null && { Content: input.Content }),
    ...(input.ModelCardName != null && { ModelCardName: input.ModelCardName }),
    ...(input.ModelCardStatus != null && { ModelCardStatus: input.ModelCardStatus }),
  };
};

/**
 * serializeAws_json1_1UpdateModelPackageInput
 */
const se_UpdateModelPackageInput = (input: UpdateModelPackageInput, context: __SerdeContext): any => {
  return {
    ...(input.AdditionalInferenceSpecificationsToAdd != null && {
      AdditionalInferenceSpecificationsToAdd: se_AdditionalInferenceSpecifications(
        input.AdditionalInferenceSpecificationsToAdd,
        context
      ),
    }),
    ...(input.ApprovalDescription != null && { ApprovalDescription: input.ApprovalDescription }),
    ...(input.CustomerMetadataProperties != null && {
      CustomerMetadataProperties: se_CustomerMetadataMap(input.CustomerMetadataProperties, context),
    }),
    ...(input.CustomerMetadataPropertiesToRemove != null && {
      CustomerMetadataPropertiesToRemove: se_CustomerMetadataKeyList(input.CustomerMetadataPropertiesToRemove, context),
    }),
    ...(input.ModelApprovalStatus != null && { ModelApprovalStatus: input.ModelApprovalStatus }),
    ...(input.ModelPackageArn != null && { ModelPackageArn: input.ModelPackageArn }),
  };
};

/**
 * serializeAws_json1_1UpdateMonitoringAlertRequest
 */
const se_UpdateMonitoringAlertRequest = (input: UpdateMonitoringAlertRequest, context: __SerdeContext): any => {
  return {
    ...(input.DatapointsToAlert != null && { DatapointsToAlert: input.DatapointsToAlert }),
    ...(input.EvaluationPeriod != null && { EvaluationPeriod: input.EvaluationPeriod }),
    ...(input.MonitoringAlertName != null && { MonitoringAlertName: input.MonitoringAlertName }),
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
  };
};

/**
 * serializeAws_json1_1UpdateMonitoringScheduleRequest
 */
const se_UpdateMonitoringScheduleRequest = (input: UpdateMonitoringScheduleRequest, context: __SerdeContext): any => {
  return {
    ...(input.MonitoringScheduleConfig != null && {
      MonitoringScheduleConfig: se_MonitoringScheduleConfig(input.MonitoringScheduleConfig, context),
    }),
    ...(input.MonitoringScheduleName != null && { MonitoringScheduleName: input.MonitoringScheduleName }),
  };
};

/**
 * serializeAws_json1_1UpdateNotebookInstanceInput
 */
const se_UpdateNotebookInstanceInput = (input: UpdateNotebookInstanceInput, context: __SerdeContext): any => {
  return {
    ...(input.AcceleratorTypes != null && {
      AcceleratorTypes: se_NotebookInstanceAcceleratorTypes(input.AcceleratorTypes, context),
    }),
    ...(input.AdditionalCodeRepositories != null && {
      AdditionalCodeRepositories: se_AdditionalCodeRepositoryNamesOrUrls(input.AdditionalCodeRepositories, context),
    }),
    ...(input.DefaultCodeRepository != null && { DefaultCodeRepository: input.DefaultCodeRepository }),
    ...(input.DisassociateAcceleratorTypes != null && {
      DisassociateAcceleratorTypes: input.DisassociateAcceleratorTypes,
    }),
    ...(input.DisassociateAdditionalCodeRepositories != null && {
      DisassociateAdditionalCodeRepositories: input.DisassociateAdditionalCodeRepositories,
    }),
    ...(input.DisassociateDefaultCodeRepository != null && {
      DisassociateDefaultCodeRepository: input.DisassociateDefaultCodeRepository,
    }),
    ...(input.DisassociateLifecycleConfig != null && {
      DisassociateLifecycleConfig: input.DisassociateLifecycleConfig,
    }),
    ...(input.InstanceMetadataServiceConfiguration != null && {
      InstanceMetadataServiceConfiguration: se_InstanceMetadataServiceConfiguration(
        input.InstanceMetadataServiceConfiguration,
        context
      ),
    }),
    ...(input.InstanceType != null && { InstanceType: input.InstanceType }),
    ...(input.LifecycleConfigName != null && { LifecycleConfigName: input.LifecycleConfigName }),
    ...(input.NotebookInstanceName != null && { NotebookInstanceName: input.NotebookInstanceName }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
    ...(input.RootAccess != null && { RootAccess: input.RootAccess }),
    ...(input.VolumeSizeInGB != null && { VolumeSizeInGB: input.VolumeSizeInGB }),
  };
};

/**
 * serializeAws_json1_1UpdateNotebookInstanceLifecycleConfigInput
 */
const se_UpdateNotebookInstanceLifecycleConfigInput = (
  input: UpdateNotebookInstanceLifecycleConfigInput,
  context: __SerdeContext
): any => {
  return {
    ...(input.NotebookInstanceLifecycleConfigName != null && {
      NotebookInstanceLifecycleConfigName: input.NotebookInstanceLifecycleConfigName,
    }),
    ...(input.OnCreate != null && { OnCreate: se_NotebookInstanceLifecycleConfigList(input.OnCreate, context) }),
    ...(input.OnStart != null && { OnStart: se_NotebookInstanceLifecycleConfigList(input.OnStart, context) }),
  };
};

/**
 * serializeAws_json1_1UpdatePipelineExecutionRequest
 */
const se_UpdatePipelineExecutionRequest = (input: UpdatePipelineExecutionRequest, context: __SerdeContext): any => {
  return {
    ...(input.ParallelismConfiguration != null && {
      ParallelismConfiguration: se_ParallelismConfiguration(input.ParallelismConfiguration, context),
    }),
    ...(input.PipelineExecutionArn != null && { PipelineExecutionArn: input.PipelineExecutionArn }),
    ...(input.PipelineExecutionDescription != null && {
      PipelineExecutionDescription: input.PipelineExecutionDescription,
    }),
    ...(input.PipelineExecutionDisplayName != null && {
      PipelineExecutionDisplayName: input.PipelineExecutionDisplayName,
    }),
  };
};

/**
 * serializeAws_json1_1UpdatePipelineRequest
 */
const se_UpdatePipelineRequest = (input: UpdatePipelineRequest, context: __SerdeContext): any => {
  return {
    ...(input.ParallelismConfiguration != null && {
      ParallelismConfiguration: se_ParallelismConfiguration(input.ParallelismConfiguration, context),
    }),
    ...(input.PipelineDefinition != null && { PipelineDefinition: input.PipelineDefinition }),
    ...(input.PipelineDefinitionS3Location != null && {
      PipelineDefinitionS3Location: se_PipelineDefinitionS3Location(input.PipelineDefinitionS3Location, context),
    }),
    ...(input.PipelineDescription != null && { PipelineDescription: input.PipelineDescription }),
    ...(input.PipelineDisplayName != null && { PipelineDisplayName: input.PipelineDisplayName }),
    ...(input.PipelineName != null && { PipelineName: input.PipelineName }),
    ...(input.RoleArn != null && { RoleArn: input.RoleArn }),
  };
};

/**
 * serializeAws_json1_1UpdateProjectInput
 */
const se_UpdateProjectInput = (input: UpdateProjectInput, context: __SerdeContext): any => {
  return {
    ...(input.ProjectDescription != null && { ProjectDescription: input.ProjectDescription }),
    ...(input.ProjectName != null && { ProjectName: input.ProjectName }),
    ...(input.ServiceCatalogProvisioningUpdateDetails != null && {
      ServiceCatalogProvisioningUpdateDetails: se_ServiceCatalogProvisioningUpdateDetails(
        input.ServiceCatalogProvisioningUpdateDetails,
        context
      ),
    }),
    ...(input.Tags != null && { Tags: se_TagList(input.Tags, context) }),
  };
};

/**
 * serializeAws_json1_1UpdateSpaceRequest
 */
const se_UpdateSpaceRequest = (input: UpdateSpaceRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.SpaceName != null && { SpaceName: input.SpaceName }),
    ...(input.SpaceSettings != null && { SpaceSettings: se_SpaceSettings(input.SpaceSettings, context) }),
  };
};

/**
 * serializeAws_json1_1UpdateTrainingJobRequest
 */
const se_UpdateTrainingJobRequest = (input: UpdateTrainingJobRequest, context: __SerdeContext): any => {
  return {
    ...(input.ProfilerConfig != null && { ProfilerConfig: se_ProfilerConfigForUpdate(input.ProfilerConfig, context) }),
    ...(input.ProfilerRuleConfigurations != null && {
      ProfilerRuleConfigurations: se_ProfilerRuleConfigurations(input.ProfilerRuleConfigurations, context),
    }),
    ...(input.ResourceConfig != null && { ResourceConfig: se_ResourceConfigForUpdate(input.ResourceConfig, context) }),
    ...(input.TrainingJobName != null && { TrainingJobName: input.TrainingJobName }),
  };
};

/**
 * serializeAws_json1_1UpdateTrialComponentRequest
 */
const se_UpdateTrialComponentRequest = (input: UpdateTrialComponentRequest, context: __SerdeContext): any => {
  return {
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.EndTime != null && { EndTime: Math.round(input.EndTime.getTime() / 1000) }),
    ...(input.InputArtifacts != null && { InputArtifacts: se_TrialComponentArtifacts(input.InputArtifacts, context) }),
    ...(input.InputArtifactsToRemove != null && {
      InputArtifactsToRemove: se_ListTrialComponentKey256(input.InputArtifactsToRemove, context),
    }),
    ...(input.OutputArtifacts != null && {
      OutputArtifacts: se_TrialComponentArtifacts(input.OutputArtifacts, context),
    }),
    ...(input.OutputArtifactsToRemove != null && {
      OutputArtifactsToRemove: se_ListTrialComponentKey256(input.OutputArtifactsToRemove, context),
    }),
    ...(input.Parameters != null && { Parameters: se_TrialComponentParameters(input.Parameters, context) }),
    ...(input.ParametersToRemove != null && {
      ParametersToRemove: se_ListTrialComponentKey256(input.ParametersToRemove, context),
    }),
    ...(input.StartTime != null && { StartTime: Math.round(input.StartTime.getTime() / 1000) }),
    ...(input.Status != null && { Status: se_TrialComponentStatus(input.Status, context) }),
    ...(input.TrialComponentName != null && { TrialComponentName: input.TrialComponentName }),
  };
};

/**
 * serializeAws_json1_1UpdateTrialRequest
 */
const se_UpdateTrialRequest = (input: UpdateTrialRequest, context: __SerdeContext): any => {
  return {
    ...(input.DisplayName != null && { DisplayName: input.DisplayName }),
    ...(input.TrialName != null && { TrialName: input.TrialName }),
  };
};

/**
 * serializeAws_json1_1UpdateUserProfileRequest
 */
const se_UpdateUserProfileRequest = (input: UpdateUserProfileRequest, context: __SerdeContext): any => {
  return {
    ...(input.DomainId != null && { DomainId: input.DomainId }),
    ...(input.UserProfileName != null && { UserProfileName: input.UserProfileName }),
    ...(input.UserSettings != null && { UserSettings: se_UserSettings(input.UserSettings, context) }),
  };
};

/**
 * serializeAws_json1_1UpdateWorkforceRequest
 */
const se_UpdateWorkforceRequest = (input: UpdateWorkforceRequest, context: __SerdeContext): any => {
  return {
    ...(input.OidcConfig != null && { OidcConfig: se_OidcConfig(input.OidcConfig, context) }),
    ...(input.SourceIpConfig != null && { SourceIpConfig: se_SourceIpConfig(input.SourceIpConfig, context) }),
    ...(input.WorkforceName != null && { WorkforceName: input.WorkforceName }),
    ...(input.WorkforceVpcConfig != null && {
      WorkforceVpcConfig: se_WorkforceVpcConfigRequest(input.WorkforceVpcConfig, context),
    }),
  };
};

/**
 * serializeAws_json1_1UpdateWorkteamRequest
 */
const se_UpdateWorkteamRequest = (input: UpdateWorkteamRequest, context: __SerdeContext): any => {
  return {
    ...(input.Description != null && { Description: input.Description }),
    ...(input.MemberDefinitions != null && {
      MemberDefinitions: se_MemberDefinitions(input.MemberDefinitions, context),
    }),
    ...(input.NotificationConfiguration != null && {
      NotificationConfiguration: se_NotificationConfiguration(input.NotificationConfiguration, context),
    }),
    ...(input.WorkteamName != null && { WorkteamName: input.WorkteamName }),
  };
};

/**
 * serializeAws_json1_1USD
 */
const se_USD = (input: USD, context: __SerdeContext): any => {
  return {
    ...(input.Cents != null && { Cents: input.Cents }),
    ...(input.Dollars != null && { Dollars: input.Dollars }),
    ...(input.TenthFractionsOfACent != null && { TenthFractionsOfACent: input.TenthFractionsOfACent }),
  };
};

/**
 * serializeAws_json1_1UserSettings
 */
const se_UserSettings = (input: UserSettings, context: __SerdeContext): any => {
  return {
    ...(input.CanvasAppSettings != null && {
      CanvasAppSettings: se_CanvasAppSettings(input.CanvasAppSettings, context),
    }),
    ...(input.ExecutionRole != null && { ExecutionRole: input.ExecutionRole }),
    ...(input.JupyterServerAppSettings != null && {
      JupyterServerAppSettings: se_JupyterServerAppSettings(input.JupyterServerAppSettings, context),
    }),
    ...(input.KernelGatewayAppSettings != null && {
      KernelGatewayAppSettings: se_KernelGatewayAppSettings(input.KernelGatewayAppSettings, context),
    }),
    ...(input.RSessionAppSettings != null && {
      RSessionAppSettings: se_RSessionAppSettings(input.RSessionAppSettings, context),
    }),
    ...(input.RStudioServerProAppSettings != null && {
      RStudioServerProAppSettings: se_RStudioServerProAppSettings(input.RStudioServerProAppSettings, context),
    }),
    ...(input.SecurityGroups != null && { SecurityGroups: se_SecurityGroupIds(input.SecurityGroups, context) }),
    ...(input.SharingSettings != null && { SharingSettings: se_SharingSettings(input.SharingSettings, context) }),
    ...(input.TensorBoardAppSettings != null && {
      TensorBoardAppSettings: se_TensorBoardAppSettings(input.TensorBoardAppSettings, context),
    }),
  };
};

/**
 * serializeAws_json1_1VariantProperty
 */
const se_VariantProperty = (input: VariantProperty, context: __SerdeContext): any => {
  return {
    ...(input.VariantPropertyType != null && { VariantPropertyType: input.VariantPropertyType }),
  };
};

/**
 * serializeAws_json1_1VariantPropertyList
 */
const se_VariantPropertyList = (input: VariantProperty[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return se_VariantProperty(entry, context);
    });
};

/**
 * serializeAws_json1_1VpcConfig
 */
const se_VpcConfig = (input: VpcConfig, context: __SerdeContext): any => {
  return {
    ...(input.SecurityGroupIds != null && {
      SecurityGroupIds: se_VpcSecurityGroupIds(input.SecurityGroupIds, context),
    }),
    ...(input.Subnets != null && { Subnets: se_Subnets(input.Subnets, context) }),
  };
};

/**
 * serializeAws_json1_1VpcSecurityGroupIds
 */
const se_VpcSecurityGroupIds = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1WorkforceSecurityGroupIds
 */
const se_WorkforceSecurityGroupIds = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1WorkforceSubnets
 */
const se_WorkforceSubnets = (input: string[], context: __SerdeContext): any => {
  return input
    .filter((e: any) => e != null)
    .map((entry) => {
      return entry;
    });
};

/**
 * serializeAws_json1_1WorkforceVpcConfigRequest
 */
const se_WorkforceVpcConfigRequest = (input: WorkforceVpcConfigRequest, context: __SerdeContext): any => {
  return {
    ...(input.SecurityGroupIds != null && {
      SecurityGroupIds: se_WorkforceSecurityGroupIds(input.SecurityGroupIds, context),
    }),
    ...(input.Subnets != null && { Subnets: se_WorkforceSubnets(input.Subnets, context) }),
    ...(input.VpcId != null && { VpcId: input.VpcId }),
  };
};

/**
 * deserializeAws_json1_1ActionSource
 */
const de_ActionSource = (output: any, context: __SerdeContext): ActionSource => {
  return {
    SourceId: __expectString(output.SourceId),
    SourceType: __expectString(output.SourceType),
    SourceUri: __expectString(output.SourceUri),
  } as any;
};

/**
 * deserializeAws_json1_1ActionSummaries
 */
const de_ActionSummaries = (output: any, context: __SerdeContext): ActionSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ActionSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ActionSummary
 */
const de_ActionSummary = (output: any, context: __SerdeContext): ActionSummary => {
  return {
    ActionArn: __expectString(output.ActionArn),
    ActionName: __expectString(output.ActionName),
    ActionType: __expectString(output.ActionType),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Source: output.Source != null ? de_ActionSource(output.Source, context) : undefined,
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1AddAssociationResponse
 */
const de_AddAssociationResponse = (output: any, context: __SerdeContext): AddAssociationResponse => {
  return {
    DestinationArn: __expectString(output.DestinationArn),
    SourceArn: __expectString(output.SourceArn),
  } as any;
};

/**
 * deserializeAws_json1_1AdditionalCodeRepositoryNamesOrUrls
 */
const de_AdditionalCodeRepositoryNamesOrUrls = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AdditionalInferenceSpecificationDefinition
 */
const de_AdditionalInferenceSpecificationDefinition = (
  output: any,
  context: __SerdeContext
): AdditionalInferenceSpecificationDefinition => {
  return {
    Containers:
      output.Containers != null ? de_ModelPackageContainerDefinitionList(output.Containers, context) : undefined,
    Description: __expectString(output.Description),
    Name: __expectString(output.Name),
    SupportedContentTypes:
      output.SupportedContentTypes != null ? de_ContentTypes(output.SupportedContentTypes, context) : undefined,
    SupportedRealtimeInferenceInstanceTypes:
      output.SupportedRealtimeInferenceInstanceTypes != null
        ? de_RealtimeInferenceInstanceTypes(output.SupportedRealtimeInferenceInstanceTypes, context)
        : undefined,
    SupportedResponseMIMETypes:
      output.SupportedResponseMIMETypes != null
        ? de_ResponseMIMETypes(output.SupportedResponseMIMETypes, context)
        : undefined,
    SupportedTransformInstanceTypes:
      output.SupportedTransformInstanceTypes != null
        ? de_TransformInstanceTypes(output.SupportedTransformInstanceTypes, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AdditionalInferenceSpecifications
 */
const de_AdditionalInferenceSpecifications = (
  output: any,
  context: __SerdeContext
): AdditionalInferenceSpecificationDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AdditionalInferenceSpecificationDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AddTagsOutput
 */
const de_AddTagsOutput = (output: any, context: __SerdeContext): AddTagsOutput => {
  return {
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AgentVersion
 */
const de_AgentVersion = (output: any, context: __SerdeContext): AgentVersion => {
  return {
    AgentCount: __expectLong(output.AgentCount),
    Version: __expectString(output.Version),
  } as any;
};

/**
 * deserializeAws_json1_1AgentVersions
 */
const de_AgentVersions = (output: any, context: __SerdeContext): AgentVersion[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AgentVersion(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Alarm
 */
const de_Alarm = (output: any, context: __SerdeContext): Alarm => {
  return {
    AlarmName: __expectString(output.AlarmName),
  } as any;
};

/**
 * deserializeAws_json1_1AlarmList
 */
const de_AlarmList = (output: any, context: __SerdeContext): Alarm[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Alarm(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AlgorithmSpecification
 */
const de_AlgorithmSpecification = (output: any, context: __SerdeContext): AlgorithmSpecification => {
  return {
    AlgorithmName: __expectString(output.AlgorithmName),
    ContainerArguments:
      output.ContainerArguments != null ? de_TrainingContainerArguments(output.ContainerArguments, context) : undefined,
    ContainerEntrypoint:
      output.ContainerEntrypoint != null
        ? de_TrainingContainerEntrypoint(output.ContainerEntrypoint, context)
        : undefined,
    EnableSageMakerMetricsTimeSeries: __expectBoolean(output.EnableSageMakerMetricsTimeSeries),
    MetricDefinitions:
      output.MetricDefinitions != null ? de_MetricDefinitionList(output.MetricDefinitions, context) : undefined,
    TrainingImage: __expectString(output.TrainingImage),
    TrainingImageConfig:
      output.TrainingImageConfig != null ? de_TrainingImageConfig(output.TrainingImageConfig, context) : undefined,
    TrainingInputMode: __expectString(output.TrainingInputMode),
  } as any;
};

/**
 * deserializeAws_json1_1AlgorithmStatusDetails
 */
const de_AlgorithmStatusDetails = (output: any, context: __SerdeContext): AlgorithmStatusDetails => {
  return {
    ImageScanStatuses:
      output.ImageScanStatuses != null ? de_AlgorithmStatusItemList(output.ImageScanStatuses, context) : undefined,
    ValidationStatuses:
      output.ValidationStatuses != null ? de_AlgorithmStatusItemList(output.ValidationStatuses, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AlgorithmStatusItem
 */
const de_AlgorithmStatusItem = (output: any, context: __SerdeContext): AlgorithmStatusItem => {
  return {
    FailureReason: __expectString(output.FailureReason),
    Name: __expectString(output.Name),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1AlgorithmStatusItemList
 */
const de_AlgorithmStatusItemList = (output: any, context: __SerdeContext): AlgorithmStatusItem[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AlgorithmStatusItem(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AlgorithmSummary
 */
const de_AlgorithmSummary = (output: any, context: __SerdeContext): AlgorithmSummary => {
  return {
    AlgorithmArn: __expectString(output.AlgorithmArn),
    AlgorithmDescription: __expectString(output.AlgorithmDescription),
    AlgorithmName: __expectString(output.AlgorithmName),
    AlgorithmStatus: __expectString(output.AlgorithmStatus),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AlgorithmSummaryList
 */
const de_AlgorithmSummaryList = (output: any, context: __SerdeContext): AlgorithmSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AlgorithmSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AlgorithmValidationProfile
 */
const de_AlgorithmValidationProfile = (output: any, context: __SerdeContext): AlgorithmValidationProfile => {
  return {
    ProfileName: __expectString(output.ProfileName),
    TrainingJobDefinition:
      output.TrainingJobDefinition != null
        ? de_TrainingJobDefinition(output.TrainingJobDefinition, context)
        : undefined,
    TransformJobDefinition:
      output.TransformJobDefinition != null
        ? de_TransformJobDefinition(output.TransformJobDefinition, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AlgorithmValidationProfiles
 */
const de_AlgorithmValidationProfiles = (output: any, context: __SerdeContext): AlgorithmValidationProfile[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AlgorithmValidationProfile(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AlgorithmValidationSpecification
 */
const de_AlgorithmValidationSpecification = (
  output: any,
  context: __SerdeContext
): AlgorithmValidationSpecification => {
  return {
    ValidationProfiles:
      output.ValidationProfiles != null
        ? de_AlgorithmValidationProfiles(output.ValidationProfiles, context)
        : undefined,
    ValidationRole: __expectString(output.ValidationRole),
  } as any;
};

/**
 * deserializeAws_json1_1AnnotationConsolidationConfig
 */
const de_AnnotationConsolidationConfig = (output: any, context: __SerdeContext): AnnotationConsolidationConfig => {
  return {
    AnnotationConsolidationLambdaArn: __expectString(output.AnnotationConsolidationLambdaArn),
  } as any;
};

/**
 * deserializeAws_json1_1AppDetails
 */
const de_AppDetails = (output: any, context: __SerdeContext): AppDetails => {
  return {
    AppName: __expectString(output.AppName),
    AppType: __expectString(output.AppType),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DomainId: __expectString(output.DomainId),
    SpaceName: __expectString(output.SpaceName),
    Status: __expectString(output.Status),
    UserProfileName: __expectString(output.UserProfileName),
  } as any;
};

/**
 * deserializeAws_json1_1AppImageConfigDetails
 */
const de_AppImageConfigDetails = (output: any, context: __SerdeContext): AppImageConfigDetails => {
  return {
    AppImageConfigArn: __expectString(output.AppImageConfigArn),
    AppImageConfigName: __expectString(output.AppImageConfigName),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    KernelGatewayImageConfig:
      output.KernelGatewayImageConfig != null
        ? de_KernelGatewayImageConfig(output.KernelGatewayImageConfig, context)
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AppImageConfigList
 */
const de_AppImageConfigList = (output: any, context: __SerdeContext): AppImageConfigDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AppImageConfigDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AppList
 */
const de_AppList = (output: any, context: __SerdeContext): AppDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AppDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AppSpecification
 */
const de_AppSpecification = (output: any, context: __SerdeContext): AppSpecification => {
  return {
    ContainerArguments:
      output.ContainerArguments != null ? de_ContainerArguments(output.ContainerArguments, context) : undefined,
    ContainerEntrypoint:
      output.ContainerEntrypoint != null ? de_ContainerEntrypoint(output.ContainerEntrypoint, context) : undefined,
    ImageUri: __expectString(output.ImageUri),
  } as any;
};

/**
 * deserializeAws_json1_1ArtifactSource
 */
const de_ArtifactSource = (output: any, context: __SerdeContext): ArtifactSource => {
  return {
    SourceTypes: output.SourceTypes != null ? de_ArtifactSourceTypes(output.SourceTypes, context) : undefined,
    SourceUri: __expectString(output.SourceUri),
  } as any;
};

/**
 * deserializeAws_json1_1ArtifactSourceType
 */
const de_ArtifactSourceType = (output: any, context: __SerdeContext): ArtifactSourceType => {
  return {
    SourceIdType: __expectString(output.SourceIdType),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1ArtifactSourceTypes
 */
const de_ArtifactSourceTypes = (output: any, context: __SerdeContext): ArtifactSourceType[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ArtifactSourceType(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ArtifactSummaries
 */
const de_ArtifactSummaries = (output: any, context: __SerdeContext): ArtifactSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ArtifactSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ArtifactSummary
 */
const de_ArtifactSummary = (output: any, context: __SerdeContext): ArtifactSummary => {
  return {
    ArtifactArn: __expectString(output.ArtifactArn),
    ArtifactName: __expectString(output.ArtifactName),
    ArtifactType: __expectString(output.ArtifactType),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Source: output.Source != null ? de_ArtifactSource(output.Source, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AssociateTrialComponentResponse
 */
const de_AssociateTrialComponentResponse = (output: any, context: __SerdeContext): AssociateTrialComponentResponse => {
  return {
    TrialArn: __expectString(output.TrialArn),
    TrialComponentArn: __expectString(output.TrialComponentArn),
  } as any;
};

/**
 * deserializeAws_json1_1AssociationSummaries
 */
const de_AssociationSummaries = (output: any, context: __SerdeContext): AssociationSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AssociationSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AssociationSummary
 */
const de_AssociationSummary = (output: any, context: __SerdeContext): AssociationSummary => {
  return {
    AssociationType: __expectString(output.AssociationType),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DestinationArn: __expectString(output.DestinationArn),
    DestinationName: __expectString(output.DestinationName),
    DestinationType: __expectString(output.DestinationType),
    SourceArn: __expectString(output.SourceArn),
    SourceName: __expectString(output.SourceName),
    SourceType: __expectString(output.SourceType),
  } as any;
};

/**
 * deserializeAws_json1_1AsyncInferenceClientConfig
 */
const de_AsyncInferenceClientConfig = (output: any, context: __SerdeContext): AsyncInferenceClientConfig => {
  return {
    MaxConcurrentInvocationsPerInstance: __expectInt32(output.MaxConcurrentInvocationsPerInstance),
  } as any;
};

/**
 * deserializeAws_json1_1AsyncInferenceConfig
 */
const de_AsyncInferenceConfig = (output: any, context: __SerdeContext): AsyncInferenceConfig => {
  return {
    ClientConfig: output.ClientConfig != null ? de_AsyncInferenceClientConfig(output.ClientConfig, context) : undefined,
    OutputConfig: output.OutputConfig != null ? de_AsyncInferenceOutputConfig(output.OutputConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AsyncInferenceNotificationConfig
 */
const de_AsyncInferenceNotificationConfig = (
  output: any,
  context: __SerdeContext
): AsyncInferenceNotificationConfig => {
  return {
    ErrorTopic: __expectString(output.ErrorTopic),
    IncludeInferenceResponseIn:
      output.IncludeInferenceResponseIn != null
        ? de_AsyncNotificationTopicTypeList(output.IncludeInferenceResponseIn, context)
        : undefined,
    SuccessTopic: __expectString(output.SuccessTopic),
  } as any;
};

/**
 * deserializeAws_json1_1AsyncInferenceOutputConfig
 */
const de_AsyncInferenceOutputConfig = (output: any, context: __SerdeContext): AsyncInferenceOutputConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    NotificationConfig:
      output.NotificationConfig != null
        ? de_AsyncInferenceNotificationConfig(output.NotificationConfig, context)
        : undefined,
    S3FailurePath: __expectString(output.S3FailurePath),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1AsyncNotificationTopicTypeList
 */
const de_AsyncNotificationTopicTypeList = (
  output: any,
  context: __SerdeContext
): (AsyncNotificationTopicTypes | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AthenaDatasetDefinition
 */
const de_AthenaDatasetDefinition = (output: any, context: __SerdeContext): AthenaDatasetDefinition => {
  return {
    Catalog: __expectString(output.Catalog),
    Database: __expectString(output.Database),
    KmsKeyId: __expectString(output.KmsKeyId),
    OutputCompression: __expectString(output.OutputCompression),
    OutputFormat: __expectString(output.OutputFormat),
    OutputS3Uri: __expectString(output.OutputS3Uri),
    QueryString: __expectString(output.QueryString),
    WorkGroup: __expectString(output.WorkGroup),
  } as any;
};

/**
 * deserializeAws_json1_1AttributeNames
 */
const de_AttributeNames = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLAlgorithmConfig
 */
const de_AutoMLAlgorithmConfig = (output: any, context: __SerdeContext): AutoMLAlgorithmConfig => {
  return {
    AutoMLAlgorithms:
      output.AutoMLAlgorithms != null ? de_AutoMLAlgorithms(output.AutoMLAlgorithms, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLAlgorithms
 */
const de_AutoMLAlgorithms = (output: any, context: __SerdeContext): (AutoMLAlgorithm | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLAlgorithmsConfig
 */
const de_AutoMLAlgorithmsConfig = (output: any, context: __SerdeContext): AutoMLAlgorithmConfig[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLAlgorithmConfig(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLCandidate
 */
const de_AutoMLCandidate = (output: any, context: __SerdeContext): AutoMLCandidate => {
  return {
    CandidateName: __expectString(output.CandidateName),
    CandidateProperties:
      output.CandidateProperties != null ? de_CandidateProperties(output.CandidateProperties, context) : undefined,
    CandidateStatus: __expectString(output.CandidateStatus),
    CandidateSteps: output.CandidateSteps != null ? de_CandidateSteps(output.CandidateSteps, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    FailureReason: __expectString(output.FailureReason),
    FinalAutoMLJobObjectiveMetric:
      output.FinalAutoMLJobObjectiveMetric != null
        ? de_FinalAutoMLJobObjectiveMetric(output.FinalAutoMLJobObjectiveMetric, context)
        : undefined,
    InferenceContainerDefinitions:
      output.InferenceContainerDefinitions != null
        ? de_AutoMLInferenceContainerDefinitions(output.InferenceContainerDefinitions, context)
        : undefined,
    InferenceContainers:
      output.InferenceContainers != null
        ? de_AutoMLContainerDefinitions(output.InferenceContainers, context)
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ObjectiveStatus: __expectString(output.ObjectiveStatus),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLCandidateGenerationConfig
 */
const de_AutoMLCandidateGenerationConfig = (output: any, context: __SerdeContext): AutoMLCandidateGenerationConfig => {
  return {
    AlgorithmsConfig:
      output.AlgorithmsConfig != null ? de_AutoMLAlgorithmsConfig(output.AlgorithmsConfig, context) : undefined,
    FeatureSpecificationS3Uri: __expectString(output.FeatureSpecificationS3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLCandidates
 */
const de_AutoMLCandidates = (output: any, context: __SerdeContext): AutoMLCandidate[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLCandidate(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLCandidateStep
 */
const de_AutoMLCandidateStep = (output: any, context: __SerdeContext): AutoMLCandidateStep => {
  return {
    CandidateStepArn: __expectString(output.CandidateStepArn),
    CandidateStepName: __expectString(output.CandidateStepName),
    CandidateStepType: __expectString(output.CandidateStepType),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLChannel
 */
const de_AutoMLChannel = (output: any, context: __SerdeContext): AutoMLChannel => {
  return {
    ChannelType: __expectString(output.ChannelType),
    CompressionType: __expectString(output.CompressionType),
    ContentType: __expectString(output.ContentType),
    DataSource: output.DataSource != null ? de_AutoMLDataSource(output.DataSource, context) : undefined,
    TargetAttributeName: __expectString(output.TargetAttributeName),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLContainerDefinition
 */
const de_AutoMLContainerDefinition = (output: any, context: __SerdeContext): AutoMLContainerDefinition => {
  return {
    Environment: output.Environment != null ? de_EnvironmentMap(output.Environment, context) : undefined,
    Image: __expectString(output.Image),
    ModelDataUrl: __expectString(output.ModelDataUrl),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLContainerDefinitions
 */
const de_AutoMLContainerDefinitions = (output: any, context: __SerdeContext): AutoMLContainerDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLContainerDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLDataSource
 */
const de_AutoMLDataSource = (output: any, context: __SerdeContext): AutoMLDataSource => {
  return {
    S3DataSource: output.S3DataSource != null ? de_AutoMLS3DataSource(output.S3DataSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLDataSplitConfig
 */
const de_AutoMLDataSplitConfig = (output: any, context: __SerdeContext): AutoMLDataSplitConfig => {
  return {
    ValidationFraction: __limitedParseFloat32(output.ValidationFraction),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLInferenceContainerDefinitions
 */
const de_AutoMLInferenceContainerDefinitions = (
  output: any,
  context: __SerdeContext
): Record<string, AutoMLContainerDefinition[]> => {
  return Object.entries(output).reduce(
    (acc: Record<string, AutoMLContainerDefinition[]>, [key, value]: [AutoMLProcessingUnit | string, any]) => {
      if (value === null) {
        return acc;
      }
      acc[key] = de_AutoMLContainerDefinitions(value, context);
      return acc;
    },
    {}
  );
};

/**
 * deserializeAws_json1_1AutoMLInputDataConfig
 */
const de_AutoMLInputDataConfig = (output: any, context: __SerdeContext): AutoMLChannel[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLChannel(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLJobArtifacts
 */
const de_AutoMLJobArtifacts = (output: any, context: __SerdeContext): AutoMLJobArtifacts => {
  return {
    CandidateDefinitionNotebookLocation: __expectString(output.CandidateDefinitionNotebookLocation),
    DataExplorationNotebookLocation: __expectString(output.DataExplorationNotebookLocation),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLJobChannel
 */
const de_AutoMLJobChannel = (output: any, context: __SerdeContext): AutoMLJobChannel => {
  return {
    ChannelType: __expectString(output.ChannelType),
    CompressionType: __expectString(output.CompressionType),
    ContentType: __expectString(output.ContentType),
    DataSource: output.DataSource != null ? de_AutoMLDataSource(output.DataSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLJobCompletionCriteria
 */
const de_AutoMLJobCompletionCriteria = (output: any, context: __SerdeContext): AutoMLJobCompletionCriteria => {
  return {
    MaxAutoMLJobRuntimeInSeconds: __expectInt32(output.MaxAutoMLJobRuntimeInSeconds),
    MaxCandidates: __expectInt32(output.MaxCandidates),
    MaxRuntimePerTrainingJobInSeconds: __expectInt32(output.MaxRuntimePerTrainingJobInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLJobConfig
 */
const de_AutoMLJobConfig = (output: any, context: __SerdeContext): AutoMLJobConfig => {
  return {
    CandidateGenerationConfig:
      output.CandidateGenerationConfig != null
        ? de_AutoMLCandidateGenerationConfig(output.CandidateGenerationConfig, context)
        : undefined,
    CompletionCriteria:
      output.CompletionCriteria != null
        ? de_AutoMLJobCompletionCriteria(output.CompletionCriteria, context)
        : undefined,
    DataSplitConfig:
      output.DataSplitConfig != null ? de_AutoMLDataSplitConfig(output.DataSplitConfig, context) : undefined,
    Mode: __expectString(output.Mode),
    SecurityConfig: output.SecurityConfig != null ? de_AutoMLSecurityConfig(output.SecurityConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLJobInputDataConfig
 */
const de_AutoMLJobInputDataConfig = (output: any, context: __SerdeContext): AutoMLJobChannel[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLJobChannel(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLJobObjective
 */
const de_AutoMLJobObjective = (output: any, context: __SerdeContext): AutoMLJobObjective => {
  return {
    MetricName: __expectString(output.MetricName),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLJobStepMetadata
 */
const de_AutoMLJobStepMetadata = (output: any, context: __SerdeContext): AutoMLJobStepMetadata => {
  return {
    Arn: __expectString(output.Arn),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLJobSummaries
 */
const de_AutoMLJobSummaries = (output: any, context: __SerdeContext): AutoMLJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLJobSummary
 */
const de_AutoMLJobSummary = (output: any, context: __SerdeContext): AutoMLJobSummary => {
  return {
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    AutoMLJobName: __expectString(output.AutoMLJobName),
    AutoMLJobSecondaryStatus: __expectString(output.AutoMLJobSecondaryStatus),
    AutoMLJobStatus: __expectString(output.AutoMLJobStatus),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    PartialFailureReasons:
      output.PartialFailureReasons != null
        ? de_AutoMLPartialFailureReasons(output.PartialFailureReasons, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLOutputDataConfig
 */
const de_AutoMLOutputDataConfig = (output: any, context: __SerdeContext): AutoMLOutputDataConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLPartialFailureReason
 */
const de_AutoMLPartialFailureReason = (output: any, context: __SerdeContext): AutoMLPartialFailureReason => {
  return {
    PartialFailureMessage: __expectString(output.PartialFailureMessage),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLPartialFailureReasons
 */
const de_AutoMLPartialFailureReasons = (output: any, context: __SerdeContext): AutoMLPartialFailureReason[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLPartialFailureReason(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1AutoMLProblemTypeConfig
 */
const de_AutoMLProblemTypeConfig = (output: any, context: __SerdeContext): AutoMLProblemTypeConfig => {
  if (output.ImageClassificationJobConfig != null) {
    return {
      ImageClassificationJobConfig: de_ImageClassificationJobConfig(output.ImageClassificationJobConfig, context),
    };
  }
  if (output.TextClassificationJobConfig != null) {
    return {
      TextClassificationJobConfig: de_TextClassificationJobConfig(output.TextClassificationJobConfig, context),
    };
  }
  return { $unknown: Object.entries(output)[0] };
};

/**
 * deserializeAws_json1_1AutoMLS3DataSource
 */
const de_AutoMLS3DataSource = (output: any, context: __SerdeContext): AutoMLS3DataSource => {
  return {
    S3DataType: __expectString(output.S3DataType),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1AutoMLSecurityConfig
 */
const de_AutoMLSecurityConfig = (output: any, context: __SerdeContext): AutoMLSecurityConfig => {
  return {
    EnableInterContainerTrafficEncryption: __expectBoolean(output.EnableInterContainerTrafficEncryption),
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1AutoRollbackConfig
 */
const de_AutoRollbackConfig = (output: any, context: __SerdeContext): AutoRollbackConfig => {
  return {
    Alarms: output.Alarms != null ? de_AlarmList(output.Alarms, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1BatchDataCaptureConfig
 */
const de_BatchDataCaptureConfig = (output: any, context: __SerdeContext): BatchDataCaptureConfig => {
  return {
    DestinationS3Uri: __expectString(output.DestinationS3Uri),
    GenerateInferenceId: __expectBoolean(output.GenerateInferenceId),
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_json1_1BatchDescribeModelPackageError
 */
const de_BatchDescribeModelPackageError = (output: any, context: __SerdeContext): BatchDescribeModelPackageError => {
  return {
    ErrorCode: __expectString(output.ErrorCode),
    ErrorResponse: __expectString(output.ErrorResponse),
  } as any;
};

/**
 * deserializeAws_json1_1BatchDescribeModelPackageErrorMap
 */
const de_BatchDescribeModelPackageErrorMap = (
  output: any,
  context: __SerdeContext
): Record<string, BatchDescribeModelPackageError> => {
  return Object.entries(output).reduce(
    (acc: Record<string, BatchDescribeModelPackageError>, [key, value]: [string, any]) => {
      if (value === null) {
        return acc;
      }
      acc[key] = de_BatchDescribeModelPackageError(value, context);
      return acc;
    },
    {}
  );
};

/**
 * deserializeAws_json1_1BatchDescribeModelPackageOutput
 */
const de_BatchDescribeModelPackageOutput = (output: any, context: __SerdeContext): BatchDescribeModelPackageOutput => {
  return {
    BatchDescribeModelPackageErrorMap:
      output.BatchDescribeModelPackageErrorMap != null
        ? de_BatchDescribeModelPackageErrorMap(output.BatchDescribeModelPackageErrorMap, context)
        : undefined,
    ModelPackageSummaries:
      output.ModelPackageSummaries != null
        ? de_ModelPackageSummaries(output.ModelPackageSummaries, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1BatchDescribeModelPackageSummary
 */
const de_BatchDescribeModelPackageSummary = (
  output: any,
  context: __SerdeContext
): BatchDescribeModelPackageSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    InferenceSpecification:
      output.InferenceSpecification != null
        ? de_InferenceSpecification(output.InferenceSpecification, context)
        : undefined,
    ModelApprovalStatus: __expectString(output.ModelApprovalStatus),
    ModelPackageArn: __expectString(output.ModelPackageArn),
    ModelPackageDescription: __expectString(output.ModelPackageDescription),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    ModelPackageStatus: __expectString(output.ModelPackageStatus),
    ModelPackageVersion: __expectInt32(output.ModelPackageVersion),
  } as any;
};

/**
 * deserializeAws_json1_1BatchTransformInput
 */
const de_BatchTransformInput = (output: any, context: __SerdeContext): BatchTransformInput => {
  return {
    DataCapturedDestinationS3Uri: __expectString(output.DataCapturedDestinationS3Uri),
    DatasetFormat: output.DatasetFormat != null ? de_MonitoringDatasetFormat(output.DatasetFormat, context) : undefined,
    EndTimeOffset: __expectString(output.EndTimeOffset),
    FeaturesAttribute: __expectString(output.FeaturesAttribute),
    InferenceAttribute: __expectString(output.InferenceAttribute),
    LocalPath: __expectString(output.LocalPath),
    ProbabilityAttribute: __expectString(output.ProbabilityAttribute),
    ProbabilityThresholdAttribute: __limitedParseDouble(output.ProbabilityThresholdAttribute),
    S3DataDistributionType: __expectString(output.S3DataDistributionType),
    S3InputMode: __expectString(output.S3InputMode),
    StartTimeOffset: __expectString(output.StartTimeOffset),
  } as any;
};

/**
 * deserializeAws_json1_1BestObjectiveNotImproving
 */
const de_BestObjectiveNotImproving = (output: any, context: __SerdeContext): BestObjectiveNotImproving => {
  return {
    MaxNumberOfTrainingJobsNotImproving: __expectInt32(output.MaxNumberOfTrainingJobsNotImproving),
  } as any;
};

/**
 * deserializeAws_json1_1Bias
 */
const de_Bias = (output: any, context: __SerdeContext): Bias => {
  return {
    PostTrainingReport:
      output.PostTrainingReport != null ? de_MetricsSource(output.PostTrainingReport, context) : undefined,
    PreTrainingReport:
      output.PreTrainingReport != null ? de_MetricsSource(output.PreTrainingReport, context) : undefined,
    Report: output.Report != null ? de_MetricsSource(output.Report, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1BlueGreenUpdatePolicy
 */
const de_BlueGreenUpdatePolicy = (output: any, context: __SerdeContext): BlueGreenUpdatePolicy => {
  return {
    MaximumExecutionTimeoutInSeconds: __expectInt32(output.MaximumExecutionTimeoutInSeconds),
    TerminationWaitInSeconds: __expectInt32(output.TerminationWaitInSeconds),
    TrafficRoutingConfiguration:
      output.TrafficRoutingConfiguration != null
        ? de_TrafficRoutingConfig(output.TrafficRoutingConfiguration, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CacheHitResult
 */
const de_CacheHitResult = (output: any, context: __SerdeContext): CacheHitResult => {
  return {
    SourcePipelineExecutionArn: __expectString(output.SourcePipelineExecutionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CallbackStepMetadata
 */
const de_CallbackStepMetadata = (output: any, context: __SerdeContext): CallbackStepMetadata => {
  return {
    CallbackToken: __expectString(output.CallbackToken),
    OutputParameters:
      output.OutputParameters != null ? de_OutputParameterList(output.OutputParameters, context) : undefined,
    SqsQueueUrl: __expectString(output.SqsQueueUrl),
  } as any;
};

/**
 * deserializeAws_json1_1CandidateArtifactLocations
 */
const de_CandidateArtifactLocations = (output: any, context: __SerdeContext): CandidateArtifactLocations => {
  return {
    Explainability: __expectString(output.Explainability),
    ModelInsights: __expectString(output.ModelInsights),
  } as any;
};

/**
 * deserializeAws_json1_1CandidateProperties
 */
const de_CandidateProperties = (output: any, context: __SerdeContext): CandidateProperties => {
  return {
    CandidateArtifactLocations:
      output.CandidateArtifactLocations != null
        ? de_CandidateArtifactLocations(output.CandidateArtifactLocations, context)
        : undefined,
    CandidateMetrics: output.CandidateMetrics != null ? de_MetricDataList(output.CandidateMetrics, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CandidateSteps
 */
const de_CandidateSteps = (output: any, context: __SerdeContext): AutoMLCandidateStep[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_AutoMLCandidateStep(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CanvasAppSettings
 */
const de_CanvasAppSettings = (output: any, context: __SerdeContext): CanvasAppSettings => {
  return {
    TimeSeriesForecastingSettings:
      output.TimeSeriesForecastingSettings != null
        ? de_TimeSeriesForecastingSettings(output.TimeSeriesForecastingSettings, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CapacitySize
 */
const de_CapacitySize = (output: any, context: __SerdeContext): CapacitySize => {
  return {
    Type: __expectString(output.Type),
    Value: __expectInt32(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1CaptureContentTypeHeader
 */
const de_CaptureContentTypeHeader = (output: any, context: __SerdeContext): CaptureContentTypeHeader => {
  return {
    CsvContentTypes: output.CsvContentTypes != null ? de_CsvContentTypes(output.CsvContentTypes, context) : undefined,
    JsonContentTypes:
      output.JsonContentTypes != null ? de_JsonContentTypes(output.JsonContentTypes, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CaptureOption
 */
const de_CaptureOption = (output: any, context: __SerdeContext): CaptureOption => {
  return {
    CaptureMode: __expectString(output.CaptureMode),
  } as any;
};

/**
 * deserializeAws_json1_1CaptureOptionList
 */
const de_CaptureOptionList = (output: any, context: __SerdeContext): CaptureOption[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CaptureOption(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CategoricalParameter
 */
const de_CategoricalParameter = (output: any, context: __SerdeContext): CategoricalParameter => {
  return {
    Name: __expectString(output.Name),
    Value: output.Value != null ? de_CategoricalParameterRangeValues(output.Value, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CategoricalParameterRange
 */
const de_CategoricalParameterRange = (output: any, context: __SerdeContext): CategoricalParameterRange => {
  return {
    Name: __expectString(output.Name),
    Values: output.Values != null ? de_ParameterValues(output.Values, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CategoricalParameterRanges
 */
const de_CategoricalParameterRanges = (output: any, context: __SerdeContext): CategoricalParameterRange[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CategoricalParameterRange(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CategoricalParameterRangeSpecification
 */
const de_CategoricalParameterRangeSpecification = (
  output: any,
  context: __SerdeContext
): CategoricalParameterRangeSpecification => {
  return {
    Values: output.Values != null ? de_ParameterValues(output.Values, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CategoricalParameterRangeValues
 */
const de_CategoricalParameterRangeValues = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CategoricalParameters
 */
const de_CategoricalParameters = (output: any, context: __SerdeContext): CategoricalParameter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CategoricalParameter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Channel
 */
const de_Channel = (output: any, context: __SerdeContext): Channel => {
  return {
    ChannelName: __expectString(output.ChannelName),
    CompressionType: __expectString(output.CompressionType),
    ContentType: __expectString(output.ContentType),
    DataSource: output.DataSource != null ? de_DataSource(output.DataSource, context) : undefined,
    InputMode: __expectString(output.InputMode),
    RecordWrapperType: __expectString(output.RecordWrapperType),
    ShuffleConfig: output.ShuffleConfig != null ? de_ShuffleConfig(output.ShuffleConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ChannelSpecification
 */
const de_ChannelSpecification = (output: any, context: __SerdeContext): ChannelSpecification => {
  return {
    Description: __expectString(output.Description),
    IsRequired: __expectBoolean(output.IsRequired),
    Name: __expectString(output.Name),
    SupportedCompressionTypes:
      output.SupportedCompressionTypes != null
        ? de_CompressionTypes(output.SupportedCompressionTypes, context)
        : undefined,
    SupportedContentTypes:
      output.SupportedContentTypes != null ? de_ContentTypes(output.SupportedContentTypes, context) : undefined,
    SupportedInputModes:
      output.SupportedInputModes != null ? de_InputModes(output.SupportedInputModes, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ChannelSpecifications
 */
const de_ChannelSpecifications = (output: any, context: __SerdeContext): ChannelSpecification[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ChannelSpecification(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CheckpointConfig
 */
const de_CheckpointConfig = (output: any, context: __SerdeContext): CheckpointConfig => {
  return {
    LocalPath: __expectString(output.LocalPath),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1Cidrs
 */
const de_Cidrs = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ClarifyCheckStepMetadata
 */
const de_ClarifyCheckStepMetadata = (output: any, context: __SerdeContext): ClarifyCheckStepMetadata => {
  return {
    BaselineUsedForDriftCheckConstraints: __expectString(output.BaselineUsedForDriftCheckConstraints),
    CalculatedBaselineConstraints: __expectString(output.CalculatedBaselineConstraints),
    CheckJobArn: __expectString(output.CheckJobArn),
    CheckType: __expectString(output.CheckType),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    RegisterNewBaseline: __expectBoolean(output.RegisterNewBaseline),
    SkipCheck: __expectBoolean(output.SkipCheck),
    ViolationReport: __expectString(output.ViolationReport),
  } as any;
};

/**
 * deserializeAws_json1_1ClarifyExplainerConfig
 */
const de_ClarifyExplainerConfig = (output: any, context: __SerdeContext): ClarifyExplainerConfig => {
  return {
    EnableExplanations: __expectString(output.EnableExplanations),
    InferenceConfig:
      output.InferenceConfig != null ? de_ClarifyInferenceConfig(output.InferenceConfig, context) : undefined,
    ShapConfig: output.ShapConfig != null ? de_ClarifyShapConfig(output.ShapConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ClarifyFeatureHeaders
 */
const de_ClarifyFeatureHeaders = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ClarifyFeatureTypes
 */
const de_ClarifyFeatureTypes = (output: any, context: __SerdeContext): (ClarifyFeatureType | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ClarifyInferenceConfig
 */
const de_ClarifyInferenceConfig = (output: any, context: __SerdeContext): ClarifyInferenceConfig => {
  return {
    ContentTemplate: __expectString(output.ContentTemplate),
    FeatureHeaders:
      output.FeatureHeaders != null ? de_ClarifyFeatureHeaders(output.FeatureHeaders, context) : undefined,
    FeatureTypes: output.FeatureTypes != null ? de_ClarifyFeatureTypes(output.FeatureTypes, context) : undefined,
    FeaturesAttribute: __expectString(output.FeaturesAttribute),
    LabelAttribute: __expectString(output.LabelAttribute),
    LabelHeaders: output.LabelHeaders != null ? de_ClarifyLabelHeaders(output.LabelHeaders, context) : undefined,
    LabelIndex: __expectInt32(output.LabelIndex),
    MaxPayloadInMB: __expectInt32(output.MaxPayloadInMB),
    MaxRecordCount: __expectInt32(output.MaxRecordCount),
    ProbabilityAttribute: __expectString(output.ProbabilityAttribute),
    ProbabilityIndex: __expectInt32(output.ProbabilityIndex),
  } as any;
};

/**
 * deserializeAws_json1_1ClarifyLabelHeaders
 */
const de_ClarifyLabelHeaders = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ClarifyShapBaselineConfig
 */
const de_ClarifyShapBaselineConfig = (output: any, context: __SerdeContext): ClarifyShapBaselineConfig => {
  return {
    MimeType: __expectString(output.MimeType),
    ShapBaseline: __expectString(output.ShapBaseline),
    ShapBaselineUri: __expectString(output.ShapBaselineUri),
  } as any;
};

/**
 * deserializeAws_json1_1ClarifyShapConfig
 */
const de_ClarifyShapConfig = (output: any, context: __SerdeContext): ClarifyShapConfig => {
  return {
    NumberOfSamples: __expectInt32(output.NumberOfSamples),
    Seed: __expectInt32(output.Seed),
    ShapBaselineConfig:
      output.ShapBaselineConfig != null ? de_ClarifyShapBaselineConfig(output.ShapBaselineConfig, context) : undefined,
    TextConfig: output.TextConfig != null ? de_ClarifyTextConfig(output.TextConfig, context) : undefined,
    UseLogit: __expectBoolean(output.UseLogit),
  } as any;
};

/**
 * deserializeAws_json1_1ClarifyTextConfig
 */
const de_ClarifyTextConfig = (output: any, context: __SerdeContext): ClarifyTextConfig => {
  return {
    Granularity: __expectString(output.Granularity),
    Language: __expectString(output.Language),
  } as any;
};

/**
 * deserializeAws_json1_1CodeRepositories
 */
const de_CodeRepositories = (output: any, context: __SerdeContext): CodeRepository[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CodeRepository(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CodeRepository
 */
const de_CodeRepository = (output: any, context: __SerdeContext): CodeRepository => {
  return {
    RepositoryUrl: __expectString(output.RepositoryUrl),
  } as any;
};

/**
 * deserializeAws_json1_1CodeRepositorySummary
 */
const de_CodeRepositorySummary = (output: any, context: __SerdeContext): CodeRepositorySummary => {
  return {
    CodeRepositoryArn: __expectString(output.CodeRepositoryArn),
    CodeRepositoryName: __expectString(output.CodeRepositoryName),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    GitConfig: output.GitConfig != null ? de_GitConfig(output.GitConfig, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CodeRepositorySummaryList
 */
const de_CodeRepositorySummaryList = (output: any, context: __SerdeContext): CodeRepositorySummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CodeRepositorySummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CognitoConfig
 */
const de_CognitoConfig = (output: any, context: __SerdeContext): CognitoConfig => {
  return {
    ClientId: __expectString(output.ClientId),
    UserPool: __expectString(output.UserPool),
  } as any;
};

/**
 * deserializeAws_json1_1CognitoMemberDefinition
 */
const de_CognitoMemberDefinition = (output: any, context: __SerdeContext): CognitoMemberDefinition => {
  return {
    ClientId: __expectString(output.ClientId),
    UserGroup: __expectString(output.UserGroup),
    UserPool: __expectString(output.UserPool),
  } as any;
};

/**
 * deserializeAws_json1_1CollectionConfiguration
 */
const de_CollectionConfiguration = (output: any, context: __SerdeContext): CollectionConfiguration => {
  return {
    CollectionName: __expectString(output.CollectionName),
    CollectionParameters:
      output.CollectionParameters != null ? de_CollectionParameters(output.CollectionParameters, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CollectionConfigurations
 */
const de_CollectionConfigurations = (output: any, context: __SerdeContext): CollectionConfiguration[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CollectionConfiguration(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CollectionParameters
 */
const de_CollectionParameters = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1CompilationJobSummaries
 */
const de_CompilationJobSummaries = (output: any, context: __SerdeContext): CompilationJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CompilationJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CompilationJobSummary
 */
const de_CompilationJobSummary = (output: any, context: __SerdeContext): CompilationJobSummary => {
  return {
    CompilationEndTime:
      output.CompilationEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompilationEndTime)))
        : undefined,
    CompilationJobArn: __expectString(output.CompilationJobArn),
    CompilationJobName: __expectString(output.CompilationJobName),
    CompilationJobStatus: __expectString(output.CompilationJobStatus),
    CompilationStartTime:
      output.CompilationStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompilationStartTime)))
        : undefined,
    CompilationTargetDevice: __expectString(output.CompilationTargetDevice),
    CompilationTargetPlatformAccelerator: __expectString(output.CompilationTargetPlatformAccelerator),
    CompilationTargetPlatformArch: __expectString(output.CompilationTargetPlatformArch),
    CompilationTargetPlatformOs: __expectString(output.CompilationTargetPlatformOs),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1CompressionTypes
 */
const de_CompressionTypes = (output: any, context: __SerdeContext): (CompressionType | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ConditionStepMetadata
 */
const de_ConditionStepMetadata = (output: any, context: __SerdeContext): ConditionStepMetadata => {
  return {
    Outcome: __expectString(output.Outcome),
  } as any;
};

/**
 * deserializeAws_json1_1ConflictException
 */
const de_ConflictException = (output: any, context: __SerdeContext): ConflictException => {
  return {
    Message: __expectString(output.Message),
  } as any;
};

/**
 * deserializeAws_json1_1ContainerArguments
 */
const de_ContainerArguments = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ContainerDefinition
 */
const de_ContainerDefinition = (output: any, context: __SerdeContext): ContainerDefinition => {
  return {
    ContainerHostname: __expectString(output.ContainerHostname),
    Environment: output.Environment != null ? de_EnvironmentMap(output.Environment, context) : undefined,
    Image: __expectString(output.Image),
    ImageConfig: output.ImageConfig != null ? de_ImageConfig(output.ImageConfig, context) : undefined,
    InferenceSpecificationName: __expectString(output.InferenceSpecificationName),
    Mode: __expectString(output.Mode),
    ModelDataUrl: __expectString(output.ModelDataUrl),
    ModelPackageName: __expectString(output.ModelPackageName),
    MultiModelConfig:
      output.MultiModelConfig != null ? de_MultiModelConfig(output.MultiModelConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ContainerDefinitionList
 */
const de_ContainerDefinitionList = (output: any, context: __SerdeContext): ContainerDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ContainerDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ContainerEntrypoint
 */
const de_ContainerEntrypoint = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ContentClassifiers
 */
const de_ContentClassifiers = (output: any, context: __SerdeContext): (ContentClassifier | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ContentTypes
 */
const de_ContentTypes = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ContextSource
 */
const de_ContextSource = (output: any, context: __SerdeContext): ContextSource => {
  return {
    SourceId: __expectString(output.SourceId),
    SourceType: __expectString(output.SourceType),
    SourceUri: __expectString(output.SourceUri),
  } as any;
};

/**
 * deserializeAws_json1_1ContextSummaries
 */
const de_ContextSummaries = (output: any, context: __SerdeContext): ContextSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ContextSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ContextSummary
 */
const de_ContextSummary = (output: any, context: __SerdeContext): ContextSummary => {
  return {
    ContextArn: __expectString(output.ContextArn),
    ContextName: __expectString(output.ContextName),
    ContextType: __expectString(output.ContextType),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Source: output.Source != null ? de_ContextSource(output.Source, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ContinuousParameterRange
 */
const de_ContinuousParameterRange = (output: any, context: __SerdeContext): ContinuousParameterRange => {
  return {
    MaxValue: __expectString(output.MaxValue),
    MinValue: __expectString(output.MinValue),
    Name: __expectString(output.Name),
    ScalingType: __expectString(output.ScalingType),
  } as any;
};

/**
 * deserializeAws_json1_1ContinuousParameterRanges
 */
const de_ContinuousParameterRanges = (output: any, context: __SerdeContext): ContinuousParameterRange[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ContinuousParameterRange(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ContinuousParameterRangeSpecification
 */
const de_ContinuousParameterRangeSpecification = (
  output: any,
  context: __SerdeContext
): ContinuousParameterRangeSpecification => {
  return {
    MaxValue: __expectString(output.MaxValue),
    MinValue: __expectString(output.MinValue),
  } as any;
};

/**
 * deserializeAws_json1_1ConvergenceDetected
 */
const de_ConvergenceDetected = (output: any, context: __SerdeContext): ConvergenceDetected => {
  return {
    CompleteOnConvergence: __expectString(output.CompleteOnConvergence),
  } as any;
};

/**
 * deserializeAws_json1_1CreateActionResponse
 */
const de_CreateActionResponse = (output: any, context: __SerdeContext): CreateActionResponse => {
  return {
    ActionArn: __expectString(output.ActionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateAlgorithmOutput
 */
const de_CreateAlgorithmOutput = (output: any, context: __SerdeContext): CreateAlgorithmOutput => {
  return {
    AlgorithmArn: __expectString(output.AlgorithmArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateAppImageConfigResponse
 */
const de_CreateAppImageConfigResponse = (output: any, context: __SerdeContext): CreateAppImageConfigResponse => {
  return {
    AppImageConfigArn: __expectString(output.AppImageConfigArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateAppResponse
 */
const de_CreateAppResponse = (output: any, context: __SerdeContext): CreateAppResponse => {
  return {
    AppArn: __expectString(output.AppArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateArtifactResponse
 */
const de_CreateArtifactResponse = (output: any, context: __SerdeContext): CreateArtifactResponse => {
  return {
    ArtifactArn: __expectString(output.ArtifactArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateAutoMLJobResponse
 */
const de_CreateAutoMLJobResponse = (output: any, context: __SerdeContext): CreateAutoMLJobResponse => {
  return {
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateAutoMLJobV2Response
 */
const de_CreateAutoMLJobV2Response = (output: any, context: __SerdeContext): CreateAutoMLJobV2Response => {
  return {
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateCodeRepositoryOutput
 */
const de_CreateCodeRepositoryOutput = (output: any, context: __SerdeContext): CreateCodeRepositoryOutput => {
  return {
    CodeRepositoryArn: __expectString(output.CodeRepositoryArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateCompilationJobResponse
 */
const de_CreateCompilationJobResponse = (output: any, context: __SerdeContext): CreateCompilationJobResponse => {
  return {
    CompilationJobArn: __expectString(output.CompilationJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateContextResponse
 */
const de_CreateContextResponse = (output: any, context: __SerdeContext): CreateContextResponse => {
  return {
    ContextArn: __expectString(output.ContextArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateDataQualityJobDefinitionResponse
 */
const de_CreateDataQualityJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): CreateDataQualityJobDefinitionResponse => {
  return {
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateDomainResponse
 */
const de_CreateDomainResponse = (output: any, context: __SerdeContext): CreateDomainResponse => {
  return {
    DomainArn: __expectString(output.DomainArn),
    Url: __expectString(output.Url),
  } as any;
};

/**
 * deserializeAws_json1_1CreateEdgeDeploymentPlanResponse
 */
const de_CreateEdgeDeploymentPlanResponse = (
  output: any,
  context: __SerdeContext
): CreateEdgeDeploymentPlanResponse => {
  return {
    EdgeDeploymentPlanArn: __expectString(output.EdgeDeploymentPlanArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateEndpointConfigOutput
 */
const de_CreateEndpointConfigOutput = (output: any, context: __SerdeContext): CreateEndpointConfigOutput => {
  return {
    EndpointConfigArn: __expectString(output.EndpointConfigArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateEndpointOutput
 */
const de_CreateEndpointOutput = (output: any, context: __SerdeContext): CreateEndpointOutput => {
  return {
    EndpointArn: __expectString(output.EndpointArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateExperimentResponse
 */
const de_CreateExperimentResponse = (output: any, context: __SerdeContext): CreateExperimentResponse => {
  return {
    ExperimentArn: __expectString(output.ExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateFeatureGroupResponse
 */
const de_CreateFeatureGroupResponse = (output: any, context: __SerdeContext): CreateFeatureGroupResponse => {
  return {
    FeatureGroupArn: __expectString(output.FeatureGroupArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateFlowDefinitionResponse
 */
const de_CreateFlowDefinitionResponse = (output: any, context: __SerdeContext): CreateFlowDefinitionResponse => {
  return {
    FlowDefinitionArn: __expectString(output.FlowDefinitionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateHubResponse
 */
const de_CreateHubResponse = (output: any, context: __SerdeContext): CreateHubResponse => {
  return {
    HubArn: __expectString(output.HubArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateHumanTaskUiResponse
 */
const de_CreateHumanTaskUiResponse = (output: any, context: __SerdeContext): CreateHumanTaskUiResponse => {
  return {
    HumanTaskUiArn: __expectString(output.HumanTaskUiArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateHyperParameterTuningJobResponse
 */
const de_CreateHyperParameterTuningJobResponse = (
  output: any,
  context: __SerdeContext
): CreateHyperParameterTuningJobResponse => {
  return {
    HyperParameterTuningJobArn: __expectString(output.HyperParameterTuningJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateImageResponse
 */
const de_CreateImageResponse = (output: any, context: __SerdeContext): CreateImageResponse => {
  return {
    ImageArn: __expectString(output.ImageArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateImageVersionResponse
 */
const de_CreateImageVersionResponse = (output: any, context: __SerdeContext): CreateImageVersionResponse => {
  return {
    ImageVersionArn: __expectString(output.ImageVersionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateInferenceExperimentResponse
 */
const de_CreateInferenceExperimentResponse = (
  output: any,
  context: __SerdeContext
): CreateInferenceExperimentResponse => {
  return {
    InferenceExperimentArn: __expectString(output.InferenceExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateInferenceRecommendationsJobResponse
 */
const de_CreateInferenceRecommendationsJobResponse = (
  output: any,
  context: __SerdeContext
): CreateInferenceRecommendationsJobResponse => {
  return {
    JobArn: __expectString(output.JobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateLabelingJobResponse
 */
const de_CreateLabelingJobResponse = (output: any, context: __SerdeContext): CreateLabelingJobResponse => {
  return {
    LabelingJobArn: __expectString(output.LabelingJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelBiasJobDefinitionResponse
 */
const de_CreateModelBiasJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): CreateModelBiasJobDefinitionResponse => {
  return {
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelCardExportJobResponse
 */
const de_CreateModelCardExportJobResponse = (
  output: any,
  context: __SerdeContext
): CreateModelCardExportJobResponse => {
  return {
    ModelCardExportJobArn: __expectString(output.ModelCardExportJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelCardResponse
 */
const de_CreateModelCardResponse = (output: any, context: __SerdeContext): CreateModelCardResponse => {
  return {
    ModelCardArn: __expectString(output.ModelCardArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelExplainabilityJobDefinitionResponse
 */
const de_CreateModelExplainabilityJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): CreateModelExplainabilityJobDefinitionResponse => {
  return {
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelOutput
 */
const de_CreateModelOutput = (output: any, context: __SerdeContext): CreateModelOutput => {
  return {
    ModelArn: __expectString(output.ModelArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelPackageGroupOutput
 */
const de_CreateModelPackageGroupOutput = (output: any, context: __SerdeContext): CreateModelPackageGroupOutput => {
  return {
    ModelPackageGroupArn: __expectString(output.ModelPackageGroupArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelPackageOutput
 */
const de_CreateModelPackageOutput = (output: any, context: __SerdeContext): CreateModelPackageOutput => {
  return {
    ModelPackageArn: __expectString(output.ModelPackageArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateModelQualityJobDefinitionResponse
 */
const de_CreateModelQualityJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): CreateModelQualityJobDefinitionResponse => {
  return {
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateMonitoringScheduleResponse
 */
const de_CreateMonitoringScheduleResponse = (
  output: any,
  context: __SerdeContext
): CreateMonitoringScheduleResponse => {
  return {
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateNotebookInstanceLifecycleConfigOutput
 */
const de_CreateNotebookInstanceLifecycleConfigOutput = (
  output: any,
  context: __SerdeContext
): CreateNotebookInstanceLifecycleConfigOutput => {
  return {
    NotebookInstanceLifecycleConfigArn: __expectString(output.NotebookInstanceLifecycleConfigArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateNotebookInstanceOutput
 */
const de_CreateNotebookInstanceOutput = (output: any, context: __SerdeContext): CreateNotebookInstanceOutput => {
  return {
    NotebookInstanceArn: __expectString(output.NotebookInstanceArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreatePipelineResponse
 */
const de_CreatePipelineResponse = (output: any, context: __SerdeContext): CreatePipelineResponse => {
  return {
    PipelineArn: __expectString(output.PipelineArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreatePresignedDomainUrlResponse
 */
const de_CreatePresignedDomainUrlResponse = (
  output: any,
  context: __SerdeContext
): CreatePresignedDomainUrlResponse => {
  return {
    AuthorizedUrl: __expectString(output.AuthorizedUrl),
  } as any;
};

/**
 * deserializeAws_json1_1CreatePresignedNotebookInstanceUrlOutput
 */
const de_CreatePresignedNotebookInstanceUrlOutput = (
  output: any,
  context: __SerdeContext
): CreatePresignedNotebookInstanceUrlOutput => {
  return {
    AuthorizedUrl: __expectString(output.AuthorizedUrl),
  } as any;
};

/**
 * deserializeAws_json1_1CreateProcessingJobResponse
 */
const de_CreateProcessingJobResponse = (output: any, context: __SerdeContext): CreateProcessingJobResponse => {
  return {
    ProcessingJobArn: __expectString(output.ProcessingJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateProjectOutput
 */
const de_CreateProjectOutput = (output: any, context: __SerdeContext): CreateProjectOutput => {
  return {
    ProjectArn: __expectString(output.ProjectArn),
    ProjectId: __expectString(output.ProjectId),
  } as any;
};

/**
 * deserializeAws_json1_1CreateSpaceResponse
 */
const de_CreateSpaceResponse = (output: any, context: __SerdeContext): CreateSpaceResponse => {
  return {
    SpaceArn: __expectString(output.SpaceArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateStudioLifecycleConfigResponse
 */
const de_CreateStudioLifecycleConfigResponse = (
  output: any,
  context: __SerdeContext
): CreateStudioLifecycleConfigResponse => {
  return {
    StudioLifecycleConfigArn: __expectString(output.StudioLifecycleConfigArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateTrainingJobResponse
 */
const de_CreateTrainingJobResponse = (output: any, context: __SerdeContext): CreateTrainingJobResponse => {
  return {
    TrainingJobArn: __expectString(output.TrainingJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateTransformJobResponse
 */
const de_CreateTransformJobResponse = (output: any, context: __SerdeContext): CreateTransformJobResponse => {
  return {
    TransformJobArn: __expectString(output.TransformJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateTrialComponentResponse
 */
const de_CreateTrialComponentResponse = (output: any, context: __SerdeContext): CreateTrialComponentResponse => {
  return {
    TrialComponentArn: __expectString(output.TrialComponentArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateTrialResponse
 */
const de_CreateTrialResponse = (output: any, context: __SerdeContext): CreateTrialResponse => {
  return {
    TrialArn: __expectString(output.TrialArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateUserProfileResponse
 */
const de_CreateUserProfileResponse = (output: any, context: __SerdeContext): CreateUserProfileResponse => {
  return {
    UserProfileArn: __expectString(output.UserProfileArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateWorkforceResponse
 */
const de_CreateWorkforceResponse = (output: any, context: __SerdeContext): CreateWorkforceResponse => {
  return {
    WorkforceArn: __expectString(output.WorkforceArn),
  } as any;
};

/**
 * deserializeAws_json1_1CreateWorkteamResponse
 */
const de_CreateWorkteamResponse = (output: any, context: __SerdeContext): CreateWorkteamResponse => {
  return {
    WorkteamArn: __expectString(output.WorkteamArn),
  } as any;
};

/**
 * deserializeAws_json1_1CsvContentTypes
 */
const de_CsvContentTypes = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1CustomerMetadataMap
 */
const de_CustomerMetadataMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1CustomImage
 */
const de_CustomImage = (output: any, context: __SerdeContext): CustomImage => {
  return {
    AppImageConfigName: __expectString(output.AppImageConfigName),
    ImageName: __expectString(output.ImageName),
    ImageVersionNumber: __expectInt32(output.ImageVersionNumber),
  } as any;
};

/**
 * deserializeAws_json1_1CustomImages
 */
const de_CustomImages = (output: any, context: __SerdeContext): CustomImage[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_CustomImage(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DataCaptureConfig
 */
const de_DataCaptureConfig = (output: any, context: __SerdeContext): DataCaptureConfig => {
  return {
    CaptureContentTypeHeader:
      output.CaptureContentTypeHeader != null
        ? de_CaptureContentTypeHeader(output.CaptureContentTypeHeader, context)
        : undefined,
    CaptureOptions: output.CaptureOptions != null ? de_CaptureOptionList(output.CaptureOptions, context) : undefined,
    DestinationS3Uri: __expectString(output.DestinationS3Uri),
    EnableCapture: __expectBoolean(output.EnableCapture),
    InitialSamplingPercentage: __expectInt32(output.InitialSamplingPercentage),
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_json1_1DataCaptureConfigSummary
 */
const de_DataCaptureConfigSummary = (output: any, context: __SerdeContext): DataCaptureConfigSummary => {
  return {
    CaptureStatus: __expectString(output.CaptureStatus),
    CurrentSamplingPercentage: __expectInt32(output.CurrentSamplingPercentage),
    DestinationS3Uri: __expectString(output.DestinationS3Uri),
    EnableCapture: __expectBoolean(output.EnableCapture),
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_json1_1DataCatalogConfig
 */
const de_DataCatalogConfig = (output: any, context: __SerdeContext): DataCatalogConfig => {
  return {
    Catalog: __expectString(output.Catalog),
    Database: __expectString(output.Database),
    TableName: __expectString(output.TableName),
  } as any;
};

/**
 * deserializeAws_json1_1DataProcessing
 */
const de_DataProcessing = (output: any, context: __SerdeContext): DataProcessing => {
  return {
    InputFilter: __expectString(output.InputFilter),
    JoinSource: __expectString(output.JoinSource),
    OutputFilter: __expectString(output.OutputFilter),
  } as any;
};

/**
 * deserializeAws_json1_1DataQualityAppSpecification
 */
const de_DataQualityAppSpecification = (output: any, context: __SerdeContext): DataQualityAppSpecification => {
  return {
    ContainerArguments:
      output.ContainerArguments != null
        ? de_MonitoringContainerArguments(output.ContainerArguments, context)
        : undefined,
    ContainerEntrypoint:
      output.ContainerEntrypoint != null ? de_ContainerEntrypoint(output.ContainerEntrypoint, context) : undefined,
    Environment: output.Environment != null ? de_MonitoringEnvironmentMap(output.Environment, context) : undefined,
    ImageUri: __expectString(output.ImageUri),
    PostAnalyticsProcessorSourceUri: __expectString(output.PostAnalyticsProcessorSourceUri),
    RecordPreprocessorSourceUri: __expectString(output.RecordPreprocessorSourceUri),
  } as any;
};

/**
 * deserializeAws_json1_1DataQualityBaselineConfig
 */
const de_DataQualityBaselineConfig = (output: any, context: __SerdeContext): DataQualityBaselineConfig => {
  return {
    BaseliningJobName: __expectString(output.BaseliningJobName),
    ConstraintsResource:
      output.ConstraintsResource != null
        ? de_MonitoringConstraintsResource(output.ConstraintsResource, context)
        : undefined,
    StatisticsResource:
      output.StatisticsResource != null
        ? de_MonitoringStatisticsResource(output.StatisticsResource, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DataQualityJobInput
 */
const de_DataQualityJobInput = (output: any, context: __SerdeContext): DataQualityJobInput => {
  return {
    BatchTransformInput:
      output.BatchTransformInput != null ? de_BatchTransformInput(output.BatchTransformInput, context) : undefined,
    EndpointInput: output.EndpointInput != null ? de_EndpointInput(output.EndpointInput, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DatasetDefinition
 */
const de_DatasetDefinition = (output: any, context: __SerdeContext): DatasetDefinition => {
  return {
    AthenaDatasetDefinition:
      output.AthenaDatasetDefinition != null
        ? de_AthenaDatasetDefinition(output.AthenaDatasetDefinition, context)
        : undefined,
    DataDistributionType: __expectString(output.DataDistributionType),
    InputMode: __expectString(output.InputMode),
    LocalPath: __expectString(output.LocalPath),
    RedshiftDatasetDefinition:
      output.RedshiftDatasetDefinition != null
        ? de_RedshiftDatasetDefinition(output.RedshiftDatasetDefinition, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DataSource
 */
const de_DataSource = (output: any, context: __SerdeContext): DataSource => {
  return {
    FileSystemDataSource:
      output.FileSystemDataSource != null ? de_FileSystemDataSource(output.FileSystemDataSource, context) : undefined,
    S3DataSource: output.S3DataSource != null ? de_S3DataSource(output.S3DataSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DebugHookConfig
 */
const de_DebugHookConfig = (output: any, context: __SerdeContext): DebugHookConfig => {
  return {
    CollectionConfigurations:
      output.CollectionConfigurations != null
        ? de_CollectionConfigurations(output.CollectionConfigurations, context)
        : undefined,
    HookParameters: output.HookParameters != null ? de_HookParameters(output.HookParameters, context) : undefined,
    LocalPath: __expectString(output.LocalPath),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1DebugRuleConfiguration
 */
const de_DebugRuleConfiguration = (output: any, context: __SerdeContext): DebugRuleConfiguration => {
  return {
    InstanceType: __expectString(output.InstanceType),
    LocalPath: __expectString(output.LocalPath),
    RuleConfigurationName: __expectString(output.RuleConfigurationName),
    RuleEvaluatorImage: __expectString(output.RuleEvaluatorImage),
    RuleParameters: output.RuleParameters != null ? de_RuleParameters(output.RuleParameters, context) : undefined,
    S3OutputPath: __expectString(output.S3OutputPath),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1DebugRuleConfigurations
 */
const de_DebugRuleConfigurations = (output: any, context: __SerdeContext): DebugRuleConfiguration[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DebugRuleConfiguration(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DebugRuleEvaluationStatus
 */
const de_DebugRuleEvaluationStatus = (output: any, context: __SerdeContext): DebugRuleEvaluationStatus => {
  return {
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    RuleConfigurationName: __expectString(output.RuleConfigurationName),
    RuleEvaluationJobArn: __expectString(output.RuleEvaluationJobArn),
    RuleEvaluationStatus: __expectString(output.RuleEvaluationStatus),
    StatusDetails: __expectString(output.StatusDetails),
  } as any;
};

/**
 * deserializeAws_json1_1DebugRuleEvaluationStatuses
 */
const de_DebugRuleEvaluationStatuses = (output: any, context: __SerdeContext): DebugRuleEvaluationStatus[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DebugRuleEvaluationStatus(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DefaultSpaceSettings
 */
const de_DefaultSpaceSettings = (output: any, context: __SerdeContext): DefaultSpaceSettings => {
  return {
    ExecutionRole: __expectString(output.ExecutionRole),
    JupyterServerAppSettings:
      output.JupyterServerAppSettings != null
        ? de_JupyterServerAppSettings(output.JupyterServerAppSettings, context)
        : undefined,
    KernelGatewayAppSettings:
      output.KernelGatewayAppSettings != null
        ? de_KernelGatewayAppSettings(output.KernelGatewayAppSettings, context)
        : undefined,
    SecurityGroups: output.SecurityGroups != null ? de_SecurityGroupIds(output.SecurityGroups, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DeleteActionResponse
 */
const de_DeleteActionResponse = (output: any, context: __SerdeContext): DeleteActionResponse => {
  return {
    ActionArn: __expectString(output.ActionArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteArtifactResponse
 */
const de_DeleteArtifactResponse = (output: any, context: __SerdeContext): DeleteArtifactResponse => {
  return {
    ArtifactArn: __expectString(output.ArtifactArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteAssociationResponse
 */
const de_DeleteAssociationResponse = (output: any, context: __SerdeContext): DeleteAssociationResponse => {
  return {
    DestinationArn: __expectString(output.DestinationArn),
    SourceArn: __expectString(output.SourceArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteContextResponse
 */
const de_DeleteContextResponse = (output: any, context: __SerdeContext): DeleteContextResponse => {
  return {
    ContextArn: __expectString(output.ContextArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteExperimentResponse
 */
const de_DeleteExperimentResponse = (output: any, context: __SerdeContext): DeleteExperimentResponse => {
  return {
    ExperimentArn: __expectString(output.ExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteFlowDefinitionResponse
 */
const de_DeleteFlowDefinitionResponse = (output: any, context: __SerdeContext): DeleteFlowDefinitionResponse => {
  return {} as any;
};

/**
 * deserializeAws_json1_1DeleteHumanTaskUiResponse
 */
const de_DeleteHumanTaskUiResponse = (output: any, context: __SerdeContext): DeleteHumanTaskUiResponse => {
  return {} as any;
};

/**
 * deserializeAws_json1_1DeleteImageResponse
 */
const de_DeleteImageResponse = (output: any, context: __SerdeContext): DeleteImageResponse => {
  return {} as any;
};

/**
 * deserializeAws_json1_1DeleteImageVersionResponse
 */
const de_DeleteImageVersionResponse = (output: any, context: __SerdeContext): DeleteImageVersionResponse => {
  return {} as any;
};

/**
 * deserializeAws_json1_1DeleteInferenceExperimentResponse
 */
const de_DeleteInferenceExperimentResponse = (
  output: any,
  context: __SerdeContext
): DeleteInferenceExperimentResponse => {
  return {
    InferenceExperimentArn: __expectString(output.InferenceExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeletePipelineResponse
 */
const de_DeletePipelineResponse = (output: any, context: __SerdeContext): DeletePipelineResponse => {
  return {
    PipelineArn: __expectString(output.PipelineArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteTagsOutput
 */
const de_DeleteTagsOutput = (output: any, context: __SerdeContext): DeleteTagsOutput => {
  return {} as any;
};

/**
 * deserializeAws_json1_1DeleteTrialComponentResponse
 */
const de_DeleteTrialComponentResponse = (output: any, context: __SerdeContext): DeleteTrialComponentResponse => {
  return {
    TrialComponentArn: __expectString(output.TrialComponentArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteTrialResponse
 */
const de_DeleteTrialResponse = (output: any, context: __SerdeContext): DeleteTrialResponse => {
  return {
    TrialArn: __expectString(output.TrialArn),
  } as any;
};

/**
 * deserializeAws_json1_1DeleteWorkforceResponse
 */
const de_DeleteWorkforceResponse = (output: any, context: __SerdeContext): DeleteWorkforceResponse => {
  return {} as any;
};

/**
 * deserializeAws_json1_1DeleteWorkteamResponse
 */
const de_DeleteWorkteamResponse = (output: any, context: __SerdeContext): DeleteWorkteamResponse => {
  return {
    Success: __expectBoolean(output.Success),
  } as any;
};

/**
 * deserializeAws_json1_1DeployedImage
 */
const de_DeployedImage = (output: any, context: __SerdeContext): DeployedImage => {
  return {
    ResolutionTime:
      output.ResolutionTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ResolutionTime)))
        : undefined,
    ResolvedImage: __expectString(output.ResolvedImage),
    SpecifiedImage: __expectString(output.SpecifiedImage),
  } as any;
};

/**
 * deserializeAws_json1_1DeployedImages
 */
const de_DeployedImages = (output: any, context: __SerdeContext): DeployedImage[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DeployedImage(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DeploymentConfig
 */
const de_DeploymentConfig = (output: any, context: __SerdeContext): DeploymentConfig => {
  return {
    AutoRollbackConfiguration:
      output.AutoRollbackConfiguration != null
        ? de_AutoRollbackConfig(output.AutoRollbackConfiguration, context)
        : undefined,
    BlueGreenUpdatePolicy:
      output.BlueGreenUpdatePolicy != null
        ? de_BlueGreenUpdatePolicy(output.BlueGreenUpdatePolicy, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DeploymentStageStatusSummaries
 */
const de_DeploymentStageStatusSummaries = (output: any, context: __SerdeContext): DeploymentStageStatusSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DeploymentStageStatusSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DeploymentStageStatusSummary
 */
const de_DeploymentStageStatusSummary = (output: any, context: __SerdeContext): DeploymentStageStatusSummary => {
  return {
    DeploymentConfig:
      output.DeploymentConfig != null ? de_EdgeDeploymentConfig(output.DeploymentConfig, context) : undefined,
    DeploymentStatus:
      output.DeploymentStatus != null ? de_EdgeDeploymentStatus(output.DeploymentStatus, context) : undefined,
    DeviceSelectionConfig:
      output.DeviceSelectionConfig != null
        ? de_DeviceSelectionConfig(output.DeviceSelectionConfig, context)
        : undefined,
    StageName: __expectString(output.StageName),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeActionResponse
 */
const de_DescribeActionResponse = (output: any, context: __SerdeContext): DescribeActionResponse => {
  return {
    ActionArn: __expectString(output.ActionArn),
    ActionName: __expectString(output.ActionName),
    ActionType: __expectString(output.ActionType),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LineageGroupArn: __expectString(output.LineageGroupArn),
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    Properties: output.Properties != null ? de_LineageEntityParameters(output.Properties, context) : undefined,
    Source: output.Source != null ? de_ActionSource(output.Source, context) : undefined,
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeAlgorithmOutput
 */
const de_DescribeAlgorithmOutput = (output: any, context: __SerdeContext): DescribeAlgorithmOutput => {
  return {
    AlgorithmArn: __expectString(output.AlgorithmArn),
    AlgorithmDescription: __expectString(output.AlgorithmDescription),
    AlgorithmName: __expectString(output.AlgorithmName),
    AlgorithmStatus: __expectString(output.AlgorithmStatus),
    AlgorithmStatusDetails:
      output.AlgorithmStatusDetails != null
        ? de_AlgorithmStatusDetails(output.AlgorithmStatusDetails, context)
        : undefined,
    CertifyForMarketplace: __expectBoolean(output.CertifyForMarketplace),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    InferenceSpecification:
      output.InferenceSpecification != null
        ? de_InferenceSpecification(output.InferenceSpecification, context)
        : undefined,
    ProductId: __expectString(output.ProductId),
    TrainingSpecification:
      output.TrainingSpecification != null
        ? de_TrainingSpecification(output.TrainingSpecification, context)
        : undefined,
    ValidationSpecification:
      output.ValidationSpecification != null
        ? de_AlgorithmValidationSpecification(output.ValidationSpecification, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeAppImageConfigResponse
 */
const de_DescribeAppImageConfigResponse = (output: any, context: __SerdeContext): DescribeAppImageConfigResponse => {
  return {
    AppImageConfigArn: __expectString(output.AppImageConfigArn),
    AppImageConfigName: __expectString(output.AppImageConfigName),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    KernelGatewayImageConfig:
      output.KernelGatewayImageConfig != null
        ? de_KernelGatewayImageConfig(output.KernelGatewayImageConfig, context)
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeAppResponse
 */
const de_DescribeAppResponse = (output: any, context: __SerdeContext): DescribeAppResponse => {
  return {
    AppArn: __expectString(output.AppArn),
    AppName: __expectString(output.AppName),
    AppType: __expectString(output.AppType),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DomainId: __expectString(output.DomainId),
    FailureReason: __expectString(output.FailureReason),
    LastHealthCheckTimestamp:
      output.LastHealthCheckTimestamp != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastHealthCheckTimestamp)))
        : undefined,
    LastUserActivityTimestamp:
      output.LastUserActivityTimestamp != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUserActivityTimestamp)))
        : undefined,
    ResourceSpec: output.ResourceSpec != null ? de_ResourceSpec(output.ResourceSpec, context) : undefined,
    SpaceName: __expectString(output.SpaceName),
    Status: __expectString(output.Status),
    UserProfileName: __expectString(output.UserProfileName),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeArtifactResponse
 */
const de_DescribeArtifactResponse = (output: any, context: __SerdeContext): DescribeArtifactResponse => {
  return {
    ArtifactArn: __expectString(output.ArtifactArn),
    ArtifactName: __expectString(output.ArtifactName),
    ArtifactType: __expectString(output.ArtifactType),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LineageGroupArn: __expectString(output.LineageGroupArn),
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    Properties: output.Properties != null ? de_LineageEntityParameters(output.Properties, context) : undefined,
    Source: output.Source != null ? de_ArtifactSource(output.Source, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeAutoMLJobResponse
 */
const de_DescribeAutoMLJobResponse = (output: any, context: __SerdeContext): DescribeAutoMLJobResponse => {
  return {
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    AutoMLJobArtifacts:
      output.AutoMLJobArtifacts != null ? de_AutoMLJobArtifacts(output.AutoMLJobArtifacts, context) : undefined,
    AutoMLJobConfig: output.AutoMLJobConfig != null ? de_AutoMLJobConfig(output.AutoMLJobConfig, context) : undefined,
    AutoMLJobName: __expectString(output.AutoMLJobName),
    AutoMLJobObjective:
      output.AutoMLJobObjective != null ? de_AutoMLJobObjective(output.AutoMLJobObjective, context) : undefined,
    AutoMLJobSecondaryStatus: __expectString(output.AutoMLJobSecondaryStatus),
    AutoMLJobStatus: __expectString(output.AutoMLJobStatus),
    BestCandidate: output.BestCandidate != null ? de_AutoMLCandidate(output.BestCandidate, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    FailureReason: __expectString(output.FailureReason),
    GenerateCandidateDefinitionsOnly: __expectBoolean(output.GenerateCandidateDefinitionsOnly),
    InputDataConfig:
      output.InputDataConfig != null ? de_AutoMLInputDataConfig(output.InputDataConfig, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelDeployConfig:
      output.ModelDeployConfig != null ? de_ModelDeployConfig(output.ModelDeployConfig, context) : undefined,
    ModelDeployResult:
      output.ModelDeployResult != null ? de_ModelDeployResult(output.ModelDeployResult, context) : undefined,
    OutputDataConfig:
      output.OutputDataConfig != null ? de_AutoMLOutputDataConfig(output.OutputDataConfig, context) : undefined,
    PartialFailureReasons:
      output.PartialFailureReasons != null
        ? de_AutoMLPartialFailureReasons(output.PartialFailureReasons, context)
        : undefined,
    ProblemType: __expectString(output.ProblemType),
    ResolvedAttributes:
      output.ResolvedAttributes != null ? de_ResolvedAttributes(output.ResolvedAttributes, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeAutoMLJobV2Response
 */
const de_DescribeAutoMLJobV2Response = (output: any, context: __SerdeContext): DescribeAutoMLJobV2Response => {
  return {
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    AutoMLJobInputDataConfig:
      output.AutoMLJobInputDataConfig != null
        ? de_AutoMLJobInputDataConfig(output.AutoMLJobInputDataConfig, context)
        : undefined,
    AutoMLJobName: __expectString(output.AutoMLJobName),
    AutoMLJobObjective:
      output.AutoMLJobObjective != null ? de_AutoMLJobObjective(output.AutoMLJobObjective, context) : undefined,
    AutoMLJobSecondaryStatus: __expectString(output.AutoMLJobSecondaryStatus),
    AutoMLJobStatus: __expectString(output.AutoMLJobStatus),
    AutoMLProblemTypeConfig:
      output.AutoMLProblemTypeConfig != null
        ? de_AutoMLProblemTypeConfig(__expectUnion(output.AutoMLProblemTypeConfig), context)
        : undefined,
    BestCandidate: output.BestCandidate != null ? de_AutoMLCandidate(output.BestCandidate, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataSplitConfig:
      output.DataSplitConfig != null ? de_AutoMLDataSplitConfig(output.DataSplitConfig, context) : undefined,
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelDeployConfig:
      output.ModelDeployConfig != null ? de_ModelDeployConfig(output.ModelDeployConfig, context) : undefined,
    ModelDeployResult:
      output.ModelDeployResult != null ? de_ModelDeployResult(output.ModelDeployResult, context) : undefined,
    OutputDataConfig:
      output.OutputDataConfig != null ? de_AutoMLOutputDataConfig(output.OutputDataConfig, context) : undefined,
    PartialFailureReasons:
      output.PartialFailureReasons != null
        ? de_AutoMLPartialFailureReasons(output.PartialFailureReasons, context)
        : undefined,
    RoleArn: __expectString(output.RoleArn),
    SecurityConfig: output.SecurityConfig != null ? de_AutoMLSecurityConfig(output.SecurityConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeCodeRepositoryOutput
 */
const de_DescribeCodeRepositoryOutput = (output: any, context: __SerdeContext): DescribeCodeRepositoryOutput => {
  return {
    CodeRepositoryArn: __expectString(output.CodeRepositoryArn),
    CodeRepositoryName: __expectString(output.CodeRepositoryName),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    GitConfig: output.GitConfig != null ? de_GitConfig(output.GitConfig, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeCompilationJobResponse
 */
const de_DescribeCompilationJobResponse = (output: any, context: __SerdeContext): DescribeCompilationJobResponse => {
  return {
    CompilationEndTime:
      output.CompilationEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompilationEndTime)))
        : undefined,
    CompilationJobArn: __expectString(output.CompilationJobArn),
    CompilationJobName: __expectString(output.CompilationJobName),
    CompilationJobStatus: __expectString(output.CompilationJobStatus),
    CompilationStartTime:
      output.CompilationStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompilationStartTime)))
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    InferenceImage: __expectString(output.InferenceImage),
    InputConfig: output.InputConfig != null ? de_InputConfig(output.InputConfig, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelArtifacts: output.ModelArtifacts != null ? de_ModelArtifacts(output.ModelArtifacts, context) : undefined,
    ModelDigests: output.ModelDigests != null ? de_ModelDigests(output.ModelDigests, context) : undefined,
    ModelPackageVersionArn: __expectString(output.ModelPackageVersionArn),
    OutputConfig: output.OutputConfig != null ? de_OutputConfig(output.OutputConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_StoppingCondition(output.StoppingCondition, context) : undefined,
    VpcConfig: output.VpcConfig != null ? de_NeoVpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeContextResponse
 */
const de_DescribeContextResponse = (output: any, context: __SerdeContext): DescribeContextResponse => {
  return {
    ContextArn: __expectString(output.ContextArn),
    ContextName: __expectString(output.ContextName),
    ContextType: __expectString(output.ContextType),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LineageGroupArn: __expectString(output.LineageGroupArn),
    Properties: output.Properties != null ? de_LineageEntityParameters(output.Properties, context) : undefined,
    Source: output.Source != null ? de_ContextSource(output.Source, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeDataQualityJobDefinitionResponse
 */
const de_DescribeDataQualityJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): DescribeDataQualityJobDefinitionResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataQualityAppSpecification:
      output.DataQualityAppSpecification != null
        ? de_DataQualityAppSpecification(output.DataQualityAppSpecification, context)
        : undefined,
    DataQualityBaselineConfig:
      output.DataQualityBaselineConfig != null
        ? de_DataQualityBaselineConfig(output.DataQualityBaselineConfig, context)
        : undefined,
    DataQualityJobInput:
      output.DataQualityJobInput != null ? de_DataQualityJobInput(output.DataQualityJobInput, context) : undefined,
    DataQualityJobOutputConfig:
      output.DataQualityJobOutputConfig != null
        ? de_MonitoringOutputConfig(output.DataQualityJobOutputConfig, context)
        : undefined,
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
    JobDefinitionName: __expectString(output.JobDefinitionName),
    JobResources: output.JobResources != null ? de_MonitoringResources(output.JobResources, context) : undefined,
    NetworkConfig: output.NetworkConfig != null ? de_MonitoringNetworkConfig(output.NetworkConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_MonitoringStoppingCondition(output.StoppingCondition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeDeviceFleetResponse
 */
const de_DescribeDeviceFleetResponse = (output: any, context: __SerdeContext): DescribeDeviceFleetResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    DeviceFleetArn: __expectString(output.DeviceFleetArn),
    DeviceFleetName: __expectString(output.DeviceFleetName),
    IotRoleAlias: __expectString(output.IotRoleAlias),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    OutputConfig: output.OutputConfig != null ? de_EdgeOutputConfig(output.OutputConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeDeviceResponse
 */
const de_DescribeDeviceResponse = (output: any, context: __SerdeContext): DescribeDeviceResponse => {
  return {
    AgentVersion: __expectString(output.AgentVersion),
    Description: __expectString(output.Description),
    DeviceArn: __expectString(output.DeviceArn),
    DeviceFleetName: __expectString(output.DeviceFleetName),
    DeviceName: __expectString(output.DeviceName),
    IotThingName: __expectString(output.IotThingName),
    LatestHeartbeat:
      output.LatestHeartbeat != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LatestHeartbeat)))
        : undefined,
    MaxModels: __expectInt32(output.MaxModels),
    Models: output.Models != null ? de_EdgeModels(output.Models, context) : undefined,
    NextToken: __expectString(output.NextToken),
    RegistrationTime:
      output.RegistrationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.RegistrationTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeDomainResponse
 */
const de_DescribeDomainResponse = (output: any, context: __SerdeContext): DescribeDomainResponse => {
  return {
    AppNetworkAccessType: __expectString(output.AppNetworkAccessType),
    AppSecurityGroupManagement: __expectString(output.AppSecurityGroupManagement),
    AuthMode: __expectString(output.AuthMode),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DefaultSpaceSettings:
      output.DefaultSpaceSettings != null ? de_DefaultSpaceSettings(output.DefaultSpaceSettings, context) : undefined,
    DefaultUserSettings:
      output.DefaultUserSettings != null ? de_UserSettings(output.DefaultUserSettings, context) : undefined,
    DomainArn: __expectString(output.DomainArn),
    DomainId: __expectString(output.DomainId),
    DomainName: __expectString(output.DomainName),
    DomainSettings: output.DomainSettings != null ? de_DomainSettings(output.DomainSettings, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    HomeEfsFileSystemId: __expectString(output.HomeEfsFileSystemId),
    HomeEfsFileSystemKmsKeyId: __expectString(output.HomeEfsFileSystemKmsKeyId),
    KmsKeyId: __expectString(output.KmsKeyId),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    SecurityGroupIdForDomainBoundary: __expectString(output.SecurityGroupIdForDomainBoundary),
    SingleSignOnManagedApplicationInstanceId: __expectString(output.SingleSignOnManagedApplicationInstanceId),
    Status: __expectString(output.Status),
    SubnetIds: output.SubnetIds != null ? de_Subnets(output.SubnetIds, context) : undefined,
    Url: __expectString(output.Url),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeEdgeDeploymentPlanResponse
 */
const de_DescribeEdgeDeploymentPlanResponse = (
  output: any,
  context: __SerdeContext
): DescribeEdgeDeploymentPlanResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DeviceFleetName: __expectString(output.DeviceFleetName),
    EdgeDeploymentFailed: __expectInt32(output.EdgeDeploymentFailed),
    EdgeDeploymentPending: __expectInt32(output.EdgeDeploymentPending),
    EdgeDeploymentPlanArn: __expectString(output.EdgeDeploymentPlanArn),
    EdgeDeploymentPlanName: __expectString(output.EdgeDeploymentPlanName),
    EdgeDeploymentSuccess: __expectInt32(output.EdgeDeploymentSuccess),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelConfigs: output.ModelConfigs != null ? de_EdgeDeploymentModelConfigs(output.ModelConfigs, context) : undefined,
    NextToken: __expectString(output.NextToken),
    Stages: output.Stages != null ? de_DeploymentStageStatusSummaries(output.Stages, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeEdgePackagingJobResponse
 */
const de_DescribeEdgePackagingJobResponse = (
  output: any,
  context: __SerdeContext
): DescribeEdgePackagingJobResponse => {
  return {
    CompilationJobName: __expectString(output.CompilationJobName),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EdgePackagingJobArn: __expectString(output.EdgePackagingJobArn),
    EdgePackagingJobName: __expectString(output.EdgePackagingJobName),
    EdgePackagingJobStatus: __expectString(output.EdgePackagingJobStatus),
    EdgePackagingJobStatusMessage: __expectString(output.EdgePackagingJobStatusMessage),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelArtifact: __expectString(output.ModelArtifact),
    ModelName: __expectString(output.ModelName),
    ModelSignature: __expectString(output.ModelSignature),
    ModelVersion: __expectString(output.ModelVersion),
    OutputConfig: output.OutputConfig != null ? de_EdgeOutputConfig(output.OutputConfig, context) : undefined,
    PresetDeploymentOutput:
      output.PresetDeploymentOutput != null
        ? de_EdgePresetDeploymentOutput(output.PresetDeploymentOutput, context)
        : undefined,
    ResourceKey: __expectString(output.ResourceKey),
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeEndpointConfigOutput
 */
const de_DescribeEndpointConfigOutput = (output: any, context: __SerdeContext): DescribeEndpointConfigOutput => {
  return {
    AsyncInferenceConfig:
      output.AsyncInferenceConfig != null ? de_AsyncInferenceConfig(output.AsyncInferenceConfig, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataCaptureConfig:
      output.DataCaptureConfig != null ? de_DataCaptureConfig(output.DataCaptureConfig, context) : undefined,
    EndpointConfigArn: __expectString(output.EndpointConfigArn),
    EndpointConfigName: __expectString(output.EndpointConfigName),
    ExplainerConfig: output.ExplainerConfig != null ? de_ExplainerConfig(output.ExplainerConfig, context) : undefined,
    KmsKeyId: __expectString(output.KmsKeyId),
    ProductionVariants:
      output.ProductionVariants != null ? de_ProductionVariantList(output.ProductionVariants, context) : undefined,
    ShadowProductionVariants:
      output.ShadowProductionVariants != null
        ? de_ProductionVariantList(output.ShadowProductionVariants, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeEndpointOutput
 */
const de_DescribeEndpointOutput = (output: any, context: __SerdeContext): DescribeEndpointOutput => {
  return {
    AsyncInferenceConfig:
      output.AsyncInferenceConfig != null ? de_AsyncInferenceConfig(output.AsyncInferenceConfig, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataCaptureConfig:
      output.DataCaptureConfig != null ? de_DataCaptureConfigSummary(output.DataCaptureConfig, context) : undefined,
    EndpointArn: __expectString(output.EndpointArn),
    EndpointConfigName: __expectString(output.EndpointConfigName),
    EndpointName: __expectString(output.EndpointName),
    EndpointStatus: __expectString(output.EndpointStatus),
    ExplainerConfig: output.ExplainerConfig != null ? de_ExplainerConfig(output.ExplainerConfig, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastDeploymentConfig:
      output.LastDeploymentConfig != null ? de_DeploymentConfig(output.LastDeploymentConfig, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    PendingDeploymentSummary:
      output.PendingDeploymentSummary != null
        ? de_PendingDeploymentSummary(output.PendingDeploymentSummary, context)
        : undefined,
    ProductionVariants:
      output.ProductionVariants != null
        ? de_ProductionVariantSummaryList(output.ProductionVariants, context)
        : undefined,
    ShadowProductionVariants:
      output.ShadowProductionVariants != null
        ? de_ProductionVariantSummaryList(output.ShadowProductionVariants, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeExperimentResponse
 */
const de_DescribeExperimentResponse = (output: any, context: __SerdeContext): DescribeExperimentResponse => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    DisplayName: __expectString(output.DisplayName),
    ExperimentArn: __expectString(output.ExperimentArn),
    ExperimentName: __expectString(output.ExperimentName),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Source: output.Source != null ? de_ExperimentSource(output.Source, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeFeatureGroupResponse
 */
const de_DescribeFeatureGroupResponse = (output: any, context: __SerdeContext): DescribeFeatureGroupResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    EventTimeFeatureName: __expectString(output.EventTimeFeatureName),
    FailureReason: __expectString(output.FailureReason),
    FeatureDefinitions:
      output.FeatureDefinitions != null ? de_FeatureDefinitions(output.FeatureDefinitions, context) : undefined,
    FeatureGroupArn: __expectString(output.FeatureGroupArn),
    FeatureGroupName: __expectString(output.FeatureGroupName),
    FeatureGroupStatus: __expectString(output.FeatureGroupStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LastUpdateStatus:
      output.LastUpdateStatus != null ? de_LastUpdateStatus(output.LastUpdateStatus, context) : undefined,
    NextToken: __expectString(output.NextToken),
    OfflineStoreConfig:
      output.OfflineStoreConfig != null ? de_OfflineStoreConfig(output.OfflineStoreConfig, context) : undefined,
    OfflineStoreStatus:
      output.OfflineStoreStatus != null ? de_OfflineStoreStatus(output.OfflineStoreStatus, context) : undefined,
    OnlineStoreConfig:
      output.OnlineStoreConfig != null ? de_OnlineStoreConfig(output.OnlineStoreConfig, context) : undefined,
    OnlineStoreTotalSizeBytes: __expectLong(output.OnlineStoreTotalSizeBytes),
    RecordIdentifierFeatureName: __expectString(output.RecordIdentifierFeatureName),
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeFeatureMetadataResponse
 */
const de_DescribeFeatureMetadataResponse = (output: any, context: __SerdeContext): DescribeFeatureMetadataResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    FeatureGroupArn: __expectString(output.FeatureGroupArn),
    FeatureGroupName: __expectString(output.FeatureGroupName),
    FeatureName: __expectString(output.FeatureName),
    FeatureType: __expectString(output.FeatureType),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Parameters: output.Parameters != null ? de_FeatureParameters(output.Parameters, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeFlowDefinitionResponse
 */
const de_DescribeFlowDefinitionResponse = (output: any, context: __SerdeContext): DescribeFlowDefinitionResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    FlowDefinitionArn: __expectString(output.FlowDefinitionArn),
    FlowDefinitionName: __expectString(output.FlowDefinitionName),
    FlowDefinitionStatus: __expectString(output.FlowDefinitionStatus),
    HumanLoopActivationConfig:
      output.HumanLoopActivationConfig != null
        ? de_HumanLoopActivationConfig(output.HumanLoopActivationConfig, context)
        : undefined,
    HumanLoopConfig: output.HumanLoopConfig != null ? de_HumanLoopConfig(output.HumanLoopConfig, context) : undefined,
    HumanLoopRequestSource:
      output.HumanLoopRequestSource != null
        ? de_HumanLoopRequestSource(output.HumanLoopRequestSource, context)
        : undefined,
    OutputConfig: output.OutputConfig != null ? de_FlowDefinitionOutputConfig(output.OutputConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeHubContentResponse
 */
const de_DescribeHubContentResponse = (output: any, context: __SerdeContext): DescribeHubContentResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DocumentSchemaVersion: __expectString(output.DocumentSchemaVersion),
    FailureReason: __expectString(output.FailureReason),
    HubArn: __expectString(output.HubArn),
    HubContentArn: __expectString(output.HubContentArn),
    HubContentDependencies:
      output.HubContentDependencies != null
        ? de_HubContentDependencyList(output.HubContentDependencies, context)
        : undefined,
    HubContentDescription: __expectString(output.HubContentDescription),
    HubContentDisplayName: __expectString(output.HubContentDisplayName),
    HubContentDocument: __expectString(output.HubContentDocument),
    HubContentMarkdown: __expectString(output.HubContentMarkdown),
    HubContentName: __expectString(output.HubContentName),
    HubContentSearchKeywords:
      output.HubContentSearchKeywords != null
        ? de_HubContentSearchKeywordList(output.HubContentSearchKeywords, context)
        : undefined,
    HubContentStatus: __expectString(output.HubContentStatus),
    HubContentType: __expectString(output.HubContentType),
    HubContentVersion: __expectString(output.HubContentVersion),
    HubName: __expectString(output.HubName),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeHubResponse
 */
const de_DescribeHubResponse = (output: any, context: __SerdeContext): DescribeHubResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    HubArn: __expectString(output.HubArn),
    HubDescription: __expectString(output.HubDescription),
    HubDisplayName: __expectString(output.HubDisplayName),
    HubName: __expectString(output.HubName),
    HubSearchKeywords:
      output.HubSearchKeywords != null ? de_HubSearchKeywordList(output.HubSearchKeywords, context) : undefined,
    HubStatus: __expectString(output.HubStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    S3StorageConfig:
      output.S3StorageConfig != null ? de_HubS3StorageConfig(output.S3StorageConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeHumanTaskUiResponse
 */
const de_DescribeHumanTaskUiResponse = (output: any, context: __SerdeContext): DescribeHumanTaskUiResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    HumanTaskUiArn: __expectString(output.HumanTaskUiArn),
    HumanTaskUiName: __expectString(output.HumanTaskUiName),
    HumanTaskUiStatus: __expectString(output.HumanTaskUiStatus),
    UiTemplate: output.UiTemplate != null ? de_UiTemplateInfo(output.UiTemplate, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeHyperParameterTuningJobResponse
 */
const de_DescribeHyperParameterTuningJobResponse = (
  output: any,
  context: __SerdeContext
): DescribeHyperParameterTuningJobResponse => {
  return {
    BestTrainingJob:
      output.BestTrainingJob != null ? de_HyperParameterTrainingJobSummary(output.BestTrainingJob, context) : undefined,
    ConsumedResources:
      output.ConsumedResources != null
        ? de_HyperParameterTuningJobConsumedResources(output.ConsumedResources, context)
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    HyperParameterTuningEndTime:
      output.HyperParameterTuningEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.HyperParameterTuningEndTime)))
        : undefined,
    HyperParameterTuningJobArn: __expectString(output.HyperParameterTuningJobArn),
    HyperParameterTuningJobConfig:
      output.HyperParameterTuningJobConfig != null
        ? de_HyperParameterTuningJobConfig(output.HyperParameterTuningJobConfig, context)
        : undefined,
    HyperParameterTuningJobName: __expectString(output.HyperParameterTuningJobName),
    HyperParameterTuningJobStatus: __expectString(output.HyperParameterTuningJobStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ObjectiveStatusCounters:
      output.ObjectiveStatusCounters != null
        ? de_ObjectiveStatusCounters(output.ObjectiveStatusCounters, context)
        : undefined,
    OverallBestTrainingJob:
      output.OverallBestTrainingJob != null
        ? de_HyperParameterTrainingJobSummary(output.OverallBestTrainingJob, context)
        : undefined,
    TrainingJobDefinition:
      output.TrainingJobDefinition != null
        ? de_HyperParameterTrainingJobDefinition(output.TrainingJobDefinition, context)
        : undefined,
    TrainingJobDefinitions:
      output.TrainingJobDefinitions != null
        ? de_HyperParameterTrainingJobDefinitions(output.TrainingJobDefinitions, context)
        : undefined,
    TrainingJobStatusCounters:
      output.TrainingJobStatusCounters != null
        ? de_TrainingJobStatusCounters(output.TrainingJobStatusCounters, context)
        : undefined,
    TuningJobCompletionDetails:
      output.TuningJobCompletionDetails != null
        ? de_HyperParameterTuningJobCompletionDetails(output.TuningJobCompletionDetails, context)
        : undefined,
    WarmStartConfig:
      output.WarmStartConfig != null
        ? de_HyperParameterTuningJobWarmStartConfig(output.WarmStartConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeImageResponse
 */
const de_DescribeImageResponse = (output: any, context: __SerdeContext): DescribeImageResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    DisplayName: __expectString(output.DisplayName),
    FailureReason: __expectString(output.FailureReason),
    ImageArn: __expectString(output.ImageArn),
    ImageName: __expectString(output.ImageName),
    ImageStatus: __expectString(output.ImageStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeImageVersionResponse
 */
const de_DescribeImageVersionResponse = (output: any, context: __SerdeContext): DescribeImageVersionResponse => {
  return {
    BaseImage: __expectString(output.BaseImage),
    ContainerImage: __expectString(output.ContainerImage),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    Horovod: __expectBoolean(output.Horovod),
    ImageArn: __expectString(output.ImageArn),
    ImageVersionArn: __expectString(output.ImageVersionArn),
    ImageVersionStatus: __expectString(output.ImageVersionStatus),
    JobType: __expectString(output.JobType),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MLFramework: __expectString(output.MLFramework),
    Processor: __expectString(output.Processor),
    ProgrammingLang: __expectString(output.ProgrammingLang),
    ReleaseNotes: __expectString(output.ReleaseNotes),
    VendorGuidance: __expectString(output.VendorGuidance),
    Version: __expectInt32(output.Version),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeInferenceExperimentResponse
 */
const de_DescribeInferenceExperimentResponse = (
  output: any,
  context: __SerdeContext
): DescribeInferenceExperimentResponse => {
  return {
    Arn: __expectString(output.Arn),
    CompletionTime:
      output.CompletionTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompletionTime)))
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataStorageConfig:
      output.DataStorageConfig != null
        ? de_InferenceExperimentDataStorageConfig(output.DataStorageConfig, context)
        : undefined,
    Description: __expectString(output.Description),
    EndpointMetadata:
      output.EndpointMetadata != null ? de_EndpointMetadata(output.EndpointMetadata, context) : undefined,
    KmsKey: __expectString(output.KmsKey),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelVariants:
      output.ModelVariants != null ? de_ModelVariantConfigSummaryList(output.ModelVariants, context) : undefined,
    Name: __expectString(output.Name),
    RoleArn: __expectString(output.RoleArn),
    Schedule: output.Schedule != null ? de_InferenceExperimentSchedule(output.Schedule, context) : undefined,
    ShadowModeConfig:
      output.ShadowModeConfig != null ? de_ShadowModeConfig(output.ShadowModeConfig, context) : undefined,
    Status: __expectString(output.Status),
    StatusReason: __expectString(output.StatusReason),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeInferenceRecommendationsJobResponse
 */
const de_DescribeInferenceRecommendationsJobResponse = (
  output: any,
  context: __SerdeContext
): DescribeInferenceRecommendationsJobResponse => {
  return {
    CompletionTime:
      output.CompletionTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompletionTime)))
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointPerformances:
      output.EndpointPerformances != null ? de_EndpointPerformances(output.EndpointPerformances, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    InferenceRecommendations:
      output.InferenceRecommendations != null
        ? de_InferenceRecommendations(output.InferenceRecommendations, context)
        : undefined,
    InputConfig: output.InputConfig != null ? de_RecommendationJobInputConfig(output.InputConfig, context) : undefined,
    JobArn: __expectString(output.JobArn),
    JobDescription: __expectString(output.JobDescription),
    JobName: __expectString(output.JobName),
    JobType: __expectString(output.JobType),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    RoleArn: __expectString(output.RoleArn),
    Status: __expectString(output.Status),
    StoppingConditions:
      output.StoppingConditions != null
        ? de_RecommendationJobStoppingConditions(output.StoppingConditions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeLabelingJobResponse
 */
const de_DescribeLabelingJobResponse = (output: any, context: __SerdeContext): DescribeLabelingJobResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    HumanTaskConfig: output.HumanTaskConfig != null ? de_HumanTaskConfig(output.HumanTaskConfig, context) : undefined,
    InputConfig: output.InputConfig != null ? de_LabelingJobInputConfig(output.InputConfig, context) : undefined,
    JobReferenceCode: __expectString(output.JobReferenceCode),
    LabelAttributeName: __expectString(output.LabelAttributeName),
    LabelCategoryConfigS3Uri: __expectString(output.LabelCategoryConfigS3Uri),
    LabelCounters: output.LabelCounters != null ? de_LabelCounters(output.LabelCounters, context) : undefined,
    LabelingJobAlgorithmsConfig:
      output.LabelingJobAlgorithmsConfig != null
        ? de_LabelingJobAlgorithmsConfig(output.LabelingJobAlgorithmsConfig, context)
        : undefined,
    LabelingJobArn: __expectString(output.LabelingJobArn),
    LabelingJobName: __expectString(output.LabelingJobName),
    LabelingJobOutput:
      output.LabelingJobOutput != null ? de_LabelingJobOutput(output.LabelingJobOutput, context) : undefined,
    LabelingJobStatus: __expectString(output.LabelingJobStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    OutputConfig: output.OutputConfig != null ? de_LabelingJobOutputConfig(output.OutputConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingConditions:
      output.StoppingConditions != null
        ? de_LabelingJobStoppingConditions(output.StoppingConditions, context)
        : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeLineageGroupResponse
 */
const de_DescribeLineageGroupResponse = (output: any, context: __SerdeContext): DescribeLineageGroupResponse => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    DisplayName: __expectString(output.DisplayName),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LineageGroupArn: __expectString(output.LineageGroupArn),
    LineageGroupName: __expectString(output.LineageGroupName),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelBiasJobDefinitionResponse
 */
const de_DescribeModelBiasJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): DescribeModelBiasJobDefinitionResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
    JobDefinitionName: __expectString(output.JobDefinitionName),
    JobResources: output.JobResources != null ? de_MonitoringResources(output.JobResources, context) : undefined,
    ModelBiasAppSpecification:
      output.ModelBiasAppSpecification != null
        ? de_ModelBiasAppSpecification(output.ModelBiasAppSpecification, context)
        : undefined,
    ModelBiasBaselineConfig:
      output.ModelBiasBaselineConfig != null
        ? de_ModelBiasBaselineConfig(output.ModelBiasBaselineConfig, context)
        : undefined,
    ModelBiasJobInput:
      output.ModelBiasJobInput != null ? de_ModelBiasJobInput(output.ModelBiasJobInput, context) : undefined,
    ModelBiasJobOutputConfig:
      output.ModelBiasJobOutputConfig != null
        ? de_MonitoringOutputConfig(output.ModelBiasJobOutputConfig, context)
        : undefined,
    NetworkConfig: output.NetworkConfig != null ? de_MonitoringNetworkConfig(output.NetworkConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_MonitoringStoppingCondition(output.StoppingCondition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelCardExportJobResponse
 */
const de_DescribeModelCardExportJobResponse = (
  output: any,
  context: __SerdeContext
): DescribeModelCardExportJobResponse => {
  return {
    CreatedAt:
      output.CreatedAt != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedAt))) : undefined,
    ExportArtifacts:
      output.ExportArtifacts != null ? de_ModelCardExportArtifacts(output.ExportArtifacts, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedAt:
      output.LastModifiedAt != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedAt)))
        : undefined,
    ModelCardExportJobArn: __expectString(output.ModelCardExportJobArn),
    ModelCardExportJobName: __expectString(output.ModelCardExportJobName),
    ModelCardName: __expectString(output.ModelCardName),
    ModelCardVersion: __expectInt32(output.ModelCardVersion),
    OutputConfig:
      output.OutputConfig != null ? de_ModelCardExportOutputConfig(output.OutputConfig, context) : undefined,
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelCardResponse
 */
const de_DescribeModelCardResponse = (output: any, context: __SerdeContext): DescribeModelCardResponse => {
  return {
    Content: __expectString(output.Content),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelCardArn: __expectString(output.ModelCardArn),
    ModelCardName: __expectString(output.ModelCardName),
    ModelCardProcessingStatus: __expectString(output.ModelCardProcessingStatus),
    ModelCardStatus: __expectString(output.ModelCardStatus),
    ModelCardVersion: __expectInt32(output.ModelCardVersion),
    SecurityConfig:
      output.SecurityConfig != null ? de_ModelCardSecurityConfig(output.SecurityConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelExplainabilityJobDefinitionResponse
 */
const de_DescribeModelExplainabilityJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): DescribeModelExplainabilityJobDefinitionResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
    JobDefinitionName: __expectString(output.JobDefinitionName),
    JobResources: output.JobResources != null ? de_MonitoringResources(output.JobResources, context) : undefined,
    ModelExplainabilityAppSpecification:
      output.ModelExplainabilityAppSpecification != null
        ? de_ModelExplainabilityAppSpecification(output.ModelExplainabilityAppSpecification, context)
        : undefined,
    ModelExplainabilityBaselineConfig:
      output.ModelExplainabilityBaselineConfig != null
        ? de_ModelExplainabilityBaselineConfig(output.ModelExplainabilityBaselineConfig, context)
        : undefined,
    ModelExplainabilityJobInput:
      output.ModelExplainabilityJobInput != null
        ? de_ModelExplainabilityJobInput(output.ModelExplainabilityJobInput, context)
        : undefined,
    ModelExplainabilityJobOutputConfig:
      output.ModelExplainabilityJobOutputConfig != null
        ? de_MonitoringOutputConfig(output.ModelExplainabilityJobOutputConfig, context)
        : undefined,
    NetworkConfig: output.NetworkConfig != null ? de_MonitoringNetworkConfig(output.NetworkConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_MonitoringStoppingCondition(output.StoppingCondition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelOutput
 */
const de_DescribeModelOutput = (output: any, context: __SerdeContext): DescribeModelOutput => {
  return {
    Containers: output.Containers != null ? de_ContainerDefinitionList(output.Containers, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EnableNetworkIsolation: __expectBoolean(output.EnableNetworkIsolation),
    ExecutionRoleArn: __expectString(output.ExecutionRoleArn),
    InferenceExecutionConfig:
      output.InferenceExecutionConfig != null
        ? de_InferenceExecutionConfig(output.InferenceExecutionConfig, context)
        : undefined,
    ModelArn: __expectString(output.ModelArn),
    ModelName: __expectString(output.ModelName),
    PrimaryContainer:
      output.PrimaryContainer != null ? de_ContainerDefinition(output.PrimaryContainer, context) : undefined,
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelPackageGroupOutput
 */
const de_DescribeModelPackageGroupOutput = (output: any, context: __SerdeContext): DescribeModelPackageGroupOutput => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    ModelPackageGroupArn: __expectString(output.ModelPackageGroupArn),
    ModelPackageGroupDescription: __expectString(output.ModelPackageGroupDescription),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    ModelPackageGroupStatus: __expectString(output.ModelPackageGroupStatus),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelPackageOutput
 */
const de_DescribeModelPackageOutput = (output: any, context: __SerdeContext): DescribeModelPackageOutput => {
  return {
    AdditionalInferenceSpecifications:
      output.AdditionalInferenceSpecifications != null
        ? de_AdditionalInferenceSpecifications(output.AdditionalInferenceSpecifications, context)
        : undefined,
    ApprovalDescription: __expectString(output.ApprovalDescription),
    CertifyForMarketplace: __expectBoolean(output.CertifyForMarketplace),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    CustomerMetadataProperties:
      output.CustomerMetadataProperties != null
        ? de_CustomerMetadataMap(output.CustomerMetadataProperties, context)
        : undefined,
    Domain: __expectString(output.Domain),
    DriftCheckBaselines:
      output.DriftCheckBaselines != null ? de_DriftCheckBaselines(output.DriftCheckBaselines, context) : undefined,
    InferenceSpecification:
      output.InferenceSpecification != null
        ? de_InferenceSpecification(output.InferenceSpecification, context)
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    ModelApprovalStatus: __expectString(output.ModelApprovalStatus),
    ModelMetrics: output.ModelMetrics != null ? de_ModelMetrics(output.ModelMetrics, context) : undefined,
    ModelPackageArn: __expectString(output.ModelPackageArn),
    ModelPackageDescription: __expectString(output.ModelPackageDescription),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    ModelPackageName: __expectString(output.ModelPackageName),
    ModelPackageStatus: __expectString(output.ModelPackageStatus),
    ModelPackageStatusDetails:
      output.ModelPackageStatusDetails != null
        ? de_ModelPackageStatusDetails(output.ModelPackageStatusDetails, context)
        : undefined,
    ModelPackageVersion: __expectInt32(output.ModelPackageVersion),
    SamplePayloadUrl: __expectString(output.SamplePayloadUrl),
    SourceAlgorithmSpecification:
      output.SourceAlgorithmSpecification != null
        ? de_SourceAlgorithmSpecification(output.SourceAlgorithmSpecification, context)
        : undefined,
    Task: __expectString(output.Task),
    ValidationSpecification:
      output.ValidationSpecification != null
        ? de_ModelPackageValidationSpecification(output.ValidationSpecification, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeModelQualityJobDefinitionResponse
 */
const de_DescribeModelQualityJobDefinitionResponse = (
  output: any,
  context: __SerdeContext
): DescribeModelQualityJobDefinitionResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    JobDefinitionArn: __expectString(output.JobDefinitionArn),
    JobDefinitionName: __expectString(output.JobDefinitionName),
    JobResources: output.JobResources != null ? de_MonitoringResources(output.JobResources, context) : undefined,
    ModelQualityAppSpecification:
      output.ModelQualityAppSpecification != null
        ? de_ModelQualityAppSpecification(output.ModelQualityAppSpecification, context)
        : undefined,
    ModelQualityBaselineConfig:
      output.ModelQualityBaselineConfig != null
        ? de_ModelQualityBaselineConfig(output.ModelQualityBaselineConfig, context)
        : undefined,
    ModelQualityJobInput:
      output.ModelQualityJobInput != null ? de_ModelQualityJobInput(output.ModelQualityJobInput, context) : undefined,
    ModelQualityJobOutputConfig:
      output.ModelQualityJobOutputConfig != null
        ? de_MonitoringOutputConfig(output.ModelQualityJobOutputConfig, context)
        : undefined,
    NetworkConfig: output.NetworkConfig != null ? de_MonitoringNetworkConfig(output.NetworkConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_MonitoringStoppingCondition(output.StoppingCondition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeMonitoringScheduleResponse
 */
const de_DescribeMonitoringScheduleResponse = (
  output: any,
  context: __SerdeContext
): DescribeMonitoringScheduleResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointName: __expectString(output.EndpointName),
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LastMonitoringExecutionSummary:
      output.LastMonitoringExecutionSummary != null
        ? de_MonitoringExecutionSummary(output.LastMonitoringExecutionSummary, context)
        : undefined,
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
    MonitoringScheduleConfig:
      output.MonitoringScheduleConfig != null
        ? de_MonitoringScheduleConfig(output.MonitoringScheduleConfig, context)
        : undefined,
    MonitoringScheduleName: __expectString(output.MonitoringScheduleName),
    MonitoringScheduleStatus: __expectString(output.MonitoringScheduleStatus),
    MonitoringType: __expectString(output.MonitoringType),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeNotebookInstanceLifecycleConfigOutput
 */
const de_DescribeNotebookInstanceLifecycleConfigOutput = (
  output: any,
  context: __SerdeContext
): DescribeNotebookInstanceLifecycleConfigOutput => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    NotebookInstanceLifecycleConfigArn: __expectString(output.NotebookInstanceLifecycleConfigArn),
    NotebookInstanceLifecycleConfigName: __expectString(output.NotebookInstanceLifecycleConfigName),
    OnCreate: output.OnCreate != null ? de_NotebookInstanceLifecycleConfigList(output.OnCreate, context) : undefined,
    OnStart: output.OnStart != null ? de_NotebookInstanceLifecycleConfigList(output.OnStart, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeNotebookInstanceOutput
 */
const de_DescribeNotebookInstanceOutput = (output: any, context: __SerdeContext): DescribeNotebookInstanceOutput => {
  return {
    AcceleratorTypes:
      output.AcceleratorTypes != null
        ? de_NotebookInstanceAcceleratorTypes(output.AcceleratorTypes, context)
        : undefined,
    AdditionalCodeRepositories:
      output.AdditionalCodeRepositories != null
        ? de_AdditionalCodeRepositoryNamesOrUrls(output.AdditionalCodeRepositories, context)
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DefaultCodeRepository: __expectString(output.DefaultCodeRepository),
    DirectInternetAccess: __expectString(output.DirectInternetAccess),
    FailureReason: __expectString(output.FailureReason),
    InstanceMetadataServiceConfiguration:
      output.InstanceMetadataServiceConfiguration != null
        ? de_InstanceMetadataServiceConfiguration(output.InstanceMetadataServiceConfiguration, context)
        : undefined,
    InstanceType: __expectString(output.InstanceType),
    KmsKeyId: __expectString(output.KmsKeyId),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    NetworkInterfaceId: __expectString(output.NetworkInterfaceId),
    NotebookInstanceArn: __expectString(output.NotebookInstanceArn),
    NotebookInstanceLifecycleConfigName: __expectString(output.NotebookInstanceLifecycleConfigName),
    NotebookInstanceName: __expectString(output.NotebookInstanceName),
    NotebookInstanceStatus: __expectString(output.NotebookInstanceStatus),
    PlatformIdentifier: __expectString(output.PlatformIdentifier),
    RoleArn: __expectString(output.RoleArn),
    RootAccess: __expectString(output.RootAccess),
    SecurityGroups: output.SecurityGroups != null ? de_SecurityGroupIds(output.SecurityGroups, context) : undefined,
    SubnetId: __expectString(output.SubnetId),
    Url: __expectString(output.Url),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1DescribePipelineDefinitionForExecutionResponse
 */
const de_DescribePipelineDefinitionForExecutionResponse = (
  output: any,
  context: __SerdeContext
): DescribePipelineDefinitionForExecutionResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    PipelineDefinition: __expectString(output.PipelineDefinition),
  } as any;
};

/**
 * deserializeAws_json1_1DescribePipelineExecutionResponse
 */
const de_DescribePipelineExecutionResponse = (
  output: any,
  context: __SerdeContext
): DescribePipelineExecutionResponse => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ParallelismConfiguration:
      output.ParallelismConfiguration != null
        ? de_ParallelismConfiguration(output.ParallelismConfiguration, context)
        : undefined,
    PipelineArn: __expectString(output.PipelineArn),
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
    PipelineExecutionDescription: __expectString(output.PipelineExecutionDescription),
    PipelineExecutionDisplayName: __expectString(output.PipelineExecutionDisplayName),
    PipelineExecutionStatus: __expectString(output.PipelineExecutionStatus),
    PipelineExperimentConfig:
      output.PipelineExperimentConfig != null
        ? de_PipelineExperimentConfig(output.PipelineExperimentConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribePipelineResponse
 */
const de_DescribePipelineResponse = (output: any, context: __SerdeContext): DescribePipelineResponse => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LastRunTime:
      output.LastRunTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastRunTime)))
        : undefined,
    ParallelismConfiguration:
      output.ParallelismConfiguration != null
        ? de_ParallelismConfiguration(output.ParallelismConfiguration, context)
        : undefined,
    PipelineArn: __expectString(output.PipelineArn),
    PipelineDefinition: __expectString(output.PipelineDefinition),
    PipelineDescription: __expectString(output.PipelineDescription),
    PipelineDisplayName: __expectString(output.PipelineDisplayName),
    PipelineName: __expectString(output.PipelineName),
    PipelineStatus: __expectString(output.PipelineStatus),
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeProcessingJobResponse
 */
const de_DescribeProcessingJobResponse = (output: any, context: __SerdeContext): DescribeProcessingJobResponse => {
  return {
    AppSpecification:
      output.AppSpecification != null ? de_AppSpecification(output.AppSpecification, context) : undefined,
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Environment: output.Environment != null ? de_ProcessingEnvironmentMap(output.Environment, context) : undefined,
    ExitMessage: __expectString(output.ExitMessage),
    ExperimentConfig:
      output.ExperimentConfig != null ? de_ExperimentConfig(output.ExperimentConfig, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
    NetworkConfig: output.NetworkConfig != null ? de_NetworkConfig(output.NetworkConfig, context) : undefined,
    ProcessingEndTime:
      output.ProcessingEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ProcessingEndTime)))
        : undefined,
    ProcessingInputs:
      output.ProcessingInputs != null ? de_ProcessingInputs(output.ProcessingInputs, context) : undefined,
    ProcessingJobArn: __expectString(output.ProcessingJobArn),
    ProcessingJobName: __expectString(output.ProcessingJobName),
    ProcessingJobStatus: __expectString(output.ProcessingJobStatus),
    ProcessingOutputConfig:
      output.ProcessingOutputConfig != null
        ? de_ProcessingOutputConfig(output.ProcessingOutputConfig, context)
        : undefined,
    ProcessingResources:
      output.ProcessingResources != null ? de_ProcessingResources(output.ProcessingResources, context) : undefined,
    ProcessingStartTime:
      output.ProcessingStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ProcessingStartTime)))
        : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_ProcessingStoppingCondition(output.StoppingCondition, context) : undefined,
    TrainingJobArn: __expectString(output.TrainingJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeProjectOutput
 */
const de_DescribeProjectOutput = (output: any, context: __SerdeContext): DescribeProjectOutput => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ProjectArn: __expectString(output.ProjectArn),
    ProjectDescription: __expectString(output.ProjectDescription),
    ProjectId: __expectString(output.ProjectId),
    ProjectName: __expectString(output.ProjectName),
    ProjectStatus: __expectString(output.ProjectStatus),
    ServiceCatalogProvisionedProductDetails:
      output.ServiceCatalogProvisionedProductDetails != null
        ? de_ServiceCatalogProvisionedProductDetails(output.ServiceCatalogProvisionedProductDetails, context)
        : undefined,
    ServiceCatalogProvisioningDetails:
      output.ServiceCatalogProvisioningDetails != null
        ? de_ServiceCatalogProvisioningDetails(output.ServiceCatalogProvisioningDetails, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeSpaceResponse
 */
const de_DescribeSpaceResponse = (output: any, context: __SerdeContext): DescribeSpaceResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DomainId: __expectString(output.DomainId),
    FailureReason: __expectString(output.FailureReason),
    HomeEfsFileSystemUid: __expectString(output.HomeEfsFileSystemUid),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    SpaceArn: __expectString(output.SpaceArn),
    SpaceName: __expectString(output.SpaceName),
    SpaceSettings: output.SpaceSettings != null ? de_SpaceSettings(output.SpaceSettings, context) : undefined,
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeStudioLifecycleConfigResponse
 */
const de_DescribeStudioLifecycleConfigResponse = (
  output: any,
  context: __SerdeContext
): DescribeStudioLifecycleConfigResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    StudioLifecycleConfigAppType: __expectString(output.StudioLifecycleConfigAppType),
    StudioLifecycleConfigArn: __expectString(output.StudioLifecycleConfigArn),
    StudioLifecycleConfigContent: __expectString(output.StudioLifecycleConfigContent),
    StudioLifecycleConfigName: __expectString(output.StudioLifecycleConfigName),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeSubscribedWorkteamResponse
 */
const de_DescribeSubscribedWorkteamResponse = (
  output: any,
  context: __SerdeContext
): DescribeSubscribedWorkteamResponse => {
  return {
    SubscribedWorkteam:
      output.SubscribedWorkteam != null ? de_SubscribedWorkteam(output.SubscribedWorkteam, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeTrainingJobResponse
 */
const de_DescribeTrainingJobResponse = (output: any, context: __SerdeContext): DescribeTrainingJobResponse => {
  return {
    AlgorithmSpecification:
      output.AlgorithmSpecification != null
        ? de_AlgorithmSpecification(output.AlgorithmSpecification, context)
        : undefined,
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    BillableTimeInSeconds: __expectInt32(output.BillableTimeInSeconds),
    CheckpointConfig:
      output.CheckpointConfig != null ? de_CheckpointConfig(output.CheckpointConfig, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DebugHookConfig: output.DebugHookConfig != null ? de_DebugHookConfig(output.DebugHookConfig, context) : undefined,
    DebugRuleConfigurations:
      output.DebugRuleConfigurations != null
        ? de_DebugRuleConfigurations(output.DebugRuleConfigurations, context)
        : undefined,
    DebugRuleEvaluationStatuses:
      output.DebugRuleEvaluationStatuses != null
        ? de_DebugRuleEvaluationStatuses(output.DebugRuleEvaluationStatuses, context)
        : undefined,
    EnableInterContainerTrafficEncryption: __expectBoolean(output.EnableInterContainerTrafficEncryption),
    EnableManagedSpotTraining: __expectBoolean(output.EnableManagedSpotTraining),
    EnableNetworkIsolation: __expectBoolean(output.EnableNetworkIsolation),
    Environment: output.Environment != null ? de_TrainingEnvironmentMap(output.Environment, context) : undefined,
    ExperimentConfig:
      output.ExperimentConfig != null ? de_ExperimentConfig(output.ExperimentConfig, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    FinalMetricDataList:
      output.FinalMetricDataList != null ? de_FinalMetricDataList(output.FinalMetricDataList, context) : undefined,
    HyperParameters: output.HyperParameters != null ? de_HyperParameters(output.HyperParameters, context) : undefined,
    InputDataConfig: output.InputDataConfig != null ? de_InputDataConfig(output.InputDataConfig, context) : undefined,
    LabelingJobArn: __expectString(output.LabelingJobArn),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelArtifacts: output.ModelArtifacts != null ? de_ModelArtifacts(output.ModelArtifacts, context) : undefined,
    OutputDataConfig:
      output.OutputDataConfig != null ? de_OutputDataConfig(output.OutputDataConfig, context) : undefined,
    ProfilerConfig: output.ProfilerConfig != null ? de_ProfilerConfig(output.ProfilerConfig, context) : undefined,
    ProfilerRuleConfigurations:
      output.ProfilerRuleConfigurations != null
        ? de_ProfilerRuleConfigurations(output.ProfilerRuleConfigurations, context)
        : undefined,
    ProfilerRuleEvaluationStatuses:
      output.ProfilerRuleEvaluationStatuses != null
        ? de_ProfilerRuleEvaluationStatuses(output.ProfilerRuleEvaluationStatuses, context)
        : undefined,
    ProfilingStatus: __expectString(output.ProfilingStatus),
    ResourceConfig: output.ResourceConfig != null ? de_ResourceConfig(output.ResourceConfig, context) : undefined,
    RetryStrategy: output.RetryStrategy != null ? de_RetryStrategy(output.RetryStrategy, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    SecondaryStatus: __expectString(output.SecondaryStatus),
    SecondaryStatusTransitions:
      output.SecondaryStatusTransitions != null
        ? de_SecondaryStatusTransitions(output.SecondaryStatusTransitions, context)
        : undefined,
    StoppingCondition:
      output.StoppingCondition != null ? de_StoppingCondition(output.StoppingCondition, context) : undefined,
    TensorBoardOutputConfig:
      output.TensorBoardOutputConfig != null
        ? de_TensorBoardOutputConfig(output.TensorBoardOutputConfig, context)
        : undefined,
    TrainingEndTime:
      output.TrainingEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TrainingEndTime)))
        : undefined,
    TrainingJobArn: __expectString(output.TrainingJobArn),
    TrainingJobName: __expectString(output.TrainingJobName),
    TrainingJobStatus: __expectString(output.TrainingJobStatus),
    TrainingStartTime:
      output.TrainingStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TrainingStartTime)))
        : undefined,
    TrainingTimeInSeconds: __expectInt32(output.TrainingTimeInSeconds),
    TuningJobArn: __expectString(output.TuningJobArn),
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
    WarmPoolStatus: output.WarmPoolStatus != null ? de_WarmPoolStatus(output.WarmPoolStatus, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeTransformJobResponse
 */
const de_DescribeTransformJobResponse = (output: any, context: __SerdeContext): DescribeTransformJobResponse => {
  return {
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    BatchStrategy: __expectString(output.BatchStrategy),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataCaptureConfig:
      output.DataCaptureConfig != null ? de_BatchDataCaptureConfig(output.DataCaptureConfig, context) : undefined,
    DataProcessing: output.DataProcessing != null ? de_DataProcessing(output.DataProcessing, context) : undefined,
    Environment: output.Environment != null ? de_TransformEnvironmentMap(output.Environment, context) : undefined,
    ExperimentConfig:
      output.ExperimentConfig != null ? de_ExperimentConfig(output.ExperimentConfig, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LabelingJobArn: __expectString(output.LabelingJobArn),
    MaxConcurrentTransforms: __expectInt32(output.MaxConcurrentTransforms),
    MaxPayloadInMB: __expectInt32(output.MaxPayloadInMB),
    ModelClientConfig:
      output.ModelClientConfig != null ? de_ModelClientConfig(output.ModelClientConfig, context) : undefined,
    ModelName: __expectString(output.ModelName),
    TransformEndTime:
      output.TransformEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TransformEndTime)))
        : undefined,
    TransformInput: output.TransformInput != null ? de_TransformInput(output.TransformInput, context) : undefined,
    TransformJobArn: __expectString(output.TransformJobArn),
    TransformJobName: __expectString(output.TransformJobName),
    TransformJobStatus: __expectString(output.TransformJobStatus),
    TransformOutput: output.TransformOutput != null ? de_TransformOutput(output.TransformOutput, context) : undefined,
    TransformResources:
      output.TransformResources != null ? de_TransformResources(output.TransformResources, context) : undefined,
    TransformStartTime:
      output.TransformStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TransformStartTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeTrialComponentResponse
 */
const de_DescribeTrialComponentResponse = (output: any, context: __SerdeContext): DescribeTrialComponentResponse => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    InputArtifacts:
      output.InputArtifacts != null ? de_TrialComponentArtifacts(output.InputArtifacts, context) : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LineageGroupArn: __expectString(output.LineageGroupArn),
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    Metrics: output.Metrics != null ? de_TrialComponentMetricSummaries(output.Metrics, context) : undefined,
    OutputArtifacts:
      output.OutputArtifacts != null ? de_TrialComponentArtifacts(output.OutputArtifacts, context) : undefined,
    Parameters: output.Parameters != null ? de_TrialComponentParameters(output.Parameters, context) : undefined,
    Source: output.Source != null ? de_TrialComponentSource(output.Source, context) : undefined,
    Sources: output.Sources != null ? de_TrialComponentSources(output.Sources, context) : undefined,
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
    Status: output.Status != null ? de_TrialComponentStatus(output.Status, context) : undefined,
    TrialComponentArn: __expectString(output.TrialComponentArn),
    TrialComponentName: __expectString(output.TrialComponentName),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeTrialResponse
 */
const de_DescribeTrialResponse = (output: any, context: __SerdeContext): DescribeTrialResponse => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    ExperimentName: __expectString(output.ExperimentName),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    Source: output.Source != null ? de_TrialSource(output.Source, context) : undefined,
    TrialArn: __expectString(output.TrialArn),
    TrialName: __expectString(output.TrialName),
  } as any;
};

/**
 * deserializeAws_json1_1DescribeUserProfileResponse
 */
const de_DescribeUserProfileResponse = (output: any, context: __SerdeContext): DescribeUserProfileResponse => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DomainId: __expectString(output.DomainId),
    FailureReason: __expectString(output.FailureReason),
    HomeEfsFileSystemUid: __expectString(output.HomeEfsFileSystemUid),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    SingleSignOnUserIdentifier: __expectString(output.SingleSignOnUserIdentifier),
    SingleSignOnUserValue: __expectString(output.SingleSignOnUserValue),
    Status: __expectString(output.Status),
    UserProfileArn: __expectString(output.UserProfileArn),
    UserProfileName: __expectString(output.UserProfileName),
    UserSettings: output.UserSettings != null ? de_UserSettings(output.UserSettings, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeWorkforceResponse
 */
const de_DescribeWorkforceResponse = (output: any, context: __SerdeContext): DescribeWorkforceResponse => {
  return {
    Workforce: output.Workforce != null ? de_Workforce(output.Workforce, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DescribeWorkteamResponse
 */
const de_DescribeWorkteamResponse = (output: any, context: __SerdeContext): DescribeWorkteamResponse => {
  return {
    Workteam: output.Workteam != null ? de_Workteam(output.Workteam, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DeviceDeploymentSummaries
 */
const de_DeviceDeploymentSummaries = (output: any, context: __SerdeContext): DeviceDeploymentSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DeviceDeploymentSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DeviceDeploymentSummary
 */
const de_DeviceDeploymentSummary = (output: any, context: __SerdeContext): DeviceDeploymentSummary => {
  return {
    DeployedStageName: __expectString(output.DeployedStageName),
    DeploymentStartTime:
      output.DeploymentStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.DeploymentStartTime)))
        : undefined,
    Description: __expectString(output.Description),
    DeviceArn: __expectString(output.DeviceArn),
    DeviceDeploymentStatus: __expectString(output.DeviceDeploymentStatus),
    DeviceDeploymentStatusMessage: __expectString(output.DeviceDeploymentStatusMessage),
    DeviceFleetName: __expectString(output.DeviceFleetName),
    DeviceName: __expectString(output.DeviceName),
    EdgeDeploymentPlanArn: __expectString(output.EdgeDeploymentPlanArn),
    EdgeDeploymentPlanName: __expectString(output.EdgeDeploymentPlanName),
    StageName: __expectString(output.StageName),
  } as any;
};

/**
 * deserializeAws_json1_1DeviceFleetSummaries
 */
const de_DeviceFleetSummaries = (output: any, context: __SerdeContext): DeviceFleetSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DeviceFleetSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DeviceFleetSummary
 */
const de_DeviceFleetSummary = (output: any, context: __SerdeContext): DeviceFleetSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DeviceFleetArn: __expectString(output.DeviceFleetArn),
    DeviceFleetName: __expectString(output.DeviceFleetName),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DeviceNames
 */
const de_DeviceNames = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DeviceSelectionConfig
 */
const de_DeviceSelectionConfig = (output: any, context: __SerdeContext): DeviceSelectionConfig => {
  return {
    DeviceNameContains: __expectString(output.DeviceNameContains),
    DeviceNames: output.DeviceNames != null ? de_DeviceNames(output.DeviceNames, context) : undefined,
    DeviceSubsetType: __expectString(output.DeviceSubsetType),
    Percentage: __expectInt32(output.Percentage),
  } as any;
};

/**
 * deserializeAws_json1_1DeviceStats
 */
const de_DeviceStats = (output: any, context: __SerdeContext): DeviceStats => {
  return {
    ConnectedDeviceCount: __expectLong(output.ConnectedDeviceCount),
    RegisteredDeviceCount: __expectLong(output.RegisteredDeviceCount),
  } as any;
};

/**
 * deserializeAws_json1_1DeviceSummaries
 */
const de_DeviceSummaries = (output: any, context: __SerdeContext): DeviceSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DeviceSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DeviceSummary
 */
const de_DeviceSummary = (output: any, context: __SerdeContext): DeviceSummary => {
  return {
    AgentVersion: __expectString(output.AgentVersion),
    Description: __expectString(output.Description),
    DeviceArn: __expectString(output.DeviceArn),
    DeviceFleetName: __expectString(output.DeviceFleetName),
    DeviceName: __expectString(output.DeviceName),
    IotThingName: __expectString(output.IotThingName),
    LatestHeartbeat:
      output.LatestHeartbeat != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LatestHeartbeat)))
        : undefined,
    Models: output.Models != null ? de_EdgeModelSummaries(output.Models, context) : undefined,
    RegistrationTime:
      output.RegistrationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.RegistrationTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DisableSagemakerServicecatalogPortfolioOutput
 */
const de_DisableSagemakerServicecatalogPortfolioOutput = (
  output: any,
  context: __SerdeContext
): DisableSagemakerServicecatalogPortfolioOutput => {
  return {} as any;
};

/**
 * deserializeAws_json1_1DisassociateTrialComponentResponse
 */
const de_DisassociateTrialComponentResponse = (
  output: any,
  context: __SerdeContext
): DisassociateTrialComponentResponse => {
  return {
    TrialArn: __expectString(output.TrialArn),
    TrialComponentArn: __expectString(output.TrialComponentArn),
  } as any;
};

/**
 * deserializeAws_json1_1DomainDetails
 */
const de_DomainDetails = (output: any, context: __SerdeContext): DomainDetails => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DomainArn: __expectString(output.DomainArn),
    DomainId: __expectString(output.DomainId),
    DomainName: __expectString(output.DomainName),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Status: __expectString(output.Status),
    Url: __expectString(output.Url),
  } as any;
};

/**
 * deserializeAws_json1_1DomainList
 */
const de_DomainList = (output: any, context: __SerdeContext): DomainDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_DomainDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DomainSecurityGroupIds
 */
const de_DomainSecurityGroupIds = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1DomainSettings
 */
const de_DomainSettings = (output: any, context: __SerdeContext): DomainSettings => {
  return {
    ExecutionRoleIdentityConfig: __expectString(output.ExecutionRoleIdentityConfig),
    RStudioServerProDomainSettings:
      output.RStudioServerProDomainSettings != null
        ? de_RStudioServerProDomainSettings(output.RStudioServerProDomainSettings, context)
        : undefined,
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_DomainSecurityGroupIds(output.SecurityGroupIds, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DriftCheckBaselines
 */
const de_DriftCheckBaselines = (output: any, context: __SerdeContext): DriftCheckBaselines => {
  return {
    Bias: output.Bias != null ? de_DriftCheckBias(output.Bias, context) : undefined,
    Explainability:
      output.Explainability != null ? de_DriftCheckExplainability(output.Explainability, context) : undefined,
    ModelDataQuality:
      output.ModelDataQuality != null ? de_DriftCheckModelDataQuality(output.ModelDataQuality, context) : undefined,
    ModelQuality: output.ModelQuality != null ? de_DriftCheckModelQuality(output.ModelQuality, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DriftCheckBias
 */
const de_DriftCheckBias = (output: any, context: __SerdeContext): DriftCheckBias => {
  return {
    ConfigFile: output.ConfigFile != null ? de_FileSource(output.ConfigFile, context) : undefined,
    PostTrainingConstraints:
      output.PostTrainingConstraints != null ? de_MetricsSource(output.PostTrainingConstraints, context) : undefined,
    PreTrainingConstraints:
      output.PreTrainingConstraints != null ? de_MetricsSource(output.PreTrainingConstraints, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DriftCheckExplainability
 */
const de_DriftCheckExplainability = (output: any, context: __SerdeContext): DriftCheckExplainability => {
  return {
    ConfigFile: output.ConfigFile != null ? de_FileSource(output.ConfigFile, context) : undefined,
    Constraints: output.Constraints != null ? de_MetricsSource(output.Constraints, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DriftCheckModelDataQuality
 */
const de_DriftCheckModelDataQuality = (output: any, context: __SerdeContext): DriftCheckModelDataQuality => {
  return {
    Constraints: output.Constraints != null ? de_MetricsSource(output.Constraints, context) : undefined,
    Statistics: output.Statistics != null ? de_MetricsSource(output.Statistics, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1DriftCheckModelQuality
 */
const de_DriftCheckModelQuality = (output: any, context: __SerdeContext): DriftCheckModelQuality => {
  return {
    Constraints: output.Constraints != null ? de_MetricsSource(output.Constraints, context) : undefined,
    Statistics: output.Statistics != null ? de_MetricsSource(output.Statistics, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1Edge
 */
const de_Edge = (output: any, context: __SerdeContext): Edge => {
  return {
    AssociationType: __expectString(output.AssociationType),
    DestinationArn: __expectString(output.DestinationArn),
    SourceArn: __expectString(output.SourceArn),
  } as any;
};

/**
 * deserializeAws_json1_1EdgeDeploymentConfig
 */
const de_EdgeDeploymentConfig = (output: any, context: __SerdeContext): EdgeDeploymentConfig => {
  return {
    FailureHandlingPolicy: __expectString(output.FailureHandlingPolicy),
  } as any;
};

/**
 * deserializeAws_json1_1EdgeDeploymentModelConfig
 */
const de_EdgeDeploymentModelConfig = (output: any, context: __SerdeContext): EdgeDeploymentModelConfig => {
  return {
    EdgePackagingJobName: __expectString(output.EdgePackagingJobName),
    ModelHandle: __expectString(output.ModelHandle),
  } as any;
};

/**
 * deserializeAws_json1_1EdgeDeploymentModelConfigs
 */
const de_EdgeDeploymentModelConfigs = (output: any, context: __SerdeContext): EdgeDeploymentModelConfig[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EdgeDeploymentModelConfig(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EdgeDeploymentPlanSummaries
 */
const de_EdgeDeploymentPlanSummaries = (output: any, context: __SerdeContext): EdgeDeploymentPlanSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EdgeDeploymentPlanSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EdgeDeploymentPlanSummary
 */
const de_EdgeDeploymentPlanSummary = (output: any, context: __SerdeContext): EdgeDeploymentPlanSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DeviceFleetName: __expectString(output.DeviceFleetName),
    EdgeDeploymentFailed: __expectInt32(output.EdgeDeploymentFailed),
    EdgeDeploymentPending: __expectInt32(output.EdgeDeploymentPending),
    EdgeDeploymentPlanArn: __expectString(output.EdgeDeploymentPlanArn),
    EdgeDeploymentPlanName: __expectString(output.EdgeDeploymentPlanName),
    EdgeDeploymentSuccess: __expectInt32(output.EdgeDeploymentSuccess),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1EdgeDeploymentStatus
 */
const de_EdgeDeploymentStatus = (output: any, context: __SerdeContext): EdgeDeploymentStatus => {
  return {
    EdgeDeploymentFailedInStage: __expectInt32(output.EdgeDeploymentFailedInStage),
    EdgeDeploymentPendingInStage: __expectInt32(output.EdgeDeploymentPendingInStage),
    EdgeDeploymentStageStartTime:
      output.EdgeDeploymentStageStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EdgeDeploymentStageStartTime)))
        : undefined,
    EdgeDeploymentStatusMessage: __expectString(output.EdgeDeploymentStatusMessage),
    EdgeDeploymentSuccessInStage: __expectInt32(output.EdgeDeploymentSuccessInStage),
    StageStatus: __expectString(output.StageStatus),
  } as any;
};

/**
 * deserializeAws_json1_1EdgeModel
 */
const de_EdgeModel = (output: any, context: __SerdeContext): EdgeModel => {
  return {
    LatestInference:
      output.LatestInference != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LatestInference)))
        : undefined,
    LatestSampleTime:
      output.LatestSampleTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LatestSampleTime)))
        : undefined,
    ModelName: __expectString(output.ModelName),
    ModelVersion: __expectString(output.ModelVersion),
  } as any;
};

/**
 * deserializeAws_json1_1EdgeModels
 */
const de_EdgeModels = (output: any, context: __SerdeContext): EdgeModel[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EdgeModel(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EdgeModelStat
 */
const de_EdgeModelStat = (output: any, context: __SerdeContext): EdgeModelStat => {
  return {
    ActiveDeviceCount: __expectLong(output.ActiveDeviceCount),
    ConnectedDeviceCount: __expectLong(output.ConnectedDeviceCount),
    ModelName: __expectString(output.ModelName),
    ModelVersion: __expectString(output.ModelVersion),
    OfflineDeviceCount: __expectLong(output.OfflineDeviceCount),
    SamplingDeviceCount: __expectLong(output.SamplingDeviceCount),
  } as any;
};

/**
 * deserializeAws_json1_1EdgeModelStats
 */
const de_EdgeModelStats = (output: any, context: __SerdeContext): EdgeModelStat[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EdgeModelStat(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EdgeModelSummaries
 */
const de_EdgeModelSummaries = (output: any, context: __SerdeContext): EdgeModelSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EdgeModelSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EdgeModelSummary
 */
const de_EdgeModelSummary = (output: any, context: __SerdeContext): EdgeModelSummary => {
  return {
    ModelName: __expectString(output.ModelName),
    ModelVersion: __expectString(output.ModelVersion),
  } as any;
};

/**
 * deserializeAws_json1_1EdgeOutputConfig
 */
const de_EdgeOutputConfig = (output: any, context: __SerdeContext): EdgeOutputConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    PresetDeploymentConfig: __expectString(output.PresetDeploymentConfig),
    PresetDeploymentType: __expectString(output.PresetDeploymentType),
    S3OutputLocation: __expectString(output.S3OutputLocation),
  } as any;
};

/**
 * deserializeAws_json1_1EdgePackagingJobSummaries
 */
const de_EdgePackagingJobSummaries = (output: any, context: __SerdeContext): EdgePackagingJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EdgePackagingJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EdgePackagingJobSummary
 */
const de_EdgePackagingJobSummary = (output: any, context: __SerdeContext): EdgePackagingJobSummary => {
  return {
    CompilationJobName: __expectString(output.CompilationJobName),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EdgePackagingJobArn: __expectString(output.EdgePackagingJobArn),
    EdgePackagingJobName: __expectString(output.EdgePackagingJobName),
    EdgePackagingJobStatus: __expectString(output.EdgePackagingJobStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelName: __expectString(output.ModelName),
    ModelVersion: __expectString(output.ModelVersion),
  } as any;
};

/**
 * deserializeAws_json1_1EdgePresetDeploymentOutput
 */
const de_EdgePresetDeploymentOutput = (output: any, context: __SerdeContext): EdgePresetDeploymentOutput => {
  return {
    Artifact: __expectString(output.Artifact),
    Status: __expectString(output.Status),
    StatusMessage: __expectString(output.StatusMessage),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_json1_1Edges
 */
const de_Edges = (output: any, context: __SerdeContext): Edge[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Edge(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EMRStepMetadata
 */
const de_EMRStepMetadata = (output: any, context: __SerdeContext): EMRStepMetadata => {
  return {
    ClusterId: __expectString(output.ClusterId),
    LogFilePath: __expectString(output.LogFilePath),
    StepId: __expectString(output.StepId),
    StepName: __expectString(output.StepName),
  } as any;
};

/**
 * deserializeAws_json1_1EnableSagemakerServicecatalogPortfolioOutput
 */
const de_EnableSagemakerServicecatalogPortfolioOutput = (
  output: any,
  context: __SerdeContext
): EnableSagemakerServicecatalogPortfolioOutput => {
  return {} as any;
};

/**
 * deserializeAws_json1_1Endpoint
 */
const de_Endpoint = (output: any, context: __SerdeContext): Endpoint => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataCaptureConfig:
      output.DataCaptureConfig != null ? de_DataCaptureConfigSummary(output.DataCaptureConfig, context) : undefined,
    EndpointArn: __expectString(output.EndpointArn),
    EndpointConfigName: __expectString(output.EndpointConfigName),
    EndpointName: __expectString(output.EndpointName),
    EndpointStatus: __expectString(output.EndpointStatus),
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MonitoringSchedules:
      output.MonitoringSchedules != null ? de_MonitoringScheduleList(output.MonitoringSchedules, context) : undefined,
    ProductionVariants:
      output.ProductionVariants != null
        ? de_ProductionVariantSummaryList(output.ProductionVariants, context)
        : undefined,
    ShadowProductionVariants:
      output.ShadowProductionVariants != null
        ? de_ProductionVariantSummaryList(output.ShadowProductionVariants, context)
        : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1EndpointConfigSummary
 */
const de_EndpointConfigSummary = (output: any, context: __SerdeContext): EndpointConfigSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointConfigArn: __expectString(output.EndpointConfigArn),
    EndpointConfigName: __expectString(output.EndpointConfigName),
  } as any;
};

/**
 * deserializeAws_json1_1EndpointConfigSummaryList
 */
const de_EndpointConfigSummaryList = (output: any, context: __SerdeContext): EndpointConfigSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EndpointConfigSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EndpointInfo
 */
const de_EndpointInfo = (output: any, context: __SerdeContext): EndpointInfo => {
  return {
    EndpointName: __expectString(output.EndpointName),
  } as any;
};

/**
 * deserializeAws_json1_1EndpointInput
 */
const de_EndpointInput = (output: any, context: __SerdeContext): EndpointInput => {
  return {
    EndTimeOffset: __expectString(output.EndTimeOffset),
    EndpointName: __expectString(output.EndpointName),
    FeaturesAttribute: __expectString(output.FeaturesAttribute),
    InferenceAttribute: __expectString(output.InferenceAttribute),
    LocalPath: __expectString(output.LocalPath),
    ProbabilityAttribute: __expectString(output.ProbabilityAttribute),
    ProbabilityThresholdAttribute: __limitedParseDouble(output.ProbabilityThresholdAttribute),
    S3DataDistributionType: __expectString(output.S3DataDistributionType),
    S3InputMode: __expectString(output.S3InputMode),
    StartTimeOffset: __expectString(output.StartTimeOffset),
  } as any;
};

/**
 * deserializeAws_json1_1EndpointInputConfiguration
 */
const de_EndpointInputConfiguration = (output: any, context: __SerdeContext): EndpointInputConfiguration => {
  return {
    EnvironmentParameterRanges:
      output.EnvironmentParameterRanges != null
        ? de_EnvironmentParameterRanges(output.EnvironmentParameterRanges, context)
        : undefined,
    InferenceSpecificationName: __expectString(output.InferenceSpecificationName),
    InstanceType: __expectString(output.InstanceType),
  } as any;
};

/**
 * deserializeAws_json1_1EndpointInputConfigurations
 */
const de_EndpointInputConfigurations = (output: any, context: __SerdeContext): EndpointInputConfiguration[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EndpointInputConfiguration(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EndpointMetadata
 */
const de_EndpointMetadata = (output: any, context: __SerdeContext): EndpointMetadata => {
  return {
    EndpointConfigName: __expectString(output.EndpointConfigName),
    EndpointName: __expectString(output.EndpointName),
    EndpointStatus: __expectString(output.EndpointStatus),
    FailureReason: __expectString(output.FailureReason),
  } as any;
};

/**
 * deserializeAws_json1_1EndpointOutputConfiguration
 */
const de_EndpointOutputConfiguration = (output: any, context: __SerdeContext): EndpointOutputConfiguration => {
  return {
    EndpointName: __expectString(output.EndpointName),
    InitialInstanceCount: __expectInt32(output.InitialInstanceCount),
    InstanceType: __expectString(output.InstanceType),
    VariantName: __expectString(output.VariantName),
  } as any;
};

/**
 * deserializeAws_json1_1EndpointPerformance
 */
const de_EndpointPerformance = (output: any, context: __SerdeContext): EndpointPerformance => {
  return {
    EndpointInfo: output.EndpointInfo != null ? de_EndpointInfo(output.EndpointInfo, context) : undefined,
    Metrics: output.Metrics != null ? de_InferenceMetrics(output.Metrics, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1EndpointPerformances
 */
const de_EndpointPerformances = (output: any, context: __SerdeContext): EndpointPerformance[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EndpointPerformance(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Endpoints
 */
const de_Endpoints = (output: any, context: __SerdeContext): EndpointInfo[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EndpointInfo(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EndpointSummary
 */
const de_EndpointSummary = (output: any, context: __SerdeContext): EndpointSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointArn: __expectString(output.EndpointArn),
    EndpointName: __expectString(output.EndpointName),
    EndpointStatus: __expectString(output.EndpointStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1EndpointSummaryList
 */
const de_EndpointSummaryList = (output: any, context: __SerdeContext): EndpointSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EndpointSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1EnvironmentMap
 */
const de_EnvironmentMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1EnvironmentParameter
 */
const de_EnvironmentParameter = (output: any, context: __SerdeContext): EnvironmentParameter => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
    ValueType: __expectString(output.ValueType),
  } as any;
};

/**
 * deserializeAws_json1_1EnvironmentParameterRanges
 */
const de_EnvironmentParameterRanges = (output: any, context: __SerdeContext): EnvironmentParameterRanges => {
  return {
    CategoricalParameterRanges:
      output.CategoricalParameterRanges != null
        ? de_CategoricalParameters(output.CategoricalParameterRanges, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1EnvironmentParameters
 */
const de_EnvironmentParameters = (output: any, context: __SerdeContext): EnvironmentParameter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_EnvironmentParameter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Experiment
 */
const de_Experiment = (output: any, context: __SerdeContext): Experiment => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    DisplayName: __expectString(output.DisplayName),
    ExperimentArn: __expectString(output.ExperimentArn),
    ExperimentName: __expectString(output.ExperimentName),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Source: output.Source != null ? de_ExperimentSource(output.Source, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ExperimentConfig
 */
const de_ExperimentConfig = (output: any, context: __SerdeContext): ExperimentConfig => {
  return {
    ExperimentName: __expectString(output.ExperimentName),
    RunName: __expectString(output.RunName),
    TrialComponentDisplayName: __expectString(output.TrialComponentDisplayName),
    TrialName: __expectString(output.TrialName),
  } as any;
};

/**
 * deserializeAws_json1_1ExperimentSource
 */
const de_ExperimentSource = (output: any, context: __SerdeContext): ExperimentSource => {
  return {
    SourceArn: __expectString(output.SourceArn),
    SourceType: __expectString(output.SourceType),
  } as any;
};

/**
 * deserializeAws_json1_1ExperimentSummaries
 */
const de_ExperimentSummaries = (output: any, context: __SerdeContext): ExperimentSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ExperimentSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ExperimentSummary
 */
const de_ExperimentSummary = (output: any, context: __SerdeContext): ExperimentSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    ExperimentArn: __expectString(output.ExperimentArn),
    ExperimentName: __expectString(output.ExperimentName),
    ExperimentSource:
      output.ExperimentSource != null ? de_ExperimentSource(output.ExperimentSource, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1Explainability
 */
const de_Explainability = (output: any, context: __SerdeContext): Explainability => {
  return {
    Report: output.Report != null ? de_MetricsSource(output.Report, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ExplainerConfig
 */
const de_ExplainerConfig = (output: any, context: __SerdeContext): ExplainerConfig => {
  return {
    ClarifyExplainerConfig:
      output.ClarifyExplainerConfig != null
        ? de_ClarifyExplainerConfig(output.ClarifyExplainerConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1FailStepMetadata
 */
const de_FailStepMetadata = (output: any, context: __SerdeContext): FailStepMetadata => {
  return {
    ErrorMessage: __expectString(output.ErrorMessage),
  } as any;
};

/**
 * deserializeAws_json1_1FeatureDefinition
 */
const de_FeatureDefinition = (output: any, context: __SerdeContext): FeatureDefinition => {
  return {
    FeatureName: __expectString(output.FeatureName),
    FeatureType: __expectString(output.FeatureType),
  } as any;
};

/**
 * deserializeAws_json1_1FeatureDefinitions
 */
const de_FeatureDefinitions = (output: any, context: __SerdeContext): FeatureDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FeatureDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1FeatureGroup
 */
const de_FeatureGroup = (output: any, context: __SerdeContext): FeatureGroup => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    EventTimeFeatureName: __expectString(output.EventTimeFeatureName),
    FailureReason: __expectString(output.FailureReason),
    FeatureDefinitions:
      output.FeatureDefinitions != null ? de_FeatureDefinitions(output.FeatureDefinitions, context) : undefined,
    FeatureGroupArn: __expectString(output.FeatureGroupArn),
    FeatureGroupName: __expectString(output.FeatureGroupName),
    FeatureGroupStatus: __expectString(output.FeatureGroupStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LastUpdateStatus:
      output.LastUpdateStatus != null ? de_LastUpdateStatus(output.LastUpdateStatus, context) : undefined,
    OfflineStoreConfig:
      output.OfflineStoreConfig != null ? de_OfflineStoreConfig(output.OfflineStoreConfig, context) : undefined,
    OfflineStoreStatus:
      output.OfflineStoreStatus != null ? de_OfflineStoreStatus(output.OfflineStoreStatus, context) : undefined,
    OnlineStoreConfig:
      output.OnlineStoreConfig != null ? de_OnlineStoreConfig(output.OnlineStoreConfig, context) : undefined,
    RecordIdentifierFeatureName: __expectString(output.RecordIdentifierFeatureName),
    RoleArn: __expectString(output.RoleArn),
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1FeatureGroupSummaries
 */
const de_FeatureGroupSummaries = (output: any, context: __SerdeContext): FeatureGroupSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FeatureGroupSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1FeatureGroupSummary
 */
const de_FeatureGroupSummary = (output: any, context: __SerdeContext): FeatureGroupSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FeatureGroupArn: __expectString(output.FeatureGroupArn),
    FeatureGroupName: __expectString(output.FeatureGroupName),
    FeatureGroupStatus: __expectString(output.FeatureGroupStatus),
    OfflineStoreStatus:
      output.OfflineStoreStatus != null ? de_OfflineStoreStatus(output.OfflineStoreStatus, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1FeatureMetadata
 */
const de_FeatureMetadata = (output: any, context: __SerdeContext): FeatureMetadata => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    FeatureGroupArn: __expectString(output.FeatureGroupArn),
    FeatureGroupName: __expectString(output.FeatureGroupName),
    FeatureName: __expectString(output.FeatureName),
    FeatureType: __expectString(output.FeatureType),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Parameters: output.Parameters != null ? de_FeatureParameters(output.Parameters, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1FeatureParameter
 */
const de_FeatureParameter = (output: any, context: __SerdeContext): FeatureParameter => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1FeatureParameters
 */
const de_FeatureParameters = (output: any, context: __SerdeContext): FeatureParameter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FeatureParameter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1FileSource
 */
const de_FileSource = (output: any, context: __SerdeContext): FileSource => {
  return {
    ContentDigest: __expectString(output.ContentDigest),
    ContentType: __expectString(output.ContentType),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1FileSystemConfig
 */
const de_FileSystemConfig = (output: any, context: __SerdeContext): FileSystemConfig => {
  return {
    DefaultGid: __expectInt32(output.DefaultGid),
    DefaultUid: __expectInt32(output.DefaultUid),
    MountPath: __expectString(output.MountPath),
  } as any;
};

/**
 * deserializeAws_json1_1FileSystemDataSource
 */
const de_FileSystemDataSource = (output: any, context: __SerdeContext): FileSystemDataSource => {
  return {
    DirectoryPath: __expectString(output.DirectoryPath),
    FileSystemAccessMode: __expectString(output.FileSystemAccessMode),
    FileSystemId: __expectString(output.FileSystemId),
    FileSystemType: __expectString(output.FileSystemType),
  } as any;
};

/**
 * deserializeAws_json1_1FinalAutoMLJobObjectiveMetric
 */
const de_FinalAutoMLJobObjectiveMetric = (output: any, context: __SerdeContext): FinalAutoMLJobObjectiveMetric => {
  return {
    MetricName: __expectString(output.MetricName),
    StandardMetricName: __expectString(output.StandardMetricName),
    Type: __expectString(output.Type),
    Value: __limitedParseFloat32(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1FinalHyperParameterTuningJobObjectiveMetric
 */
const de_FinalHyperParameterTuningJobObjectiveMetric = (
  output: any,
  context: __SerdeContext
): FinalHyperParameterTuningJobObjectiveMetric => {
  return {
    MetricName: __expectString(output.MetricName),
    Type: __expectString(output.Type),
    Value: __limitedParseFloat32(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1FinalMetricDataList
 */
const de_FinalMetricDataList = (output: any, context: __SerdeContext): MetricData[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MetricData(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1FlowDefinitionOutputConfig
 */
const de_FlowDefinitionOutputConfig = (output: any, context: __SerdeContext): FlowDefinitionOutputConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1FlowDefinitionSummaries
 */
const de_FlowDefinitionSummaries = (output: any, context: __SerdeContext): FlowDefinitionSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_FlowDefinitionSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1FlowDefinitionSummary
 */
const de_FlowDefinitionSummary = (output: any, context: __SerdeContext): FlowDefinitionSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    FlowDefinitionArn: __expectString(output.FlowDefinitionArn),
    FlowDefinitionName: __expectString(output.FlowDefinitionName),
    FlowDefinitionStatus: __expectString(output.FlowDefinitionStatus),
  } as any;
};

/**
 * deserializeAws_json1_1FlowDefinitionTaskKeywords
 */
const de_FlowDefinitionTaskKeywords = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1GetDeviceFleetReportResponse
 */
const de_GetDeviceFleetReportResponse = (output: any, context: __SerdeContext): GetDeviceFleetReportResponse => {
  return {
    AgentVersions: output.AgentVersions != null ? de_AgentVersions(output.AgentVersions, context) : undefined,
    Description: __expectString(output.Description),
    DeviceFleetArn: __expectString(output.DeviceFleetArn),
    DeviceFleetName: __expectString(output.DeviceFleetName),
    DeviceStats: output.DeviceStats != null ? de_DeviceStats(output.DeviceStats, context) : undefined,
    ModelStats: output.ModelStats != null ? de_EdgeModelStats(output.ModelStats, context) : undefined,
    OutputConfig: output.OutputConfig != null ? de_EdgeOutputConfig(output.OutputConfig, context) : undefined,
    ReportGenerated:
      output.ReportGenerated != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReportGenerated)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1GetLineageGroupPolicyResponse
 */
const de_GetLineageGroupPolicyResponse = (output: any, context: __SerdeContext): GetLineageGroupPolicyResponse => {
  return {
    LineageGroupArn: __expectString(output.LineageGroupArn),
    ResourcePolicy: __expectString(output.ResourcePolicy),
  } as any;
};

/**
 * deserializeAws_json1_1GetModelPackageGroupPolicyOutput
 */
const de_GetModelPackageGroupPolicyOutput = (
  output: any,
  context: __SerdeContext
): GetModelPackageGroupPolicyOutput => {
  return {
    ResourcePolicy: __expectString(output.ResourcePolicy),
  } as any;
};

/**
 * deserializeAws_json1_1GetSagemakerServicecatalogPortfolioStatusOutput
 */
const de_GetSagemakerServicecatalogPortfolioStatusOutput = (
  output: any,
  context: __SerdeContext
): GetSagemakerServicecatalogPortfolioStatusOutput => {
  return {
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1GetSearchSuggestionsResponse
 */
const de_GetSearchSuggestionsResponse = (output: any, context: __SerdeContext): GetSearchSuggestionsResponse => {
  return {
    PropertyNameSuggestions:
      output.PropertyNameSuggestions != null
        ? de_PropertyNameSuggestionList(output.PropertyNameSuggestions, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1GitConfig
 */
const de_GitConfig = (output: any, context: __SerdeContext): GitConfig => {
  return {
    Branch: __expectString(output.Branch),
    RepositoryUrl: __expectString(output.RepositoryUrl),
    SecretArn: __expectString(output.SecretArn),
  } as any;
};

/**
 * deserializeAws_json1_1Groups
 */
const de_Groups = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HookParameters
 */
const de_HookParameters = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1HubContentDependency
 */
const de_HubContentDependency = (output: any, context: __SerdeContext): HubContentDependency => {
  return {
    DependencyCopyPath: __expectString(output.DependencyCopyPath),
    DependencyOriginPath: __expectString(output.DependencyOriginPath),
  } as any;
};

/**
 * deserializeAws_json1_1HubContentDependencyList
 */
const de_HubContentDependencyList = (output: any, context: __SerdeContext): HubContentDependency[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HubContentDependency(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HubContentInfo
 */
const de_HubContentInfo = (output: any, context: __SerdeContext): HubContentInfo => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DocumentSchemaVersion: __expectString(output.DocumentSchemaVersion),
    HubContentArn: __expectString(output.HubContentArn),
    HubContentDescription: __expectString(output.HubContentDescription),
    HubContentDisplayName: __expectString(output.HubContentDisplayName),
    HubContentName: __expectString(output.HubContentName),
    HubContentSearchKeywords:
      output.HubContentSearchKeywords != null
        ? de_HubContentSearchKeywordList(output.HubContentSearchKeywords, context)
        : undefined,
    HubContentStatus: __expectString(output.HubContentStatus),
    HubContentType: __expectString(output.HubContentType),
    HubContentVersion: __expectString(output.HubContentVersion),
  } as any;
};

/**
 * deserializeAws_json1_1HubContentInfoList
 */
const de_HubContentInfoList = (output: any, context: __SerdeContext): HubContentInfo[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HubContentInfo(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HubContentSearchKeywordList
 */
const de_HubContentSearchKeywordList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HubInfo
 */
const de_HubInfo = (output: any, context: __SerdeContext): HubInfo => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    HubArn: __expectString(output.HubArn),
    HubDescription: __expectString(output.HubDescription),
    HubDisplayName: __expectString(output.HubDisplayName),
    HubName: __expectString(output.HubName),
    HubSearchKeywords:
      output.HubSearchKeywords != null ? de_HubSearchKeywordList(output.HubSearchKeywords, context) : undefined,
    HubStatus: __expectString(output.HubStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HubInfoList
 */
const de_HubInfoList = (output: any, context: __SerdeContext): HubInfo[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HubInfo(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HubS3StorageConfig
 */
const de_HubS3StorageConfig = (output: any, context: __SerdeContext): HubS3StorageConfig => {
  return {
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1HubSearchKeywordList
 */
const de_HubSearchKeywordList = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HumanLoopActivationConditionsConfig
 */
const de_HumanLoopActivationConditionsConfig = (
  output: any,
  context: __SerdeContext
): HumanLoopActivationConditionsConfig => {
  return {
    HumanLoopActivationConditions:
      output.HumanLoopActivationConditions != null
        ? new __LazyJsonString(output.HumanLoopActivationConditions)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HumanLoopActivationConfig
 */
const de_HumanLoopActivationConfig = (output: any, context: __SerdeContext): HumanLoopActivationConfig => {
  return {
    HumanLoopActivationConditionsConfig:
      output.HumanLoopActivationConditionsConfig != null
        ? de_HumanLoopActivationConditionsConfig(output.HumanLoopActivationConditionsConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HumanLoopConfig
 */
const de_HumanLoopConfig = (output: any, context: __SerdeContext): HumanLoopConfig => {
  return {
    HumanTaskUiArn: __expectString(output.HumanTaskUiArn),
    PublicWorkforceTaskPrice:
      output.PublicWorkforceTaskPrice != null
        ? de_PublicWorkforceTaskPrice(output.PublicWorkforceTaskPrice, context)
        : undefined,
    TaskAvailabilityLifetimeInSeconds: __expectInt32(output.TaskAvailabilityLifetimeInSeconds),
    TaskCount: __expectInt32(output.TaskCount),
    TaskDescription: __expectString(output.TaskDescription),
    TaskKeywords: output.TaskKeywords != null ? de_FlowDefinitionTaskKeywords(output.TaskKeywords, context) : undefined,
    TaskTimeLimitInSeconds: __expectInt32(output.TaskTimeLimitInSeconds),
    TaskTitle: __expectString(output.TaskTitle),
    WorkteamArn: __expectString(output.WorkteamArn),
  } as any;
};

/**
 * deserializeAws_json1_1HumanLoopRequestSource
 */
const de_HumanLoopRequestSource = (output: any, context: __SerdeContext): HumanLoopRequestSource => {
  return {
    AwsManagedHumanLoopRequestSource: __expectString(output.AwsManagedHumanLoopRequestSource),
  } as any;
};

/**
 * deserializeAws_json1_1HumanTaskConfig
 */
const de_HumanTaskConfig = (output: any, context: __SerdeContext): HumanTaskConfig => {
  return {
    AnnotationConsolidationConfig:
      output.AnnotationConsolidationConfig != null
        ? de_AnnotationConsolidationConfig(output.AnnotationConsolidationConfig, context)
        : undefined,
    MaxConcurrentTaskCount: __expectInt32(output.MaxConcurrentTaskCount),
    NumberOfHumanWorkersPerDataObject: __expectInt32(output.NumberOfHumanWorkersPerDataObject),
    PreHumanTaskLambdaArn: __expectString(output.PreHumanTaskLambdaArn),
    PublicWorkforceTaskPrice:
      output.PublicWorkforceTaskPrice != null
        ? de_PublicWorkforceTaskPrice(output.PublicWorkforceTaskPrice, context)
        : undefined,
    TaskAvailabilityLifetimeInSeconds: __expectInt32(output.TaskAvailabilityLifetimeInSeconds),
    TaskDescription: __expectString(output.TaskDescription),
    TaskKeywords: output.TaskKeywords != null ? de_TaskKeywords(output.TaskKeywords, context) : undefined,
    TaskTimeLimitInSeconds: __expectInt32(output.TaskTimeLimitInSeconds),
    TaskTitle: __expectString(output.TaskTitle),
    UiConfig: output.UiConfig != null ? de_UiConfig(output.UiConfig, context) : undefined,
    WorkteamArn: __expectString(output.WorkteamArn),
  } as any;
};

/**
 * deserializeAws_json1_1HumanTaskUiSummaries
 */
const de_HumanTaskUiSummaries = (output: any, context: __SerdeContext): HumanTaskUiSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HumanTaskUiSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HumanTaskUiSummary
 */
const de_HumanTaskUiSummary = (output: any, context: __SerdeContext): HumanTaskUiSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    HumanTaskUiArn: __expectString(output.HumanTaskUiArn),
    HumanTaskUiName: __expectString(output.HumanTaskUiName),
  } as any;
};

/**
 * deserializeAws_json1_1HyperbandStrategyConfig
 */
const de_HyperbandStrategyConfig = (output: any, context: __SerdeContext): HyperbandStrategyConfig => {
  return {
    MaxResource: __expectInt32(output.MaxResource),
    MinResource: __expectInt32(output.MinResource),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterAlgorithmSpecification
 */
const de_HyperParameterAlgorithmSpecification = (
  output: any,
  context: __SerdeContext
): HyperParameterAlgorithmSpecification => {
  return {
    AlgorithmName: __expectString(output.AlgorithmName),
    MetricDefinitions:
      output.MetricDefinitions != null ? de_MetricDefinitionList(output.MetricDefinitions, context) : undefined,
    TrainingImage: __expectString(output.TrainingImage),
    TrainingInputMode: __expectString(output.TrainingInputMode),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameters
 */
const de_HyperParameters = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1HyperParameterSpecification
 */
const de_HyperParameterSpecification = (output: any, context: __SerdeContext): HyperParameterSpecification => {
  return {
    DefaultValue: __expectString(output.DefaultValue),
    Description: __expectString(output.Description),
    IsRequired: __expectBoolean(output.IsRequired),
    IsTunable: __expectBoolean(output.IsTunable),
    Name: __expectString(output.Name),
    Range: output.Range != null ? de_ParameterRange(output.Range, context) : undefined,
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterSpecifications
 */
const de_HyperParameterSpecifications = (output: any, context: __SerdeContext): HyperParameterSpecification[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HyperParameterSpecification(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HyperParameterTrainingJobDefinition
 */
const de_HyperParameterTrainingJobDefinition = (
  output: any,
  context: __SerdeContext
): HyperParameterTrainingJobDefinition => {
  return {
    AlgorithmSpecification:
      output.AlgorithmSpecification != null
        ? de_HyperParameterAlgorithmSpecification(output.AlgorithmSpecification, context)
        : undefined,
    CheckpointConfig:
      output.CheckpointConfig != null ? de_CheckpointConfig(output.CheckpointConfig, context) : undefined,
    DefinitionName: __expectString(output.DefinitionName),
    EnableInterContainerTrafficEncryption: __expectBoolean(output.EnableInterContainerTrafficEncryption),
    EnableManagedSpotTraining: __expectBoolean(output.EnableManagedSpotTraining),
    EnableNetworkIsolation: __expectBoolean(output.EnableNetworkIsolation),
    Environment:
      output.Environment != null ? de_HyperParameterTrainingJobEnvironmentMap(output.Environment, context) : undefined,
    HyperParameterRanges:
      output.HyperParameterRanges != null ? de_ParameterRanges(output.HyperParameterRanges, context) : undefined,
    HyperParameterTuningResourceConfig:
      output.HyperParameterTuningResourceConfig != null
        ? de_HyperParameterTuningResourceConfig(output.HyperParameterTuningResourceConfig, context)
        : undefined,
    InputDataConfig: output.InputDataConfig != null ? de_InputDataConfig(output.InputDataConfig, context) : undefined,
    OutputDataConfig:
      output.OutputDataConfig != null ? de_OutputDataConfig(output.OutputDataConfig, context) : undefined,
    ResourceConfig: output.ResourceConfig != null ? de_ResourceConfig(output.ResourceConfig, context) : undefined,
    RetryStrategy: output.RetryStrategy != null ? de_RetryStrategy(output.RetryStrategy, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StaticHyperParameters:
      output.StaticHyperParameters != null ? de_HyperParameters(output.StaticHyperParameters, context) : undefined,
    StoppingCondition:
      output.StoppingCondition != null ? de_StoppingCondition(output.StoppingCondition, context) : undefined,
    TuningObjective:
      output.TuningObjective != null ? de_HyperParameterTuningJobObjective(output.TuningObjective, context) : undefined,
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTrainingJobDefinitions
 */
const de_HyperParameterTrainingJobDefinitions = (
  output: any,
  context: __SerdeContext
): HyperParameterTrainingJobDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HyperParameterTrainingJobDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HyperParameterTrainingJobEnvironmentMap
 */
const de_HyperParameterTrainingJobEnvironmentMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1HyperParameterTrainingJobSummaries
 */
const de_HyperParameterTrainingJobSummaries = (
  output: any,
  context: __SerdeContext
): HyperParameterTrainingJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HyperParameterTrainingJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HyperParameterTrainingJobSummary
 */
const de_HyperParameterTrainingJobSummary = (
  output: any,
  context: __SerdeContext
): HyperParameterTrainingJobSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    FinalHyperParameterTuningJobObjectiveMetric:
      output.FinalHyperParameterTuningJobObjectiveMetric != null
        ? de_FinalHyperParameterTuningJobObjectiveMetric(output.FinalHyperParameterTuningJobObjectiveMetric, context)
        : undefined,
    ObjectiveStatus: __expectString(output.ObjectiveStatus),
    TrainingEndTime:
      output.TrainingEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TrainingEndTime)))
        : undefined,
    TrainingJobArn: __expectString(output.TrainingJobArn),
    TrainingJobDefinitionName: __expectString(output.TrainingJobDefinitionName),
    TrainingJobName: __expectString(output.TrainingJobName),
    TrainingJobStatus: __expectString(output.TrainingJobStatus),
    TrainingStartTime:
      output.TrainingStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TrainingStartTime)))
        : undefined,
    TunedHyperParameters:
      output.TunedHyperParameters != null ? de_HyperParameters(output.TunedHyperParameters, context) : undefined,
    TuningJobName: __expectString(output.TuningJobName),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningInstanceConfig
 */
const de_HyperParameterTuningInstanceConfig = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningInstanceConfig => {
  return {
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningInstanceConfigs
 */
const de_HyperParameterTuningInstanceConfigs = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningInstanceConfig[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HyperParameterTuningInstanceConfig(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobCompletionDetails
 */
const de_HyperParameterTuningJobCompletionDetails = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobCompletionDetails => {
  return {
    ConvergenceDetectedTime:
      output.ConvergenceDetectedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ConvergenceDetectedTime)))
        : undefined,
    NumberOfTrainingJobsObjectiveNotImproving: __expectInt32(output.NumberOfTrainingJobsObjectiveNotImproving),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobConfig
 */
const de_HyperParameterTuningJobConfig = (output: any, context: __SerdeContext): HyperParameterTuningJobConfig => {
  return {
    HyperParameterTuningJobObjective:
      output.HyperParameterTuningJobObjective != null
        ? de_HyperParameterTuningJobObjective(output.HyperParameterTuningJobObjective, context)
        : undefined,
    ParameterRanges: output.ParameterRanges != null ? de_ParameterRanges(output.ParameterRanges, context) : undefined,
    RandomSeed: __expectInt32(output.RandomSeed),
    ResourceLimits: output.ResourceLimits != null ? de_ResourceLimits(output.ResourceLimits, context) : undefined,
    Strategy: __expectString(output.Strategy),
    StrategyConfig:
      output.StrategyConfig != null
        ? de_HyperParameterTuningJobStrategyConfig(output.StrategyConfig, context)
        : undefined,
    TrainingJobEarlyStoppingType: __expectString(output.TrainingJobEarlyStoppingType),
    TuningJobCompletionCriteria:
      output.TuningJobCompletionCriteria != null
        ? de_TuningJobCompletionCriteria(output.TuningJobCompletionCriteria, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobConsumedResources
 */
const de_HyperParameterTuningJobConsumedResources = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobConsumedResources => {
  return {
    RuntimeInSeconds: __expectInt32(output.RuntimeInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobObjective
 */
const de_HyperParameterTuningJobObjective = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobObjective => {
  return {
    MetricName: __expectString(output.MetricName),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobObjectives
 */
const de_HyperParameterTuningJobObjectives = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobObjective[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HyperParameterTuningJobObjective(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobSearchEntity
 */
const de_HyperParameterTuningJobSearchEntity = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobSearchEntity => {
  return {
    BestTrainingJob:
      output.BestTrainingJob != null ? de_HyperParameterTrainingJobSummary(output.BestTrainingJob, context) : undefined,
    ConsumedResources:
      output.ConsumedResources != null
        ? de_HyperParameterTuningJobConsumedResources(output.ConsumedResources, context)
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    HyperParameterTuningEndTime:
      output.HyperParameterTuningEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.HyperParameterTuningEndTime)))
        : undefined,
    HyperParameterTuningJobArn: __expectString(output.HyperParameterTuningJobArn),
    HyperParameterTuningJobConfig:
      output.HyperParameterTuningJobConfig != null
        ? de_HyperParameterTuningJobConfig(output.HyperParameterTuningJobConfig, context)
        : undefined,
    HyperParameterTuningJobName: __expectString(output.HyperParameterTuningJobName),
    HyperParameterTuningJobStatus: __expectString(output.HyperParameterTuningJobStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ObjectiveStatusCounters:
      output.ObjectiveStatusCounters != null
        ? de_ObjectiveStatusCounters(output.ObjectiveStatusCounters, context)
        : undefined,
    OverallBestTrainingJob:
      output.OverallBestTrainingJob != null
        ? de_HyperParameterTrainingJobSummary(output.OverallBestTrainingJob, context)
        : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    TrainingJobDefinition:
      output.TrainingJobDefinition != null
        ? de_HyperParameterTrainingJobDefinition(output.TrainingJobDefinition, context)
        : undefined,
    TrainingJobDefinitions:
      output.TrainingJobDefinitions != null
        ? de_HyperParameterTrainingJobDefinitions(output.TrainingJobDefinitions, context)
        : undefined,
    TrainingJobStatusCounters:
      output.TrainingJobStatusCounters != null
        ? de_TrainingJobStatusCounters(output.TrainingJobStatusCounters, context)
        : undefined,
    TuningJobCompletionDetails:
      output.TuningJobCompletionDetails != null
        ? de_HyperParameterTuningJobCompletionDetails(output.TuningJobCompletionDetails, context)
        : undefined,
    WarmStartConfig:
      output.WarmStartConfig != null
        ? de_HyperParameterTuningJobWarmStartConfig(output.WarmStartConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobStrategyConfig
 */
const de_HyperParameterTuningJobStrategyConfig = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobStrategyConfig => {
  return {
    HyperbandStrategyConfig:
      output.HyperbandStrategyConfig != null
        ? de_HyperbandStrategyConfig(output.HyperbandStrategyConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobSummaries
 */
const de_HyperParameterTuningJobSummaries = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_HyperParameterTuningJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobSummary
 */
const de_HyperParameterTuningJobSummary = (output: any, context: __SerdeContext): HyperParameterTuningJobSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    HyperParameterTuningEndTime:
      output.HyperParameterTuningEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.HyperParameterTuningEndTime)))
        : undefined,
    HyperParameterTuningJobArn: __expectString(output.HyperParameterTuningJobArn),
    HyperParameterTuningJobName: __expectString(output.HyperParameterTuningJobName),
    HyperParameterTuningJobStatus: __expectString(output.HyperParameterTuningJobStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ObjectiveStatusCounters:
      output.ObjectiveStatusCounters != null
        ? de_ObjectiveStatusCounters(output.ObjectiveStatusCounters, context)
        : undefined,
    ResourceLimits: output.ResourceLimits != null ? de_ResourceLimits(output.ResourceLimits, context) : undefined,
    Strategy: __expectString(output.Strategy),
    TrainingJobStatusCounters:
      output.TrainingJobStatusCounters != null
        ? de_TrainingJobStatusCounters(output.TrainingJobStatusCounters, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningJobWarmStartConfig
 */
const de_HyperParameterTuningJobWarmStartConfig = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningJobWarmStartConfig => {
  return {
    ParentHyperParameterTuningJobs:
      output.ParentHyperParameterTuningJobs != null
        ? de_ParentHyperParameterTuningJobs(output.ParentHyperParameterTuningJobs, context)
        : undefined,
    WarmStartType: __expectString(output.WarmStartType),
  } as any;
};

/**
 * deserializeAws_json1_1HyperParameterTuningResourceConfig
 */
const de_HyperParameterTuningResourceConfig = (
  output: any,
  context: __SerdeContext
): HyperParameterTuningResourceConfig => {
  return {
    AllocationStrategy: __expectString(output.AllocationStrategy),
    InstanceConfigs:
      output.InstanceConfigs != null
        ? de_HyperParameterTuningInstanceConfigs(output.InstanceConfigs, context)
        : undefined,
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1IamIdentity
 */
const de_IamIdentity = (output: any, context: __SerdeContext): IamIdentity => {
  return {
    Arn: __expectString(output.Arn),
    PrincipalId: __expectString(output.PrincipalId),
    SourceIdentity: __expectString(output.SourceIdentity),
  } as any;
};

/**
 * deserializeAws_json1_1Image
 */
const de_Image = (output: any, context: __SerdeContext): Image => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    DisplayName: __expectString(output.DisplayName),
    FailureReason: __expectString(output.FailureReason),
    ImageArn: __expectString(output.ImageArn),
    ImageName: __expectString(output.ImageName),
    ImageStatus: __expectString(output.ImageStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ImageClassificationJobConfig
 */
const de_ImageClassificationJobConfig = (output: any, context: __SerdeContext): ImageClassificationJobConfig => {
  return {
    CompletionCriteria:
      output.CompletionCriteria != null
        ? de_AutoMLJobCompletionCriteria(output.CompletionCriteria, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ImageConfig
 */
const de_ImageConfig = (output: any, context: __SerdeContext): ImageConfig => {
  return {
    RepositoryAccessMode: __expectString(output.RepositoryAccessMode),
    RepositoryAuthConfig:
      output.RepositoryAuthConfig != null ? de_RepositoryAuthConfig(output.RepositoryAuthConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1Images
 */
const de_Images = (output: any, context: __SerdeContext): Image[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Image(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ImageVersion
 */
const de_ImageVersion = (output: any, context: __SerdeContext): ImageVersion => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    ImageArn: __expectString(output.ImageArn),
    ImageVersionArn: __expectString(output.ImageVersionArn),
    ImageVersionStatus: __expectString(output.ImageVersionStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Version: __expectInt32(output.Version),
  } as any;
};

/**
 * deserializeAws_json1_1ImageVersions
 */
const de_ImageVersions = (output: any, context: __SerdeContext): ImageVersion[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ImageVersion(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ImportHubContentResponse
 */
const de_ImportHubContentResponse = (output: any, context: __SerdeContext): ImportHubContentResponse => {
  return {
    HubArn: __expectString(output.HubArn),
    HubContentArn: __expectString(output.HubContentArn),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceExecutionConfig
 */
const de_InferenceExecutionConfig = (output: any, context: __SerdeContext): InferenceExecutionConfig => {
  return {
    Mode: __expectString(output.Mode),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceExperimentDataStorageConfig
 */
const de_InferenceExperimentDataStorageConfig = (
  output: any,
  context: __SerdeContext
): InferenceExperimentDataStorageConfig => {
  return {
    ContentType: output.ContentType != null ? de_CaptureContentTypeHeader(output.ContentType, context) : undefined,
    Destination: __expectString(output.Destination),
    KmsKey: __expectString(output.KmsKey),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceExperimentList
 */
const de_InferenceExperimentList = (output: any, context: __SerdeContext): InferenceExperimentSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_InferenceExperimentSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InferenceExperimentSchedule
 */
const de_InferenceExperimentSchedule = (output: any, context: __SerdeContext): InferenceExperimentSchedule => {
  return {
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1InferenceExperimentSummary
 */
const de_InferenceExperimentSummary = (output: any, context: __SerdeContext): InferenceExperimentSummary => {
  return {
    CompletionTime:
      output.CompletionTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompletionTime)))
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Description: __expectString(output.Description),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Name: __expectString(output.Name),
    RoleArn: __expectString(output.RoleArn),
    Schedule: output.Schedule != null ? de_InferenceExperimentSchedule(output.Schedule, context) : undefined,
    Status: __expectString(output.Status),
    StatusReason: __expectString(output.StatusReason),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceMetrics
 */
const de_InferenceMetrics = (output: any, context: __SerdeContext): InferenceMetrics => {
  return {
    MaxInvocations: __expectInt32(output.MaxInvocations),
    ModelLatency: __expectInt32(output.ModelLatency),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceRecommendation
 */
const de_InferenceRecommendation = (output: any, context: __SerdeContext): InferenceRecommendation => {
  return {
    EndpointConfiguration:
      output.EndpointConfiguration != null
        ? de_EndpointOutputConfiguration(output.EndpointConfiguration, context)
        : undefined,
    Metrics: output.Metrics != null ? de_RecommendationMetrics(output.Metrics, context) : undefined,
    ModelConfiguration:
      output.ModelConfiguration != null ? de_ModelConfiguration(output.ModelConfiguration, context) : undefined,
    RecommendationId: __expectString(output.RecommendationId),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceRecommendations
 */
const de_InferenceRecommendations = (output: any, context: __SerdeContext): InferenceRecommendation[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_InferenceRecommendation(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InferenceRecommendationsJob
 */
const de_InferenceRecommendationsJob = (output: any, context: __SerdeContext): InferenceRecommendationsJob => {
  return {
    CompletionTime:
      output.CompletionTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CompletionTime)))
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    JobArn: __expectString(output.JobArn),
    JobDescription: __expectString(output.JobDescription),
    JobName: __expectString(output.JobName),
    JobType: __expectString(output.JobType),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    RoleArn: __expectString(output.RoleArn),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceRecommendationsJobs
 */
const de_InferenceRecommendationsJobs = (output: any, context: __SerdeContext): InferenceRecommendationsJob[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_InferenceRecommendationsJob(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InferenceRecommendationsJobStep
 */
const de_InferenceRecommendationsJobStep = (output: any, context: __SerdeContext): InferenceRecommendationsJobStep => {
  return {
    InferenceBenchmark:
      output.InferenceBenchmark != null
        ? de_RecommendationJobInferenceBenchmark(output.InferenceBenchmark, context)
        : undefined,
    JobName: __expectString(output.JobName),
    Status: __expectString(output.Status),
    StepType: __expectString(output.StepType),
  } as any;
};

/**
 * deserializeAws_json1_1InferenceRecommendationsJobSteps
 */
const de_InferenceRecommendationsJobSteps = (
  output: any,
  context: __SerdeContext
): InferenceRecommendationsJobStep[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_InferenceRecommendationsJobStep(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InferenceSpecification
 */
const de_InferenceSpecification = (output: any, context: __SerdeContext): InferenceSpecification => {
  return {
    Containers:
      output.Containers != null ? de_ModelPackageContainerDefinitionList(output.Containers, context) : undefined,
    SupportedContentTypes:
      output.SupportedContentTypes != null ? de_ContentTypes(output.SupportedContentTypes, context) : undefined,
    SupportedRealtimeInferenceInstanceTypes:
      output.SupportedRealtimeInferenceInstanceTypes != null
        ? de_RealtimeInferenceInstanceTypes(output.SupportedRealtimeInferenceInstanceTypes, context)
        : undefined,
    SupportedResponseMIMETypes:
      output.SupportedResponseMIMETypes != null
        ? de_ResponseMIMETypes(output.SupportedResponseMIMETypes, context)
        : undefined,
    SupportedTransformInstanceTypes:
      output.SupportedTransformInstanceTypes != null
        ? de_TransformInstanceTypes(output.SupportedTransformInstanceTypes, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1InputConfig
 */
const de_InputConfig = (output: any, context: __SerdeContext): InputConfig => {
  return {
    DataInputConfig: __expectString(output.DataInputConfig),
    Framework: __expectString(output.Framework),
    FrameworkVersion: __expectString(output.FrameworkVersion),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1InputDataConfig
 */
const de_InputDataConfig = (output: any, context: __SerdeContext): Channel[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Channel(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InputModes
 */
const de_InputModes = (output: any, context: __SerdeContext): (TrainingInputMode | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InstanceGroup
 */
const de_InstanceGroup = (output: any, context: __SerdeContext): InstanceGroup => {
  return {
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceGroupName: __expectString(output.InstanceGroupName),
    InstanceType: __expectString(output.InstanceType),
  } as any;
};

/**
 * deserializeAws_json1_1InstanceGroupNames
 */
const de_InstanceGroupNames = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InstanceGroups
 */
const de_InstanceGroups = (output: any, context: __SerdeContext): InstanceGroup[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_InstanceGroup(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1InstanceMetadataServiceConfiguration
 */
const de_InstanceMetadataServiceConfiguration = (
  output: any,
  context: __SerdeContext
): InstanceMetadataServiceConfiguration => {
  return {
    MinimumInstanceMetadataServiceVersion: __expectString(output.MinimumInstanceMetadataServiceVersion),
  } as any;
};

/**
 * deserializeAws_json1_1IntegerParameterRange
 */
const de_IntegerParameterRange = (output: any, context: __SerdeContext): IntegerParameterRange => {
  return {
    MaxValue: __expectString(output.MaxValue),
    MinValue: __expectString(output.MinValue),
    Name: __expectString(output.Name),
    ScalingType: __expectString(output.ScalingType),
  } as any;
};

/**
 * deserializeAws_json1_1IntegerParameterRanges
 */
const de_IntegerParameterRanges = (output: any, context: __SerdeContext): IntegerParameterRange[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_IntegerParameterRange(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1IntegerParameterRangeSpecification
 */
const de_IntegerParameterRangeSpecification = (
  output: any,
  context: __SerdeContext
): IntegerParameterRangeSpecification => {
  return {
    MaxValue: __expectString(output.MaxValue),
    MinValue: __expectString(output.MinValue),
  } as any;
};

/**
 * deserializeAws_json1_1JsonContentTypes
 */
const de_JsonContentTypes = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1JupyterServerAppSettings
 */
const de_JupyterServerAppSettings = (output: any, context: __SerdeContext): JupyterServerAppSettings => {
  return {
    CodeRepositories:
      output.CodeRepositories != null ? de_CodeRepositories(output.CodeRepositories, context) : undefined,
    DefaultResourceSpec:
      output.DefaultResourceSpec != null ? de_ResourceSpec(output.DefaultResourceSpec, context) : undefined,
    LifecycleConfigArns:
      output.LifecycleConfigArns != null ? de_LifecycleConfigArns(output.LifecycleConfigArns, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1KernelGatewayAppSettings
 */
const de_KernelGatewayAppSettings = (output: any, context: __SerdeContext): KernelGatewayAppSettings => {
  return {
    CustomImages: output.CustomImages != null ? de_CustomImages(output.CustomImages, context) : undefined,
    DefaultResourceSpec:
      output.DefaultResourceSpec != null ? de_ResourceSpec(output.DefaultResourceSpec, context) : undefined,
    LifecycleConfigArns:
      output.LifecycleConfigArns != null ? de_LifecycleConfigArns(output.LifecycleConfigArns, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1KernelGatewayImageConfig
 */
const de_KernelGatewayImageConfig = (output: any, context: __SerdeContext): KernelGatewayImageConfig => {
  return {
    FileSystemConfig:
      output.FileSystemConfig != null ? de_FileSystemConfig(output.FileSystemConfig, context) : undefined,
    KernelSpecs: output.KernelSpecs != null ? de_KernelSpecs(output.KernelSpecs, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1KernelSpec
 */
const de_KernelSpec = (output: any, context: __SerdeContext): KernelSpec => {
  return {
    DisplayName: __expectString(output.DisplayName),
    Name: __expectString(output.Name),
  } as any;
};

/**
 * deserializeAws_json1_1KernelSpecs
 */
const de_KernelSpecs = (output: any, context: __SerdeContext): KernelSpec[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_KernelSpec(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1LabelCounters
 */
const de_LabelCounters = (output: any, context: __SerdeContext): LabelCounters => {
  return {
    FailedNonRetryableError: __expectInt32(output.FailedNonRetryableError),
    HumanLabeled: __expectInt32(output.HumanLabeled),
    MachineLabeled: __expectInt32(output.MachineLabeled),
    TotalLabeled: __expectInt32(output.TotalLabeled),
    Unlabeled: __expectInt32(output.Unlabeled),
  } as any;
};

/**
 * deserializeAws_json1_1LabelCountersForWorkteam
 */
const de_LabelCountersForWorkteam = (output: any, context: __SerdeContext): LabelCountersForWorkteam => {
  return {
    HumanLabeled: __expectInt32(output.HumanLabeled),
    PendingHuman: __expectInt32(output.PendingHuman),
    Total: __expectInt32(output.Total),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobAlgorithmsConfig
 */
const de_LabelingJobAlgorithmsConfig = (output: any, context: __SerdeContext): LabelingJobAlgorithmsConfig => {
  return {
    InitialActiveLearningModelArn: __expectString(output.InitialActiveLearningModelArn),
    LabelingJobAlgorithmSpecificationArn: __expectString(output.LabelingJobAlgorithmSpecificationArn),
    LabelingJobResourceConfig:
      output.LabelingJobResourceConfig != null
        ? de_LabelingJobResourceConfig(output.LabelingJobResourceConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobDataAttributes
 */
const de_LabelingJobDataAttributes = (output: any, context: __SerdeContext): LabelingJobDataAttributes => {
  return {
    ContentClassifiers:
      output.ContentClassifiers != null ? de_ContentClassifiers(output.ContentClassifiers, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobDataSource
 */
const de_LabelingJobDataSource = (output: any, context: __SerdeContext): LabelingJobDataSource => {
  return {
    S3DataSource: output.S3DataSource != null ? de_LabelingJobS3DataSource(output.S3DataSource, context) : undefined,
    SnsDataSource:
      output.SnsDataSource != null ? de_LabelingJobSnsDataSource(output.SnsDataSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobForWorkteamSummary
 */
const de_LabelingJobForWorkteamSummary = (output: any, context: __SerdeContext): LabelingJobForWorkteamSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    JobReferenceCode: __expectString(output.JobReferenceCode),
    LabelCounters:
      output.LabelCounters != null ? de_LabelCountersForWorkteam(output.LabelCounters, context) : undefined,
    LabelingJobName: __expectString(output.LabelingJobName),
    NumberOfHumanWorkersPerDataObject: __expectInt32(output.NumberOfHumanWorkersPerDataObject),
    WorkRequesterAccountId: __expectString(output.WorkRequesterAccountId),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobForWorkteamSummaryList
 */
const de_LabelingJobForWorkteamSummaryList = (
  output: any,
  context: __SerdeContext
): LabelingJobForWorkteamSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_LabelingJobForWorkteamSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1LabelingJobInputConfig
 */
const de_LabelingJobInputConfig = (output: any, context: __SerdeContext): LabelingJobInputConfig => {
  return {
    DataAttributes:
      output.DataAttributes != null ? de_LabelingJobDataAttributes(output.DataAttributes, context) : undefined,
    DataSource: output.DataSource != null ? de_LabelingJobDataSource(output.DataSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobOutput
 */
const de_LabelingJobOutput = (output: any, context: __SerdeContext): LabelingJobOutput => {
  return {
    FinalActiveLearningModelArn: __expectString(output.FinalActiveLearningModelArn),
    OutputDatasetS3Uri: __expectString(output.OutputDatasetS3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobOutputConfig
 */
const de_LabelingJobOutputConfig = (output: any, context: __SerdeContext): LabelingJobOutputConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    S3OutputPath: __expectString(output.S3OutputPath),
    SnsTopicArn: __expectString(output.SnsTopicArn),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobResourceConfig
 */
const de_LabelingJobResourceConfig = (output: any, context: __SerdeContext): LabelingJobResourceConfig => {
  return {
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobS3DataSource
 */
const de_LabelingJobS3DataSource = (output: any, context: __SerdeContext): LabelingJobS3DataSource => {
  return {
    ManifestS3Uri: __expectString(output.ManifestS3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobSnsDataSource
 */
const de_LabelingJobSnsDataSource = (output: any, context: __SerdeContext): LabelingJobSnsDataSource => {
  return {
    SnsTopicArn: __expectString(output.SnsTopicArn),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobStoppingConditions
 */
const de_LabelingJobStoppingConditions = (output: any, context: __SerdeContext): LabelingJobStoppingConditions => {
  return {
    MaxHumanLabeledObjectCount: __expectInt32(output.MaxHumanLabeledObjectCount),
    MaxPercentageOfInputDatasetLabeled: __expectInt32(output.MaxPercentageOfInputDatasetLabeled),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobSummary
 */
const de_LabelingJobSummary = (output: any, context: __SerdeContext): LabelingJobSummary => {
  return {
    AnnotationConsolidationLambdaArn: __expectString(output.AnnotationConsolidationLambdaArn),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    InputConfig: output.InputConfig != null ? de_LabelingJobInputConfig(output.InputConfig, context) : undefined,
    LabelCounters: output.LabelCounters != null ? de_LabelCounters(output.LabelCounters, context) : undefined,
    LabelingJobArn: __expectString(output.LabelingJobArn),
    LabelingJobName: __expectString(output.LabelingJobName),
    LabelingJobOutput:
      output.LabelingJobOutput != null ? de_LabelingJobOutput(output.LabelingJobOutput, context) : undefined,
    LabelingJobStatus: __expectString(output.LabelingJobStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    PreHumanTaskLambdaArn: __expectString(output.PreHumanTaskLambdaArn),
    WorkteamArn: __expectString(output.WorkteamArn),
  } as any;
};

/**
 * deserializeAws_json1_1LabelingJobSummaryList
 */
const de_LabelingJobSummaryList = (output: any, context: __SerdeContext): LabelingJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_LabelingJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1LambdaStepMetadata
 */
const de_LambdaStepMetadata = (output: any, context: __SerdeContext): LambdaStepMetadata => {
  return {
    Arn: __expectString(output.Arn),
    OutputParameters:
      output.OutputParameters != null ? de_OutputParameterList(output.OutputParameters, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1LastUpdateStatus
 */
const de_LastUpdateStatus = (output: any, context: __SerdeContext): LastUpdateStatus => {
  return {
    FailureReason: __expectString(output.FailureReason),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1LifecycleConfigArns
 */
const de_LifecycleConfigArns = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1LineageEntityParameters
 */
const de_LineageEntityParameters = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1LineageGroupSummaries
 */
const de_LineageGroupSummaries = (output: any, context: __SerdeContext): LineageGroupSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_LineageGroupSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1LineageGroupSummary
 */
const de_LineageGroupSummary = (output: any, context: __SerdeContext): LineageGroupSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LineageGroupArn: __expectString(output.LineageGroupArn),
    LineageGroupName: __expectString(output.LineageGroupName),
  } as any;
};

/**
 * deserializeAws_json1_1ListActionsResponse
 */
const de_ListActionsResponse = (output: any, context: __SerdeContext): ListActionsResponse => {
  return {
    ActionSummaries: output.ActionSummaries != null ? de_ActionSummaries(output.ActionSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListAlgorithmsOutput
 */
const de_ListAlgorithmsOutput = (output: any, context: __SerdeContext): ListAlgorithmsOutput => {
  return {
    AlgorithmSummaryList:
      output.AlgorithmSummaryList != null ? de_AlgorithmSummaryList(output.AlgorithmSummaryList, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListAliasesResponse
 */
const de_ListAliasesResponse = (output: any, context: __SerdeContext): ListAliasesResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    SageMakerImageVersionAliases:
      output.SageMakerImageVersionAliases != null
        ? de_SageMakerImageVersionAliases(output.SageMakerImageVersionAliases, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListAppImageConfigsResponse
 */
const de_ListAppImageConfigsResponse = (output: any, context: __SerdeContext): ListAppImageConfigsResponse => {
  return {
    AppImageConfigs:
      output.AppImageConfigs != null ? de_AppImageConfigList(output.AppImageConfigs, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListAppsResponse
 */
const de_ListAppsResponse = (output: any, context: __SerdeContext): ListAppsResponse => {
  return {
    Apps: output.Apps != null ? de_AppList(output.Apps, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListArtifactsResponse
 */
const de_ListArtifactsResponse = (output: any, context: __SerdeContext): ListArtifactsResponse => {
  return {
    ArtifactSummaries:
      output.ArtifactSummaries != null ? de_ArtifactSummaries(output.ArtifactSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListAssociationsResponse
 */
const de_ListAssociationsResponse = (output: any, context: __SerdeContext): ListAssociationsResponse => {
  return {
    AssociationSummaries:
      output.AssociationSummaries != null ? de_AssociationSummaries(output.AssociationSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListAutoMLJobsResponse
 */
const de_ListAutoMLJobsResponse = (output: any, context: __SerdeContext): ListAutoMLJobsResponse => {
  return {
    AutoMLJobSummaries:
      output.AutoMLJobSummaries != null ? de_AutoMLJobSummaries(output.AutoMLJobSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListCandidatesForAutoMLJobResponse
 */
const de_ListCandidatesForAutoMLJobResponse = (
  output: any,
  context: __SerdeContext
): ListCandidatesForAutoMLJobResponse => {
  return {
    Candidates: output.Candidates != null ? de_AutoMLCandidates(output.Candidates, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListCodeRepositoriesOutput
 */
const de_ListCodeRepositoriesOutput = (output: any, context: __SerdeContext): ListCodeRepositoriesOutput => {
  return {
    CodeRepositorySummaryList:
      output.CodeRepositorySummaryList != null
        ? de_CodeRepositorySummaryList(output.CodeRepositorySummaryList, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListCompilationJobsResponse
 */
const de_ListCompilationJobsResponse = (output: any, context: __SerdeContext): ListCompilationJobsResponse => {
  return {
    CompilationJobSummaries:
      output.CompilationJobSummaries != null
        ? de_CompilationJobSummaries(output.CompilationJobSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListContextsResponse
 */
const de_ListContextsResponse = (output: any, context: __SerdeContext): ListContextsResponse => {
  return {
    ContextSummaries:
      output.ContextSummaries != null ? de_ContextSummaries(output.ContextSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListDataQualityJobDefinitionsResponse
 */
const de_ListDataQualityJobDefinitionsResponse = (
  output: any,
  context: __SerdeContext
): ListDataQualityJobDefinitionsResponse => {
  return {
    JobDefinitionSummaries:
      output.JobDefinitionSummaries != null
        ? de_MonitoringJobDefinitionSummaryList(output.JobDefinitionSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListDeviceFleetsResponse
 */
const de_ListDeviceFleetsResponse = (output: any, context: __SerdeContext): ListDeviceFleetsResponse => {
  return {
    DeviceFleetSummaries:
      output.DeviceFleetSummaries != null ? de_DeviceFleetSummaries(output.DeviceFleetSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListDevicesResponse
 */
const de_ListDevicesResponse = (output: any, context: __SerdeContext): ListDevicesResponse => {
  return {
    DeviceSummaries: output.DeviceSummaries != null ? de_DeviceSummaries(output.DeviceSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListDomainsResponse
 */
const de_ListDomainsResponse = (output: any, context: __SerdeContext): ListDomainsResponse => {
  return {
    Domains: output.Domains != null ? de_DomainList(output.Domains, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListEdgeDeploymentPlansResponse
 */
const de_ListEdgeDeploymentPlansResponse = (output: any, context: __SerdeContext): ListEdgeDeploymentPlansResponse => {
  return {
    EdgeDeploymentPlanSummaries:
      output.EdgeDeploymentPlanSummaries != null
        ? de_EdgeDeploymentPlanSummaries(output.EdgeDeploymentPlanSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListEdgePackagingJobsResponse
 */
const de_ListEdgePackagingJobsResponse = (output: any, context: __SerdeContext): ListEdgePackagingJobsResponse => {
  return {
    EdgePackagingJobSummaries:
      output.EdgePackagingJobSummaries != null
        ? de_EdgePackagingJobSummaries(output.EdgePackagingJobSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListEndpointConfigsOutput
 */
const de_ListEndpointConfigsOutput = (output: any, context: __SerdeContext): ListEndpointConfigsOutput => {
  return {
    EndpointConfigs:
      output.EndpointConfigs != null ? de_EndpointConfigSummaryList(output.EndpointConfigs, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListEndpointsOutput
 */
const de_ListEndpointsOutput = (output: any, context: __SerdeContext): ListEndpointsOutput => {
  return {
    Endpoints: output.Endpoints != null ? de_EndpointSummaryList(output.Endpoints, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListExperimentsResponse
 */
const de_ListExperimentsResponse = (output: any, context: __SerdeContext): ListExperimentsResponse => {
  return {
    ExperimentSummaries:
      output.ExperimentSummaries != null ? de_ExperimentSummaries(output.ExperimentSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListFeatureGroupsResponse
 */
const de_ListFeatureGroupsResponse = (output: any, context: __SerdeContext): ListFeatureGroupsResponse => {
  return {
    FeatureGroupSummaries:
      output.FeatureGroupSummaries != null
        ? de_FeatureGroupSummaries(output.FeatureGroupSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListFlowDefinitionsResponse
 */
const de_ListFlowDefinitionsResponse = (output: any, context: __SerdeContext): ListFlowDefinitionsResponse => {
  return {
    FlowDefinitionSummaries:
      output.FlowDefinitionSummaries != null
        ? de_FlowDefinitionSummaries(output.FlowDefinitionSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListHubContentsResponse
 */
const de_ListHubContentsResponse = (output: any, context: __SerdeContext): ListHubContentsResponse => {
  return {
    HubContentSummaries:
      output.HubContentSummaries != null ? de_HubContentInfoList(output.HubContentSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListHubContentVersionsResponse
 */
const de_ListHubContentVersionsResponse = (output: any, context: __SerdeContext): ListHubContentVersionsResponse => {
  return {
    HubContentSummaries:
      output.HubContentSummaries != null ? de_HubContentInfoList(output.HubContentSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListHubsResponse
 */
const de_ListHubsResponse = (output: any, context: __SerdeContext): ListHubsResponse => {
  return {
    HubSummaries: output.HubSummaries != null ? de_HubInfoList(output.HubSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListHumanTaskUisResponse
 */
const de_ListHumanTaskUisResponse = (output: any, context: __SerdeContext): ListHumanTaskUisResponse => {
  return {
    HumanTaskUiSummaries:
      output.HumanTaskUiSummaries != null ? de_HumanTaskUiSummaries(output.HumanTaskUiSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListHyperParameterTuningJobsResponse
 */
const de_ListHyperParameterTuningJobsResponse = (
  output: any,
  context: __SerdeContext
): ListHyperParameterTuningJobsResponse => {
  return {
    HyperParameterTuningJobSummaries:
      output.HyperParameterTuningJobSummaries != null
        ? de_HyperParameterTuningJobSummaries(output.HyperParameterTuningJobSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListImagesResponse
 */
const de_ListImagesResponse = (output: any, context: __SerdeContext): ListImagesResponse => {
  return {
    Images: output.Images != null ? de_Images(output.Images, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListImageVersionsResponse
 */
const de_ListImageVersionsResponse = (output: any, context: __SerdeContext): ListImageVersionsResponse => {
  return {
    ImageVersions: output.ImageVersions != null ? de_ImageVersions(output.ImageVersions, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListInferenceExperimentsResponse
 */
const de_ListInferenceExperimentsResponse = (
  output: any,
  context: __SerdeContext
): ListInferenceExperimentsResponse => {
  return {
    InferenceExperiments:
      output.InferenceExperiments != null
        ? de_InferenceExperimentList(output.InferenceExperiments, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListInferenceRecommendationsJobsResponse
 */
const de_ListInferenceRecommendationsJobsResponse = (
  output: any,
  context: __SerdeContext
): ListInferenceRecommendationsJobsResponse => {
  return {
    InferenceRecommendationsJobs:
      output.InferenceRecommendationsJobs != null
        ? de_InferenceRecommendationsJobs(output.InferenceRecommendationsJobs, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListInferenceRecommendationsJobStepsResponse
 */
const de_ListInferenceRecommendationsJobStepsResponse = (
  output: any,
  context: __SerdeContext
): ListInferenceRecommendationsJobStepsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    Steps: output.Steps != null ? de_InferenceRecommendationsJobSteps(output.Steps, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListLabelingJobsForWorkteamResponse
 */
const de_ListLabelingJobsForWorkteamResponse = (
  output: any,
  context: __SerdeContext
): ListLabelingJobsForWorkteamResponse => {
  return {
    LabelingJobSummaryList:
      output.LabelingJobSummaryList != null
        ? de_LabelingJobForWorkteamSummaryList(output.LabelingJobSummaryList, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListLabelingJobsResponse
 */
const de_ListLabelingJobsResponse = (output: any, context: __SerdeContext): ListLabelingJobsResponse => {
  return {
    LabelingJobSummaryList:
      output.LabelingJobSummaryList != null
        ? de_LabelingJobSummaryList(output.LabelingJobSummaryList, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListLineageGroupsResponse
 */
const de_ListLineageGroupsResponse = (output: any, context: __SerdeContext): ListLineageGroupsResponse => {
  return {
    LineageGroupSummaries:
      output.LineageGroupSummaries != null
        ? de_LineageGroupSummaries(output.LineageGroupSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelBiasJobDefinitionsResponse
 */
const de_ListModelBiasJobDefinitionsResponse = (
  output: any,
  context: __SerdeContext
): ListModelBiasJobDefinitionsResponse => {
  return {
    JobDefinitionSummaries:
      output.JobDefinitionSummaries != null
        ? de_MonitoringJobDefinitionSummaryList(output.JobDefinitionSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelCardExportJobsResponse
 */
const de_ListModelCardExportJobsResponse = (output: any, context: __SerdeContext): ListModelCardExportJobsResponse => {
  return {
    ModelCardExportJobSummaries:
      output.ModelCardExportJobSummaries != null
        ? de_ModelCardExportJobSummaryList(output.ModelCardExportJobSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelCardsResponse
 */
const de_ListModelCardsResponse = (output: any, context: __SerdeContext): ListModelCardsResponse => {
  return {
    ModelCardSummaries:
      output.ModelCardSummaries != null ? de_ModelCardSummaryList(output.ModelCardSummaries, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelCardVersionsResponse
 */
const de_ListModelCardVersionsResponse = (output: any, context: __SerdeContext): ListModelCardVersionsResponse => {
  return {
    ModelCardVersionSummaryList:
      output.ModelCardVersionSummaryList != null
        ? de_ModelCardVersionSummaryList(output.ModelCardVersionSummaryList, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelExplainabilityJobDefinitionsResponse
 */
const de_ListModelExplainabilityJobDefinitionsResponse = (
  output: any,
  context: __SerdeContext
): ListModelExplainabilityJobDefinitionsResponse => {
  return {
    JobDefinitionSummaries:
      output.JobDefinitionSummaries != null
        ? de_MonitoringJobDefinitionSummaryList(output.JobDefinitionSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelMetadataResponse
 */
const de_ListModelMetadataResponse = (output: any, context: __SerdeContext): ListModelMetadataResponse => {
  return {
    ModelMetadataSummaries:
      output.ModelMetadataSummaries != null
        ? de_ModelMetadataSummaries(output.ModelMetadataSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelPackageGroupsOutput
 */
const de_ListModelPackageGroupsOutput = (output: any, context: __SerdeContext): ListModelPackageGroupsOutput => {
  return {
    ModelPackageGroupSummaryList:
      output.ModelPackageGroupSummaryList != null
        ? de_ModelPackageGroupSummaryList(output.ModelPackageGroupSummaryList, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelPackagesOutput
 */
const de_ListModelPackagesOutput = (output: any, context: __SerdeContext): ListModelPackagesOutput => {
  return {
    ModelPackageSummaryList:
      output.ModelPackageSummaryList != null
        ? de_ModelPackageSummaryList(output.ModelPackageSummaryList, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelQualityJobDefinitionsResponse
 */
const de_ListModelQualityJobDefinitionsResponse = (
  output: any,
  context: __SerdeContext
): ListModelQualityJobDefinitionsResponse => {
  return {
    JobDefinitionSummaries:
      output.JobDefinitionSummaries != null
        ? de_MonitoringJobDefinitionSummaryList(output.JobDefinitionSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListModelsOutput
 */
const de_ListModelsOutput = (output: any, context: __SerdeContext): ListModelsOutput => {
  return {
    Models: output.Models != null ? de_ModelSummaryList(output.Models, context) : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListMonitoringAlertHistoryResponse
 */
const de_ListMonitoringAlertHistoryResponse = (
  output: any,
  context: __SerdeContext
): ListMonitoringAlertHistoryResponse => {
  return {
    MonitoringAlertHistory:
      output.MonitoringAlertHistory != null
        ? de_MonitoringAlertHistoryList(output.MonitoringAlertHistory, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListMonitoringAlertsResponse
 */
const de_ListMonitoringAlertsResponse = (output: any, context: __SerdeContext): ListMonitoringAlertsResponse => {
  return {
    MonitoringAlertSummaries:
      output.MonitoringAlertSummaries != null
        ? de_MonitoringAlertSummaryList(output.MonitoringAlertSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListMonitoringExecutionsResponse
 */
const de_ListMonitoringExecutionsResponse = (
  output: any,
  context: __SerdeContext
): ListMonitoringExecutionsResponse => {
  return {
    MonitoringExecutionSummaries:
      output.MonitoringExecutionSummaries != null
        ? de_MonitoringExecutionSummaryList(output.MonitoringExecutionSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListMonitoringSchedulesResponse
 */
const de_ListMonitoringSchedulesResponse = (output: any, context: __SerdeContext): ListMonitoringSchedulesResponse => {
  return {
    MonitoringScheduleSummaries:
      output.MonitoringScheduleSummaries != null
        ? de_MonitoringScheduleSummaryList(output.MonitoringScheduleSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListNotebookInstanceLifecycleConfigsOutput
 */
const de_ListNotebookInstanceLifecycleConfigsOutput = (
  output: any,
  context: __SerdeContext
): ListNotebookInstanceLifecycleConfigsOutput => {
  return {
    NextToken: __expectString(output.NextToken),
    NotebookInstanceLifecycleConfigs:
      output.NotebookInstanceLifecycleConfigs != null
        ? de_NotebookInstanceLifecycleConfigSummaryList(output.NotebookInstanceLifecycleConfigs, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListNotebookInstancesOutput
 */
const de_ListNotebookInstancesOutput = (output: any, context: __SerdeContext): ListNotebookInstancesOutput => {
  return {
    NextToken: __expectString(output.NextToken),
    NotebookInstances:
      output.NotebookInstances != null ? de_NotebookInstanceSummaryList(output.NotebookInstances, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListPipelineExecutionsResponse
 */
const de_ListPipelineExecutionsResponse = (output: any, context: __SerdeContext): ListPipelineExecutionsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    PipelineExecutionSummaries:
      output.PipelineExecutionSummaries != null
        ? de_PipelineExecutionSummaryList(output.PipelineExecutionSummaries, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListPipelineExecutionStepsResponse
 */
const de_ListPipelineExecutionStepsResponse = (
  output: any,
  context: __SerdeContext
): ListPipelineExecutionStepsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    PipelineExecutionSteps:
      output.PipelineExecutionSteps != null
        ? de_PipelineExecutionStepList(output.PipelineExecutionSteps, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListPipelineParametersForExecutionResponse
 */
const de_ListPipelineParametersForExecutionResponse = (
  output: any,
  context: __SerdeContext
): ListPipelineParametersForExecutionResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    PipelineParameters:
      output.PipelineParameters != null ? de_ParameterList(output.PipelineParameters, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListPipelinesResponse
 */
const de_ListPipelinesResponse = (output: any, context: __SerdeContext): ListPipelinesResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    PipelineSummaries:
      output.PipelineSummaries != null ? de_PipelineSummaryList(output.PipelineSummaries, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListProcessingJobsResponse
 */
const de_ListProcessingJobsResponse = (output: any, context: __SerdeContext): ListProcessingJobsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    ProcessingJobSummaries:
      output.ProcessingJobSummaries != null
        ? de_ProcessingJobSummaries(output.ProcessingJobSummaries, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListProjectsOutput
 */
const de_ListProjectsOutput = (output: any, context: __SerdeContext): ListProjectsOutput => {
  return {
    NextToken: __expectString(output.NextToken),
    ProjectSummaryList:
      output.ProjectSummaryList != null ? de_ProjectSummaryList(output.ProjectSummaryList, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListSpacesResponse
 */
const de_ListSpacesResponse = (output: any, context: __SerdeContext): ListSpacesResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    Spaces: output.Spaces != null ? de_SpaceList(output.Spaces, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListStageDevicesResponse
 */
const de_ListStageDevicesResponse = (output: any, context: __SerdeContext): ListStageDevicesResponse => {
  return {
    DeviceDeploymentSummaries:
      output.DeviceDeploymentSummaries != null
        ? de_DeviceDeploymentSummaries(output.DeviceDeploymentSummaries, context)
        : undefined,
    NextToken: __expectString(output.NextToken),
  } as any;
};

/**
 * deserializeAws_json1_1ListStudioLifecycleConfigsResponse
 */
const de_ListStudioLifecycleConfigsResponse = (
  output: any,
  context: __SerdeContext
): ListStudioLifecycleConfigsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    StudioLifecycleConfigs:
      output.StudioLifecycleConfigs != null
        ? de_StudioLifecycleConfigsList(output.StudioLifecycleConfigs, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListSubscribedWorkteamsResponse
 */
const de_ListSubscribedWorkteamsResponse = (output: any, context: __SerdeContext): ListSubscribedWorkteamsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    SubscribedWorkteams:
      output.SubscribedWorkteams != null ? de_SubscribedWorkteams(output.SubscribedWorkteams, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListTagsOutput
 */
const de_ListTagsOutput = (output: any, context: __SerdeContext): ListTagsOutput => {
  return {
    NextToken: __expectString(output.NextToken),
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListTrainingJobsForHyperParameterTuningJobResponse
 */
const de_ListTrainingJobsForHyperParameterTuningJobResponse = (
  output: any,
  context: __SerdeContext
): ListTrainingJobsForHyperParameterTuningJobResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    TrainingJobSummaries:
      output.TrainingJobSummaries != null
        ? de_HyperParameterTrainingJobSummaries(output.TrainingJobSummaries, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListTrainingJobsResponse
 */
const de_ListTrainingJobsResponse = (output: any, context: __SerdeContext): ListTrainingJobsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    TrainingJobSummaries:
      output.TrainingJobSummaries != null ? de_TrainingJobSummaries(output.TrainingJobSummaries, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListTransformJobsResponse
 */
const de_ListTransformJobsResponse = (output: any, context: __SerdeContext): ListTransformJobsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    TransformJobSummaries:
      output.TransformJobSummaries != null
        ? de_TransformJobSummaries(output.TransformJobSummaries, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListTrialComponentsResponse
 */
const de_ListTrialComponentsResponse = (output: any, context: __SerdeContext): ListTrialComponentsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    TrialComponentSummaries:
      output.TrialComponentSummaries != null
        ? de_TrialComponentSummaries(output.TrialComponentSummaries, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListTrialsResponse
 */
const de_ListTrialsResponse = (output: any, context: __SerdeContext): ListTrialsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    TrialSummaries: output.TrialSummaries != null ? de_TrialSummaries(output.TrialSummaries, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListUserProfilesResponse
 */
const de_ListUserProfilesResponse = (output: any, context: __SerdeContext): ListUserProfilesResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    UserProfiles: output.UserProfiles != null ? de_UserProfileList(output.UserProfiles, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListWorkforcesResponse
 */
const de_ListWorkforcesResponse = (output: any, context: __SerdeContext): ListWorkforcesResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    Workforces: output.Workforces != null ? de_Workforces(output.Workforces, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ListWorkteamsResponse
 */
const de_ListWorkteamsResponse = (output: any, context: __SerdeContext): ListWorkteamsResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    Workteams: output.Workteams != null ? de_Workteams(output.Workteams, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MemberDefinition
 */
const de_MemberDefinition = (output: any, context: __SerdeContext): MemberDefinition => {
  return {
    CognitoMemberDefinition:
      output.CognitoMemberDefinition != null
        ? de_CognitoMemberDefinition(output.CognitoMemberDefinition, context)
        : undefined,
    OidcMemberDefinition:
      output.OidcMemberDefinition != null ? de_OidcMemberDefinition(output.OidcMemberDefinition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MemberDefinitions
 */
const de_MemberDefinitions = (output: any, context: __SerdeContext): MemberDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MemberDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MetadataProperties
 */
const de_MetadataProperties = (output: any, context: __SerdeContext): MetadataProperties => {
  return {
    CommitId: __expectString(output.CommitId),
    GeneratedBy: __expectString(output.GeneratedBy),
    ProjectId: __expectString(output.ProjectId),
    Repository: __expectString(output.Repository),
  } as any;
};

/**
 * deserializeAws_json1_1MetricData
 */
const de_MetricData = (output: any, context: __SerdeContext): MetricData => {
  return {
    MetricName: __expectString(output.MetricName),
    Timestamp:
      output.Timestamp != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.Timestamp))) : undefined,
    Value: __limitedParseFloat32(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1MetricDataList
 */
const de_MetricDataList = (output: any, context: __SerdeContext): MetricDatum[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MetricDatum(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MetricDatum
 */
const de_MetricDatum = (output: any, context: __SerdeContext): MetricDatum => {
  return {
    MetricName: __expectString(output.MetricName),
    Set: __expectString(output.Set),
    StandardMetricName: __expectString(output.StandardMetricName),
    Value: __limitedParseFloat32(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1MetricDefinition
 */
const de_MetricDefinition = (output: any, context: __SerdeContext): MetricDefinition => {
  return {
    Name: __expectString(output.Name),
    Regex: __expectString(output.Regex),
  } as any;
};

/**
 * deserializeAws_json1_1MetricDefinitionList
 */
const de_MetricDefinitionList = (output: any, context: __SerdeContext): MetricDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MetricDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MetricsSource
 */
const de_MetricsSource = (output: any, context: __SerdeContext): MetricsSource => {
  return {
    ContentDigest: __expectString(output.ContentDigest),
    ContentType: __expectString(output.ContentType),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1Model
 */
const de_Model = (output: any, context: __SerdeContext): Model => {
  return {
    Containers: output.Containers != null ? de_ContainerDefinitionList(output.Containers, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EnableNetworkIsolation: __expectBoolean(output.EnableNetworkIsolation),
    ExecutionRoleArn: __expectString(output.ExecutionRoleArn),
    InferenceExecutionConfig:
      output.InferenceExecutionConfig != null
        ? de_InferenceExecutionConfig(output.InferenceExecutionConfig, context)
        : undefined,
    ModelArn: __expectString(output.ModelArn),
    ModelName: __expectString(output.ModelName),
    PrimaryContainer:
      output.PrimaryContainer != null ? de_ContainerDefinition(output.PrimaryContainer, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelArtifacts
 */
const de_ModelArtifacts = (output: any, context: __SerdeContext): ModelArtifacts => {
  return {
    S3ModelArtifacts: __expectString(output.S3ModelArtifacts),
  } as any;
};

/**
 * deserializeAws_json1_1ModelBiasAppSpecification
 */
const de_ModelBiasAppSpecification = (output: any, context: __SerdeContext): ModelBiasAppSpecification => {
  return {
    ConfigUri: __expectString(output.ConfigUri),
    Environment: output.Environment != null ? de_MonitoringEnvironmentMap(output.Environment, context) : undefined,
    ImageUri: __expectString(output.ImageUri),
  } as any;
};

/**
 * deserializeAws_json1_1ModelBiasBaselineConfig
 */
const de_ModelBiasBaselineConfig = (output: any, context: __SerdeContext): ModelBiasBaselineConfig => {
  return {
    BaseliningJobName: __expectString(output.BaseliningJobName),
    ConstraintsResource:
      output.ConstraintsResource != null
        ? de_MonitoringConstraintsResource(output.ConstraintsResource, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelBiasJobInput
 */
const de_ModelBiasJobInput = (output: any, context: __SerdeContext): ModelBiasJobInput => {
  return {
    BatchTransformInput:
      output.BatchTransformInput != null ? de_BatchTransformInput(output.BatchTransformInput, context) : undefined,
    EndpointInput: output.EndpointInput != null ? de_EndpointInput(output.EndpointInput, context) : undefined,
    GroundTruthS3Input:
      output.GroundTruthS3Input != null
        ? de_MonitoringGroundTruthS3Input(output.GroundTruthS3Input, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelCard
 */
const de_ModelCard = (output: any, context: __SerdeContext): ModelCard => {
  return {
    Content: __expectString(output.Content),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelCardArn: __expectString(output.ModelCardArn),
    ModelCardName: __expectString(output.ModelCardName),
    ModelCardStatus: __expectString(output.ModelCardStatus),
    ModelCardVersion: __expectInt32(output.ModelCardVersion),
    ModelId: __expectString(output.ModelId),
    RiskRating: __expectString(output.RiskRating),
    SecurityConfig:
      output.SecurityConfig != null ? de_ModelCardSecurityConfig(output.SecurityConfig, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelCardExportArtifacts
 */
const de_ModelCardExportArtifacts = (output: any, context: __SerdeContext): ModelCardExportArtifacts => {
  return {
    S3ExportArtifacts: __expectString(output.S3ExportArtifacts),
  } as any;
};

/**
 * deserializeAws_json1_1ModelCardExportJobSummary
 */
const de_ModelCardExportJobSummary = (output: any, context: __SerdeContext): ModelCardExportJobSummary => {
  return {
    CreatedAt:
      output.CreatedAt != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedAt))) : undefined,
    LastModifiedAt:
      output.LastModifiedAt != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedAt)))
        : undefined,
    ModelCardExportJobArn: __expectString(output.ModelCardExportJobArn),
    ModelCardExportJobName: __expectString(output.ModelCardExportJobName),
    ModelCardName: __expectString(output.ModelCardName),
    ModelCardVersion: __expectInt32(output.ModelCardVersion),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1ModelCardExportJobSummaryList
 */
const de_ModelCardExportJobSummaryList = (output: any, context: __SerdeContext): ModelCardExportJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelCardExportJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelCardExportOutputConfig
 */
const de_ModelCardExportOutputConfig = (output: any, context: __SerdeContext): ModelCardExportOutputConfig => {
  return {
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1ModelCardSecurityConfig
 */
const de_ModelCardSecurityConfig = (output: any, context: __SerdeContext): ModelCardSecurityConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_json1_1ModelCardSummary
 */
const de_ModelCardSummary = (output: any, context: __SerdeContext): ModelCardSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelCardArn: __expectString(output.ModelCardArn),
    ModelCardName: __expectString(output.ModelCardName),
    ModelCardStatus: __expectString(output.ModelCardStatus),
  } as any;
};

/**
 * deserializeAws_json1_1ModelCardSummaryList
 */
const de_ModelCardSummaryList = (output: any, context: __SerdeContext): ModelCardSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelCardSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelCardVersionSummary
 */
const de_ModelCardVersionSummary = (output: any, context: __SerdeContext): ModelCardVersionSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelCardArn: __expectString(output.ModelCardArn),
    ModelCardName: __expectString(output.ModelCardName),
    ModelCardStatus: __expectString(output.ModelCardStatus),
    ModelCardVersion: __expectInt32(output.ModelCardVersion),
  } as any;
};

/**
 * deserializeAws_json1_1ModelCardVersionSummaryList
 */
const de_ModelCardVersionSummaryList = (output: any, context: __SerdeContext): ModelCardVersionSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelCardVersionSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelClientConfig
 */
const de_ModelClientConfig = (output: any, context: __SerdeContext): ModelClientConfig => {
  return {
    InvocationsMaxRetries: __expectInt32(output.InvocationsMaxRetries),
    InvocationsTimeoutInSeconds: __expectInt32(output.InvocationsTimeoutInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1ModelConfiguration
 */
const de_ModelConfiguration = (output: any, context: __SerdeContext): ModelConfiguration => {
  return {
    CompilationJobName: __expectString(output.CompilationJobName),
    EnvironmentParameters:
      output.EnvironmentParameters != null
        ? de_EnvironmentParameters(output.EnvironmentParameters, context)
        : undefined,
    InferenceSpecificationName: __expectString(output.InferenceSpecificationName),
  } as any;
};

/**
 * deserializeAws_json1_1ModelDashboardEndpoint
 */
const de_ModelDashboardEndpoint = (output: any, context: __SerdeContext): ModelDashboardEndpoint => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointArn: __expectString(output.EndpointArn),
    EndpointName: __expectString(output.EndpointName),
    EndpointStatus: __expectString(output.EndpointStatus),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelDashboardEndpoints
 */
const de_ModelDashboardEndpoints = (output: any, context: __SerdeContext): ModelDashboardEndpoint[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelDashboardEndpoint(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelDashboardIndicatorAction
 */
const de_ModelDashboardIndicatorAction = (output: any, context: __SerdeContext): ModelDashboardIndicatorAction => {
  return {
    Enabled: __expectBoolean(output.Enabled),
  } as any;
};

/**
 * deserializeAws_json1_1ModelDashboardModel
 */
const de_ModelDashboardModel = (output: any, context: __SerdeContext): ModelDashboardModel => {
  return {
    Endpoints: output.Endpoints != null ? de_ModelDashboardEndpoints(output.Endpoints, context) : undefined,
    LastBatchTransformJob:
      output.LastBatchTransformJob != null ? de_TransformJob(output.LastBatchTransformJob, context) : undefined,
    Model: output.Model != null ? de_Model(output.Model, context) : undefined,
    ModelCard: output.ModelCard != null ? de_ModelDashboardModelCard(output.ModelCard, context) : undefined,
    MonitoringSchedules:
      output.MonitoringSchedules != null
        ? de_ModelDashboardMonitoringSchedules(output.MonitoringSchedules, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelDashboardModelCard
 */
const de_ModelDashboardModelCard = (output: any, context: __SerdeContext): ModelDashboardModelCard => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelCardArn: __expectString(output.ModelCardArn),
    ModelCardName: __expectString(output.ModelCardName),
    ModelCardStatus: __expectString(output.ModelCardStatus),
    ModelCardVersion: __expectInt32(output.ModelCardVersion),
    ModelId: __expectString(output.ModelId),
    RiskRating: __expectString(output.RiskRating),
    SecurityConfig:
      output.SecurityConfig != null ? de_ModelCardSecurityConfig(output.SecurityConfig, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelDashboardMonitoringSchedule
 */
const de_ModelDashboardMonitoringSchedule = (
  output: any,
  context: __SerdeContext
): ModelDashboardMonitoringSchedule => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointName: __expectString(output.EndpointName),
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LastMonitoringExecutionSummary:
      output.LastMonitoringExecutionSummary != null
        ? de_MonitoringExecutionSummary(output.LastMonitoringExecutionSummary, context)
        : undefined,
    MonitoringAlertSummaries:
      output.MonitoringAlertSummaries != null
        ? de_MonitoringAlertSummaryList(output.MonitoringAlertSummaries, context)
        : undefined,
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
    MonitoringScheduleConfig:
      output.MonitoringScheduleConfig != null
        ? de_MonitoringScheduleConfig(output.MonitoringScheduleConfig, context)
        : undefined,
    MonitoringScheduleName: __expectString(output.MonitoringScheduleName),
    MonitoringScheduleStatus: __expectString(output.MonitoringScheduleStatus),
    MonitoringType: __expectString(output.MonitoringType),
  } as any;
};

/**
 * deserializeAws_json1_1ModelDashboardMonitoringSchedules
 */
const de_ModelDashboardMonitoringSchedules = (
  output: any,
  context: __SerdeContext
): ModelDashboardMonitoringSchedule[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelDashboardMonitoringSchedule(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelDataQuality
 */
const de_ModelDataQuality = (output: any, context: __SerdeContext): ModelDataQuality => {
  return {
    Constraints: output.Constraints != null ? de_MetricsSource(output.Constraints, context) : undefined,
    Statistics: output.Statistics != null ? de_MetricsSource(output.Statistics, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelDeployConfig
 */
const de_ModelDeployConfig = (output: any, context: __SerdeContext): ModelDeployConfig => {
  return {
    AutoGenerateEndpointName: __expectBoolean(output.AutoGenerateEndpointName),
    EndpointName: __expectString(output.EndpointName),
  } as any;
};

/**
 * deserializeAws_json1_1ModelDeployResult
 */
const de_ModelDeployResult = (output: any, context: __SerdeContext): ModelDeployResult => {
  return {
    EndpointName: __expectString(output.EndpointName),
  } as any;
};

/**
 * deserializeAws_json1_1ModelDigests
 */
const de_ModelDigests = (output: any, context: __SerdeContext): ModelDigests => {
  return {
    ArtifactDigest: __expectString(output.ArtifactDigest),
  } as any;
};

/**
 * deserializeAws_json1_1ModelExplainabilityAppSpecification
 */
const de_ModelExplainabilityAppSpecification = (
  output: any,
  context: __SerdeContext
): ModelExplainabilityAppSpecification => {
  return {
    ConfigUri: __expectString(output.ConfigUri),
    Environment: output.Environment != null ? de_MonitoringEnvironmentMap(output.Environment, context) : undefined,
    ImageUri: __expectString(output.ImageUri),
  } as any;
};

/**
 * deserializeAws_json1_1ModelExplainabilityBaselineConfig
 */
const de_ModelExplainabilityBaselineConfig = (
  output: any,
  context: __SerdeContext
): ModelExplainabilityBaselineConfig => {
  return {
    BaseliningJobName: __expectString(output.BaseliningJobName),
    ConstraintsResource:
      output.ConstraintsResource != null
        ? de_MonitoringConstraintsResource(output.ConstraintsResource, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelExplainabilityJobInput
 */
const de_ModelExplainabilityJobInput = (output: any, context: __SerdeContext): ModelExplainabilityJobInput => {
  return {
    BatchTransformInput:
      output.BatchTransformInput != null ? de_BatchTransformInput(output.BatchTransformInput, context) : undefined,
    EndpointInput: output.EndpointInput != null ? de_EndpointInput(output.EndpointInput, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelInfrastructureConfig
 */
const de_ModelInfrastructureConfig = (output: any, context: __SerdeContext): ModelInfrastructureConfig => {
  return {
    InfrastructureType: __expectString(output.InfrastructureType),
    RealTimeInferenceConfig:
      output.RealTimeInferenceConfig != null
        ? de_RealTimeInferenceConfig(output.RealTimeInferenceConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelInput
 */
const de_ModelInput = (output: any, context: __SerdeContext): ModelInput => {
  return {
    DataInputConfig: __expectString(output.DataInputConfig),
  } as any;
};

/**
 * deserializeAws_json1_1ModelLatencyThreshold
 */
const de_ModelLatencyThreshold = (output: any, context: __SerdeContext): ModelLatencyThreshold => {
  return {
    Percentile: __expectString(output.Percentile),
    ValueInMilliseconds: __expectInt32(output.ValueInMilliseconds),
  } as any;
};

/**
 * deserializeAws_json1_1ModelLatencyThresholds
 */
const de_ModelLatencyThresholds = (output: any, context: __SerdeContext): ModelLatencyThreshold[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelLatencyThreshold(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelMetadataSummaries
 */
const de_ModelMetadataSummaries = (output: any, context: __SerdeContext): ModelMetadataSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelMetadataSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelMetadataSummary
 */
const de_ModelMetadataSummary = (output: any, context: __SerdeContext): ModelMetadataSummary => {
  return {
    Domain: __expectString(output.Domain),
    Framework: __expectString(output.Framework),
    FrameworkVersion: __expectString(output.FrameworkVersion),
    Model: __expectString(output.Model),
    Task: __expectString(output.Task),
  } as any;
};

/**
 * deserializeAws_json1_1ModelMetrics
 */
const de_ModelMetrics = (output: any, context: __SerdeContext): ModelMetrics => {
  return {
    Bias: output.Bias != null ? de_Bias(output.Bias, context) : undefined,
    Explainability: output.Explainability != null ? de_Explainability(output.Explainability, context) : undefined,
    ModelDataQuality:
      output.ModelDataQuality != null ? de_ModelDataQuality(output.ModelDataQuality, context) : undefined,
    ModelQuality: output.ModelQuality != null ? de_ModelQuality(output.ModelQuality, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackage
 */
const de_ModelPackage = (output: any, context: __SerdeContext): ModelPackage => {
  return {
    AdditionalInferenceSpecifications:
      output.AdditionalInferenceSpecifications != null
        ? de_AdditionalInferenceSpecifications(output.AdditionalInferenceSpecifications, context)
        : undefined,
    ApprovalDescription: __expectString(output.ApprovalDescription),
    CertifyForMarketplace: __expectBoolean(output.CertifyForMarketplace),
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    CustomerMetadataProperties:
      output.CustomerMetadataProperties != null
        ? de_CustomerMetadataMap(output.CustomerMetadataProperties, context)
        : undefined,
    Domain: __expectString(output.Domain),
    DriftCheckBaselines:
      output.DriftCheckBaselines != null ? de_DriftCheckBaselines(output.DriftCheckBaselines, context) : undefined,
    InferenceSpecification:
      output.InferenceSpecification != null
        ? de_InferenceSpecification(output.InferenceSpecification, context)
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    ModelApprovalStatus: __expectString(output.ModelApprovalStatus),
    ModelMetrics: output.ModelMetrics != null ? de_ModelMetrics(output.ModelMetrics, context) : undefined,
    ModelPackageArn: __expectString(output.ModelPackageArn),
    ModelPackageDescription: __expectString(output.ModelPackageDescription),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    ModelPackageName: __expectString(output.ModelPackageName),
    ModelPackageStatus: __expectString(output.ModelPackageStatus),
    ModelPackageStatusDetails:
      output.ModelPackageStatusDetails != null
        ? de_ModelPackageStatusDetails(output.ModelPackageStatusDetails, context)
        : undefined,
    ModelPackageVersion: __expectInt32(output.ModelPackageVersion),
    SamplePayloadUrl: __expectString(output.SamplePayloadUrl),
    SourceAlgorithmSpecification:
      output.SourceAlgorithmSpecification != null
        ? de_SourceAlgorithmSpecification(output.SourceAlgorithmSpecification, context)
        : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    Task: __expectString(output.Task),
    ValidationSpecification:
      output.ValidationSpecification != null
        ? de_ModelPackageValidationSpecification(output.ValidationSpecification, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageContainerDefinition
 */
const de_ModelPackageContainerDefinition = (output: any, context: __SerdeContext): ModelPackageContainerDefinition => {
  return {
    ContainerHostname: __expectString(output.ContainerHostname),
    Environment: output.Environment != null ? de_EnvironmentMap(output.Environment, context) : undefined,
    Framework: __expectString(output.Framework),
    FrameworkVersion: __expectString(output.FrameworkVersion),
    Image: __expectString(output.Image),
    ImageDigest: __expectString(output.ImageDigest),
    ModelDataUrl: __expectString(output.ModelDataUrl),
    ModelInput: output.ModelInput != null ? de_ModelInput(output.ModelInput, context) : undefined,
    NearestModelName: __expectString(output.NearestModelName),
    ProductId: __expectString(output.ProductId),
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageContainerDefinitionList
 */
const de_ModelPackageContainerDefinitionList = (
  output: any,
  context: __SerdeContext
): ModelPackageContainerDefinition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelPackageContainerDefinition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelPackageGroup
 */
const de_ModelPackageGroup = (output: any, context: __SerdeContext): ModelPackageGroup => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    ModelPackageGroupArn: __expectString(output.ModelPackageGroupArn),
    ModelPackageGroupDescription: __expectString(output.ModelPackageGroupDescription),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    ModelPackageGroupStatus: __expectString(output.ModelPackageGroupStatus),
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageGroupSummary
 */
const de_ModelPackageGroupSummary = (output: any, context: __SerdeContext): ModelPackageGroupSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    ModelPackageGroupArn: __expectString(output.ModelPackageGroupArn),
    ModelPackageGroupDescription: __expectString(output.ModelPackageGroupDescription),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    ModelPackageGroupStatus: __expectString(output.ModelPackageGroupStatus),
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageGroupSummaryList
 */
const de_ModelPackageGroupSummaryList = (output: any, context: __SerdeContext): ModelPackageGroupSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelPackageGroupSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelPackageStatusDetails
 */
const de_ModelPackageStatusDetails = (output: any, context: __SerdeContext): ModelPackageStatusDetails => {
  return {
    ImageScanStatuses:
      output.ImageScanStatuses != null ? de_ModelPackageStatusItemList(output.ImageScanStatuses, context) : undefined,
    ValidationStatuses:
      output.ValidationStatuses != null ? de_ModelPackageStatusItemList(output.ValidationStatuses, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageStatusItem
 */
const de_ModelPackageStatusItem = (output: any, context: __SerdeContext): ModelPackageStatusItem => {
  return {
    FailureReason: __expectString(output.FailureReason),
    Name: __expectString(output.Name),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageStatusItemList
 */
const de_ModelPackageStatusItemList = (output: any, context: __SerdeContext): ModelPackageStatusItem[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelPackageStatusItem(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelPackageSummaries
 */
const de_ModelPackageSummaries = (
  output: any,
  context: __SerdeContext
): Record<string, BatchDescribeModelPackageSummary> => {
  return Object.entries(output).reduce(
    (acc: Record<string, BatchDescribeModelPackageSummary>, [key, value]: [string, any]) => {
      if (value === null) {
        return acc;
      }
      acc[key] = de_BatchDescribeModelPackageSummary(value, context);
      return acc;
    },
    {}
  );
};

/**
 * deserializeAws_json1_1ModelPackageSummary
 */
const de_ModelPackageSummary = (output: any, context: __SerdeContext): ModelPackageSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    ModelApprovalStatus: __expectString(output.ModelApprovalStatus),
    ModelPackageArn: __expectString(output.ModelPackageArn),
    ModelPackageDescription: __expectString(output.ModelPackageDescription),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    ModelPackageName: __expectString(output.ModelPackageName),
    ModelPackageStatus: __expectString(output.ModelPackageStatus),
    ModelPackageVersion: __expectInt32(output.ModelPackageVersion),
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageSummaryList
 */
const de_ModelPackageSummaryList = (output: any, context: __SerdeContext): ModelPackageSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelPackageSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelPackageValidationProfile
 */
const de_ModelPackageValidationProfile = (output: any, context: __SerdeContext): ModelPackageValidationProfile => {
  return {
    ProfileName: __expectString(output.ProfileName),
    TransformJobDefinition:
      output.TransformJobDefinition != null
        ? de_TransformJobDefinition(output.TransformJobDefinition, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelPackageValidationProfiles
 */
const de_ModelPackageValidationProfiles = (output: any, context: __SerdeContext): ModelPackageValidationProfile[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelPackageValidationProfile(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelPackageValidationSpecification
 */
const de_ModelPackageValidationSpecification = (
  output: any,
  context: __SerdeContext
): ModelPackageValidationSpecification => {
  return {
    ValidationProfiles:
      output.ValidationProfiles != null
        ? de_ModelPackageValidationProfiles(output.ValidationProfiles, context)
        : undefined,
    ValidationRole: __expectString(output.ValidationRole),
  } as any;
};

/**
 * deserializeAws_json1_1ModelQuality
 */
const de_ModelQuality = (output: any, context: __SerdeContext): ModelQuality => {
  return {
    Constraints: output.Constraints != null ? de_MetricsSource(output.Constraints, context) : undefined,
    Statistics: output.Statistics != null ? de_MetricsSource(output.Statistics, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelQualityAppSpecification
 */
const de_ModelQualityAppSpecification = (output: any, context: __SerdeContext): ModelQualityAppSpecification => {
  return {
    ContainerArguments:
      output.ContainerArguments != null
        ? de_MonitoringContainerArguments(output.ContainerArguments, context)
        : undefined,
    ContainerEntrypoint:
      output.ContainerEntrypoint != null ? de_ContainerEntrypoint(output.ContainerEntrypoint, context) : undefined,
    Environment: output.Environment != null ? de_MonitoringEnvironmentMap(output.Environment, context) : undefined,
    ImageUri: __expectString(output.ImageUri),
    PostAnalyticsProcessorSourceUri: __expectString(output.PostAnalyticsProcessorSourceUri),
    ProblemType: __expectString(output.ProblemType),
    RecordPreprocessorSourceUri: __expectString(output.RecordPreprocessorSourceUri),
  } as any;
};

/**
 * deserializeAws_json1_1ModelQualityBaselineConfig
 */
const de_ModelQualityBaselineConfig = (output: any, context: __SerdeContext): ModelQualityBaselineConfig => {
  return {
    BaseliningJobName: __expectString(output.BaseliningJobName),
    ConstraintsResource:
      output.ConstraintsResource != null
        ? de_MonitoringConstraintsResource(output.ConstraintsResource, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelQualityJobInput
 */
const de_ModelQualityJobInput = (output: any, context: __SerdeContext): ModelQualityJobInput => {
  return {
    BatchTransformInput:
      output.BatchTransformInput != null ? de_BatchTransformInput(output.BatchTransformInput, context) : undefined,
    EndpointInput: output.EndpointInput != null ? de_EndpointInput(output.EndpointInput, context) : undefined,
    GroundTruthS3Input:
      output.GroundTruthS3Input != null
        ? de_MonitoringGroundTruthS3Input(output.GroundTruthS3Input, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ModelStepMetadata
 */
const de_ModelStepMetadata = (output: any, context: __SerdeContext): ModelStepMetadata => {
  return {
    Arn: __expectString(output.Arn),
  } as any;
};

/**
 * deserializeAws_json1_1ModelSummary
 */
const de_ModelSummary = (output: any, context: __SerdeContext): ModelSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    ModelArn: __expectString(output.ModelArn),
    ModelName: __expectString(output.ModelName),
  } as any;
};

/**
 * deserializeAws_json1_1ModelSummaryList
 */
const de_ModelSummaryList = (output: any, context: __SerdeContext): ModelSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ModelVariantConfigSummary
 */
const de_ModelVariantConfigSummary = (output: any, context: __SerdeContext): ModelVariantConfigSummary => {
  return {
    InfrastructureConfig:
      output.InfrastructureConfig != null
        ? de_ModelInfrastructureConfig(output.InfrastructureConfig, context)
        : undefined,
    ModelName: __expectString(output.ModelName),
    Status: __expectString(output.Status),
    VariantName: __expectString(output.VariantName),
  } as any;
};

/**
 * deserializeAws_json1_1ModelVariantConfigSummaryList
 */
const de_ModelVariantConfigSummaryList = (output: any, context: __SerdeContext): ModelVariantConfigSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ModelVariantConfigSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringAlertActions
 */
const de_MonitoringAlertActions = (output: any, context: __SerdeContext): MonitoringAlertActions => {
  return {
    ModelDashboardIndicator:
      output.ModelDashboardIndicator != null
        ? de_ModelDashboardIndicatorAction(output.ModelDashboardIndicator, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringAlertHistoryList
 */
const de_MonitoringAlertHistoryList = (output: any, context: __SerdeContext): MonitoringAlertHistorySummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringAlertHistorySummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringAlertHistorySummary
 */
const de_MonitoringAlertHistorySummary = (output: any, context: __SerdeContext): MonitoringAlertHistorySummary => {
  return {
    AlertStatus: __expectString(output.AlertStatus),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    MonitoringAlertName: __expectString(output.MonitoringAlertName),
    MonitoringScheduleName: __expectString(output.MonitoringScheduleName),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringAlertSummary
 */
const de_MonitoringAlertSummary = (output: any, context: __SerdeContext): MonitoringAlertSummary => {
  return {
    Actions: output.Actions != null ? de_MonitoringAlertActions(output.Actions, context) : undefined,
    AlertStatus: __expectString(output.AlertStatus),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DatapointsToAlert: __expectInt32(output.DatapointsToAlert),
    EvaluationPeriod: __expectInt32(output.EvaluationPeriod),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MonitoringAlertName: __expectString(output.MonitoringAlertName),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringAlertSummaryList
 */
const de_MonitoringAlertSummaryList = (output: any, context: __SerdeContext): MonitoringAlertSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringAlertSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringAppSpecification
 */
const de_MonitoringAppSpecification = (output: any, context: __SerdeContext): MonitoringAppSpecification => {
  return {
    ContainerArguments:
      output.ContainerArguments != null
        ? de_MonitoringContainerArguments(output.ContainerArguments, context)
        : undefined,
    ContainerEntrypoint:
      output.ContainerEntrypoint != null ? de_ContainerEntrypoint(output.ContainerEntrypoint, context) : undefined,
    ImageUri: __expectString(output.ImageUri),
    PostAnalyticsProcessorSourceUri: __expectString(output.PostAnalyticsProcessorSourceUri),
    RecordPreprocessorSourceUri: __expectString(output.RecordPreprocessorSourceUri),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringBaselineConfig
 */
const de_MonitoringBaselineConfig = (output: any, context: __SerdeContext): MonitoringBaselineConfig => {
  return {
    BaseliningJobName: __expectString(output.BaseliningJobName),
    ConstraintsResource:
      output.ConstraintsResource != null
        ? de_MonitoringConstraintsResource(output.ConstraintsResource, context)
        : undefined,
    StatisticsResource:
      output.StatisticsResource != null
        ? de_MonitoringStatisticsResource(output.StatisticsResource, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringClusterConfig
 */
const de_MonitoringClusterConfig = (output: any, context: __SerdeContext): MonitoringClusterConfig => {
  return {
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringConstraintsResource
 */
const de_MonitoringConstraintsResource = (output: any, context: __SerdeContext): MonitoringConstraintsResource => {
  return {
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringContainerArguments
 */
const de_MonitoringContainerArguments = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringCsvDatasetFormat
 */
const de_MonitoringCsvDatasetFormat = (output: any, context: __SerdeContext): MonitoringCsvDatasetFormat => {
  return {
    Header: __expectBoolean(output.Header),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringDatasetFormat
 */
const de_MonitoringDatasetFormat = (output: any, context: __SerdeContext): MonitoringDatasetFormat => {
  return {
    Csv: output.Csv != null ? de_MonitoringCsvDatasetFormat(output.Csv, context) : undefined,
    Json: output.Json != null ? de_MonitoringJsonDatasetFormat(output.Json, context) : undefined,
    Parquet: output.Parquet != null ? de_MonitoringParquetDatasetFormat(output.Parquet, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringEnvironmentMap
 */
const de_MonitoringEnvironmentMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1MonitoringExecutionSummary
 */
const de_MonitoringExecutionSummary = (output: any, context: __SerdeContext): MonitoringExecutionSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointName: __expectString(output.EndpointName),
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MonitoringExecutionStatus: __expectString(output.MonitoringExecutionStatus),
    MonitoringJobDefinitionName: __expectString(output.MonitoringJobDefinitionName),
    MonitoringScheduleName: __expectString(output.MonitoringScheduleName),
    MonitoringType: __expectString(output.MonitoringType),
    ProcessingJobArn: __expectString(output.ProcessingJobArn),
    ScheduledTime:
      output.ScheduledTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ScheduledTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringExecutionSummaryList
 */
const de_MonitoringExecutionSummaryList = (output: any, context: __SerdeContext): MonitoringExecutionSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringExecutionSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringGroundTruthS3Input
 */
const de_MonitoringGroundTruthS3Input = (output: any, context: __SerdeContext): MonitoringGroundTruthS3Input => {
  return {
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringInput
 */
const de_MonitoringInput = (output: any, context: __SerdeContext): MonitoringInput => {
  return {
    BatchTransformInput:
      output.BatchTransformInput != null ? de_BatchTransformInput(output.BatchTransformInput, context) : undefined,
    EndpointInput: output.EndpointInput != null ? de_EndpointInput(output.EndpointInput, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringInputs
 */
const de_MonitoringInputs = (output: any, context: __SerdeContext): MonitoringInput[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringInput(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringJobDefinition
 */
const de_MonitoringJobDefinition = (output: any, context: __SerdeContext): MonitoringJobDefinition => {
  return {
    BaselineConfig:
      output.BaselineConfig != null ? de_MonitoringBaselineConfig(output.BaselineConfig, context) : undefined,
    Environment: output.Environment != null ? de_MonitoringEnvironmentMap(output.Environment, context) : undefined,
    MonitoringAppSpecification:
      output.MonitoringAppSpecification != null
        ? de_MonitoringAppSpecification(output.MonitoringAppSpecification, context)
        : undefined,
    MonitoringInputs:
      output.MonitoringInputs != null ? de_MonitoringInputs(output.MonitoringInputs, context) : undefined,
    MonitoringOutputConfig:
      output.MonitoringOutputConfig != null
        ? de_MonitoringOutputConfig(output.MonitoringOutputConfig, context)
        : undefined,
    MonitoringResources:
      output.MonitoringResources != null ? de_MonitoringResources(output.MonitoringResources, context) : undefined,
    NetworkConfig: output.NetworkConfig != null ? de_NetworkConfig(output.NetworkConfig, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_MonitoringStoppingCondition(output.StoppingCondition, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringJobDefinitionSummary
 */
const de_MonitoringJobDefinitionSummary = (output: any, context: __SerdeContext): MonitoringJobDefinitionSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointName: __expectString(output.EndpointName),
    MonitoringJobDefinitionArn: __expectString(output.MonitoringJobDefinitionArn),
    MonitoringJobDefinitionName: __expectString(output.MonitoringJobDefinitionName),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringJobDefinitionSummaryList
 */
const de_MonitoringJobDefinitionSummaryList = (
  output: any,
  context: __SerdeContext
): MonitoringJobDefinitionSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringJobDefinitionSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringJsonDatasetFormat
 */
const de_MonitoringJsonDatasetFormat = (output: any, context: __SerdeContext): MonitoringJsonDatasetFormat => {
  return {
    Line: __expectBoolean(output.Line),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringNetworkConfig
 */
const de_MonitoringNetworkConfig = (output: any, context: __SerdeContext): MonitoringNetworkConfig => {
  return {
    EnableInterContainerTrafficEncryption: __expectBoolean(output.EnableInterContainerTrafficEncryption),
    EnableNetworkIsolation: __expectBoolean(output.EnableNetworkIsolation),
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringOutput
 */
const de_MonitoringOutput = (output: any, context: __SerdeContext): MonitoringOutput => {
  return {
    S3Output: output.S3Output != null ? de_MonitoringS3Output(output.S3Output, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringOutputConfig
 */
const de_MonitoringOutputConfig = (output: any, context: __SerdeContext): MonitoringOutputConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    MonitoringOutputs:
      output.MonitoringOutputs != null ? de_MonitoringOutputs(output.MonitoringOutputs, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringOutputs
 */
const de_MonitoringOutputs = (output: any, context: __SerdeContext): MonitoringOutput[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringOutput(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringParquetDatasetFormat
 */
const de_MonitoringParquetDatasetFormat = (output: any, context: __SerdeContext): MonitoringParquetDatasetFormat => {
  return {} as any;
};

/**
 * deserializeAws_json1_1MonitoringResources
 */
const de_MonitoringResources = (output: any, context: __SerdeContext): MonitoringResources => {
  return {
    ClusterConfig: output.ClusterConfig != null ? de_MonitoringClusterConfig(output.ClusterConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringS3Output
 */
const de_MonitoringS3Output = (output: any, context: __SerdeContext): MonitoringS3Output => {
  return {
    LocalPath: __expectString(output.LocalPath),
    S3UploadMode: __expectString(output.S3UploadMode),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringSchedule
 */
const de_MonitoringSchedule = (output: any, context: __SerdeContext): MonitoringSchedule => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointName: __expectString(output.EndpointName),
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LastMonitoringExecutionSummary:
      output.LastMonitoringExecutionSummary != null
        ? de_MonitoringExecutionSummary(output.LastMonitoringExecutionSummary, context)
        : undefined,
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
    MonitoringScheduleConfig:
      output.MonitoringScheduleConfig != null
        ? de_MonitoringScheduleConfig(output.MonitoringScheduleConfig, context)
        : undefined,
    MonitoringScheduleName: __expectString(output.MonitoringScheduleName),
    MonitoringScheduleStatus: __expectString(output.MonitoringScheduleStatus),
    MonitoringType: __expectString(output.MonitoringType),
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringScheduleConfig
 */
const de_MonitoringScheduleConfig = (output: any, context: __SerdeContext): MonitoringScheduleConfig => {
  return {
    MonitoringJobDefinition:
      output.MonitoringJobDefinition != null
        ? de_MonitoringJobDefinition(output.MonitoringJobDefinition, context)
        : undefined,
    MonitoringJobDefinitionName: __expectString(output.MonitoringJobDefinitionName),
    MonitoringType: __expectString(output.MonitoringType),
    ScheduleConfig: output.ScheduleConfig != null ? de_ScheduleConfig(output.ScheduleConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringScheduleList
 */
const de_MonitoringScheduleList = (output: any, context: __SerdeContext): MonitoringSchedule[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringSchedule(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringScheduleSummary
 */
const de_MonitoringScheduleSummary = (output: any, context: __SerdeContext): MonitoringScheduleSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    EndpointName: __expectString(output.EndpointName),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MonitoringJobDefinitionName: __expectString(output.MonitoringJobDefinitionName),
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
    MonitoringScheduleName: __expectString(output.MonitoringScheduleName),
    MonitoringScheduleStatus: __expectString(output.MonitoringScheduleStatus),
    MonitoringType: __expectString(output.MonitoringType),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringScheduleSummaryList
 */
const de_MonitoringScheduleSummaryList = (output: any, context: __SerdeContext): MonitoringScheduleSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_MonitoringScheduleSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1MonitoringStatisticsResource
 */
const de_MonitoringStatisticsResource = (output: any, context: __SerdeContext): MonitoringStatisticsResource => {
  return {
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1MonitoringStoppingCondition
 */
const de_MonitoringStoppingCondition = (output: any, context: __SerdeContext): MonitoringStoppingCondition => {
  return {
    MaxRuntimeInSeconds: __expectInt32(output.MaxRuntimeInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1MultiModelConfig
 */
const de_MultiModelConfig = (output: any, context: __SerdeContext): MultiModelConfig => {
  return {
    ModelCacheSetting: __expectString(output.ModelCacheSetting),
  } as any;
};

/**
 * deserializeAws_json1_1NeoVpcConfig
 */
const de_NeoVpcConfig = (output: any, context: __SerdeContext): NeoVpcConfig => {
  return {
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_NeoVpcSecurityGroupIds(output.SecurityGroupIds, context) : undefined,
    Subnets: output.Subnets != null ? de_NeoVpcSubnets(output.Subnets, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1NeoVpcSecurityGroupIds
 */
const de_NeoVpcSecurityGroupIds = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1NeoVpcSubnets
 */
const de_NeoVpcSubnets = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1NetworkConfig
 */
const de_NetworkConfig = (output: any, context: __SerdeContext): NetworkConfig => {
  return {
    EnableInterContainerTrafficEncryption: __expectBoolean(output.EnableInterContainerTrafficEncryption),
    EnableNetworkIsolation: __expectBoolean(output.EnableNetworkIsolation),
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1NotebookInstanceAcceleratorTypes
 */
const de_NotebookInstanceAcceleratorTypes = (
  output: any,
  context: __SerdeContext
): (NotebookInstanceAcceleratorType | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1NotebookInstanceLifecycleConfigList
 */
const de_NotebookInstanceLifecycleConfigList = (
  output: any,
  context: __SerdeContext
): NotebookInstanceLifecycleHook[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_NotebookInstanceLifecycleHook(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1NotebookInstanceLifecycleConfigSummary
 */
const de_NotebookInstanceLifecycleConfigSummary = (
  output: any,
  context: __SerdeContext
): NotebookInstanceLifecycleConfigSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    NotebookInstanceLifecycleConfigArn: __expectString(output.NotebookInstanceLifecycleConfigArn),
    NotebookInstanceLifecycleConfigName: __expectString(output.NotebookInstanceLifecycleConfigName),
  } as any;
};

/**
 * deserializeAws_json1_1NotebookInstanceLifecycleConfigSummaryList
 */
const de_NotebookInstanceLifecycleConfigSummaryList = (
  output: any,
  context: __SerdeContext
): NotebookInstanceLifecycleConfigSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_NotebookInstanceLifecycleConfigSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1NotebookInstanceLifecycleHook
 */
const de_NotebookInstanceLifecycleHook = (output: any, context: __SerdeContext): NotebookInstanceLifecycleHook => {
  return {
    Content: __expectString(output.Content),
  } as any;
};

/**
 * deserializeAws_json1_1NotebookInstanceSummary
 */
const de_NotebookInstanceSummary = (output: any, context: __SerdeContext): NotebookInstanceSummary => {
  return {
    AdditionalCodeRepositories:
      output.AdditionalCodeRepositories != null
        ? de_AdditionalCodeRepositoryNamesOrUrls(output.AdditionalCodeRepositories, context)
        : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DefaultCodeRepository: __expectString(output.DefaultCodeRepository),
    InstanceType: __expectString(output.InstanceType),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    NotebookInstanceArn: __expectString(output.NotebookInstanceArn),
    NotebookInstanceLifecycleConfigName: __expectString(output.NotebookInstanceLifecycleConfigName),
    NotebookInstanceName: __expectString(output.NotebookInstanceName),
    NotebookInstanceStatus: __expectString(output.NotebookInstanceStatus),
    Url: __expectString(output.Url),
  } as any;
};

/**
 * deserializeAws_json1_1NotebookInstanceSummaryList
 */
const de_NotebookInstanceSummaryList = (output: any, context: __SerdeContext): NotebookInstanceSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_NotebookInstanceSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1NotificationConfiguration
 */
const de_NotificationConfiguration = (output: any, context: __SerdeContext): NotificationConfiguration => {
  return {
    NotificationTopicArn: __expectString(output.NotificationTopicArn),
  } as any;
};

/**
 * deserializeAws_json1_1ObjectiveStatusCounters
 */
const de_ObjectiveStatusCounters = (output: any, context: __SerdeContext): ObjectiveStatusCounters => {
  return {
    Failed: __expectInt32(output.Failed),
    Pending: __expectInt32(output.Pending),
    Succeeded: __expectInt32(output.Succeeded),
  } as any;
};

/**
 * deserializeAws_json1_1OfflineStoreConfig
 */
const de_OfflineStoreConfig = (output: any, context: __SerdeContext): OfflineStoreConfig => {
  return {
    DataCatalogConfig:
      output.DataCatalogConfig != null ? de_DataCatalogConfig(output.DataCatalogConfig, context) : undefined,
    DisableGlueTableCreation: __expectBoolean(output.DisableGlueTableCreation),
    S3StorageConfig: output.S3StorageConfig != null ? de_S3StorageConfig(output.S3StorageConfig, context) : undefined,
    TableFormat: __expectString(output.TableFormat),
  } as any;
};

/**
 * deserializeAws_json1_1OfflineStoreStatus
 */
const de_OfflineStoreStatus = (output: any, context: __SerdeContext): OfflineStoreStatus => {
  return {
    BlockedReason: __expectString(output.BlockedReason),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1OidcConfigForResponse
 */
const de_OidcConfigForResponse = (output: any, context: __SerdeContext): OidcConfigForResponse => {
  return {
    AuthorizationEndpoint: __expectString(output.AuthorizationEndpoint),
    ClientId: __expectString(output.ClientId),
    Issuer: __expectString(output.Issuer),
    JwksUri: __expectString(output.JwksUri),
    LogoutEndpoint: __expectString(output.LogoutEndpoint),
    TokenEndpoint: __expectString(output.TokenEndpoint),
    UserInfoEndpoint: __expectString(output.UserInfoEndpoint),
  } as any;
};

/**
 * deserializeAws_json1_1OidcMemberDefinition
 */
const de_OidcMemberDefinition = (output: any, context: __SerdeContext): OidcMemberDefinition => {
  return {
    Groups: output.Groups != null ? de_Groups(output.Groups, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1OnlineStoreConfig
 */
const de_OnlineStoreConfig = (output: any, context: __SerdeContext): OnlineStoreConfig => {
  return {
    EnableOnlineStore: __expectBoolean(output.EnableOnlineStore),
    SecurityConfig:
      output.SecurityConfig != null ? de_OnlineStoreSecurityConfig(output.SecurityConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1OnlineStoreSecurityConfig
 */
const de_OnlineStoreSecurityConfig = (output: any, context: __SerdeContext): OnlineStoreSecurityConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_json1_1OutputConfig
 */
const de_OutputConfig = (output: any, context: __SerdeContext): OutputConfig => {
  return {
    CompilerOptions: __expectString(output.CompilerOptions),
    KmsKeyId: __expectString(output.KmsKeyId),
    S3OutputLocation: __expectString(output.S3OutputLocation),
    TargetDevice: __expectString(output.TargetDevice),
    TargetPlatform: output.TargetPlatform != null ? de_TargetPlatform(output.TargetPlatform, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1OutputDataConfig
 */
const de_OutputDataConfig = (output: any, context: __SerdeContext): OutputDataConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1OutputParameter
 */
const de_OutputParameter = (output: any, context: __SerdeContext): OutputParameter => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1OutputParameterList
 */
const de_OutputParameterList = (output: any, context: __SerdeContext): OutputParameter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_OutputParameter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ParallelismConfiguration
 */
const de_ParallelismConfiguration = (output: any, context: __SerdeContext): ParallelismConfiguration => {
  return {
    MaxParallelExecutionSteps: __expectInt32(output.MaxParallelExecutionSteps),
  } as any;
};

/**
 * deserializeAws_json1_1Parameter
 */
const de_Parameter = (output: any, context: __SerdeContext): Parameter => {
  return {
    Name: __expectString(output.Name),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1ParameterList
 */
const de_ParameterList = (output: any, context: __SerdeContext): Parameter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Parameter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ParameterRange
 */
const de_ParameterRange = (output: any, context: __SerdeContext): ParameterRange => {
  return {
    CategoricalParameterRangeSpecification:
      output.CategoricalParameterRangeSpecification != null
        ? de_CategoricalParameterRangeSpecification(output.CategoricalParameterRangeSpecification, context)
        : undefined,
    ContinuousParameterRangeSpecification:
      output.ContinuousParameterRangeSpecification != null
        ? de_ContinuousParameterRangeSpecification(output.ContinuousParameterRangeSpecification, context)
        : undefined,
    IntegerParameterRangeSpecification:
      output.IntegerParameterRangeSpecification != null
        ? de_IntegerParameterRangeSpecification(output.IntegerParameterRangeSpecification, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ParameterRanges
 */
const de_ParameterRanges = (output: any, context: __SerdeContext): ParameterRanges => {
  return {
    CategoricalParameterRanges:
      output.CategoricalParameterRanges != null
        ? de_CategoricalParameterRanges(output.CategoricalParameterRanges, context)
        : undefined,
    ContinuousParameterRanges:
      output.ContinuousParameterRanges != null
        ? de_ContinuousParameterRanges(output.ContinuousParameterRanges, context)
        : undefined,
    IntegerParameterRanges:
      output.IntegerParameterRanges != null
        ? de_IntegerParameterRanges(output.IntegerParameterRanges, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ParameterValues
 */
const de_ParameterValues = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Parent
 */
const de_Parent = (output: any, context: __SerdeContext): Parent => {
  return {
    ExperimentName: __expectString(output.ExperimentName),
    TrialName: __expectString(output.TrialName),
  } as any;
};

/**
 * deserializeAws_json1_1ParentHyperParameterTuningJob
 */
const de_ParentHyperParameterTuningJob = (output: any, context: __SerdeContext): ParentHyperParameterTuningJob => {
  return {
    HyperParameterTuningJobName: __expectString(output.HyperParameterTuningJobName),
  } as any;
};

/**
 * deserializeAws_json1_1ParentHyperParameterTuningJobs
 */
const de_ParentHyperParameterTuningJobs = (output: any, context: __SerdeContext): ParentHyperParameterTuningJob[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ParentHyperParameterTuningJob(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Parents
 */
const de_Parents = (output: any, context: __SerdeContext): Parent[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Parent(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1PendingDeploymentSummary
 */
const de_PendingDeploymentSummary = (output: any, context: __SerdeContext): PendingDeploymentSummary => {
  return {
    EndpointConfigName: __expectString(output.EndpointConfigName),
    ProductionVariants:
      output.ProductionVariants != null
        ? de_PendingProductionVariantSummaryList(output.ProductionVariants, context)
        : undefined,
    ShadowProductionVariants:
      output.ShadowProductionVariants != null
        ? de_PendingProductionVariantSummaryList(output.ShadowProductionVariants, context)
        : undefined,
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1PendingProductionVariantSummary
 */
const de_PendingProductionVariantSummary = (output: any, context: __SerdeContext): PendingProductionVariantSummary => {
  return {
    AcceleratorType: __expectString(output.AcceleratorType),
    CurrentInstanceCount: __expectInt32(output.CurrentInstanceCount),
    CurrentServerlessConfig:
      output.CurrentServerlessConfig != null
        ? de_ProductionVariantServerlessConfig(output.CurrentServerlessConfig, context)
        : undefined,
    CurrentWeight: __limitedParseFloat32(output.CurrentWeight),
    DeployedImages: output.DeployedImages != null ? de_DeployedImages(output.DeployedImages, context) : undefined,
    DesiredInstanceCount: __expectInt32(output.DesiredInstanceCount),
    DesiredServerlessConfig:
      output.DesiredServerlessConfig != null
        ? de_ProductionVariantServerlessConfig(output.DesiredServerlessConfig, context)
        : undefined,
    DesiredWeight: __limitedParseFloat32(output.DesiredWeight),
    InstanceType: __expectString(output.InstanceType),
    VariantName: __expectString(output.VariantName),
    VariantStatus:
      output.VariantStatus != null ? de_ProductionVariantStatusList(output.VariantStatus, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1PendingProductionVariantSummaryList
 */
const de_PendingProductionVariantSummaryList = (
  output: any,
  context: __SerdeContext
): PendingProductionVariantSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PendingProductionVariantSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Phase
 */
const de_Phase = (output: any, context: __SerdeContext): Phase => {
  return {
    DurationInSeconds: __expectInt32(output.DurationInSeconds),
    InitialNumberOfUsers: __expectInt32(output.InitialNumberOfUsers),
    SpawnRate: __expectInt32(output.SpawnRate),
  } as any;
};

/**
 * deserializeAws_json1_1Phases
 */
const de_Phases = (output: any, context: __SerdeContext): Phase[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Phase(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Pipeline
 */
const de_Pipeline = (output: any, context: __SerdeContext): Pipeline => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LastRunTime:
      output.LastRunTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastRunTime)))
        : undefined,
    ParallelismConfiguration:
      output.ParallelismConfiguration != null
        ? de_ParallelismConfiguration(output.ParallelismConfiguration, context)
        : undefined,
    PipelineArn: __expectString(output.PipelineArn),
    PipelineDescription: __expectString(output.PipelineDescription),
    PipelineDisplayName: __expectString(output.PipelineDisplayName),
    PipelineName: __expectString(output.PipelineName),
    PipelineStatus: __expectString(output.PipelineStatus),
    RoleArn: __expectString(output.RoleArn),
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1PipelineExecution
 */
const de_PipelineExecution = (output: any, context: __SerdeContext): PipelineExecution => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ParallelismConfiguration:
      output.ParallelismConfiguration != null
        ? de_ParallelismConfiguration(output.ParallelismConfiguration, context)
        : undefined,
    PipelineArn: __expectString(output.PipelineArn),
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
    PipelineExecutionDescription: __expectString(output.PipelineExecutionDescription),
    PipelineExecutionDisplayName: __expectString(output.PipelineExecutionDisplayName),
    PipelineExecutionStatus: __expectString(output.PipelineExecutionStatus),
    PipelineExperimentConfig:
      output.PipelineExperimentConfig != null
        ? de_PipelineExperimentConfig(output.PipelineExperimentConfig, context)
        : undefined,
    PipelineParameters:
      output.PipelineParameters != null ? de_ParameterList(output.PipelineParameters, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1PipelineExecutionStep
 */
const de_PipelineExecutionStep = (output: any, context: __SerdeContext): PipelineExecutionStep => {
  return {
    AttemptCount: __expectInt32(output.AttemptCount),
    CacheHitResult: output.CacheHitResult != null ? de_CacheHitResult(output.CacheHitResult, context) : undefined,
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    FailureReason: __expectString(output.FailureReason),
    Metadata: output.Metadata != null ? de_PipelineExecutionStepMetadata(output.Metadata, context) : undefined,
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
    StepDescription: __expectString(output.StepDescription),
    StepDisplayName: __expectString(output.StepDisplayName),
    StepName: __expectString(output.StepName),
    StepStatus: __expectString(output.StepStatus),
  } as any;
};

/**
 * deserializeAws_json1_1PipelineExecutionStepList
 */
const de_PipelineExecutionStepList = (output: any, context: __SerdeContext): PipelineExecutionStep[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PipelineExecutionStep(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1PipelineExecutionStepMetadata
 */
const de_PipelineExecutionStepMetadata = (output: any, context: __SerdeContext): PipelineExecutionStepMetadata => {
  return {
    AutoMLJob: output.AutoMLJob != null ? de_AutoMLJobStepMetadata(output.AutoMLJob, context) : undefined,
    Callback: output.Callback != null ? de_CallbackStepMetadata(output.Callback, context) : undefined,
    ClarifyCheck: output.ClarifyCheck != null ? de_ClarifyCheckStepMetadata(output.ClarifyCheck, context) : undefined,
    Condition: output.Condition != null ? de_ConditionStepMetadata(output.Condition, context) : undefined,
    EMR: output.EMR != null ? de_EMRStepMetadata(output.EMR, context) : undefined,
    Fail: output.Fail != null ? de_FailStepMetadata(output.Fail, context) : undefined,
    Lambda: output.Lambda != null ? de_LambdaStepMetadata(output.Lambda, context) : undefined,
    Model: output.Model != null ? de_ModelStepMetadata(output.Model, context) : undefined,
    ProcessingJob:
      output.ProcessingJob != null ? de_ProcessingJobStepMetadata(output.ProcessingJob, context) : undefined,
    QualityCheck: output.QualityCheck != null ? de_QualityCheckStepMetadata(output.QualityCheck, context) : undefined,
    RegisterModel:
      output.RegisterModel != null ? de_RegisterModelStepMetadata(output.RegisterModel, context) : undefined,
    TrainingJob: output.TrainingJob != null ? de_TrainingJobStepMetadata(output.TrainingJob, context) : undefined,
    TransformJob: output.TransformJob != null ? de_TransformJobStepMetadata(output.TransformJob, context) : undefined,
    TuningJob: output.TuningJob != null ? de_TuningJobStepMetaData(output.TuningJob, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1PipelineExecutionSummary
 */
const de_PipelineExecutionSummary = (output: any, context: __SerdeContext): PipelineExecutionSummary => {
  return {
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
    PipelineExecutionDescription: __expectString(output.PipelineExecutionDescription),
    PipelineExecutionDisplayName: __expectString(output.PipelineExecutionDisplayName),
    PipelineExecutionFailureReason: __expectString(output.PipelineExecutionFailureReason),
    PipelineExecutionStatus: __expectString(output.PipelineExecutionStatus),
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1PipelineExecutionSummaryList
 */
const de_PipelineExecutionSummaryList = (output: any, context: __SerdeContext): PipelineExecutionSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PipelineExecutionSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1PipelineExperimentConfig
 */
const de_PipelineExperimentConfig = (output: any, context: __SerdeContext): PipelineExperimentConfig => {
  return {
    ExperimentName: __expectString(output.ExperimentName),
    TrialName: __expectString(output.TrialName),
  } as any;
};

/**
 * deserializeAws_json1_1PipelineSummary
 */
const de_PipelineSummary = (output: any, context: __SerdeContext): PipelineSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastExecutionTime:
      output.LastExecutionTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastExecutionTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    PipelineArn: __expectString(output.PipelineArn),
    PipelineDescription: __expectString(output.PipelineDescription),
    PipelineDisplayName: __expectString(output.PipelineDisplayName),
    PipelineName: __expectString(output.PipelineName),
    RoleArn: __expectString(output.RoleArn),
  } as any;
};

/**
 * deserializeAws_json1_1PipelineSummaryList
 */
const de_PipelineSummaryList = (output: any, context: __SerdeContext): PipelineSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PipelineSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProcessingClusterConfig
 */
const de_ProcessingClusterConfig = (output: any, context: __SerdeContext): ProcessingClusterConfig => {
  return {
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingEnvironmentMap
 */
const de_ProcessingEnvironmentMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1ProcessingFeatureStoreOutput
 */
const de_ProcessingFeatureStoreOutput = (output: any, context: __SerdeContext): ProcessingFeatureStoreOutput => {
  return {
    FeatureGroupName: __expectString(output.FeatureGroupName),
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingInput
 */
const de_ProcessingInput = (output: any, context: __SerdeContext): ProcessingInput => {
  return {
    AppManaged: __expectBoolean(output.AppManaged),
    DatasetDefinition:
      output.DatasetDefinition != null ? de_DatasetDefinition(output.DatasetDefinition, context) : undefined,
    InputName: __expectString(output.InputName),
    S3Input: output.S3Input != null ? de_ProcessingS3Input(output.S3Input, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingInputs
 */
const de_ProcessingInputs = (output: any, context: __SerdeContext): ProcessingInput[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProcessingInput(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProcessingJob
 */
const de_ProcessingJob = (output: any, context: __SerdeContext): ProcessingJob => {
  return {
    AppSpecification:
      output.AppSpecification != null ? de_AppSpecification(output.AppSpecification, context) : undefined,
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    Environment: output.Environment != null ? de_ProcessingEnvironmentMap(output.Environment, context) : undefined,
    ExitMessage: __expectString(output.ExitMessage),
    ExperimentConfig:
      output.ExperimentConfig != null ? de_ExperimentConfig(output.ExperimentConfig, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
    NetworkConfig: output.NetworkConfig != null ? de_NetworkConfig(output.NetworkConfig, context) : undefined,
    ProcessingEndTime:
      output.ProcessingEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ProcessingEndTime)))
        : undefined,
    ProcessingInputs:
      output.ProcessingInputs != null ? de_ProcessingInputs(output.ProcessingInputs, context) : undefined,
    ProcessingJobArn: __expectString(output.ProcessingJobArn),
    ProcessingJobName: __expectString(output.ProcessingJobName),
    ProcessingJobStatus: __expectString(output.ProcessingJobStatus),
    ProcessingOutputConfig:
      output.ProcessingOutputConfig != null
        ? de_ProcessingOutputConfig(output.ProcessingOutputConfig, context)
        : undefined,
    ProcessingResources:
      output.ProcessingResources != null ? de_ProcessingResources(output.ProcessingResources, context) : undefined,
    ProcessingStartTime:
      output.ProcessingStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ProcessingStartTime)))
        : undefined,
    RoleArn: __expectString(output.RoleArn),
    StoppingCondition:
      output.StoppingCondition != null ? de_ProcessingStoppingCondition(output.StoppingCondition, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    TrainingJobArn: __expectString(output.TrainingJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingJobStepMetadata
 */
const de_ProcessingJobStepMetadata = (output: any, context: __SerdeContext): ProcessingJobStepMetadata => {
  return {
    Arn: __expectString(output.Arn),
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingJobSummaries
 */
const de_ProcessingJobSummaries = (output: any, context: __SerdeContext): ProcessingJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProcessingJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProcessingJobSummary
 */
const de_ProcessingJobSummary = (output: any, context: __SerdeContext): ProcessingJobSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    ExitMessage: __expectString(output.ExitMessage),
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ProcessingEndTime:
      output.ProcessingEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ProcessingEndTime)))
        : undefined,
    ProcessingJobArn: __expectString(output.ProcessingJobArn),
    ProcessingJobName: __expectString(output.ProcessingJobName),
    ProcessingJobStatus: __expectString(output.ProcessingJobStatus),
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingOutput
 */
const de_ProcessingOutput = (output: any, context: __SerdeContext): ProcessingOutput => {
  return {
    AppManaged: __expectBoolean(output.AppManaged),
    FeatureStoreOutput:
      output.FeatureStoreOutput != null
        ? de_ProcessingFeatureStoreOutput(output.FeatureStoreOutput, context)
        : undefined,
    OutputName: __expectString(output.OutputName),
    S3Output: output.S3Output != null ? de_ProcessingS3Output(output.S3Output, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingOutputConfig
 */
const de_ProcessingOutputConfig = (output: any, context: __SerdeContext): ProcessingOutputConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    Outputs: output.Outputs != null ? de_ProcessingOutputs(output.Outputs, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingOutputs
 */
const de_ProcessingOutputs = (output: any, context: __SerdeContext): ProcessingOutput[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProcessingOutput(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProcessingResources
 */
const de_ProcessingResources = (output: any, context: __SerdeContext): ProcessingResources => {
  return {
    ClusterConfig: output.ClusterConfig != null ? de_ProcessingClusterConfig(output.ClusterConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingS3Input
 */
const de_ProcessingS3Input = (output: any, context: __SerdeContext): ProcessingS3Input => {
  return {
    LocalPath: __expectString(output.LocalPath),
    S3CompressionType: __expectString(output.S3CompressionType),
    S3DataDistributionType: __expectString(output.S3DataDistributionType),
    S3DataType: __expectString(output.S3DataType),
    S3InputMode: __expectString(output.S3InputMode),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingS3Output
 */
const de_ProcessingS3Output = (output: any, context: __SerdeContext): ProcessingS3Output => {
  return {
    LocalPath: __expectString(output.LocalPath),
    S3UploadMode: __expectString(output.S3UploadMode),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1ProcessingStoppingCondition
 */
const de_ProcessingStoppingCondition = (output: any, context: __SerdeContext): ProcessingStoppingCondition => {
  return {
    MaxRuntimeInSeconds: __expectInt32(output.MaxRuntimeInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1ProductionVariant
 */
const de_ProductionVariant = (output: any, context: __SerdeContext): ProductionVariant => {
  return {
    AcceleratorType: __expectString(output.AcceleratorType),
    ContainerStartupHealthCheckTimeoutInSeconds: __expectInt32(output.ContainerStartupHealthCheckTimeoutInSeconds),
    CoreDumpConfig:
      output.CoreDumpConfig != null ? de_ProductionVariantCoreDumpConfig(output.CoreDumpConfig, context) : undefined,
    EnableSSMAccess: __expectBoolean(output.EnableSSMAccess),
    InitialInstanceCount: __expectInt32(output.InitialInstanceCount),
    InitialVariantWeight: __limitedParseFloat32(output.InitialVariantWeight),
    InstanceType: __expectString(output.InstanceType),
    ModelDataDownloadTimeoutInSeconds: __expectInt32(output.ModelDataDownloadTimeoutInSeconds),
    ModelName: __expectString(output.ModelName),
    ServerlessConfig:
      output.ServerlessConfig != null
        ? de_ProductionVariantServerlessConfig(output.ServerlessConfig, context)
        : undefined,
    VariantName: __expectString(output.VariantName),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1ProductionVariantCoreDumpConfig
 */
const de_ProductionVariantCoreDumpConfig = (output: any, context: __SerdeContext): ProductionVariantCoreDumpConfig => {
  return {
    DestinationS3Uri: __expectString(output.DestinationS3Uri),
    KmsKeyId: __expectString(output.KmsKeyId),
  } as any;
};

/**
 * deserializeAws_json1_1ProductionVariantList
 */
const de_ProductionVariantList = (output: any, context: __SerdeContext): ProductionVariant[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProductionVariant(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProductionVariantServerlessConfig
 */
const de_ProductionVariantServerlessConfig = (
  output: any,
  context: __SerdeContext
): ProductionVariantServerlessConfig => {
  return {
    MaxConcurrency: __expectInt32(output.MaxConcurrency),
    MemorySizeInMB: __expectInt32(output.MemorySizeInMB),
  } as any;
};

/**
 * deserializeAws_json1_1ProductionVariantStatus
 */
const de_ProductionVariantStatus = (output: any, context: __SerdeContext): ProductionVariantStatus => {
  return {
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
    Status: __expectString(output.Status),
    StatusMessage: __expectString(output.StatusMessage),
  } as any;
};

/**
 * deserializeAws_json1_1ProductionVariantStatusList
 */
const de_ProductionVariantStatusList = (output: any, context: __SerdeContext): ProductionVariantStatus[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProductionVariantStatus(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProductionVariantSummary
 */
const de_ProductionVariantSummary = (output: any, context: __SerdeContext): ProductionVariantSummary => {
  return {
    CurrentInstanceCount: __expectInt32(output.CurrentInstanceCount),
    CurrentServerlessConfig:
      output.CurrentServerlessConfig != null
        ? de_ProductionVariantServerlessConfig(output.CurrentServerlessConfig, context)
        : undefined,
    CurrentWeight: __limitedParseFloat32(output.CurrentWeight),
    DeployedImages: output.DeployedImages != null ? de_DeployedImages(output.DeployedImages, context) : undefined,
    DesiredInstanceCount: __expectInt32(output.DesiredInstanceCount),
    DesiredServerlessConfig:
      output.DesiredServerlessConfig != null
        ? de_ProductionVariantServerlessConfig(output.DesiredServerlessConfig, context)
        : undefined,
    DesiredWeight: __limitedParseFloat32(output.DesiredWeight),
    VariantName: __expectString(output.VariantName),
    VariantStatus:
      output.VariantStatus != null ? de_ProductionVariantStatusList(output.VariantStatus, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ProductionVariantSummaryList
 */
const de_ProductionVariantSummaryList = (output: any, context: __SerdeContext): ProductionVariantSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProductionVariantSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProductListings
 */
const de_ProductListings = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProfilerConfig
 */
const de_ProfilerConfig = (output: any, context: __SerdeContext): ProfilerConfig => {
  return {
    DisableProfiler: __expectBoolean(output.DisableProfiler),
    ProfilingIntervalInMilliseconds: __expectLong(output.ProfilingIntervalInMilliseconds),
    ProfilingParameters:
      output.ProfilingParameters != null ? de_ProfilingParameters(output.ProfilingParameters, context) : undefined,
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1ProfilerRuleConfiguration
 */
const de_ProfilerRuleConfiguration = (output: any, context: __SerdeContext): ProfilerRuleConfiguration => {
  return {
    InstanceType: __expectString(output.InstanceType),
    LocalPath: __expectString(output.LocalPath),
    RuleConfigurationName: __expectString(output.RuleConfigurationName),
    RuleEvaluatorImage: __expectString(output.RuleEvaluatorImage),
    RuleParameters: output.RuleParameters != null ? de_RuleParameters(output.RuleParameters, context) : undefined,
    S3OutputPath: __expectString(output.S3OutputPath),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1ProfilerRuleConfigurations
 */
const de_ProfilerRuleConfigurations = (output: any, context: __SerdeContext): ProfilerRuleConfiguration[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProfilerRuleConfiguration(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProfilerRuleEvaluationStatus
 */
const de_ProfilerRuleEvaluationStatus = (output: any, context: __SerdeContext): ProfilerRuleEvaluationStatus => {
  return {
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    RuleConfigurationName: __expectString(output.RuleConfigurationName),
    RuleEvaluationJobArn: __expectString(output.RuleEvaluationJobArn),
    RuleEvaluationStatus: __expectString(output.RuleEvaluationStatus),
    StatusDetails: __expectString(output.StatusDetails),
  } as any;
};

/**
 * deserializeAws_json1_1ProfilerRuleEvaluationStatuses
 */
const de_ProfilerRuleEvaluationStatuses = (output: any, context: __SerdeContext): ProfilerRuleEvaluationStatus[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProfilerRuleEvaluationStatus(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProfilingParameters
 */
const de_ProfilingParameters = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1Project
 */
const de_Project = (output: any, context: __SerdeContext): Project => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ProjectArn: __expectString(output.ProjectArn),
    ProjectDescription: __expectString(output.ProjectDescription),
    ProjectId: __expectString(output.ProjectId),
    ProjectName: __expectString(output.ProjectName),
    ProjectStatus: __expectString(output.ProjectStatus),
    ServiceCatalogProvisionedProductDetails:
      output.ServiceCatalogProvisionedProductDetails != null
        ? de_ServiceCatalogProvisionedProductDetails(output.ServiceCatalogProvisionedProductDetails, context)
        : undefined,
    ServiceCatalogProvisioningDetails:
      output.ServiceCatalogProvisioningDetails != null
        ? de_ServiceCatalogProvisioningDetails(output.ServiceCatalogProvisioningDetails, context)
        : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ProjectSummary
 */
const de_ProjectSummary = (output: any, context: __SerdeContext): ProjectSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    ProjectArn: __expectString(output.ProjectArn),
    ProjectDescription: __expectString(output.ProjectDescription),
    ProjectId: __expectString(output.ProjectId),
    ProjectName: __expectString(output.ProjectName),
    ProjectStatus: __expectString(output.ProjectStatus),
  } as any;
};

/**
 * deserializeAws_json1_1ProjectSummaryList
 */
const de_ProjectSummaryList = (output: any, context: __SerdeContext): ProjectSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProjectSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1PropertyNameSuggestion
 */
const de_PropertyNameSuggestion = (output: any, context: __SerdeContext): PropertyNameSuggestion => {
  return {
    PropertyName: __expectString(output.PropertyName),
  } as any;
};

/**
 * deserializeAws_json1_1PropertyNameSuggestionList
 */
const de_PropertyNameSuggestionList = (output: any, context: __SerdeContext): PropertyNameSuggestion[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_PropertyNameSuggestion(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ProvisioningParameter
 */
const de_ProvisioningParameter = (output: any, context: __SerdeContext): ProvisioningParameter => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1ProvisioningParameters
 */
const de_ProvisioningParameters = (output: any, context: __SerdeContext): ProvisioningParameter[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ProvisioningParameter(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1PublicWorkforceTaskPrice
 */
const de_PublicWorkforceTaskPrice = (output: any, context: __SerdeContext): PublicWorkforceTaskPrice => {
  return {
    AmountInUsd: output.AmountInUsd != null ? de_USD(output.AmountInUsd, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1PutModelPackageGroupPolicyOutput
 */
const de_PutModelPackageGroupPolicyOutput = (
  output: any,
  context: __SerdeContext
): PutModelPackageGroupPolicyOutput => {
  return {
    ModelPackageGroupArn: __expectString(output.ModelPackageGroupArn),
  } as any;
};

/**
 * deserializeAws_json1_1QualityCheckStepMetadata
 */
const de_QualityCheckStepMetadata = (output: any, context: __SerdeContext): QualityCheckStepMetadata => {
  return {
    BaselineUsedForDriftCheckConstraints: __expectString(output.BaselineUsedForDriftCheckConstraints),
    BaselineUsedForDriftCheckStatistics: __expectString(output.BaselineUsedForDriftCheckStatistics),
    CalculatedBaselineConstraints: __expectString(output.CalculatedBaselineConstraints),
    CalculatedBaselineStatistics: __expectString(output.CalculatedBaselineStatistics),
    CheckJobArn: __expectString(output.CheckJobArn),
    CheckType: __expectString(output.CheckType),
    ModelPackageGroupName: __expectString(output.ModelPackageGroupName),
    RegisterNewBaseline: __expectBoolean(output.RegisterNewBaseline),
    SkipCheck: __expectBoolean(output.SkipCheck),
    ViolationReport: __expectString(output.ViolationReport),
  } as any;
};

/**
 * deserializeAws_json1_1QueryLineageResponse
 */
const de_QueryLineageResponse = (output: any, context: __SerdeContext): QueryLineageResponse => {
  return {
    Edges: output.Edges != null ? de_Edges(output.Edges, context) : undefined,
    NextToken: __expectString(output.NextToken),
    Vertices: output.Vertices != null ? de_Vertices(output.Vertices, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1RealTimeInferenceConfig
 */
const de_RealTimeInferenceConfig = (output: any, context: __SerdeContext): RealTimeInferenceConfig => {
  return {
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
  } as any;
};

/**
 * deserializeAws_json1_1RealtimeInferenceInstanceTypes
 */
const de_RealtimeInferenceInstanceTypes = (
  output: any,
  context: __SerdeContext
): (ProductionVariantInstanceType | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1RecommendationJobContainerConfig
 */
const de_RecommendationJobContainerConfig = (
  output: any,
  context: __SerdeContext
): RecommendationJobContainerConfig => {
  return {
    DataInputConfig: __expectString(output.DataInputConfig),
    Domain: __expectString(output.Domain),
    Framework: __expectString(output.Framework),
    FrameworkVersion: __expectString(output.FrameworkVersion),
    NearestModelName: __expectString(output.NearestModelName),
    PayloadConfig:
      output.PayloadConfig != null ? de_RecommendationJobPayloadConfig(output.PayloadConfig, context) : undefined,
    SupportedInstanceTypes:
      output.SupportedInstanceTypes != null
        ? de_RecommendationJobSupportedInstanceTypes(output.SupportedInstanceTypes, context)
        : undefined,
    Task: __expectString(output.Task),
  } as any;
};

/**
 * deserializeAws_json1_1RecommendationJobInferenceBenchmark
 */
const de_RecommendationJobInferenceBenchmark = (
  output: any,
  context: __SerdeContext
): RecommendationJobInferenceBenchmark => {
  return {
    EndpointConfiguration:
      output.EndpointConfiguration != null
        ? de_EndpointOutputConfiguration(output.EndpointConfiguration, context)
        : undefined,
    EndpointMetrics: output.EndpointMetrics != null ? de_InferenceMetrics(output.EndpointMetrics, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    Metrics: output.Metrics != null ? de_RecommendationMetrics(output.Metrics, context) : undefined,
    ModelConfiguration:
      output.ModelConfiguration != null ? de_ModelConfiguration(output.ModelConfiguration, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1RecommendationJobInputConfig
 */
const de_RecommendationJobInputConfig = (output: any, context: __SerdeContext): RecommendationJobInputConfig => {
  return {
    ContainerConfig:
      output.ContainerConfig != null ? de_RecommendationJobContainerConfig(output.ContainerConfig, context) : undefined,
    EndpointConfigurations:
      output.EndpointConfigurations != null
        ? de_EndpointInputConfigurations(output.EndpointConfigurations, context)
        : undefined,
    Endpoints: output.Endpoints != null ? de_Endpoints(output.Endpoints, context) : undefined,
    JobDurationInSeconds: __expectInt32(output.JobDurationInSeconds),
    ModelName: __expectString(output.ModelName),
    ModelPackageVersionArn: __expectString(output.ModelPackageVersionArn),
    ResourceLimit:
      output.ResourceLimit != null ? de_RecommendationJobResourceLimit(output.ResourceLimit, context) : undefined,
    TrafficPattern: output.TrafficPattern != null ? de_TrafficPattern(output.TrafficPattern, context) : undefined,
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
    VpcConfig: output.VpcConfig != null ? de_RecommendationJobVpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1RecommendationJobPayloadConfig
 */
const de_RecommendationJobPayloadConfig = (output: any, context: __SerdeContext): RecommendationJobPayloadConfig => {
  return {
    SamplePayloadUrl: __expectString(output.SamplePayloadUrl),
    SupportedContentTypes:
      output.SupportedContentTypes != null
        ? de_RecommendationJobSupportedContentTypes(output.SupportedContentTypes, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1RecommendationJobResourceLimit
 */
const de_RecommendationJobResourceLimit = (output: any, context: __SerdeContext): RecommendationJobResourceLimit => {
  return {
    MaxNumberOfTests: __expectInt32(output.MaxNumberOfTests),
    MaxParallelOfTests: __expectInt32(output.MaxParallelOfTests),
  } as any;
};

/**
 * deserializeAws_json1_1RecommendationJobStoppingConditions
 */
const de_RecommendationJobStoppingConditions = (
  output: any,
  context: __SerdeContext
): RecommendationJobStoppingConditions => {
  return {
    MaxInvocations: __expectInt32(output.MaxInvocations),
    ModelLatencyThresholds:
      output.ModelLatencyThresholds != null
        ? de_ModelLatencyThresholds(output.ModelLatencyThresholds, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1RecommendationJobSupportedContentTypes
 */
const de_RecommendationJobSupportedContentTypes = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1RecommendationJobSupportedInstanceTypes
 */
const de_RecommendationJobSupportedInstanceTypes = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1RecommendationJobVpcConfig
 */
const de_RecommendationJobVpcConfig = (output: any, context: __SerdeContext): RecommendationJobVpcConfig => {
  return {
    SecurityGroupIds:
      output.SecurityGroupIds != null
        ? de_RecommendationJobVpcSecurityGroupIds(output.SecurityGroupIds, context)
        : undefined,
    Subnets: output.Subnets != null ? de_RecommendationJobVpcSubnets(output.Subnets, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1RecommendationJobVpcSecurityGroupIds
 */
const de_RecommendationJobVpcSecurityGroupIds = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1RecommendationJobVpcSubnets
 */
const de_RecommendationJobVpcSubnets = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1RecommendationMetrics
 */
const de_RecommendationMetrics = (output: any, context: __SerdeContext): RecommendationMetrics => {
  return {
    CostPerHour: __limitedParseFloat32(output.CostPerHour),
    CostPerInference: __limitedParseFloat32(output.CostPerInference),
    CpuUtilization: __limitedParseFloat32(output.CpuUtilization),
    MaxInvocations: __expectInt32(output.MaxInvocations),
    MemoryUtilization: __limitedParseFloat32(output.MemoryUtilization),
    ModelLatency: __expectInt32(output.ModelLatency),
  } as any;
};

/**
 * deserializeAws_json1_1RedshiftDatasetDefinition
 */
const de_RedshiftDatasetDefinition = (output: any, context: __SerdeContext): RedshiftDatasetDefinition => {
  return {
    ClusterId: __expectString(output.ClusterId),
    ClusterRoleArn: __expectString(output.ClusterRoleArn),
    Database: __expectString(output.Database),
    DbUser: __expectString(output.DbUser),
    KmsKeyId: __expectString(output.KmsKeyId),
    OutputCompression: __expectString(output.OutputCompression),
    OutputFormat: __expectString(output.OutputFormat),
    OutputS3Uri: __expectString(output.OutputS3Uri),
    QueryString: __expectString(output.QueryString),
  } as any;
};

/**
 * deserializeAws_json1_1RegisterModelStepMetadata
 */
const de_RegisterModelStepMetadata = (output: any, context: __SerdeContext): RegisterModelStepMetadata => {
  return {
    Arn: __expectString(output.Arn),
  } as any;
};

/**
 * deserializeAws_json1_1RenderingError
 */
const de_RenderingError = (output: any, context: __SerdeContext): RenderingError => {
  return {
    Code: __expectString(output.Code),
    Message: __expectString(output.Message),
  } as any;
};

/**
 * deserializeAws_json1_1RenderingErrorList
 */
const de_RenderingErrorList = (output: any, context: __SerdeContext): RenderingError[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_RenderingError(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1RenderUiTemplateResponse
 */
const de_RenderUiTemplateResponse = (output: any, context: __SerdeContext): RenderUiTemplateResponse => {
  return {
    Errors: output.Errors != null ? de_RenderingErrorList(output.Errors, context) : undefined,
    RenderedContent: __expectString(output.RenderedContent),
  } as any;
};

/**
 * deserializeAws_json1_1RepositoryAuthConfig
 */
const de_RepositoryAuthConfig = (output: any, context: __SerdeContext): RepositoryAuthConfig => {
  return {
    RepositoryCredentialsProviderArn: __expectString(output.RepositoryCredentialsProviderArn),
  } as any;
};

/**
 * deserializeAws_json1_1ResolvedAttributes
 */
const de_ResolvedAttributes = (output: any, context: __SerdeContext): ResolvedAttributes => {
  return {
    AutoMLJobObjective:
      output.AutoMLJobObjective != null ? de_AutoMLJobObjective(output.AutoMLJobObjective, context) : undefined,
    CompletionCriteria:
      output.CompletionCriteria != null
        ? de_AutoMLJobCompletionCriteria(output.CompletionCriteria, context)
        : undefined,
    ProblemType: __expectString(output.ProblemType),
  } as any;
};

/**
 * deserializeAws_json1_1ResourceConfig
 */
const de_ResourceConfig = (output: any, context: __SerdeContext): ResourceConfig => {
  return {
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceGroups: output.InstanceGroups != null ? de_InstanceGroups(output.InstanceGroups, context) : undefined,
    InstanceType: __expectString(output.InstanceType),
    KeepAlivePeriodInSeconds: __expectInt32(output.KeepAlivePeriodInSeconds),
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
    VolumeSizeInGB: __expectInt32(output.VolumeSizeInGB),
  } as any;
};

/**
 * deserializeAws_json1_1ResourceInUse
 */
const de_ResourceInUse = (output: any, context: __SerdeContext): ResourceInUse => {
  return {
    Message: __expectString(output.Message),
  } as any;
};

/**
 * deserializeAws_json1_1ResourceLimitExceeded
 */
const de_ResourceLimitExceeded = (output: any, context: __SerdeContext): ResourceLimitExceeded => {
  return {
    Message: __expectString(output.Message),
  } as any;
};

/**
 * deserializeAws_json1_1ResourceLimits
 */
const de_ResourceLimits = (output: any, context: __SerdeContext): ResourceLimits => {
  return {
    MaxNumberOfTrainingJobs: __expectInt32(output.MaxNumberOfTrainingJobs),
    MaxParallelTrainingJobs: __expectInt32(output.MaxParallelTrainingJobs),
    MaxRuntimeInSeconds: __expectInt32(output.MaxRuntimeInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1ResourceNotFound
 */
const de_ResourceNotFound = (output: any, context: __SerdeContext): ResourceNotFound => {
  return {
    Message: __expectString(output.Message),
  } as any;
};

/**
 * deserializeAws_json1_1ResourceSpec
 */
const de_ResourceSpec = (output: any, context: __SerdeContext): ResourceSpec => {
  return {
    InstanceType: __expectString(output.InstanceType),
    LifecycleConfigArn: __expectString(output.LifecycleConfigArn),
    SageMakerImageArn: __expectString(output.SageMakerImageArn),
    SageMakerImageVersionArn: __expectString(output.SageMakerImageVersionArn),
  } as any;
};

/**
 * deserializeAws_json1_1ResponseMIMETypes
 */
const de_ResponseMIMETypes = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1RetryPipelineExecutionResponse
 */
const de_RetryPipelineExecutionResponse = (output: any, context: __SerdeContext): RetryPipelineExecutionResponse => {
  return {
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
  } as any;
};

/**
 * deserializeAws_json1_1RetryStrategy
 */
const de_RetryStrategy = (output: any, context: __SerdeContext): RetryStrategy => {
  return {
    MaximumRetryAttempts: __expectInt32(output.MaximumRetryAttempts),
  } as any;
};

/**
 * deserializeAws_json1_1RSessionAppSettings
 */
const de_RSessionAppSettings = (output: any, context: __SerdeContext): RSessionAppSettings => {
  return {
    CustomImages: output.CustomImages != null ? de_CustomImages(output.CustomImages, context) : undefined,
    DefaultResourceSpec:
      output.DefaultResourceSpec != null ? de_ResourceSpec(output.DefaultResourceSpec, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1RStudioServerProAppSettings
 */
const de_RStudioServerProAppSettings = (output: any, context: __SerdeContext): RStudioServerProAppSettings => {
  return {
    AccessStatus: __expectString(output.AccessStatus),
    UserGroup: __expectString(output.UserGroup),
  } as any;
};

/**
 * deserializeAws_json1_1RStudioServerProDomainSettings
 */
const de_RStudioServerProDomainSettings = (output: any, context: __SerdeContext): RStudioServerProDomainSettings => {
  return {
    DefaultResourceSpec:
      output.DefaultResourceSpec != null ? de_ResourceSpec(output.DefaultResourceSpec, context) : undefined,
    DomainExecutionRoleArn: __expectString(output.DomainExecutionRoleArn),
    RStudioConnectUrl: __expectString(output.RStudioConnectUrl),
    RStudioPackageManagerUrl: __expectString(output.RStudioPackageManagerUrl),
  } as any;
};

/**
 * deserializeAws_json1_1RuleParameters
 */
const de_RuleParameters = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1S3DataSource
 */
const de_S3DataSource = (output: any, context: __SerdeContext): S3DataSource => {
  return {
    AttributeNames: output.AttributeNames != null ? de_AttributeNames(output.AttributeNames, context) : undefined,
    InstanceGroupNames:
      output.InstanceGroupNames != null ? de_InstanceGroupNames(output.InstanceGroupNames, context) : undefined,
    S3DataDistributionType: __expectString(output.S3DataDistributionType),
    S3DataType: __expectString(output.S3DataType),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1S3StorageConfig
 */
const de_S3StorageConfig = (output: any, context: __SerdeContext): S3StorageConfig => {
  return {
    KmsKeyId: __expectString(output.KmsKeyId),
    ResolvedOutputS3Uri: __expectString(output.ResolvedOutputS3Uri),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1SageMakerImageVersionAliases
 */
const de_SageMakerImageVersionAliases = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1ScheduleConfig
 */
const de_ScheduleConfig = (output: any, context: __SerdeContext): ScheduleConfig => {
  return {
    ScheduleExpression: __expectString(output.ScheduleExpression),
  } as any;
};

/**
 * deserializeAws_json1_1SearchRecord
 */
const de_SearchRecord = (output: any, context: __SerdeContext): SearchRecord => {
  return {
    Endpoint: output.Endpoint != null ? de_Endpoint(output.Endpoint, context) : undefined,
    Experiment: output.Experiment != null ? de_Experiment(output.Experiment, context) : undefined,
    FeatureGroup: output.FeatureGroup != null ? de_FeatureGroup(output.FeatureGroup, context) : undefined,
    FeatureMetadata: output.FeatureMetadata != null ? de_FeatureMetadata(output.FeatureMetadata, context) : undefined,
    HyperParameterTuningJob:
      output.HyperParameterTuningJob != null
        ? de_HyperParameterTuningJobSearchEntity(output.HyperParameterTuningJob, context)
        : undefined,
    Model: output.Model != null ? de_ModelDashboardModel(output.Model, context) : undefined,
    ModelCard: output.ModelCard != null ? de_ModelCard(output.ModelCard, context) : undefined,
    ModelPackage: output.ModelPackage != null ? de_ModelPackage(output.ModelPackage, context) : undefined,
    ModelPackageGroup:
      output.ModelPackageGroup != null ? de_ModelPackageGroup(output.ModelPackageGroup, context) : undefined,
    Pipeline: output.Pipeline != null ? de_Pipeline(output.Pipeline, context) : undefined,
    PipelineExecution:
      output.PipelineExecution != null ? de_PipelineExecution(output.PipelineExecution, context) : undefined,
    Project: output.Project != null ? de_Project(output.Project, context) : undefined,
    TrainingJob: output.TrainingJob != null ? de_TrainingJob(output.TrainingJob, context) : undefined,
    Trial: output.Trial != null ? de_Trial(output.Trial, context) : undefined,
    TrialComponent: output.TrialComponent != null ? de_TrialComponent(output.TrialComponent, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1SearchResponse
 */
const de_SearchResponse = (output: any, context: __SerdeContext): SearchResponse => {
  return {
    NextToken: __expectString(output.NextToken),
    Results: output.Results != null ? de_SearchResultsList(output.Results, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1SearchResultsList
 */
const de_SearchResultsList = (output: any, context: __SerdeContext): SearchRecord[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SearchRecord(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1SecondaryStatusTransition
 */
const de_SecondaryStatusTransition = (output: any, context: __SerdeContext): SecondaryStatusTransition => {
  return {
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
    Status: __expectString(output.Status),
    StatusMessage: __expectString(output.StatusMessage),
  } as any;
};

/**
 * deserializeAws_json1_1SecondaryStatusTransitions
 */
const de_SecondaryStatusTransitions = (output: any, context: __SerdeContext): SecondaryStatusTransition[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SecondaryStatusTransition(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1SecurityGroupIds
 */
const de_SecurityGroupIds = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1SendPipelineExecutionStepFailureResponse
 */
const de_SendPipelineExecutionStepFailureResponse = (
  output: any,
  context: __SerdeContext
): SendPipelineExecutionStepFailureResponse => {
  return {
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
  } as any;
};

/**
 * deserializeAws_json1_1SendPipelineExecutionStepSuccessResponse
 */
const de_SendPipelineExecutionStepSuccessResponse = (
  output: any,
  context: __SerdeContext
): SendPipelineExecutionStepSuccessResponse => {
  return {
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
  } as any;
};

/**
 * deserializeAws_json1_1ServiceCatalogProvisionedProductDetails
 */
const de_ServiceCatalogProvisionedProductDetails = (
  output: any,
  context: __SerdeContext
): ServiceCatalogProvisionedProductDetails => {
  return {
    ProvisionedProductId: __expectString(output.ProvisionedProductId),
    ProvisionedProductStatusMessage: __expectString(output.ProvisionedProductStatusMessage),
  } as any;
};

/**
 * deserializeAws_json1_1ServiceCatalogProvisioningDetails
 */
const de_ServiceCatalogProvisioningDetails = (
  output: any,
  context: __SerdeContext
): ServiceCatalogProvisioningDetails => {
  return {
    PathId: __expectString(output.PathId),
    ProductId: __expectString(output.ProductId),
    ProvisioningArtifactId: __expectString(output.ProvisioningArtifactId),
    ProvisioningParameters:
      output.ProvisioningParameters != null
        ? de_ProvisioningParameters(output.ProvisioningParameters, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1ShadowModeConfig
 */
const de_ShadowModeConfig = (output: any, context: __SerdeContext): ShadowModeConfig => {
  return {
    ShadowModelVariants:
      output.ShadowModelVariants != null
        ? de_ShadowModelVariantConfigList(output.ShadowModelVariants, context)
        : undefined,
    SourceModelVariantName: __expectString(output.SourceModelVariantName),
  } as any;
};

/**
 * deserializeAws_json1_1ShadowModelVariantConfig
 */
const de_ShadowModelVariantConfig = (output: any, context: __SerdeContext): ShadowModelVariantConfig => {
  return {
    SamplingPercentage: __expectInt32(output.SamplingPercentage),
    ShadowModelVariantName: __expectString(output.ShadowModelVariantName),
  } as any;
};

/**
 * deserializeAws_json1_1ShadowModelVariantConfigList
 */
const de_ShadowModelVariantConfigList = (output: any, context: __SerdeContext): ShadowModelVariantConfig[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_ShadowModelVariantConfig(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1SharingSettings
 */
const de_SharingSettings = (output: any, context: __SerdeContext): SharingSettings => {
  return {
    NotebookOutputOption: __expectString(output.NotebookOutputOption),
    S3KmsKeyId: __expectString(output.S3KmsKeyId),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1ShuffleConfig
 */
const de_ShuffleConfig = (output: any, context: __SerdeContext): ShuffleConfig => {
  return {
    Seed: __expectLong(output.Seed),
  } as any;
};

/**
 * deserializeAws_json1_1SourceAlgorithm
 */
const de_SourceAlgorithm = (output: any, context: __SerdeContext): SourceAlgorithm => {
  return {
    AlgorithmName: __expectString(output.AlgorithmName),
    ModelDataUrl: __expectString(output.ModelDataUrl),
  } as any;
};

/**
 * deserializeAws_json1_1SourceAlgorithmList
 */
const de_SourceAlgorithmList = (output: any, context: __SerdeContext): SourceAlgorithm[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SourceAlgorithm(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1SourceAlgorithmSpecification
 */
const de_SourceAlgorithmSpecification = (output: any, context: __SerdeContext): SourceAlgorithmSpecification => {
  return {
    SourceAlgorithms:
      output.SourceAlgorithms != null ? de_SourceAlgorithmList(output.SourceAlgorithms, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1SourceIpConfig
 */
const de_SourceIpConfig = (output: any, context: __SerdeContext): SourceIpConfig => {
  return {
    Cidrs: output.Cidrs != null ? de_Cidrs(output.Cidrs, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1SpaceDetails
 */
const de_SpaceDetails = (output: any, context: __SerdeContext): SpaceDetails => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DomainId: __expectString(output.DomainId),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    SpaceName: __expectString(output.SpaceName),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1SpaceList
 */
const de_SpaceList = (output: any, context: __SerdeContext): SpaceDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SpaceDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1SpaceSettings
 */
const de_SpaceSettings = (output: any, context: __SerdeContext): SpaceSettings => {
  return {
    JupyterServerAppSettings:
      output.JupyterServerAppSettings != null
        ? de_JupyterServerAppSettings(output.JupyterServerAppSettings, context)
        : undefined,
    KernelGatewayAppSettings:
      output.KernelGatewayAppSettings != null
        ? de_KernelGatewayAppSettings(output.KernelGatewayAppSettings, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1StartInferenceExperimentResponse
 */
const de_StartInferenceExperimentResponse = (
  output: any,
  context: __SerdeContext
): StartInferenceExperimentResponse => {
  return {
    InferenceExperimentArn: __expectString(output.InferenceExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1StartPipelineExecutionResponse
 */
const de_StartPipelineExecutionResponse = (output: any, context: __SerdeContext): StartPipelineExecutionResponse => {
  return {
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
  } as any;
};

/**
 * deserializeAws_json1_1StopInferenceExperimentResponse
 */
const de_StopInferenceExperimentResponse = (output: any, context: __SerdeContext): StopInferenceExperimentResponse => {
  return {
    InferenceExperimentArn: __expectString(output.InferenceExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1StoppingCondition
 */
const de_StoppingCondition = (output: any, context: __SerdeContext): StoppingCondition => {
  return {
    MaxRuntimeInSeconds: __expectInt32(output.MaxRuntimeInSeconds),
    MaxWaitTimeInSeconds: __expectInt32(output.MaxWaitTimeInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1StopPipelineExecutionResponse
 */
const de_StopPipelineExecutionResponse = (output: any, context: __SerdeContext): StopPipelineExecutionResponse => {
  return {
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
  } as any;
};

/**
 * deserializeAws_json1_1StudioLifecycleConfigDetails
 */
const de_StudioLifecycleConfigDetails = (output: any, context: __SerdeContext): StudioLifecycleConfigDetails => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    StudioLifecycleConfigAppType: __expectString(output.StudioLifecycleConfigAppType),
    StudioLifecycleConfigArn: __expectString(output.StudioLifecycleConfigArn),
    StudioLifecycleConfigName: __expectString(output.StudioLifecycleConfigName),
  } as any;
};

/**
 * deserializeAws_json1_1StudioLifecycleConfigsList
 */
const de_StudioLifecycleConfigsList = (output: any, context: __SerdeContext): StudioLifecycleConfigDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_StudioLifecycleConfigDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Subnets
 */
const de_Subnets = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1SubscribedWorkteam
 */
const de_SubscribedWorkteam = (output: any, context: __SerdeContext): SubscribedWorkteam => {
  return {
    ListingId: __expectString(output.ListingId),
    MarketplaceDescription: __expectString(output.MarketplaceDescription),
    MarketplaceTitle: __expectString(output.MarketplaceTitle),
    SellerName: __expectString(output.SellerName),
    WorkteamArn: __expectString(output.WorkteamArn),
  } as any;
};

/**
 * deserializeAws_json1_1SubscribedWorkteams
 */
const de_SubscribedWorkteams = (output: any, context: __SerdeContext): SubscribedWorkteam[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_SubscribedWorkteam(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1Tag
 */
const de_Tag = (output: any, context: __SerdeContext): Tag => {
  return {
    Key: __expectString(output.Key),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1TagList
 */
const de_TagList = (output: any, context: __SerdeContext): Tag[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Tag(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TargetPlatform
 */
const de_TargetPlatform = (output: any, context: __SerdeContext): TargetPlatform => {
  return {
    Accelerator: __expectString(output.Accelerator),
    Arch: __expectString(output.Arch),
    Os: __expectString(output.Os),
  } as any;
};

/**
 * deserializeAws_json1_1TaskKeywords
 */
const de_TaskKeywords = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TensorBoardAppSettings
 */
const de_TensorBoardAppSettings = (output: any, context: __SerdeContext): TensorBoardAppSettings => {
  return {
    DefaultResourceSpec:
      output.DefaultResourceSpec != null ? de_ResourceSpec(output.DefaultResourceSpec, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TensorBoardOutputConfig
 */
const de_TensorBoardOutputConfig = (output: any, context: __SerdeContext): TensorBoardOutputConfig => {
  return {
    LocalPath: __expectString(output.LocalPath),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1TextClassificationJobConfig
 */
const de_TextClassificationJobConfig = (output: any, context: __SerdeContext): TextClassificationJobConfig => {
  return {
    CompletionCriteria:
      output.CompletionCriteria != null
        ? de_AutoMLJobCompletionCriteria(output.CompletionCriteria, context)
        : undefined,
    ContentColumn: __expectString(output.ContentColumn),
    TargetLabelColumn: __expectString(output.TargetLabelColumn),
  } as any;
};

/**
 * deserializeAws_json1_1TimeSeriesForecastingSettings
 */
const de_TimeSeriesForecastingSettings = (output: any, context: __SerdeContext): TimeSeriesForecastingSettings => {
  return {
    AmazonForecastRoleArn: __expectString(output.AmazonForecastRoleArn),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1TrafficPattern
 */
const de_TrafficPattern = (output: any, context: __SerdeContext): TrafficPattern => {
  return {
    Phases: output.Phases != null ? de_Phases(output.Phases, context) : undefined,
    TrafficType: __expectString(output.TrafficType),
  } as any;
};

/**
 * deserializeAws_json1_1TrafficRoutingConfig
 */
const de_TrafficRoutingConfig = (output: any, context: __SerdeContext): TrafficRoutingConfig => {
  return {
    CanarySize: output.CanarySize != null ? de_CapacitySize(output.CanarySize, context) : undefined,
    LinearStepSize: output.LinearStepSize != null ? de_CapacitySize(output.LinearStepSize, context) : undefined,
    Type: __expectString(output.Type),
    WaitIntervalInSeconds: __expectInt32(output.WaitIntervalInSeconds),
  } as any;
};

/**
 * deserializeAws_json1_1TrainingContainerArguments
 */
const de_TrainingContainerArguments = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrainingContainerEntrypoint
 */
const de_TrainingContainerEntrypoint = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrainingEnvironmentMap
 */
const de_TrainingEnvironmentMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1TrainingImageConfig
 */
const de_TrainingImageConfig = (output: any, context: __SerdeContext): TrainingImageConfig => {
  return {
    TrainingRepositoryAccessMode: __expectString(output.TrainingRepositoryAccessMode),
    TrainingRepositoryAuthConfig:
      output.TrainingRepositoryAuthConfig != null
        ? de_TrainingRepositoryAuthConfig(output.TrainingRepositoryAuthConfig, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TrainingInstanceTypes
 */
const de_TrainingInstanceTypes = (output: any, context: __SerdeContext): (TrainingInstanceType | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrainingJob
 */
const de_TrainingJob = (output: any, context: __SerdeContext): TrainingJob => {
  return {
    AlgorithmSpecification:
      output.AlgorithmSpecification != null
        ? de_AlgorithmSpecification(output.AlgorithmSpecification, context)
        : undefined,
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    BillableTimeInSeconds: __expectInt32(output.BillableTimeInSeconds),
    CheckpointConfig:
      output.CheckpointConfig != null ? de_CheckpointConfig(output.CheckpointConfig, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DebugHookConfig: output.DebugHookConfig != null ? de_DebugHookConfig(output.DebugHookConfig, context) : undefined,
    DebugRuleConfigurations:
      output.DebugRuleConfigurations != null
        ? de_DebugRuleConfigurations(output.DebugRuleConfigurations, context)
        : undefined,
    DebugRuleEvaluationStatuses:
      output.DebugRuleEvaluationStatuses != null
        ? de_DebugRuleEvaluationStatuses(output.DebugRuleEvaluationStatuses, context)
        : undefined,
    EnableInterContainerTrafficEncryption: __expectBoolean(output.EnableInterContainerTrafficEncryption),
    EnableManagedSpotTraining: __expectBoolean(output.EnableManagedSpotTraining),
    EnableNetworkIsolation: __expectBoolean(output.EnableNetworkIsolation),
    Environment: output.Environment != null ? de_TrainingEnvironmentMap(output.Environment, context) : undefined,
    ExperimentConfig:
      output.ExperimentConfig != null ? de_ExperimentConfig(output.ExperimentConfig, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    FinalMetricDataList:
      output.FinalMetricDataList != null ? de_FinalMetricDataList(output.FinalMetricDataList, context) : undefined,
    HyperParameters: output.HyperParameters != null ? de_HyperParameters(output.HyperParameters, context) : undefined,
    InputDataConfig: output.InputDataConfig != null ? de_InputDataConfig(output.InputDataConfig, context) : undefined,
    LabelingJobArn: __expectString(output.LabelingJobArn),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    ModelArtifacts: output.ModelArtifacts != null ? de_ModelArtifacts(output.ModelArtifacts, context) : undefined,
    OutputDataConfig:
      output.OutputDataConfig != null ? de_OutputDataConfig(output.OutputDataConfig, context) : undefined,
    ResourceConfig: output.ResourceConfig != null ? de_ResourceConfig(output.ResourceConfig, context) : undefined,
    RetryStrategy: output.RetryStrategy != null ? de_RetryStrategy(output.RetryStrategy, context) : undefined,
    RoleArn: __expectString(output.RoleArn),
    SecondaryStatus: __expectString(output.SecondaryStatus),
    SecondaryStatusTransitions:
      output.SecondaryStatusTransitions != null
        ? de_SecondaryStatusTransitions(output.SecondaryStatusTransitions, context)
        : undefined,
    StoppingCondition:
      output.StoppingCondition != null ? de_StoppingCondition(output.StoppingCondition, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    TensorBoardOutputConfig:
      output.TensorBoardOutputConfig != null
        ? de_TensorBoardOutputConfig(output.TensorBoardOutputConfig, context)
        : undefined,
    TrainingEndTime:
      output.TrainingEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TrainingEndTime)))
        : undefined,
    TrainingJobArn: __expectString(output.TrainingJobArn),
    TrainingJobName: __expectString(output.TrainingJobName),
    TrainingJobStatus: __expectString(output.TrainingJobStatus),
    TrainingStartTime:
      output.TrainingStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TrainingStartTime)))
        : undefined,
    TrainingTimeInSeconds: __expectInt32(output.TrainingTimeInSeconds),
    TuningJobArn: __expectString(output.TuningJobArn),
    VpcConfig: output.VpcConfig != null ? de_VpcConfig(output.VpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TrainingJobDefinition
 */
const de_TrainingJobDefinition = (output: any, context: __SerdeContext): TrainingJobDefinition => {
  return {
    HyperParameters: output.HyperParameters != null ? de_HyperParameters(output.HyperParameters, context) : undefined,
    InputDataConfig: output.InputDataConfig != null ? de_InputDataConfig(output.InputDataConfig, context) : undefined,
    OutputDataConfig:
      output.OutputDataConfig != null ? de_OutputDataConfig(output.OutputDataConfig, context) : undefined,
    ResourceConfig: output.ResourceConfig != null ? de_ResourceConfig(output.ResourceConfig, context) : undefined,
    StoppingCondition:
      output.StoppingCondition != null ? de_StoppingCondition(output.StoppingCondition, context) : undefined,
    TrainingInputMode: __expectString(output.TrainingInputMode),
  } as any;
};

/**
 * deserializeAws_json1_1TrainingJobStatusCounters
 */
const de_TrainingJobStatusCounters = (output: any, context: __SerdeContext): TrainingJobStatusCounters => {
  return {
    Completed: __expectInt32(output.Completed),
    InProgress: __expectInt32(output.InProgress),
    NonRetryableError: __expectInt32(output.NonRetryableError),
    RetryableError: __expectInt32(output.RetryableError),
    Stopped: __expectInt32(output.Stopped),
  } as any;
};

/**
 * deserializeAws_json1_1TrainingJobStepMetadata
 */
const de_TrainingJobStepMetadata = (output: any, context: __SerdeContext): TrainingJobStepMetadata => {
  return {
    Arn: __expectString(output.Arn),
  } as any;
};

/**
 * deserializeAws_json1_1TrainingJobSummaries
 */
const de_TrainingJobSummaries = (output: any, context: __SerdeContext): TrainingJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_TrainingJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrainingJobSummary
 */
const de_TrainingJobSummary = (output: any, context: __SerdeContext): TrainingJobSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    TrainingEndTime:
      output.TrainingEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TrainingEndTime)))
        : undefined,
    TrainingJobArn: __expectString(output.TrainingJobArn),
    TrainingJobName: __expectString(output.TrainingJobName),
    TrainingJobStatus: __expectString(output.TrainingJobStatus),
    WarmPoolStatus: output.WarmPoolStatus != null ? de_WarmPoolStatus(output.WarmPoolStatus, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TrainingRepositoryAuthConfig
 */
const de_TrainingRepositoryAuthConfig = (output: any, context: __SerdeContext): TrainingRepositoryAuthConfig => {
  return {
    TrainingRepositoryCredentialsProviderArn: __expectString(output.TrainingRepositoryCredentialsProviderArn),
  } as any;
};

/**
 * deserializeAws_json1_1TrainingSpecification
 */
const de_TrainingSpecification = (output: any, context: __SerdeContext): TrainingSpecification => {
  return {
    MetricDefinitions:
      output.MetricDefinitions != null ? de_MetricDefinitionList(output.MetricDefinitions, context) : undefined,
    SupportedHyperParameters:
      output.SupportedHyperParameters != null
        ? de_HyperParameterSpecifications(output.SupportedHyperParameters, context)
        : undefined,
    SupportedTrainingInstanceTypes:
      output.SupportedTrainingInstanceTypes != null
        ? de_TrainingInstanceTypes(output.SupportedTrainingInstanceTypes, context)
        : undefined,
    SupportedTuningJobObjectiveMetrics:
      output.SupportedTuningJobObjectiveMetrics != null
        ? de_HyperParameterTuningJobObjectives(output.SupportedTuningJobObjectiveMetrics, context)
        : undefined,
    SupportsDistributedTraining: __expectBoolean(output.SupportsDistributedTraining),
    TrainingChannels:
      output.TrainingChannels != null ? de_ChannelSpecifications(output.TrainingChannels, context) : undefined,
    TrainingImage: __expectString(output.TrainingImage),
    TrainingImageDigest: __expectString(output.TrainingImageDigest),
  } as any;
};

/**
 * deserializeAws_json1_1TransformDataSource
 */
const de_TransformDataSource = (output: any, context: __SerdeContext): TransformDataSource => {
  return {
    S3DataSource: output.S3DataSource != null ? de_TransformS3DataSource(output.S3DataSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TransformEnvironmentMap
 */
const de_TransformEnvironmentMap = (output: any, context: __SerdeContext): Record<string, string> => {
  return Object.entries(output).reduce((acc: Record<string, string>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = __expectString(value) as any;
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1TransformInput
 */
const de_TransformInput = (output: any, context: __SerdeContext): TransformInput => {
  return {
    CompressionType: __expectString(output.CompressionType),
    ContentType: __expectString(output.ContentType),
    DataSource: output.DataSource != null ? de_TransformDataSource(output.DataSource, context) : undefined,
    SplitType: __expectString(output.SplitType),
  } as any;
};

/**
 * deserializeAws_json1_1TransformInstanceTypes
 */
const de_TransformInstanceTypes = (output: any, context: __SerdeContext): (TransformInstanceType | string)[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TransformJob
 */
const de_TransformJob = (output: any, context: __SerdeContext): TransformJob => {
  return {
    AutoMLJobArn: __expectString(output.AutoMLJobArn),
    BatchStrategy: __expectString(output.BatchStrategy),
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DataProcessing: output.DataProcessing != null ? de_DataProcessing(output.DataProcessing, context) : undefined,
    Environment: output.Environment != null ? de_TransformEnvironmentMap(output.Environment, context) : undefined,
    ExperimentConfig:
      output.ExperimentConfig != null ? de_ExperimentConfig(output.ExperimentConfig, context) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LabelingJobArn: __expectString(output.LabelingJobArn),
    MaxConcurrentTransforms: __expectInt32(output.MaxConcurrentTransforms),
    MaxPayloadInMB: __expectInt32(output.MaxPayloadInMB),
    ModelClientConfig:
      output.ModelClientConfig != null ? de_ModelClientConfig(output.ModelClientConfig, context) : undefined,
    ModelName: __expectString(output.ModelName),
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    TransformEndTime:
      output.TransformEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TransformEndTime)))
        : undefined,
    TransformInput: output.TransformInput != null ? de_TransformInput(output.TransformInput, context) : undefined,
    TransformJobArn: __expectString(output.TransformJobArn),
    TransformJobName: __expectString(output.TransformJobName),
    TransformJobStatus: __expectString(output.TransformJobStatus),
    TransformOutput: output.TransformOutput != null ? de_TransformOutput(output.TransformOutput, context) : undefined,
    TransformResources:
      output.TransformResources != null ? de_TransformResources(output.TransformResources, context) : undefined,
    TransformStartTime:
      output.TransformStartTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TransformStartTime)))
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TransformJobDefinition
 */
const de_TransformJobDefinition = (output: any, context: __SerdeContext): TransformJobDefinition => {
  return {
    BatchStrategy: __expectString(output.BatchStrategy),
    Environment: output.Environment != null ? de_TransformEnvironmentMap(output.Environment, context) : undefined,
    MaxConcurrentTransforms: __expectInt32(output.MaxConcurrentTransforms),
    MaxPayloadInMB: __expectInt32(output.MaxPayloadInMB),
    TransformInput: output.TransformInput != null ? de_TransformInput(output.TransformInput, context) : undefined,
    TransformOutput: output.TransformOutput != null ? de_TransformOutput(output.TransformOutput, context) : undefined,
    TransformResources:
      output.TransformResources != null ? de_TransformResources(output.TransformResources, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TransformJobStepMetadata
 */
const de_TransformJobStepMetadata = (output: any, context: __SerdeContext): TransformJobStepMetadata => {
  return {
    Arn: __expectString(output.Arn),
  } as any;
};

/**
 * deserializeAws_json1_1TransformJobSummaries
 */
const de_TransformJobSummaries = (output: any, context: __SerdeContext): TransformJobSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_TransformJobSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TransformJobSummary
 */
const de_TransformJobSummary = (output: any, context: __SerdeContext): TransformJobSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    TransformEndTime:
      output.TransformEndTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TransformEndTime)))
        : undefined,
    TransformJobArn: __expectString(output.TransformJobArn),
    TransformJobName: __expectString(output.TransformJobName),
    TransformJobStatus: __expectString(output.TransformJobStatus),
  } as any;
};

/**
 * deserializeAws_json1_1TransformOutput
 */
const de_TransformOutput = (output: any, context: __SerdeContext): TransformOutput => {
  return {
    Accept: __expectString(output.Accept),
    AssembleWith: __expectString(output.AssembleWith),
    KmsKeyId: __expectString(output.KmsKeyId),
    S3OutputPath: __expectString(output.S3OutputPath),
  } as any;
};

/**
 * deserializeAws_json1_1TransformResources
 */
const de_TransformResources = (output: any, context: __SerdeContext): TransformResources => {
  return {
    InstanceCount: __expectInt32(output.InstanceCount),
    InstanceType: __expectString(output.InstanceType),
    VolumeKmsKeyId: __expectString(output.VolumeKmsKeyId),
  } as any;
};

/**
 * deserializeAws_json1_1TransformS3DataSource
 */
const de_TransformS3DataSource = (output: any, context: __SerdeContext): TransformS3DataSource => {
  return {
    S3DataType: __expectString(output.S3DataType),
    S3Uri: __expectString(output.S3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1Trial
 */
const de_Trial = (output: any, context: __SerdeContext): Trial => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    ExperimentName: __expectString(output.ExperimentName),
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    Source: output.Source != null ? de_TrialSource(output.Source, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    TrialArn: __expectString(output.TrialArn),
    TrialComponentSummaries:
      output.TrialComponentSummaries != null
        ? de_TrialComponentSimpleSummaries(output.TrialComponentSummaries, context)
        : undefined,
    TrialName: __expectString(output.TrialName),
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponent
 */
const de_TrialComponent = (output: any, context: __SerdeContext): TrialComponent => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    InputArtifacts:
      output.InputArtifacts != null ? de_TrialComponentArtifacts(output.InputArtifacts, context) : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    LineageGroupArn: __expectString(output.LineageGroupArn),
    MetadataProperties:
      output.MetadataProperties != null ? de_MetadataProperties(output.MetadataProperties, context) : undefined,
    Metrics: output.Metrics != null ? de_TrialComponentMetricSummaries(output.Metrics, context) : undefined,
    OutputArtifacts:
      output.OutputArtifacts != null ? de_TrialComponentArtifacts(output.OutputArtifacts, context) : undefined,
    Parameters: output.Parameters != null ? de_TrialComponentParameters(output.Parameters, context) : undefined,
    Parents: output.Parents != null ? de_Parents(output.Parents, context) : undefined,
    RunName: __expectString(output.RunName),
    Source: output.Source != null ? de_TrialComponentSource(output.Source, context) : undefined,
    SourceDetail: output.SourceDetail != null ? de_TrialComponentSourceDetail(output.SourceDetail, context) : undefined,
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
    Status: output.Status != null ? de_TrialComponentStatus(output.Status, context) : undefined,
    Tags: output.Tags != null ? de_TagList(output.Tags, context) : undefined,
    TrialComponentArn: __expectString(output.TrialComponentArn),
    TrialComponentName: __expectString(output.TrialComponentName),
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponentArtifact
 */
const de_TrialComponentArtifact = (output: any, context: __SerdeContext): TrialComponentArtifact => {
  return {
    MediaType: __expectString(output.MediaType),
    Value: __expectString(output.Value),
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponentArtifacts
 */
const de_TrialComponentArtifacts = (output: any, context: __SerdeContext): Record<string, TrialComponentArtifact> => {
  return Object.entries(output).reduce((acc: Record<string, TrialComponentArtifact>, [key, value]: [string, any]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = de_TrialComponentArtifact(value, context);
    return acc;
  }, {});
};

/**
 * deserializeAws_json1_1TrialComponentMetricSummaries
 */
const de_TrialComponentMetricSummaries = (output: any, context: __SerdeContext): TrialComponentMetricSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_TrialComponentMetricSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrialComponentMetricSummary
 */
const de_TrialComponentMetricSummary = (output: any, context: __SerdeContext): TrialComponentMetricSummary => {
  return {
    Avg: __limitedParseDouble(output.Avg),
    Count: __expectInt32(output.Count),
    Last: __limitedParseDouble(output.Last),
    Max: __limitedParseDouble(output.Max),
    MetricName: __expectString(output.MetricName),
    Min: __limitedParseDouble(output.Min),
    SourceArn: __expectString(output.SourceArn),
    StdDev: __limitedParseDouble(output.StdDev),
    TimeStamp:
      output.TimeStamp != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TimeStamp))) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponentParameters
 */
const de_TrialComponentParameters = (
  output: any,
  context: __SerdeContext
): Record<string, TrialComponentParameterValue> => {
  return Object.entries(output).reduce(
    (acc: Record<string, TrialComponentParameterValue>, [key, value]: [string, any]) => {
      if (value === null) {
        return acc;
      }
      acc[key] = de_TrialComponentParameterValue(__expectUnion(value), context);
      return acc;
    },
    {}
  );
};

/**
 * deserializeAws_json1_1TrialComponentParameterValue
 */
const de_TrialComponentParameterValue = (output: any, context: __SerdeContext): TrialComponentParameterValue => {
  if (__limitedParseDouble(output.NumberValue) !== undefined) {
    return { NumberValue: __limitedParseDouble(output.NumberValue) as any };
  }
  if (__expectString(output.StringValue) !== undefined) {
    return { StringValue: __expectString(output.StringValue) as any };
  }
  return { $unknown: Object.entries(output)[0] };
};

/**
 * deserializeAws_json1_1TrialComponentSimpleSummaries
 */
const de_TrialComponentSimpleSummaries = (output: any, context: __SerdeContext): TrialComponentSimpleSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_TrialComponentSimpleSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrialComponentSimpleSummary
 */
const de_TrialComponentSimpleSummary = (output: any, context: __SerdeContext): TrialComponentSimpleSummary => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    TrialComponentArn: __expectString(output.TrialComponentArn),
    TrialComponentName: __expectString(output.TrialComponentName),
    TrialComponentSource:
      output.TrialComponentSource != null ? de_TrialComponentSource(output.TrialComponentSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponentSource
 */
const de_TrialComponentSource = (output: any, context: __SerdeContext): TrialComponentSource => {
  return {
    SourceArn: __expectString(output.SourceArn),
    SourceType: __expectString(output.SourceType),
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponentSourceDetail
 */
const de_TrialComponentSourceDetail = (output: any, context: __SerdeContext): TrialComponentSourceDetail => {
  return {
    ProcessingJob: output.ProcessingJob != null ? de_ProcessingJob(output.ProcessingJob, context) : undefined,
    SourceArn: __expectString(output.SourceArn),
    TrainingJob: output.TrainingJob != null ? de_TrainingJob(output.TrainingJob, context) : undefined,
    TransformJob: output.TransformJob != null ? de_TransformJob(output.TransformJob, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponentSources
 */
const de_TrialComponentSources = (output: any, context: __SerdeContext): TrialComponentSource[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_TrialComponentSource(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrialComponentStatus
 */
const de_TrialComponentStatus = (output: any, context: __SerdeContext): TrialComponentStatus => {
  return {
    Message: __expectString(output.Message),
    PrimaryStatus: __expectString(output.PrimaryStatus),
  } as any;
};

/**
 * deserializeAws_json1_1TrialComponentSummaries
 */
const de_TrialComponentSummaries = (output: any, context: __SerdeContext): TrialComponentSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_TrialComponentSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrialComponentSummary
 */
const de_TrialComponentSummary = (output: any, context: __SerdeContext): TrialComponentSummary => {
  return {
    CreatedBy: output.CreatedBy != null ? de_UserContext(output.CreatedBy, context) : undefined,
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    EndTime:
      output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,
    LastModifiedBy: output.LastModifiedBy != null ? de_UserContext(output.LastModifiedBy, context) : undefined,
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    StartTime:
      output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,
    Status: output.Status != null ? de_TrialComponentStatus(output.Status, context) : undefined,
    TrialComponentArn: __expectString(output.TrialComponentArn),
    TrialComponentName: __expectString(output.TrialComponentName),
    TrialComponentSource:
      output.TrialComponentSource != null ? de_TrialComponentSource(output.TrialComponentSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TrialSource
 */
const de_TrialSource = (output: any, context: __SerdeContext): TrialSource => {
  return {
    SourceArn: __expectString(output.SourceArn),
    SourceType: __expectString(output.SourceType),
  } as any;
};

/**
 * deserializeAws_json1_1TrialSummaries
 */
const de_TrialSummaries = (output: any, context: __SerdeContext): TrialSummary[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_TrialSummary(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1TrialSummary
 */
const de_TrialSummary = (output: any, context: __SerdeContext): TrialSummary => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DisplayName: __expectString(output.DisplayName),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    TrialArn: __expectString(output.TrialArn),
    TrialName: __expectString(output.TrialName),
    TrialSource: output.TrialSource != null ? de_TrialSource(output.TrialSource, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1TuningJobCompletionCriteria
 */
const de_TuningJobCompletionCriteria = (output: any, context: __SerdeContext): TuningJobCompletionCriteria => {
  return {
    BestObjectiveNotImproving:
      output.BestObjectiveNotImproving != null
        ? de_BestObjectiveNotImproving(output.BestObjectiveNotImproving, context)
        : undefined,
    ConvergenceDetected:
      output.ConvergenceDetected != null ? de_ConvergenceDetected(output.ConvergenceDetected, context) : undefined,
    TargetObjectiveMetricValue: __limitedParseFloat32(output.TargetObjectiveMetricValue),
  } as any;
};

/**
 * deserializeAws_json1_1TuningJobStepMetaData
 */
const de_TuningJobStepMetaData = (output: any, context: __SerdeContext): TuningJobStepMetaData => {
  return {
    Arn: __expectString(output.Arn),
  } as any;
};

/**
 * deserializeAws_json1_1UiConfig
 */
const de_UiConfig = (output: any, context: __SerdeContext): UiConfig => {
  return {
    HumanTaskUiArn: __expectString(output.HumanTaskUiArn),
    UiTemplateS3Uri: __expectString(output.UiTemplateS3Uri),
  } as any;
};

/**
 * deserializeAws_json1_1UiTemplateInfo
 */
const de_UiTemplateInfo = (output: any, context: __SerdeContext): UiTemplateInfo => {
  return {
    ContentSha256: __expectString(output.ContentSha256),
    Url: __expectString(output.Url),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateActionResponse
 */
const de_UpdateActionResponse = (output: any, context: __SerdeContext): UpdateActionResponse => {
  return {
    ActionArn: __expectString(output.ActionArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateAppImageConfigResponse
 */
const de_UpdateAppImageConfigResponse = (output: any, context: __SerdeContext): UpdateAppImageConfigResponse => {
  return {
    AppImageConfigArn: __expectString(output.AppImageConfigArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateArtifactResponse
 */
const de_UpdateArtifactResponse = (output: any, context: __SerdeContext): UpdateArtifactResponse => {
  return {
    ArtifactArn: __expectString(output.ArtifactArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateCodeRepositoryOutput
 */
const de_UpdateCodeRepositoryOutput = (output: any, context: __SerdeContext): UpdateCodeRepositoryOutput => {
  return {
    CodeRepositoryArn: __expectString(output.CodeRepositoryArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateContextResponse
 */
const de_UpdateContextResponse = (output: any, context: __SerdeContext): UpdateContextResponse => {
  return {
    ContextArn: __expectString(output.ContextArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateDomainResponse
 */
const de_UpdateDomainResponse = (output: any, context: __SerdeContext): UpdateDomainResponse => {
  return {
    DomainArn: __expectString(output.DomainArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateEndpointOutput
 */
const de_UpdateEndpointOutput = (output: any, context: __SerdeContext): UpdateEndpointOutput => {
  return {
    EndpointArn: __expectString(output.EndpointArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateEndpointWeightsAndCapacitiesOutput
 */
const de_UpdateEndpointWeightsAndCapacitiesOutput = (
  output: any,
  context: __SerdeContext
): UpdateEndpointWeightsAndCapacitiesOutput => {
  return {
    EndpointArn: __expectString(output.EndpointArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateExperimentResponse
 */
const de_UpdateExperimentResponse = (output: any, context: __SerdeContext): UpdateExperimentResponse => {
  return {
    ExperimentArn: __expectString(output.ExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateFeatureGroupResponse
 */
const de_UpdateFeatureGroupResponse = (output: any, context: __SerdeContext): UpdateFeatureGroupResponse => {
  return {
    FeatureGroupArn: __expectString(output.FeatureGroupArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateHubResponse
 */
const de_UpdateHubResponse = (output: any, context: __SerdeContext): UpdateHubResponse => {
  return {
    HubArn: __expectString(output.HubArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateImageResponse
 */
const de_UpdateImageResponse = (output: any, context: __SerdeContext): UpdateImageResponse => {
  return {
    ImageArn: __expectString(output.ImageArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateImageVersionResponse
 */
const de_UpdateImageVersionResponse = (output: any, context: __SerdeContext): UpdateImageVersionResponse => {
  return {
    ImageVersionArn: __expectString(output.ImageVersionArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateInferenceExperimentResponse
 */
const de_UpdateInferenceExperimentResponse = (
  output: any,
  context: __SerdeContext
): UpdateInferenceExperimentResponse => {
  return {
    InferenceExperimentArn: __expectString(output.InferenceExperimentArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateModelCardResponse
 */
const de_UpdateModelCardResponse = (output: any, context: __SerdeContext): UpdateModelCardResponse => {
  return {
    ModelCardArn: __expectString(output.ModelCardArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateModelPackageOutput
 */
const de_UpdateModelPackageOutput = (output: any, context: __SerdeContext): UpdateModelPackageOutput => {
  return {
    ModelPackageArn: __expectString(output.ModelPackageArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateMonitoringAlertResponse
 */
const de_UpdateMonitoringAlertResponse = (output: any, context: __SerdeContext): UpdateMonitoringAlertResponse => {
  return {
    MonitoringAlertName: __expectString(output.MonitoringAlertName),
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateMonitoringScheduleResponse
 */
const de_UpdateMonitoringScheduleResponse = (
  output: any,
  context: __SerdeContext
): UpdateMonitoringScheduleResponse => {
  return {
    MonitoringScheduleArn: __expectString(output.MonitoringScheduleArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateNotebookInstanceLifecycleConfigOutput
 */
const de_UpdateNotebookInstanceLifecycleConfigOutput = (
  output: any,
  context: __SerdeContext
): UpdateNotebookInstanceLifecycleConfigOutput => {
  return {} as any;
};

/**
 * deserializeAws_json1_1UpdateNotebookInstanceOutput
 */
const de_UpdateNotebookInstanceOutput = (output: any, context: __SerdeContext): UpdateNotebookInstanceOutput => {
  return {} as any;
};

/**
 * deserializeAws_json1_1UpdatePipelineExecutionResponse
 */
const de_UpdatePipelineExecutionResponse = (output: any, context: __SerdeContext): UpdatePipelineExecutionResponse => {
  return {
    PipelineExecutionArn: __expectString(output.PipelineExecutionArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdatePipelineResponse
 */
const de_UpdatePipelineResponse = (output: any, context: __SerdeContext): UpdatePipelineResponse => {
  return {
    PipelineArn: __expectString(output.PipelineArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateProjectOutput
 */
const de_UpdateProjectOutput = (output: any, context: __SerdeContext): UpdateProjectOutput => {
  return {
    ProjectArn: __expectString(output.ProjectArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateSpaceResponse
 */
const de_UpdateSpaceResponse = (output: any, context: __SerdeContext): UpdateSpaceResponse => {
  return {
    SpaceArn: __expectString(output.SpaceArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateTrainingJobResponse
 */
const de_UpdateTrainingJobResponse = (output: any, context: __SerdeContext): UpdateTrainingJobResponse => {
  return {
    TrainingJobArn: __expectString(output.TrainingJobArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateTrialComponentResponse
 */
const de_UpdateTrialComponentResponse = (output: any, context: __SerdeContext): UpdateTrialComponentResponse => {
  return {
    TrialComponentArn: __expectString(output.TrialComponentArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateTrialResponse
 */
const de_UpdateTrialResponse = (output: any, context: __SerdeContext): UpdateTrialResponse => {
  return {
    TrialArn: __expectString(output.TrialArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateUserProfileResponse
 */
const de_UpdateUserProfileResponse = (output: any, context: __SerdeContext): UpdateUserProfileResponse => {
  return {
    UserProfileArn: __expectString(output.UserProfileArn),
  } as any;
};

/**
 * deserializeAws_json1_1UpdateWorkforceResponse
 */
const de_UpdateWorkforceResponse = (output: any, context: __SerdeContext): UpdateWorkforceResponse => {
  return {
    Workforce: output.Workforce != null ? de_Workforce(output.Workforce, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1UpdateWorkteamResponse
 */
const de_UpdateWorkteamResponse = (output: any, context: __SerdeContext): UpdateWorkteamResponse => {
  return {
    Workteam: output.Workteam != null ? de_Workteam(output.Workteam, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1USD
 */
const de_USD = (output: any, context: __SerdeContext): USD => {
  return {
    Cents: __expectInt32(output.Cents),
    Dollars: __expectInt32(output.Dollars),
    TenthFractionsOfACent: __expectInt32(output.TenthFractionsOfACent),
  } as any;
};

/**
 * deserializeAws_json1_1UserContext
 */
const de_UserContext = (output: any, context: __SerdeContext): UserContext => {
  return {
    DomainId: __expectString(output.DomainId),
    IamIdentity: output.IamIdentity != null ? de_IamIdentity(output.IamIdentity, context) : undefined,
    UserProfileArn: __expectString(output.UserProfileArn),
    UserProfileName: __expectString(output.UserProfileName),
  } as any;
};

/**
 * deserializeAws_json1_1UserProfileDetails
 */
const de_UserProfileDetails = (output: any, context: __SerdeContext): UserProfileDetails => {
  return {
    CreationTime:
      output.CreationTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationTime)))
        : undefined,
    DomainId: __expectString(output.DomainId),
    LastModifiedTime:
      output.LastModifiedTime != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedTime)))
        : undefined,
    Status: __expectString(output.Status),
    UserProfileName: __expectString(output.UserProfileName),
  } as any;
};

/**
 * deserializeAws_json1_1UserProfileList
 */
const de_UserProfileList = (output: any, context: __SerdeContext): UserProfileDetails[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_UserProfileDetails(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1UserSettings
 */
const de_UserSettings = (output: any, context: __SerdeContext): UserSettings => {
  return {
    CanvasAppSettings:
      output.CanvasAppSettings != null ? de_CanvasAppSettings(output.CanvasAppSettings, context) : undefined,
    ExecutionRole: __expectString(output.ExecutionRole),
    JupyterServerAppSettings:
      output.JupyterServerAppSettings != null
        ? de_JupyterServerAppSettings(output.JupyterServerAppSettings, context)
        : undefined,
    KernelGatewayAppSettings:
      output.KernelGatewayAppSettings != null
        ? de_KernelGatewayAppSettings(output.KernelGatewayAppSettings, context)
        : undefined,
    RSessionAppSettings:
      output.RSessionAppSettings != null ? de_RSessionAppSettings(output.RSessionAppSettings, context) : undefined,
    RStudioServerProAppSettings:
      output.RStudioServerProAppSettings != null
        ? de_RStudioServerProAppSettings(output.RStudioServerProAppSettings, context)
        : undefined,
    SecurityGroups: output.SecurityGroups != null ? de_SecurityGroupIds(output.SecurityGroups, context) : undefined,
    SharingSettings: output.SharingSettings != null ? de_SharingSettings(output.SharingSettings, context) : undefined,
    TensorBoardAppSettings:
      output.TensorBoardAppSettings != null
        ? de_TensorBoardAppSettings(output.TensorBoardAppSettings, context)
        : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1Vertex
 */
const de_Vertex = (output: any, context: __SerdeContext): Vertex => {
  return {
    Arn: __expectString(output.Arn),
    LineageType: __expectString(output.LineageType),
    Type: __expectString(output.Type),
  } as any;
};

/**
 * deserializeAws_json1_1Vertices
 */
const de_Vertices = (output: any, context: __SerdeContext): Vertex[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Vertex(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1VpcConfig
 */
const de_VpcConfig = (output: any, context: __SerdeContext): VpcConfig => {
  return {
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_VpcSecurityGroupIds(output.SecurityGroupIds, context) : undefined,
    Subnets: output.Subnets != null ? de_Subnets(output.Subnets, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1VpcSecurityGroupIds
 */
const de_VpcSecurityGroupIds = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1WarmPoolStatus
 */
const de_WarmPoolStatus = (output: any, context: __SerdeContext): WarmPoolStatus => {
  return {
    ResourceRetainedBillableTimeInSeconds: __expectInt32(output.ResourceRetainedBillableTimeInSeconds),
    ReusedByJob: __expectString(output.ReusedByJob),
    Status: __expectString(output.Status),
  } as any;
};

/**
 * deserializeAws_json1_1Workforce
 */
const de_Workforce = (output: any, context: __SerdeContext): Workforce => {
  return {
    CognitoConfig: output.CognitoConfig != null ? de_CognitoConfig(output.CognitoConfig, context) : undefined,
    CreateDate:
      output.CreateDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreateDate))) : undefined,
    FailureReason: __expectString(output.FailureReason),
    LastUpdatedDate:
      output.LastUpdatedDate != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedDate)))
        : undefined,
    OidcConfig: output.OidcConfig != null ? de_OidcConfigForResponse(output.OidcConfig, context) : undefined,
    SourceIpConfig: output.SourceIpConfig != null ? de_SourceIpConfig(output.SourceIpConfig, context) : undefined,
    Status: __expectString(output.Status),
    SubDomain: __expectString(output.SubDomain),
    WorkforceArn: __expectString(output.WorkforceArn),
    WorkforceName: __expectString(output.WorkforceName),
    WorkforceVpcConfig:
      output.WorkforceVpcConfig != null ? de_WorkforceVpcConfigResponse(output.WorkforceVpcConfig, context) : undefined,
  } as any;
};

/**
 * deserializeAws_json1_1Workforces
 */
const de_Workforces = (output: any, context: __SerdeContext): Workforce[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Workforce(entry, context);
    });
  return retVal;
};

/**
 * deserializeAws_json1_1WorkforceSecurityGroupIds
 */
const de_WorkforceSecurityGroupIds = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1WorkforceSubnets
 */
const de_WorkforceSubnets = (output: any, context: __SerdeContext): string[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return __expectString(entry) as any;
    });
  return retVal;
};

/**
 * deserializeAws_json1_1WorkforceVpcConfigResponse
 */
const de_WorkforceVpcConfigResponse = (output: any, context: __SerdeContext): WorkforceVpcConfigResponse => {
  return {
    SecurityGroupIds:
      output.SecurityGroupIds != null ? de_WorkforceSecurityGroupIds(output.SecurityGroupIds, context) : undefined,
    Subnets: output.Subnets != null ? de_WorkforceSubnets(output.Subnets, context) : undefined,
    VpcEndpointId: __expectString(output.VpcEndpointId),
    VpcId: __expectString(output.VpcId),
  } as any;
};

/**
 * deserializeAws_json1_1Workteam
 */
const de_Workteam = (output: any, context: __SerdeContext): Workteam => {
  return {
    CreateDate:
      output.CreateDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreateDate))) : undefined,
    Description: __expectString(output.Description),
    LastUpdatedDate:
      output.LastUpdatedDate != null
        ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedDate)))
        : undefined,
    MemberDefinitions:
      output.MemberDefinitions != null ? de_MemberDefinitions(output.MemberDefinitions, context) : undefined,
    NotificationConfiguration:
      output.NotificationConfiguration != null
        ? de_NotificationConfiguration(output.NotificationConfiguration, context)
        : undefined,
    ProductListingIds:
      output.ProductListingIds != null ? de_ProductListings(output.ProductListingIds, context) : undefined,
    SubDomain: __expectString(output.SubDomain),
    WorkforceArn: __expectString(output.WorkforceArn),
    WorkteamArn: __expectString(output.WorkteamArn),
    WorkteamName: __expectString(output.WorkteamName),
  } as any;
};

/**
 * deserializeAws_json1_1Workteams
 */
const de_Workteams = (output: any, context: __SerdeContext): Workteam[] => {
  const retVal = (output || [])
    .filter((e: any) => e != null)
    .map((entry: any) => {
      if (entry === null) {
        return null as any;
      }
      return de_Workteam(entry, context);
    });
  return retVal;
};

const deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({
  httpStatusCode: output.statusCode,
  requestId:
    output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"],
});

// Collect low-level response body stream to Uint8Array.
const collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {
  if (streamBody instanceof Uint8Array) {
    return Promise.resolve(streamBody);
  }
  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};

// Encode Uint8Array data into string with utf-8.
const collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>
  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));

const buildHttpRpcRequest = async (
  context: __SerdeContext,
  headers: __HeaderBag,
  path: string,
  resolvedHostname: string | undefined,
  body: any
): Promise<__HttpRequest> => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents: any = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers,
  };
  if (resolvedHostname !== undefined) {
    contents.hostname = resolvedHostname;
  }
  if (body !== undefined) {
    contents.body = body;
  }
  return new __HttpRequest(contents);
};
function sharedHeaders(operation: string): __HeaderBag {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `SageMaker.${operation}`,
  };
}

const parseBody = (streamBody: any, context: __SerdeContext): any =>
  collectBodyString(streamBody, context).then((encoded) => {
    if (encoded.length) {
      return JSON.parse(encoded);
    }
    return {};
  });

const parseErrorBody = async (errorBody: any, context: __SerdeContext) => {
  const value = await parseBody(errorBody, context);
  value.message = value.message ?? value.Message;
  return value;
};

/**
 * Load an error code for the aws.rest-json-1.1 protocol.
 */
const loadRestJsonErrorCode = (output: __HttpResponse, data: any): string | undefined => {
  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());

  const sanitizeErrorCode = (rawValue: string | number): string => {
    let cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  };

  const headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== undefined) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }

  if (data.code !== undefined) {
    return sanitizeErrorCode(data.code);
  }

  if (data["__type"] !== undefined) {
    return sanitizeErrorCode(data["__type"]);
  }
};
