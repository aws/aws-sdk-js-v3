// smithy-typescript generated code
import { ExceptionOptionType as __ExceptionOptionType, SENSITIVE_STRING } from "@smithy/smithy-client";

import { NotificationsContactsServiceException as __BaseException } from "./NotificationsContactsServiceException";

/**
 * <p>You do not have sufficient access to perform this action.</p>
 * @public
 */
export class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException" = "AccessDeniedException";
  readonly $fault: "client" = "client";
  /**
   * @internal
   */
  constructor(opts: __ExceptionOptionType<AccessDeniedException, __BaseException>) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts,
    });
    Object.setPrototypeOf(this, AccessDeniedException.prototype);
  }
}

/**
 * @public
 */
export interface ActivateEmailContactRequest {
  /**
   * <p>The Amazon Resource Name (ARN) of the resource.</p>
   * @public
   */
  arn: string | undefined;

  /**
   * <p>The activation code for this email contact.</p>
   *          <p>An email contact has a maximum of five activation attempts. Activation codes expire after 12 hours and are generated by the <a href="https://docs.aws.amazon.com/notificationscontacts/latest/APIReference/API_SendActivationCode.html">SendActivationCode</a> API action.</p>
   * @public
   */
  code: string | undefined;
}

/**
 * @public
 */
export interface ActivateEmailContactResponse {}

/**
 * <p>Updating or deleting a resource can cause an inconsistent state.</p>
 * @public
 */
export class ConflictException extends __BaseException {
  readonly name: "ConflictException" = "ConflictException";
  readonly $fault: "client" = "client";
  /**
   * <p>The resource ID that prompted the conflict error.</p>
   * @public
   */
  resourceId: string | undefined;

  /**
   * <p>The resource type that prompted the conflict error.</p>
   * @public
   */
  resourceType: string | undefined;

  /**
   * @internal
   */
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts,
    });
    Object.setPrototypeOf(this, ConflictException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
}

/**
 * <p>Unexpected error during processing of request.</p>
 * @public
 */
export class InternalServerException extends __BaseException {
  readonly name: "InternalServerException" = "InternalServerException";
  readonly $fault: "server" = "server";
  $retryable = {};
  /**
   * @internal
   */
  constructor(opts: __ExceptionOptionType<InternalServerException, __BaseException>) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts,
    });
    Object.setPrototypeOf(this, InternalServerException.prototype);
  }
}

/**
 * <p>Your request references a resource which does not exist. </p>
 * @public
 */
export class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException" = "ResourceNotFoundException";
  readonly $fault: "client" = "client";
  /**
   * <p>The ID of the resource that wasn't found.</p>
   * @public
   */
  resourceId: string | undefined;

  /**
   * <p>The type of resource that wasn't found.</p>
   * @public
   */
  resourceType: string | undefined;

  /**
   * @internal
   */
  constructor(opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts,
    });
    Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
}

/**
 * <p>The request was denied due to request throttling.</p>
 * @public
 */
export class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException" = "ThrottlingException";
  readonly $fault: "client" = "client";
  $retryable = {
    throttling: true,
  };
  /**
   * <p>Identifies the service being throttled.</p>
   * @public
   */
  serviceCode?: string | undefined;

  /**
   * <p>Identifies the quota that is being throttled.</p>
   * @public
   */
  quotaCode?: string | undefined;

  /**
   * <p>The number of seconds a client should wait before retrying the request.</p>
   * @public
   */
  retryAfterSeconds?: number | undefined;

  /**
   * @internal
   */
  constructor(opts: __ExceptionOptionType<ThrottlingException, __BaseException>) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts,
    });
    Object.setPrototypeOf(this, ThrottlingException.prototype);
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
}

/**
 * <p>Stores information about a field passed inside a request that resulted in an exception.</p>
 * @public
 */
export interface ValidationExceptionField {
  /**
   * <p>The field name where the invalid entry was detected.</p>
   * @public
   */
  name: string | undefined;

  /**
   * <p>A message with the reason for the validation exception error.</p>
   * @public
   */
  message: string | undefined;
}

/**
 * @public
 * @enum
 */
export const ValidationExceptionReason = {
  FIELD_VALIDATION_FAILED: "fieldValidationFailed",
  OTHER: "other",
} as const;

/**
 * @public
 */
export type ValidationExceptionReason = (typeof ValidationExceptionReason)[keyof typeof ValidationExceptionReason];

/**
 * <p>The input fails to satisfy the constraints specified by an AWS service.</p>
 * @public
 */
export class ValidationException extends __BaseException {
  readonly name: "ValidationException" = "ValidationException";
  readonly $fault: "client" = "client";
  /**
   * <p>The reason why your input is considered invalid.</p>
   * @public
   */
  reason: ValidationExceptionReason | undefined;

  /**
   * <p>The list of input fields that are invalid.</p>
   * @public
   */
  fieldList?: ValidationExceptionField[] | undefined;

  /**
   * @internal
   */
  constructor(opts: __ExceptionOptionType<ValidationException, __BaseException>) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts,
    });
    Object.setPrototypeOf(this, ValidationException.prototype);
    this.reason = opts.reason;
    this.fieldList = opts.fieldList;
  }
}

/**
 * @public
 */
export interface CreateEmailContactRequest {
  /**
   * <p>The name of the email contact.</p>
   * @public
   */
  name: string | undefined;

  /**
   * <p>The email address this email contact points to. The activation email and any subscribed emails are sent here.</p>
   *          <note>
   *             <p>This email address can't receive emails until it's activated.</p>
   *          </note>
   * @public
   */
  emailAddress: string | undefined;

  /**
   * <p>A map of tags assigned to a resource. A tag is a string-to-string map of key-value pairs.</p>
   * @public
   */
  tags?: Record<string, string> | undefined;
}

/**
 * @public
 */
export interface CreateEmailContactResponse {
  /**
   * <p>The Amazon Resource Name (ARN) of the resource.</p>
   * @public
   */
  arn: string | undefined;
}

/**
 * <p> Request would cause a service quota to be exceeded.</p>
 * @public
 */
export class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException" = "ServiceQuotaExceededException";
  readonly $fault: "client" = "client";
  /**
   * <p>The ID of the resource that exceeds the service quota.</p>
   * @public
   */
  resourceId: string | undefined;

  /**
   * <p>The type of the resource that exceeds the service quota.</p>
   * @public
   */
  resourceType: string | undefined;

  /**
   * <p>The code for the service quota exceeded in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service Quotas</a>.</p>
   * @public
   */
  serviceCode: string | undefined;

  /**
   * <p>The code for the service quota in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service Quotas</a>.</p>
   * @public
   */
  quotaCode: string | undefined;

  /**
   * @internal
   */
  constructor(opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts,
    });
    Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.serviceCode = opts.serviceCode;
    this.quotaCode = opts.quotaCode;
  }
}

/**
 * @public
 */
export interface DeleteEmailContactRequest {
  /**
   * <p>The Amazon Resource Name (ARN) of the resource.</p>
   * @public
   */
  arn: string | undefined;
}

/**
 * @public
 */
export interface DeleteEmailContactResponse {}

/**
 * @public
 * @enum
 */
export const EmailContactStatus = {
  ACTIVE: "active",
  INACTIVE: "inactive",
} as const;

/**
 * @public
 */
export type EmailContactStatus = (typeof EmailContactStatus)[keyof typeof EmailContactStatus];

/**
 * <p>An email contact.</p>
 * @public
 */
export interface EmailContact {
  /**
   * <p>The Amazon Resource Name (ARN) of the email contact.</p>
   * @public
   */
  arn: string | undefined;

  /**
   * <p>The name of the email contact.</p>
   * @public
   */
  name: string | undefined;

  /**
   * <p>The email address this email contact points to. The activation email and any subscribed emails are sent here.</p>
   * @public
   */
  address: string | undefined;

  /**
   * <p>The status of the email contact. Only activated email contacts receive emails.</p>
   * @public
   */
  status: EmailContactStatus | undefined;

  /**
   * <p>The creation time of the resource.</p>
   * @public
   */
  creationTime: Date | undefined;

  /**
   * <p>The time the resource was last updated.</p>
   * @public
   */
  updateTime: Date | undefined;
}

/**
 * @public
 */
export interface GetEmailContactRequest {
  /**
   * <p>The Amazon Resource Name (ARN) of the email contact to get.</p>
   * @public
   */
  arn: string | undefined;
}

/**
 * @public
 */
export interface GetEmailContactResponse {
  /**
   * <p>The email contact for the provided email address.</p>
   * @public
   */
  emailContact: EmailContact | undefined;
}

/**
 * @public
 */
export interface ListEmailContactsRequest {
  /**
   * <p>The maximum number of results to include in the response. If more results exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.</p>
   * @public
   */
  maxResults?: number | undefined;

  /**
   * <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
   * @public
   */
  nextToken?: string | undefined;
}

/**
 * @public
 */
export interface ListEmailContactsResponse {
  /**
   * <p>An optional token returned from a prior request. Use this token for pagination of results from this action. If this parameter is specified, the response includes only results beyond the token, up to the value specified by MaxResults.</p>
   * @public
   */
  nextToken?: string | undefined;

  /**
   * <p>A list of email contacts.</p>
   * @public
   */
  emailContacts: EmailContact[] | undefined;
}

/**
 * @public
 */
export interface SendActivationCodeRequest {
  /**
   * <p>The Amazon Resource Name (ARN) of the resource.</p>
   * @public
   */
  arn: string | undefined;
}

/**
 * @public
 */
export interface SendActivationCodeResponse {}

/**
 * @public
 */
export interface ListTagsForResourceRequest {
  /**
   * <p>The ARN you specified to list the tags of.</p>
   * @public
   */
  arn: string | undefined;
}

/**
 * @public
 */
export interface ListTagsForResourceResponse {
  /**
   * <p>Key-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define.</p>
   * @public
   */
  tags?: Record<string, string> | undefined;
}

/**
 * @public
 */
export interface TagResourceRequest {
  /**
   * <p>The ARN of the configuration.</p>
   * @public
   */
  arn: string | undefined;

  /**
   * <p>A list of tags to apply to the configuration.</p>
   * @public
   */
  tags: Record<string, string> | undefined;
}

/**
 * @public
 */
export interface TagResourceResponse {}

/**
 * @public
 */
export interface UntagResourceRequest {
  /**
   * <p>The value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific AWS resource, such as a server, user, or role.</p>
   * @public
   */
  arn: string | undefined;

  /**
   * <p>Specifies a list of tag keys that you want to remove from the specified resources.</p>
   * @public
   */
  tagKeys: string[] | undefined;
}

/**
 * @public
 */
export interface UntagResourceResponse {}

/**
 * @internal
 */
export const ActivateEmailContactRequestFilterSensitiveLog = (obj: ActivateEmailContactRequest): any => ({
  ...obj,
  ...(obj.code && { code: SENSITIVE_STRING }),
});

/**
 * @internal
 */
export const CreateEmailContactRequestFilterSensitiveLog = (obj: CreateEmailContactRequest): any => ({
  ...obj,
  ...(obj.name && { name: SENSITIVE_STRING }),
});

/**
 * @internal
 */
export const EmailContactFilterSensitiveLog = (obj: EmailContact): any => ({
  ...obj,
  ...(obj.name && { name: SENSITIVE_STRING }),
  ...(obj.address && { address: SENSITIVE_STRING }),
});

/**
 * @internal
 */
export const GetEmailContactResponseFilterSensitiveLog = (obj: GetEmailContactResponse): any => ({
  ...obj,
  ...(obj.emailContact && { emailContact: EmailContactFilterSensitiveLog(obj.emailContact) }),
});

/**
 * @internal
 */
export const ListEmailContactsResponseFilterSensitiveLog = (obj: ListEmailContactsResponse): any => ({
  ...obj,
  ...(obj.emailContacts && { emailContacts: obj.emailContacts.map((item) => EmailContactFilterSensitiveLog(item)) }),
});
