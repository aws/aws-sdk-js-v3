export const _A = "Asg";
export const _AA = "AssociatedAlarm";
export const _AAM = "AssociatedAlarmMap";
export const _ADE = "AccessDeniedException";
export const _AE = "AbbreviatedExecution";
export const _AEL = "AbbreviatedExecutionsList";
export const _AL = "AsgList";
export const _AP = "AbbreviatedPlan";
export const _APES = "ApprovePlanExecutionStep";
export const _APESR = "ApprovePlanExecutionStepRequest";
export const _APESRp = "ApprovePlanExecutionStepResponse";
export const _ARCC = "ArcRoutingControlConfiguration";
export const _ARCS = "ArcRoutingControlState";
export const _ARCSr = "ArcRoutingControlStates";
export const _CALC = "CustomActionLambdaConfiguration";
export const _CP = "CreatePlan";
export const _CPE = "CancelPlanExecution";
export const _CPER = "CancelPlanExecutionRequest";
export const _CPERa = "CancelPlanExecutionResponse";
export const _CPR = "CreatePlanRequest";
export const _CPRr = "CreatePlanResponse";
export const _DP = "DeletePlan";
export const _DPR = "DeletePlanRequest";
export const _DPRe = "DeletePlanResponse";
export const _EAC = "ExecutionApprovalConfiguration";
export const _EACIC = "Ec2AsgCapacityIncreaseConfiguration";
export const _EBC = "ExecutionBlockConfiguration";
export const _EC = "EksCluster";
export const _ECIC = "EcsCapacityIncreaseConfiguration";
export const _ECk = "EksClusters";
export const _EE = "ExecutionEvent";
export const _EEL = "ExecutionEventList";
export const _ERSC = "EksResourceScalingConfiguration";
export const _ERSU = "EksResourceScalingUngraceful";
export const _EU = "Ec2Ungraceful";
export const _EUc = "EcsUngraceful";
export const _GAC = "GlobalAuroraConfiguration";
export const _GAU = "GlobalAuroraUngraceful";
export const _GP = "GetPlan";
export const _GPE = "GetPlanExecution";
export const _GPER = "GetPlanExecutionRequest";
export const _GPERe = "GetPlanExecutionResponse";
export const _GPES = "GetPlanEvaluationStatus";
export const _GPESR = "GetPlanEvaluationStatusRequest";
export const _GPESRe = "GetPlanEvaluationStatusResponse";
export const _GPIR = "GetPlanInRegion";
export const _GPIRR = "GetPlanInRegionRequest";
export const _GPIRRe = "GetPlanInRegionResponse";
export const _GPR = "GetPlanRequest";
export const _GPRe = "GetPlanResponse";
export const _IAE = "IllegalArgumentException";
export const _ISE = "IllegalStateException";
export const _ISEn = "InternalServerException";
export const _KRT = "KubernetesResourceType";
export const _KSA = "KubernetesScalingApps";
export const _KSAu = "KubernetesScalingApplication";
export const _KSR = "KubernetesScalingResource";
export const _L = "Lambdas";
export const _LL = "LambdaList";
export const _LP = "ListPlans";
export const _LPE = "ListPlanExecutions";
export const _LPEE = "ListPlanExecutionEvents";
export const _LPEER = "ListPlanExecutionEventsRequest";
export const _LPEERi = "ListPlanExecutionEventsResponse";
export const _LPER = "ListPlanExecutionsRequest";
export const _LPERi = "ListPlanExecutionsResponse";
export const _LPIR = "ListPlansInRegion";
export const _LPIRR = "ListPlansInRegionRequest";
export const _LPIRRi = "ListPlansInRegionResponse";
export const _LPR = "ListPlansRequest";
export const _LPRi = "ListPlansResponse";
export const _LRHC = "ListRoute53HealthChecks";
export const _LRHCR = "ListRoute53HealthChecksRequest";
export const _LRHCRi = "ListRoute53HealthChecksResponse";
export const _LTFR = "ListTagsForResource";
export const _LTFRR = "ListTagsForResourceRequest";
export const _LTFRRi = "ListTagsForResourceResponse";
export const _LU = "LambdaUngraceful";
export const _MW = "MinimalWorkflow";
export const _P = "Plan";
export const _PEBC = "ParallelExecutionBlockConfiguration";
export const _PL = "PlanList";
export const _PW = "PlanWarnings";
export const _RARC = "RegionAndRoutingControls";
export const _RHC = "Route53HealthCheck";
export const _RHCC = "Route53HealthCheckConfiguration";
export const _RHCL = "Route53HealthCheckList";
export const _RNFE = "ResourceNotFoundException";
export const _RRRS = "Route53ResourceRecordSet";
export const _RRRSL = "Route53ResourceRecordSetList";
export const _RSPC = "RegionSwitchPlanConfiguration";
export const _RSR = "RegionalScalingResource";
export const _RW = "ResourceWarning";
export const _S = "Service";
export const _SL = "ServiceList";
export const _SPE = "StartPlanExecution";
export const _SPER = "StartPlanExecutionRequest";
export const _SPERt = "StartPlanExecutionResponse";
export const _SS = "StepState";
export const _SSt = "StepStates";
export const _St = "Step";
export const _Ste = "Steps";
export const _T = "Trigger";
export const _TC = "TriggerCondition";
export const _TCL = "TriggerConditionList";
export const _TL = "TriggerList";
export const _TR = "TagResource";
export const _TRR = "TagResourceRequest";
export const _TRRa = "TagResourceResponse";
export const _UP = "UpdatePlan";
export const _UPE = "UpdatePlanExecution";
export const _UPER = "UpdatePlanExecutionRequest";
export const _UPERp = "UpdatePlanExecutionResponse";
export const _UPES = "UpdatePlanExecutionStep";
export const _UPESR = "UpdatePlanExecutionStepRequest";
export const _UPESRp = "UpdatePlanExecutionStepResponse";
export const _UPR = "UpdatePlanRequest";
export const _UPRp = "UpdatePlanResponse";
export const _UR = "UntagResource";
export const _URR = "UntagResourceRequest";
export const _URRn = "UntagResourceResponse";
export const _W = "Workflow";
export const _WL = "WorkflowList";
export const _a = "arn";
export const _aA = "associatedAlarms";
export const _aAN = "associatedAlarmName";
export const _aPE = "activePlanExecution";
export const _aR = "approvalRole";
export const _aRCC = "arcRoutingControlConfig";
export const _aRT = "actualRecoveryTime";
export const _aRc = "activateRegion";
export const _aT = "alarmType";
export const _aTT = "actionToTake";
export const _aV = "apiVersion";
export const _ac = "action";
export const _ap = "approval";
export const _as = "asgs";
export const _b = "behavior";
export const _c = "comment";
export const _cA = "clusterArn";
export const _cALC = "customActionLambdaConfig";
export const _cAR = "crossAccountRole";
export const _cMA = "capacityMonitoringApproach";
export const _cl = "client";
export const _co = "conditions";
export const _con = "condition";
export const _d = "description";
export const _dCA = "databaseClusterArns";
export const _dR = "deactivateRegion";
export const _e = "error";
export const _eA = "executionAction";
export const _eAC = "executionApprovalConfig";
export const _eACIC = "ec2AsgCapacityIncreaseConfig";
export const _eBC = "executionBlockConfiguration";
export const _eBT = "executionBlockType";
export const _eC = "eksClusters";
export const _eCIC = "ecsCapacityIncreaseConfig";
export const _eI = "executionId";
export const _eIv = "eventId";
export const _eIx = "externalId";
export const _eR = "executionRegion";
export const _eRSC = "eksResourceScalingConfig";
export const _eRx = "executionRole";
export const _eS = "executionState";
export const _eSv = "evaluationState";
export const _eT = "endTime";
export const _gAC = "globalAuroraConfig";
export const _gCI = "globalClusterIdentifier";
export const _hC = "healthChecks";
export const _hCI = "healthCheckId";
export const _hE = "httpError";
export const _hN = "hpaName";
export const _hZI = "hostedZoneId";
export const _i = "items";
export const _k = "kind";
export const _kRT = "kubernetesResourceType";
export const _l = "lambdas";
export const _lET = "lastEvaluationTime";
export const _lEV = "lastEvaluatedVersion";
export const _lV = "latestVersion";
export const _m = "mode";
export const _mDMBE = "minDelayMinutesBetweenExecutions";
export const _mR = "maxResults";
export const _mSP = "minimumSuccessPercentage";
export const _me = "message";
export const _n = "name";
export const _nT = "nextToken";
export const _na = "namespace";
export const _o = "owner";
export const _p = "plan";
export const _pA = "planArn";
export const _pC = "parallelConfig";
export const _pEI = "previousEventId";
export const _pR = "primaryRegion";
export const _pV = "planVersion";
export const _pl = "plans";
export const _r = "regions";
export const _rA = "recoveryApproach";
export const _rARC = "regionAndRoutingControls";
export const _rAe = "resourceArn";
export const _rCA = "routingControlArn";
export const _rHCC = "route53HealthCheckConfig";
export const _rI = "resourceIdentifier";
export const _rIM = "retryIntervalMinutes";
export const _rN = "recordName";
export const _rS = "recordSets";
export const _rSI = "recordSetIdentifier";
export const _rSPC = "regionSwitchPlanConfig";
export const _rT = "resourceTags";
export const _rTK = "resourceTagKeys";
export const _rTOM = "recoveryTimeObjectiveMinutes";
export const _rTR = "regionToRun";
export const _re = "resources";
export const _reg = "region";
export const _s = "state";
export const _sA = "serviceArn";
export const _sM = "stepMode";
export const _sN = "stepName";
export const _sR = "scalingResources";
export const _sS = "stepStates";
export const _sT = "startTime";
export const _se = "services";
export const _ser = "server";
export const _st = "steps";
export const _sta = "status";
export const _t = "triggers";
export const _tM = "timeoutMinutes";
export const _tP = "targetPercent";
export const _tR = "targetRegion";
export const _ta = "tags";
export const _ti = "timestamp";
export const _ty = "type";
export const _u = "ungraceful";
export const _uA = "updatedAt";
export const _v = "version";
export const _w = "workflows";
export const _wD = "workflowDescription";
export const _wM = "warningMessage";
export const _wS = "warningStatus";
export const _wTA = "workflowTargetAction";
export const _wTR = "workflowTargetRegion";
export const _wUT = "warningUpdatedTime";
export const _wa = "warnings";
export const _wo = "workflow";
export const n0 = "com.amazonaws.arcregionswitch";

// smithy-typescript generated code
import { error } from "@smithy/core/schema";

import { ARCRegionSwitchServiceException as __ARCRegionSwitchServiceException } from "../models/ARCRegionSwitchServiceException";
import { ResourceNotFoundException as __ResourceNotFoundException } from "../models/index";

/* eslint no-var: 0 */

export var ResourceNotFoundException = error(
  n0,
  _RNFE,
  {
    [_e]: _cl,
    [_hE]: 404,
  },
  [_me],
  [0],

  __ResourceNotFoundException
);
export var Unit = "unit" as const;

export var ARCRegionSwitchServiceException = error(
  "smithy.ts.sdk.synthetic.com.amazonaws.arcregionswitch",
  "ARCRegionSwitchServiceException",
  0,
  [],
  [],
  __ARCRegionSwitchServiceException
);
