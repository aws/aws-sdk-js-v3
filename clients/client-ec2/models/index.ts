import * as _smithy from "@aws-sdk/smithy-client";
import { MetadataBearer as $MetadataBearer } from "@aws-sdk/types";

/**
 * <p>Contains the parameters for accepting the quote.</p>
 */
export interface AcceptReservedInstancesExchangeQuoteRequest {
  __type?: "AcceptReservedInstancesExchangeQuoteRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the Convertible Reserved Instances to exchange for another Convertible
   *             Reserved Instance of the same or higher value.</p>
   */
  ReservedInstanceIds: Array<string> | undefined;

  /**
   * <p>The configuration of the target Convertible Reserved Instance to exchange for your
   *             current Convertible Reserved Instances.</p>
   */
  TargetConfigurations?: Array<TargetConfigurationRequest>;
}

export namespace AcceptReservedInstancesExchangeQuoteRequest {
  export function isa(
    o: any
  ): o is AcceptReservedInstancesExchangeQuoteRequest {
    return _smithy.isa(o, "AcceptReservedInstancesExchangeQuoteRequest");
  }
}

/**
 * <p>The result of the exchange and whether it was <code>successful</code>.</p>
 */
export interface AcceptReservedInstancesExchangeQuoteResult
  extends $MetadataBearer {
  __type?: "AcceptReservedInstancesExchangeQuoteResult";
  /**
   * <p>The ID of the successful exchange.</p>
   */
  ExchangeId?: string;
}

export namespace AcceptReservedInstancesExchangeQuoteResult {
  export function isa(o: any): o is AcceptReservedInstancesExchangeQuoteResult {
    return _smithy.isa(o, "AcceptReservedInstancesExchangeQuoteResult");
  }
}

export interface AcceptTransitGatewayPeeringAttachmentRequest {
  __type?: "AcceptTransitGatewayPeeringAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace AcceptTransitGatewayPeeringAttachmentRequest {
  export function isa(
    o: any
  ): o is AcceptTransitGatewayPeeringAttachmentRequest {
    return _smithy.isa(o, "AcceptTransitGatewayPeeringAttachmentRequest");
  }
}

export interface AcceptTransitGatewayPeeringAttachmentResult
  extends $MetadataBearer {
  __type?: "AcceptTransitGatewayPeeringAttachmentResult";
  /**
   * <p>The transit gateway peering attachment.</p>
   */
  TransitGatewayPeeringAttachment?: TransitGatewayPeeringAttachment;
}

export namespace AcceptTransitGatewayPeeringAttachmentResult {
  export function isa(
    o: any
  ): o is AcceptTransitGatewayPeeringAttachmentResult {
    return _smithy.isa(o, "AcceptTransitGatewayPeeringAttachmentResult");
  }
}

export interface AcceptTransitGatewayVpcAttachmentRequest {
  __type?: "AcceptTransitGatewayVpcAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace AcceptTransitGatewayVpcAttachmentRequest {
  export function isa(o: any): o is AcceptTransitGatewayVpcAttachmentRequest {
    return _smithy.isa(o, "AcceptTransitGatewayVpcAttachmentRequest");
  }
}

export interface AcceptTransitGatewayVpcAttachmentResult
  extends $MetadataBearer {
  __type?: "AcceptTransitGatewayVpcAttachmentResult";
  /**
   * <p>The VPC attachment.</p>
   */
  TransitGatewayVpcAttachment?: TransitGatewayVpcAttachment;
}

export namespace AcceptTransitGatewayVpcAttachmentResult {
  export function isa(o: any): o is AcceptTransitGatewayVpcAttachmentResult {
    return _smithy.isa(o, "AcceptTransitGatewayVpcAttachmentResult");
  }
}

export interface AcceptVpcEndpointConnectionsRequest {
  __type?: "AcceptVpcEndpointConnectionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC endpoint service.</p>
   */
  ServiceId: string | undefined;

  /**
   * <p>The IDs of one or more interface VPC endpoints.</p>
   */
  VpcEndpointIds: Array<string> | undefined;
}

export namespace AcceptVpcEndpointConnectionsRequest {
  export function isa(o: any): o is AcceptVpcEndpointConnectionsRequest {
    return _smithy.isa(o, "AcceptVpcEndpointConnectionsRequest");
  }
}

export interface AcceptVpcEndpointConnectionsResult extends $MetadataBearer {
  __type?: "AcceptVpcEndpointConnectionsResult";
  /**
   * <p>Information about the interface endpoints that were not accepted, if
   *             applicable.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace AcceptVpcEndpointConnectionsResult {
  export function isa(o: any): o is AcceptVpcEndpointConnectionsResult {
    return _smithy.isa(o, "AcceptVpcEndpointConnectionsResult");
  }
}

export interface AcceptVpcPeeringConnectionRequest {
  __type?: "AcceptVpcPeeringConnectionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC peering connection. You must specify this parameter in the
   * 			request.</p>
   */
  VpcPeeringConnectionId?: string;
}

export namespace AcceptVpcPeeringConnectionRequest {
  export function isa(o: any): o is AcceptVpcPeeringConnectionRequest {
    return _smithy.isa(o, "AcceptVpcPeeringConnectionRequest");
  }
}

export interface AcceptVpcPeeringConnectionResult extends $MetadataBearer {
  __type?: "AcceptVpcPeeringConnectionResult";
  /**
   * <p>Information about the VPC peering connection.</p>
   */
  VpcPeeringConnection?: VpcPeeringConnection;
}

export namespace AcceptVpcPeeringConnectionResult {
  export function isa(o: any): o is AcceptVpcPeeringConnectionResult {
    return _smithy.isa(o, "AcceptVpcPeeringConnectionResult");
  }
}

/**
 * <p>Describes an account attribute.</p>
 */
export interface AccountAttribute {
  __type?: "AccountAttribute";
  /**
   * <p>The name of the account attribute.</p>
   */
  AttributeName?: string;

  /**
   * <p>The values for the account attribute.</p>
   */
  AttributeValues?: Array<AccountAttributeValue>;
}

export namespace AccountAttribute {
  export function isa(o: any): o is AccountAttribute {
    return _smithy.isa(o, "AccountAttribute");
  }
}

export type AccountAttributeName = "default-vpc" | "supported-platforms";

/**
 * <p>Describes a value of an account attribute.</p>
 */
export interface AccountAttributeValue {
  __type?: "AccountAttributeValue";
  /**
   * <p>The value of the attribute.</p>
   */
  AttributeValue?: string;
}

export namespace AccountAttributeValue {
  export function isa(o: any): o is AccountAttributeValue {
    return _smithy.isa(o, "AccountAttributeValue");
  }
}

/**
 * <p>Describes a running instance in a Spot Fleet.</p>
 */
export interface ActiveInstance {
  __type?: "ActiveInstance";
  /**
   * <p>The health status of the instance. If the status of either the instance status check
   *           or the system status check is <code>impaired</code>, the health status of the instance
   *           is <code>unhealthy</code>. Otherwise, the health status is <code>healthy</code>.</p>
   */
  InstanceHealth?: InstanceHealthStatus | string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: string;

  /**
   * <p>The ID of the Spot Instance request.</p>
   */
  SpotInstanceRequestId?: string;
}

export namespace ActiveInstance {
  export function isa(o: any): o is ActiveInstance {
    return _smithy.isa(o, "ActiveInstance");
  }
}

export enum ActivityStatus {
  ERROR = "error",
  FULFILLED = "fulfilled",
  PENDING_FULFILLMENT = "pending_fulfillment",
  PENDING_TERMINATION = "pending_termination"
}

/**
 * <p>Describes an Elastic IP address.</p>
 */
export interface Address {
  __type?: "Address";
  /**
   * <p>The ID representing the allocation of the address for use with EC2-VPC.</p>
   */
  AllocationId?: string;

  /**
   * <p>The ID representing the association of the address with an instance in a VPC.</p>
   */
  AssociationId?: string;

  /**
   * <p>The customer-owned IP address.</p>
   */
  CustomerOwnedIp?: string;

  /**
   * <p>The ID of the customer-owned address pool.</p>
   */
  CustomerOwnedIpv4Pool?: string;

  /**
   * <p>Indicates whether this Elastic IP address is for use with instances
   * 				in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).</p>
   */
  Domain?: DomainType | string;

  /**
   * <p>The ID of the instance that the address is associated with (if any).</p>
   */
  InstanceId?: string;

  /**
   * <p>The name of the location from which the IP address is advertised.</p>
   */
  NetworkBorderGroup?: string;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The ID of the AWS account that owns the network interface.</p>
   */
  NetworkInterfaceOwnerId?: string;

  /**
   * <p>The private IP address associated with the Elastic IP address.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>The Elastic IP address.</p>
   */
  PublicIp?: string;

  /**
   * <p>The ID of an address pool.</p>
   */
  PublicIpv4Pool?: string;

  /**
   * <p>Any tags assigned to the Elastic IP address.</p>
   */
  Tags?: Array<Tag>;
}

export namespace Address {
  export function isa(o: any): o is Address {
    return _smithy.isa(o, "Address");
  }
}

export interface AdvertiseByoipCidrRequest {
  __type?: "AdvertiseByoipCidrRequest";
  /**
   * <p>The address range, in CIDR notation. This must be the exact range that you provisioned.
   *          You can't advertise only a portion of the provisioned range.</p>
   */
  Cidr: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace AdvertiseByoipCidrRequest {
  export function isa(o: any): o is AdvertiseByoipCidrRequest {
    return _smithy.isa(o, "AdvertiseByoipCidrRequest");
  }
}

export interface AdvertiseByoipCidrResult extends $MetadataBearer {
  __type?: "AdvertiseByoipCidrResult";
  /**
   * <p>Information about the address range.</p>
   */
  ByoipCidr?: ByoipCidr;
}

export namespace AdvertiseByoipCidrResult {
  export function isa(o: any): o is AdvertiseByoipCidrResult {
    return _smithy.isa(o, "AdvertiseByoipCidrResult");
  }
}

export type Affinity = "default" | "host";

export interface AllocateAddressRequest {
  __type?: "AllocateAddressRequest";
  /**
   * <p>[EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.</p>
   */
  Address?: string;

  /**
   * <p>The ID of a customer-owned address pool. Use this parameter to let Amazon EC2
   *         select an address from the address pool. Alternatively, specify a specific
   *         address from the address pool.</p>
   */
  CustomerOwnedIpv4Pool?: string;

  /**
   * <p>Set to <code>vpc</code> to allocate the address for use with instances in a VPC.</p>
   *          <p>Default: The address is for use with instances in EC2-Classic.</p>
   */
  Domain?: DomainType | string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The location from which the IP address is advertised. Use this parameter to limit the address to this location.</p>
   *          <p>Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html">DescribeVpcs</a> to view the network border groups.</p>
   *
   *          <note>
   *             <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an <code>InvalidParameterCombination</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
   *          </note>
   */
  NetworkBorderGroup?: string;

  /**
   * <p>The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
   *        To specify a specific address from the address pool, use the <code>Address</code> parameter instead.</p>
   */
  PublicIpv4Pool?: string;
}

export namespace AllocateAddressRequest {
  export function isa(o: any): o is AllocateAddressRequest {
    return _smithy.isa(o, "AllocateAddressRequest");
  }
}

export interface AllocateAddressResult extends $MetadataBearer {
  __type?: "AllocateAddressResult";
  /**
   * <p>[EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.</p>
   */
  AllocationId?: string;

  /**
   * <p>The customer-owned IP address.</p>
   */
  CustomerOwnedIp?: string;

  /**
   * <p>The ID of the customer-owned address pool.</p>
   */
  CustomerOwnedIpv4Pool?: string;

  /**
   * <p>Indicates whether this Elastic IP address is for use with instances
   * 				in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).</p>
   */
  Domain?: DomainType | string;

  /**
   * <p>The location from which the IP address is advertised.</p>
   */
  NetworkBorderGroup?: string;

  /**
   * <p>The Elastic IP address.</p>
   */
  PublicIp?: string;

  /**
   * <p>The ID of an address pool.</p>
   */
  PublicIpv4Pool?: string;
}

export namespace AllocateAddressResult {
  export function isa(o: any): o is AllocateAddressResult {
    return _smithy.isa(o, "AllocateAddressResult");
  }
}

export interface AllocateHostsRequest {
  __type?: "AllocateHostsRequest";
  /**
   * <p>Indicates whether the host accepts any untargeted instance launches that
   *     		match its instance type configuration, or if it only accepts Host tenancy
   *     		instance launches that specify its unique host ID. For more information,
   *     		see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding">
   *             	Understanding Instance Placement and Host Affinity</a> in the
   *         	<i>Amazon EC2 User Guide for Linux Instances</i>.</p>
   *
   *         <p>Default: <code>on</code>
   *          </p>
   */
  AutoPlacement?: AutoPlacement | string;

  /**
   * <p>The Availability Zone in which to allocate the Dedicated Host.</p>
   */
  AvailabilityZone: string | undefined;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Indicates whether to enable or disable host recovery for the Dedicated Host.
   * 			Host recovery is disabled by default. For more information, see
   * 			<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html">
   * 				Host Recovery</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   * 		       <p>Default: <code>off</code>
   *          </p>
   */
  HostRecovery?: HostRecovery | string;

  /**
   * <p>Specifies the instance family to be supported by the Dedicated Hosts. If you specify
   * 			an instance family, the Dedicated Hosts support multiple instance types within that
   * 			instance family.</p>
   *
   * 		       <p>If you want the Dedicated Hosts to support a specific instance type only, omit this
   * 			parameter and specify <b>InstanceType</b>
   * 			instead. You cannot specify <b>InstanceFamily</b> and
   * 			<b>InstanceType</b> in the same request.</p>
   */
  InstanceFamily?: string;

  /**
   * <p>Specifies the instance type to be supported by the Dedicated Hosts. If you
   * 		specify an instance type, the Dedicated Hosts support instances of the
   * 		specified instance type only.</p>
   *
   *     	    <p>If you want the Dedicated Hosts to support multiple instance types in a specific
   *     		instance family, omit this parameter and specify <b>InstanceFamily</b>
   *     		instead. You cannot specify <b>InstanceType</b> and
   *     		<b>InstanceFamily</b> in the same request.</p>
   */
  InstanceType?: string;

  /**
   * <p>The number of Dedicated Hosts to allocate to your account with these parameters.</p>
   */
  Quantity: number | undefined;

  /**
   * <p>The tags to apply to the Dedicated Host during creation.</p>
   */
  TagSpecifications?: Array<TagSpecification>;
}

export namespace AllocateHostsRequest {
  export function isa(o: any): o is AllocateHostsRequest {
    return _smithy.isa(o, "AllocateHostsRequest");
  }
}

/**
 * <p>Contains the output of AllocateHosts.</p>
 */
export interface AllocateHostsResult extends $MetadataBearer {
  __type?: "AllocateHostsResult";
  /**
   * <p>The ID of the allocated Dedicated Host. This is used to launch an instance onto a
   * 			specific host.</p>
   */
  HostIds?: Array<string>;
}

export namespace AllocateHostsResult {
  export function isa(o: any): o is AllocateHostsResult {
    return _smithy.isa(o, "AllocateHostsResult");
  }
}

export type AllocationState =
  | "available"
  | "pending"
  | "permanent-failure"
  | "released"
  | "released-permanent-failure"
  | "under-assessment";

export enum AllocationStrategy {
  CAPACITY_OPTIMIZED = "capacityOptimized",
  DIVERSIFIED = "diversified",
  LOWEST_PRICE = "lowestPrice"
}

/**
 * <p>Describes a principal.</p>
 */
export interface AllowedPrincipal {
  __type?: "AllowedPrincipal";
  /**
   * <p>The Amazon Resource Name (ARN) of the principal.</p>
   */
  Principal?: string;

  /**
   * <p>The type of principal.</p>
   */
  PrincipalType?: PrincipalType | string;
}

export namespace AllowedPrincipal {
  export function isa(o: any): o is AllowedPrincipal {
    return _smithy.isa(o, "AllowedPrincipal");
  }
}

export type AllowsMultipleInstanceTypes = "off" | "on";

export interface ApplySecurityGroupsToClientVpnTargetNetworkRequest {
  __type?: "ApplySecurityGroupsToClientVpnTargetNetworkRequest";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the security groups to apply to the associated target network. Up to 5 security groups can
   * 			be applied to an associated target network.</p>
   */
  SecurityGroupIds: Array<string> | undefined;

  /**
   * <p>The ID of the VPC in which the associated target network is located.</p>
   */
  VpcId: string | undefined;
}

export namespace ApplySecurityGroupsToClientVpnTargetNetworkRequest {
  export function isa(
    o: any
  ): o is ApplySecurityGroupsToClientVpnTargetNetworkRequest {
    return _smithy.isa(o, "ApplySecurityGroupsToClientVpnTargetNetworkRequest");
  }
}

export interface ApplySecurityGroupsToClientVpnTargetNetworkResult
  extends $MetadataBearer {
  __type?: "ApplySecurityGroupsToClientVpnTargetNetworkResult";
  /**
   * <p>The IDs of the applied security groups.</p>
   */
  SecurityGroupIds?: Array<string>;
}

export namespace ApplySecurityGroupsToClientVpnTargetNetworkResult {
  export function isa(
    o: any
  ): o is ApplySecurityGroupsToClientVpnTargetNetworkResult {
    return _smithy.isa(o, "ApplySecurityGroupsToClientVpnTargetNetworkResult");
  }
}

export type ArchitectureType = "arm64" | "i386" | "x86_64";

export type ArchitectureValues = "arm64" | "i386" | "x86_64";

export interface AssignIpv6AddressesRequest {
  __type?: "AssignIpv6AddressesRequest";
  /**
   * <p>The number of IPv6 addresses to assign to the network interface. Amazon EC2
   *             automatically selects the IPv6 addresses from the subnet range. You can't use this
   *             option if specifying specific IPv6 addresses.</p>
   */
  Ipv6AddressCount?: number;

  /**
   * <p>One or more specific IPv6 addresses to be assigned to the network interface. You can't use this option if you're specifying a number of IPv6 addresses.</p>
   */
  Ipv6Addresses?: Array<string>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;
}

export namespace AssignIpv6AddressesRequest {
  export function isa(o: any): o is AssignIpv6AddressesRequest {
    return _smithy.isa(o, "AssignIpv6AddressesRequest");
  }
}

export interface AssignIpv6AddressesResult extends $MetadataBearer {
  __type?: "AssignIpv6AddressesResult";
  /**
   * <p>The IPv6 addresses assigned to the network interface.</p>
   */
  AssignedIpv6Addresses?: Array<string>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;
}

export namespace AssignIpv6AddressesResult {
  export function isa(o: any): o is AssignIpv6AddressesResult {
    return _smithy.isa(o, "AssignIpv6AddressesResult");
  }
}

/**
 * <p>Contains the parameters for AssignPrivateIpAddresses.</p>
 */
export interface AssignPrivateIpAddressesRequest {
  __type?: "AssignPrivateIpAddressesRequest";
  /**
   * <p>Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.</p>
   */
  AllowReassignment?: boolean;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;

  /**
   * <p>One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.</p>
   *         <p>If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>
   */
  PrivateIpAddresses?: Array<string>;

  /**
   * <p>The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.</p>
   */
  SecondaryPrivateIpAddressCount?: number;
}

export namespace AssignPrivateIpAddressesRequest {
  export function isa(o: any): o is AssignPrivateIpAddressesRequest {
    return _smithy.isa(o, "AssignPrivateIpAddressesRequest");
  }
}

export interface AssignPrivateIpAddressesResult extends $MetadataBearer {
  __type?: "AssignPrivateIpAddressesResult";
  /**
   * <p>The private IP addresses assigned to the network interface.</p>
   */
  AssignedPrivateIpAddresses?: Array<AssignedPrivateIpAddress>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;
}

export namespace AssignPrivateIpAddressesResult {
  export function isa(o: any): o is AssignPrivateIpAddressesResult {
    return _smithy.isa(o, "AssignPrivateIpAddressesResult");
  }
}

/**
 * <p>Describes the private IP addresses assigned to a network interface.</p>
 */
export interface AssignedPrivateIpAddress {
  __type?: "AssignedPrivateIpAddress";
  /**
   * <p>The private IP address assigned to the network interface.</p>
   */
  PrivateIpAddress?: string;
}

export namespace AssignedPrivateIpAddress {
  export function isa(o: any): o is AssignedPrivateIpAddress {
    return _smithy.isa(o, "AssignedPrivateIpAddress");
  }
}

export interface AssociateAddressRequest {
  __type?: "AssociateAddressRequest";
  /**
   * <p>[EC2-VPC] The allocation ID. This is required for EC2-VPC.</p>
   */
  AllocationId?: string;

  /**
   * <p>[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.</p>
   */
  AllowReassociation?: boolean;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached.</p>
   */
  InstanceId?: string;

  /**
   * <p>[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.</p>
   *    	     <p>For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. </p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>The Elastic IP address to associate with the instance. This is required for EC2-Classic.</p>
   */
  PublicIp?: string;
}

export namespace AssociateAddressRequest {
  export function isa(o: any): o is AssociateAddressRequest {
    return _smithy.isa(o, "AssociateAddressRequest");
  }
}

export interface AssociateAddressResult extends $MetadataBearer {
  __type?: "AssociateAddressResult";
  /**
   * <p>[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.</p>
   */
  AssociationId?: string;
}

export namespace AssociateAddressResult {
  export function isa(o: any): o is AssociateAddressResult {
    return _smithy.isa(o, "AssociateAddressResult");
  }
}

export interface AssociateClientVpnTargetNetworkRequest {
  __type?: "AssociateClientVpnTargetNetworkRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the subnet to associate with the Client VPN endpoint.</p>
   */
  SubnetId: string | undefined;
}

export namespace AssociateClientVpnTargetNetworkRequest {
  export function isa(o: any): o is AssociateClientVpnTargetNetworkRequest {
    return _smithy.isa(o, "AssociateClientVpnTargetNetworkRequest");
  }
}

export interface AssociateClientVpnTargetNetworkResult extends $MetadataBearer {
  __type?: "AssociateClientVpnTargetNetworkResult";
  /**
   * <p>The unique ID of the target network association.</p>
   */
  AssociationId?: string;

  /**
   * <p>The current state of the target network association.</p>
   */
  Status?: AssociationStatus;
}

export namespace AssociateClientVpnTargetNetworkResult {
  export function isa(o: any): o is AssociateClientVpnTargetNetworkResult {
    return _smithy.isa(o, "AssociateClientVpnTargetNetworkResult");
  }
}

export interface AssociateDhcpOptionsRequest {
  __type?: "AssociateDhcpOptionsRequest";
  /**
   * <p>The ID of the DHCP options set, or <code>default</code> to associate
   *         no DHCP options with the VPC.</p>
   */
  DhcpOptionsId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace AssociateDhcpOptionsRequest {
  export function isa(o: any): o is AssociateDhcpOptionsRequest {
    return _smithy.isa(o, "AssociateDhcpOptionsRequest");
  }
}

export interface AssociateIamInstanceProfileRequest {
  __type?: "AssociateIamInstanceProfileRequest";
  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile: IamInstanceProfileSpecification | undefined;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;
}

export namespace AssociateIamInstanceProfileRequest {
  export function isa(o: any): o is AssociateIamInstanceProfileRequest {
    return _smithy.isa(o, "AssociateIamInstanceProfileRequest");
  }
}

export interface AssociateIamInstanceProfileResult extends $MetadataBearer {
  __type?: "AssociateIamInstanceProfileResult";
  /**
   * <p>Information about the IAM instance profile association.</p>
   */
  IamInstanceProfileAssociation?: IamInstanceProfileAssociation;
}

export namespace AssociateIamInstanceProfileResult {
  export function isa(o: any): o is AssociateIamInstanceProfileResult {
    return _smithy.isa(o, "AssociateIamInstanceProfileResult");
  }
}

export interface AssociateRouteTableRequest {
  __type?: "AssociateRouteTableRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the internet gateway or virtual private gateway.</p>
   */
  GatewayId?: string;

  /**
   * <p>The ID of the route table.</p>
   */
  RouteTableId: string | undefined;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;
}

export namespace AssociateRouteTableRequest {
  export function isa(o: any): o is AssociateRouteTableRequest {
    return _smithy.isa(o, "AssociateRouteTableRequest");
  }
}

export interface AssociateRouteTableResult extends $MetadataBearer {
  __type?: "AssociateRouteTableResult";
  /**
   * <p>The route table association ID. This ID is required for disassociating the route
   * 			table.</p>
   */
  AssociationId?: string;

  /**
   * <p>The state of the association.</p>
   */
  AssociationState?: RouteTableAssociationState;
}

export namespace AssociateRouteTableResult {
  export function isa(o: any): o is AssociateRouteTableResult {
    return _smithy.isa(o, "AssociateRouteTableResult");
  }
}

export interface AssociateSubnetCidrBlockRequest {
  __type?: "AssociateSubnetCidrBlockRequest";
  /**
   * <p>The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix
   *             length.</p>
   */
  Ipv6CidrBlock: string | undefined;

  /**
   * <p>The ID of your subnet.</p>
   */
  SubnetId: string | undefined;
}

export namespace AssociateSubnetCidrBlockRequest {
  export function isa(o: any): o is AssociateSubnetCidrBlockRequest {
    return _smithy.isa(o, "AssociateSubnetCidrBlockRequest");
  }
}

export interface AssociateSubnetCidrBlockResult extends $MetadataBearer {
  __type?: "AssociateSubnetCidrBlockResult";
  /**
   * <p>Information about the IPv6 CIDR block association.</p>
   */
  Ipv6CidrBlockAssociation?: SubnetIpv6CidrBlockAssociation;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;
}

export namespace AssociateSubnetCidrBlockResult {
  export function isa(o: any): o is AssociateSubnetCidrBlockResult {
    return _smithy.isa(o, "AssociateSubnetCidrBlockResult");
  }
}

export interface AssociateTransitGatewayMulticastDomainRequest {
  __type?: "AssociateTransitGatewayMulticastDomainRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the subnets to associate with the transit gateway multicast domain.</p>
   */
  SubnetIds?: Array<string>;

  /**
   * <p>The ID of the transit gateway attachment to associate with the transit gateway multicast domain.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace AssociateTransitGatewayMulticastDomainRequest {
  export function isa(
    o: any
  ): o is AssociateTransitGatewayMulticastDomainRequest {
    return _smithy.isa(o, "AssociateTransitGatewayMulticastDomainRequest");
  }
}

export interface AssociateTransitGatewayMulticastDomainResult
  extends $MetadataBearer {
  __type?: "AssociateTransitGatewayMulticastDomainResult";
  /**
   * <p>Information about the transit gateway multicast domain associations.</p>
   */
  Associations?: TransitGatewayMulticastDomainAssociations;
}

export namespace AssociateTransitGatewayMulticastDomainResult {
  export function isa(
    o: any
  ): o is AssociateTransitGatewayMulticastDomainResult {
    return _smithy.isa(o, "AssociateTransitGatewayMulticastDomainResult");
  }
}

export interface AssociateTransitGatewayRouteTableRequest {
  __type?: "AssociateTransitGatewayRouteTableRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace AssociateTransitGatewayRouteTableRequest {
  export function isa(o: any): o is AssociateTransitGatewayRouteTableRequest {
    return _smithy.isa(o, "AssociateTransitGatewayRouteTableRequest");
  }
}

export interface AssociateTransitGatewayRouteTableResult
  extends $MetadataBearer {
  __type?: "AssociateTransitGatewayRouteTableResult";
  /**
   * <p>The ID of the association.</p>
   */
  Association?: TransitGatewayAssociation;
}

export namespace AssociateTransitGatewayRouteTableResult {
  export function isa(o: any): o is AssociateTransitGatewayRouteTableResult {
    return _smithy.isa(o, "AssociateTransitGatewayRouteTableResult");
  }
}

export interface AssociateVpcCidrBlockRequest {
  __type?: "AssociateVpcCidrBlockRequest";
  /**
   * <p>Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.</p>
   */
  AmazonProvidedIpv6CidrBlock?: boolean;

  /**
   * <p>An IPv4 CIDR block to associate with the VPC.</p>
   */
  CidrBlock?: string;

  /**
   * <p>An IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p>
   *         <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CiDR block to this location.</p>
   *          <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p>
   *          <p> You can have one IPv6 CIDR block association per network border group.</p>
   */
  Ipv6CidrBlockNetworkBorderGroup?: string;

  /**
   * <p>The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.</p>
   */
  Ipv6Pool?: string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace AssociateVpcCidrBlockRequest {
  export function isa(o: any): o is AssociateVpcCidrBlockRequest {
    return _smithy.isa(o, "AssociateVpcCidrBlockRequest");
  }
}

export interface AssociateVpcCidrBlockResult extends $MetadataBearer {
  __type?: "AssociateVpcCidrBlockResult";
  /**
   * <p>Information about the IPv4 CIDR block association.</p>
   */
  CidrBlockAssociation?: VpcCidrBlockAssociation;

  /**
   * <p>Information about the IPv6 CIDR block association.</p>
   */
  Ipv6CidrBlockAssociation?: VpcIpv6CidrBlockAssociation;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace AssociateVpcCidrBlockResult {
  export function isa(o: any): o is AssociateVpcCidrBlockResult {
    return _smithy.isa(o, "AssociateVpcCidrBlockResult");
  }
}

export type AssociatedNetworkType = "vpc";

/**
 * <p>Describes a target network that is associated with a Client VPN endpoint. A target network is a subnet in a VPC.</p>
 */
export interface AssociatedTargetNetwork {
  __type?: "AssociatedTargetNetwork";
  /**
   * <p>The ID of the subnet.</p>
   */
  NetworkId?: string;

  /**
   * <p>The target network type.</p>
   */
  NetworkType?: AssociatedNetworkType | string;
}

export namespace AssociatedTargetNetwork {
  export function isa(o: any): o is AssociatedTargetNetwork {
    return _smithy.isa(o, "AssociatedTargetNetwork");
  }
}

/**
 * <p>Describes the state of a target network association.</p>
 */
export interface AssociationStatus {
  __type?: "AssociationStatus";
  /**
   * <p>The state of the target network association.</p>
   */
  Code?: AssociationStatusCode | string;

  /**
   * <p>A message about the status of the target network association, if applicable.</p>
   */
  Message?: string;
}

export namespace AssociationStatus {
  export function isa(o: any): o is AssociationStatus {
    return _smithy.isa(o, "AssociationStatus");
  }
}

export type AssociationStatusCode =
  | "associated"
  | "associating"
  | "association-failed"
  | "disassociated"
  | "disassociating";

export interface AttachClassicLinkVpcRequest {
  __type?: "AttachClassicLinkVpcRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.</p>
   */
  Groups: Array<string> | undefined;

  /**
   * <p>The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The ID of a ClassicLink-enabled VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace AttachClassicLinkVpcRequest {
  export function isa(o: any): o is AttachClassicLinkVpcRequest {
    return _smithy.isa(o, "AttachClassicLinkVpcRequest");
  }
}

export interface AttachClassicLinkVpcResult extends $MetadataBearer {
  __type?: "AttachClassicLinkVpcResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace AttachClassicLinkVpcResult {
  export function isa(o: any): o is AttachClassicLinkVpcResult {
    return _smithy.isa(o, "AttachClassicLinkVpcResult");
  }
}

export interface AttachInternetGatewayRequest {
  __type?: "AttachInternetGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the internet gateway.</p>
   */
  InternetGatewayId: string | undefined;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace AttachInternetGatewayRequest {
  export function isa(o: any): o is AttachInternetGatewayRequest {
    return _smithy.isa(o, "AttachInternetGatewayRequest");
  }
}

/**
 * <p>Contains the parameters for AttachNetworkInterface.</p>
 */
export interface AttachNetworkInterfaceRequest {
  __type?: "AttachNetworkInterfaceRequest";
  /**
   * <p>The index of the device for the network interface attachment.</p>
   */
  DeviceIndex: number | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;
}

export namespace AttachNetworkInterfaceRequest {
  export function isa(o: any): o is AttachNetworkInterfaceRequest {
    return _smithy.isa(o, "AttachNetworkInterfaceRequest");
  }
}

/**
 * <p>Contains the output of AttachNetworkInterface.</p>
 */
export interface AttachNetworkInterfaceResult extends $MetadataBearer {
  __type?: "AttachNetworkInterfaceResult";
  /**
   * <p>The ID of the network interface attachment.</p>
   */
  AttachmentId?: string;
}

export namespace AttachNetworkInterfaceResult {
  export function isa(o: any): o is AttachNetworkInterfaceResult {
    return _smithy.isa(o, "AttachNetworkInterfaceResult");
  }
}

export interface AttachVolumeRequest {
  __type?: "AttachVolumeRequest";
  /**
   * <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
   */
  Device: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The ID of the EBS volume. The volume and instance must be within the same Availability
   *       Zone.</p>
   */
  VolumeId: string | undefined;
}

export namespace AttachVolumeRequest {
  export function isa(o: any): o is AttachVolumeRequest {
    return _smithy.isa(o, "AttachVolumeRequest");
  }
}

/**
 * <p>Contains the parameters for AttachVpnGateway.</p>
 */
export interface AttachVpnGatewayRequest {
  __type?: "AttachVpnGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;

  /**
   * <p>The ID of the virtual private gateway.</p>
   */
  VpnGatewayId: string | undefined;
}

export namespace AttachVpnGatewayRequest {
  export function isa(o: any): o is AttachVpnGatewayRequest {
    return _smithy.isa(o, "AttachVpnGatewayRequest");
  }
}

/**
 * <p>Contains the output of AttachVpnGateway.</p>
 */
export interface AttachVpnGatewayResult extends $MetadataBearer {
  __type?: "AttachVpnGatewayResult";
  /**
   * <p>Information about the attachment.</p>
   */
  VpcAttachment?: VpcAttachment;
}

export namespace AttachVpnGatewayResult {
  export function isa(o: any): o is AttachVpnGatewayResult {
    return _smithy.isa(o, "AttachVpnGatewayResult");
  }
}

export type AttachmentStatus =
  | "attached"
  | "attaching"
  | "detached"
  | "detaching";

/**
 * <p>Describes a value for a resource attribute that is a Boolean value.</p>
 */
export interface AttributeBooleanValue {
  __type?: "AttributeBooleanValue";
  /**
   * <p>The attribute value. The valid values are <code>true</code> or <code>false</code>.</p>
   */
  Value?: boolean;
}

export namespace AttributeBooleanValue {
  export function isa(o: any): o is AttributeBooleanValue {
    return _smithy.isa(o, "AttributeBooleanValue");
  }
}

/**
 * <p>Describes a value for a resource attribute that is a String.</p>
 */
export interface AttributeValue {
  __type?: "AttributeValue";
  /**
   * <p>The attribute value. The value is case-sensitive.</p>
   */
  Value?: string;
}

export namespace AttributeValue {
  export function isa(o: any): o is AttributeValue {
    return _smithy.isa(o, "AttributeValue");
  }
}

/**
 * <p>Information about an authorization rule.</p>
 */
export interface AuthorizationRule {
  __type?: "AuthorizationRule";
  /**
   * <p>Indicates whether the authorization rule grants access to all clients.</p>
   */
  AccessAll?: boolean;

  /**
   * <p>The ID of the Client VPN endpoint with which the authorization rule is associated.</p>
   */
  ClientVpnEndpointId?: string;

  /**
   * <p>A brief description of the authorization rule.</p>
   */
  Description?: string;

  /**
   * <p>The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies.</p>
   */
  DestinationCidr?: string;

  /**
   * <p>The ID of the Active Directory group to which the authorization rule grants access.</p>
   */
  GroupId?: string;

  /**
   * <p>The current state of the authorization rule.</p>
   */
  Status?: ClientVpnAuthorizationRuleStatus;
}

export namespace AuthorizationRule {
  export function isa(o: any): o is AuthorizationRule {
    return _smithy.isa(o, "AuthorizationRule");
  }
}

export interface AuthorizeClientVpnIngressRequest {
  __type?: "AuthorizeClientVpnIngressRequest";
  /**
   * <p>The ID of the Active Directory group to grant access.</p>
   */
  AccessGroupId?: string;

  /**
   * <p>Indicates whether to grant access to all clients. Use <code>true</code> to grant all clients
   * 			who successfully establish a VPN connection access to the network.</p>
   */
  AuthorizeAllGroups?: boolean;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>A brief description of the authorization rule.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IPv4 address range, in CIDR notation, of the network for which access is being authorized.</p>
   */
  TargetNetworkCidr: string | undefined;
}

export namespace AuthorizeClientVpnIngressRequest {
  export function isa(o: any): o is AuthorizeClientVpnIngressRequest {
    return _smithy.isa(o, "AuthorizeClientVpnIngressRequest");
  }
}

export interface AuthorizeClientVpnIngressResult extends $MetadataBearer {
  __type?: "AuthorizeClientVpnIngressResult";
  /**
   * <p>The current state of the authorization rule.</p>
   */
  Status?: ClientVpnAuthorizationRuleStatus;
}

export namespace AuthorizeClientVpnIngressResult {
  export function isa(o: any): o is AuthorizeClientVpnIngressResult {
    return _smithy.isa(o, "AuthorizeClientVpnIngressResult");
  }
}

export interface AuthorizeSecurityGroupEgressRequest {
  __type?: "AuthorizeSecurityGroupEgressRequest";
  /**
   * <p>Not supported. Use a set of IP permissions to specify the CIDR.</p>
   */
  CidrIp?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Not supported. Use a set of IP permissions to specify the port.</p>
   */
  FromPort?: number;

  /**
   * <p>The ID of the security group.</p>
   */
  GroupId: string | undefined;

  /**
   * <p>The sets of IP permissions. You can't specify a destination security group and a CIDR IP
   *             address range in the same set of permissions.</p>
   */
  IpPermissions?: Array<IpPermission>;

  /**
   * <p>Not supported. Use a set of IP permissions to specify the protocol name or
   *             number.</p>
   */
  IpProtocol?: string;

  /**
   * <p>Not supported. Use a set of IP permissions to specify a
   *             destination security group.</p>
   */
  SourceSecurityGroupName?: string;

  /**
   * <p>Not supported. Use a set of IP permissions to specify a
   *             destination security group.</p>
   */
  SourceSecurityGroupOwnerId?: string;

  /**
   * <p>Not supported. Use a set of IP permissions to specify the port.</p>
   */
  ToPort?: number;
}

export namespace AuthorizeSecurityGroupEgressRequest {
  export function isa(o: any): o is AuthorizeSecurityGroupEgressRequest {
    return _smithy.isa(o, "AuthorizeSecurityGroupEgressRequest");
  }
}

export interface AuthorizeSecurityGroupIngressRequest {
  __type?: "AuthorizeSecurityGroupIngressRequest";
  /**
   * <p>The IPv4 address range, in CIDR format. You can't specify this parameter when specifying a source
   *       security group. To specify an IPv6 address range, use a set of IP permissions.</p>
   *          <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
   */
  CidrIp?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The start of port range for the TCP and UDP protocols, or an ICMP type number.
   * 			For the ICMP type number, use <code>-1</code> to specify all types. If you
   * 			specify all ICMP types, you must specify all codes.</p>
   *          <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
   */
  FromPort?: number;

  /**
   * <p>The ID of the security group. You must specify either the security group ID or the
   * 			security group name in the request. For security groups in a nondefault VPC, you must
   * 			specify the security group ID.</p>
   */
  GroupId?: string;

  /**
   * <p>[EC2-Classic, default VPC] The name of the security group. You must specify either the
   * 			security group ID or the security group name in the request.</p>
   */
  GroupName?: string;

  /**
   * <p>The sets of IP permissions.</p>
   */
  IpPermissions?: Array<IpPermission>;

  /**
   * <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number
   *       (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). To specify <code>icmpv6</code>, use a set of IP permissions.</p>
   *          <p>[VPC only] Use <code>-1</code> to specify all protocols. If you specify <code>-1</code> or a
   *          protocol other than <code>tcp</code>, <code>udp</code>, or <code>icmp</code>, traffic on all ports
   *          is allowed, regardless of any ports you specify.</p>
   *          <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
   */
  IpProtocol?: string;

  /**
   * <p>[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter
   *          in combination with the following parameters: the CIDR IP address range, the start of the port range,
   *          the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access.
   *          To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For
   *          EC2-VPC, the source security group must be in the same VPC.</p>
   */
  SourceSecurityGroupName?: string;

  /**
   * <p>[nondefault VPC] The AWS account ID for the source security group, if the source security group is
   *          in a different account. You can't specify this parameter in combination with the following parameters:
   *          the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range.
   *          Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol
   *          and port range, use a set of IP permissions instead.</p>
   */
  SourceSecurityGroupOwnerId?: string;

  /**
   * <p>The end of port range for the TCP and UDP protocols, or an ICMP code number.
   * 			For the ICMP code number, use <code>-1</code> to specify all codes. If you
   * 			specify all ICMP types, you must specify all codes.</p>
   *          <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
   */
  ToPort?: number;
}

export namespace AuthorizeSecurityGroupIngressRequest {
  export function isa(o: any): o is AuthorizeSecurityGroupIngressRequest {
    return _smithy.isa(o, "AuthorizeSecurityGroupIngressRequest");
  }
}

export type AutoAcceptSharedAttachmentsValue = "disable" | "enable";

export type AutoPlacement = "off" | "on";

/**
 * <p>Describes an Availability Zone or Local Zone.</p>
 */
export interface AvailabilityZone {
  __type?: "AvailabilityZone";
  /**
   * <p> For Availability Zones, this parameter has the same value as the Region name.</p>
   *          <p>For Local Zones, the name of the associated group, for example <code>us-west-2-lax-1</code>.</p>
   */
  GroupName?: string;

  /**
   * <p>Any messages about the Availability Zone or Local Zone.</p>
   */
  Messages?: Array<AvailabilityZoneMessage>;

  /**
   * <p>The name of the location from which the address is advertised.</p>
   */
  NetworkBorderGroup?: string;

  /**
   * <p> For Availability Zones, this parameter always has the value of
   *         <code>opt-in-not-required</code>.</p>
   *          <p>For Local Zones, this parameter is the opt in status. The possible values are <code>opted-in</code>, and
   *       <code>not-opted-in</code>.</p>
   */
  OptInStatus?: AvailabilityZoneOptInStatus | string;

  /**
   * <p>The name of the Region.</p>
   */
  RegionName?: string;

  /**
   * <p>The state of the Availability Zone or Local Zone.</p>
   */
  State?: AvailabilityZoneState | string;

  /**
   * <p>The ID of the Availability Zone or Local Zone.</p>
   */
  ZoneId?: string;

  /**
   * <p>The name of the Availability Zone or Local Zone.</p>
   */
  ZoneName?: string;
}

export namespace AvailabilityZone {
  export function isa(o: any): o is AvailabilityZone {
    return _smithy.isa(o, "AvailabilityZone");
  }
}

/**
 * <p>Describes a message about an Availability Zone or Local Zone.</p>
 */
export interface AvailabilityZoneMessage {
  __type?: "AvailabilityZoneMessage";
  /**
   * <p>The message about the Availability Zone or Local Zone.</p>
   */
  Message?: string;
}

export namespace AvailabilityZoneMessage {
  export function isa(o: any): o is AvailabilityZoneMessage {
    return _smithy.isa(o, "AvailabilityZoneMessage");
  }
}

export type AvailabilityZoneOptInStatus =
  | "not-opted-in"
  | "opt-in-not-required"
  | "opted-in";

export type AvailabilityZoneState =
  | "available"
  | "impaired"
  | "information"
  | "unavailable";

/**
 * <p>The capacity information for instances that can be launched onto the Dedicated Host. </p>
 */
export interface AvailableCapacity {
  __type?: "AvailableCapacity";
  /**
   * <p>The number of instances that can be launched onto the Dedicated Host depending on
   *     		the host's available capacity. For Dedicated Hosts that support multiple instance types,
   *     		this parameter represents the number of instances for each instance size that is
   *     		supported on the host.</p>
   */
  AvailableInstanceCapacity?: Array<InstanceCapacity>;

  /**
   * <p>The number of vCPUs available for launching instances onto the Dedicated Host.</p>
   */
  AvailableVCpus?: number;
}

export namespace AvailableCapacity {
  export function isa(o: any): o is AvailableCapacity {
    return _smithy.isa(o, "AvailableCapacity");
  }
}

export enum BatchState {
  ACTIVE = "active",
  CANCELLED = "cancelled",
  CANCELLED_RUNNING = "cancelled_running",
  CANCELLED_TERMINATING_INSTANCES = "cancelled_terminating",
  FAILED = "failed",
  MODIFYING = "modifying",
  SUBMITTED = "submitted"
}

export interface BlobAttributeValue {
  __type?: "BlobAttributeValue";
  Value?: Uint8Array;
}

export namespace BlobAttributeValue {
  export function isa(o: any): o is BlobAttributeValue {
    return _smithy.isa(o, "BlobAttributeValue");
  }
}

/**
 * <p>Describes a block device mapping.</p>
 */
export interface BlockDeviceMapping {
  __type?: "BlockDeviceMapping";
  /**
   * <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
   */
  DeviceName?: string;

  /**
   * <p>Parameters used to automatically set up EBS volumes when the instance is
   *             launched.</p>
   */
  Ebs?: EbsBlockDevice;

  /**
   * <p>Suppresses the specified device included in the block device mapping of the
   *             AMI.</p>
   */
  NoDevice?: string;

  /**
   * <p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered
   *             starting from 0. An instance type with 2 available instance store volumes can specify
   *             mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of
   *             available instance store volumes depends on the instance type. After you connect to the
   *             instance, you must mount the volume.</p>
   *         <p>NVMe instance store volumes are automatically enumerated and assigned a device name.
   *             Including them in your block device mapping has no effect.</p>
   *         <p>Constraints: For M3 instances, you must specify instance store volumes in the block
   *             device mapping for the instance. When you launch an M3 instance, we ignore any instance
   *             store volumes specified in the block device mapping for the AMI.</p>
   */
  VirtualName?: string;
}

export namespace BlockDeviceMapping {
  export function isa(o: any): o is BlockDeviceMapping {
    return _smithy.isa(o, "BlockDeviceMapping");
  }
}

/**
 * <p>Contains the parameters for BundleInstance.</p>
 */
export interface BundleInstanceRequest {
  __type?: "BundleInstanceRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance to bundle.</p>
   *          <p>Type: String</p>
   *          <p>Default: None</p>
   *          <p>Required: Yes</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</p>
   */
  Storage: Storage | undefined;
}

export namespace BundleInstanceRequest {
  export function isa(o: any): o is BundleInstanceRequest {
    return _smithy.isa(o, "BundleInstanceRequest");
  }
}

/**
 * <p>Contains the output of BundleInstance.</p>
 */
export interface BundleInstanceResult extends $MetadataBearer {
  __type?: "BundleInstanceResult";
  /**
   * <p>Information about the bundle task.</p>
   */
  BundleTask?: BundleTask;
}

export namespace BundleInstanceResult {
  export function isa(o: any): o is BundleInstanceResult {
    return _smithy.isa(o, "BundleInstanceResult");
  }
}

/**
 * <p>Describes a bundle task.</p>
 */
export interface BundleTask {
  __type?: "BundleTask";
  /**
   * <p>The ID of the bundle task.</p>
   */
  BundleId?: string;

  /**
   * <p>If the task fails, a description of the error.</p>
   */
  BundleTaskError?: BundleTaskError;

  /**
   * <p>The ID of the instance associated with this bundle task.</p>
   */
  InstanceId?: string;

  /**
   * <p>The level of task completion, as a percent (for example, 20%).</p>
   */
  Progress?: string;

  /**
   * <p>The time this task started.</p>
   */
  StartTime?: Date;

  /**
   * <p>The state of the task.</p>
   */
  State?: BundleTaskState | string;

  /**
   * <p>The Amazon S3 storage locations.</p>
   */
  Storage?: Storage;

  /**
   * <p>The time of the most recent update for the task.</p>
   */
  UpdateTime?: Date;
}

export namespace BundleTask {
  export function isa(o: any): o is BundleTask {
    return _smithy.isa(o, "BundleTask");
  }
}

/**
 * <p>Describes an error for <a>BundleInstance</a>.</p>
 */
export interface BundleTaskError {
  __type?: "BundleTaskError";
  /**
   * <p>The error code.</p>
   */
  Code?: string;

  /**
   * <p>The error message.</p>
   */
  Message?: string;
}

export namespace BundleTaskError {
  export function isa(o: any): o is BundleTaskError {
    return _smithy.isa(o, "BundleTaskError");
  }
}

export type BundleTaskState =
  | "bundling"
  | "cancelling"
  | "complete"
  | "failed"
  | "pending"
  | "storing"
  | "waiting-for-shutdown";

/**
 * <p>Information about an address range that is provisioned for use with your AWS resources
 *          through bring your own IP addresses (BYOIP).</p>
 */
export interface ByoipCidr {
  __type?: "ByoipCidr";
  /**
   * <p>The address range, in CIDR notation.</p>
   */
  Cidr?: string;

  /**
   * <p>The description of the address range.</p>
   */
  Description?: string;

  /**
   * <p>The state of the address pool.</p>
   */
  State?: ByoipCidrState | string;

  /**
   * <p>Upon success, contains the ID of the address pool. Otherwise, contains an error message.</p>
   */
  StatusMessage?: string;
}

export namespace ByoipCidr {
  export function isa(o: any): o is ByoipCidr {
    return _smithy.isa(o, "ByoipCidr");
  }
}

export type ByoipCidrState =
  | "advertised"
  | "deprovisioned"
  | "failed-deprovision"
  | "failed-provision"
  | "pending-deprovision"
  | "pending-provision"
  | "provisioned"
  | "provisioned-not-publicly-advertisable";

export enum CancelBatchErrorCode {
  FLEET_REQUEST_ID_DOES_NOT_EXIST = "fleetRequestIdDoesNotExist",
  FLEET_REQUEST_ID_MALFORMED = "fleetRequestIdMalformed",
  FLEET_REQUEST_NOT_IN_CANCELLABLE_STATE = "fleetRequestNotInCancellableState",
  UNEXPECTED_ERROR = "unexpectedError"
}

/**
 * <p>Contains the parameters for CancelBundleTask.</p>
 */
export interface CancelBundleTaskRequest {
  __type?: "CancelBundleTaskRequest";
  /**
   * <p>The ID of the bundle task.</p>
   */
  BundleId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace CancelBundleTaskRequest {
  export function isa(o: any): o is CancelBundleTaskRequest {
    return _smithy.isa(o, "CancelBundleTaskRequest");
  }
}

/**
 * <p>Contains the output of CancelBundleTask.</p>
 */
export interface CancelBundleTaskResult extends $MetadataBearer {
  __type?: "CancelBundleTaskResult";
  /**
   * <p>Information about the bundle task.</p>
   */
  BundleTask?: BundleTask;
}

export namespace CancelBundleTaskResult {
  export function isa(o: any): o is CancelBundleTaskResult {
    return _smithy.isa(o, "CancelBundleTaskResult");
  }
}

export interface CancelCapacityReservationRequest {
  __type?: "CancelCapacityReservationRequest";
  /**
   * <p>The ID of the Capacity Reservation to be cancelled.</p>
   */
  CapacityReservationId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace CancelCapacityReservationRequest {
  export function isa(o: any): o is CancelCapacityReservationRequest {
    return _smithy.isa(o, "CancelCapacityReservationRequest");
  }
}

export interface CancelCapacityReservationResult extends $MetadataBearer {
  __type?: "CancelCapacityReservationResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace CancelCapacityReservationResult {
  export function isa(o: any): o is CancelCapacityReservationResult {
    return _smithy.isa(o, "CancelCapacityReservationResult");
  }
}

export interface CancelConversionRequest {
  __type?: "CancelConversionRequest";
  /**
   * <p>The ID of the conversion task.</p>
   */
  ConversionTaskId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The reason for canceling the conversion task.</p>
   */
  ReasonMessage?: string;
}

export namespace CancelConversionRequest {
  export function isa(o: any): o is CancelConversionRequest {
    return _smithy.isa(o, "CancelConversionRequest");
  }
}

export interface CancelExportTaskRequest {
  __type?: "CancelExportTaskRequest";
  /**
   * <p>The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.</p>
   */
  ExportTaskId: string | undefined;
}

export namespace CancelExportTaskRequest {
  export function isa(o: any): o is CancelExportTaskRequest {
    return _smithy.isa(o, "CancelExportTaskRequest");
  }
}

export interface CancelImportTaskRequest {
  __type?: "CancelImportTaskRequest";
  /**
   * <p>The reason for canceling the task.</p>
   */
  CancelReason?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the import image or import snapshot task to be canceled.</p>
   */
  ImportTaskId?: string;
}

export namespace CancelImportTaskRequest {
  export function isa(o: any): o is CancelImportTaskRequest {
    return _smithy.isa(o, "CancelImportTaskRequest");
  }
}

export interface CancelImportTaskResult extends $MetadataBearer {
  __type?: "CancelImportTaskResult";
  /**
   * <p>The ID of the task being canceled.</p>
   */
  ImportTaskId?: string;

  /**
   * <p>The current state of the task being canceled.</p>
   */
  PreviousState?: string;

  /**
   * <p>The current state of the task being canceled.</p>
   */
  State?: string;
}

export namespace CancelImportTaskResult {
  export function isa(o: any): o is CancelImportTaskResult {
    return _smithy.isa(o, "CancelImportTaskResult");
  }
}

/**
 * <p>Contains the parameters for CancelReservedInstancesListing.</p>
 */
export interface CancelReservedInstancesListingRequest {
  __type?: "CancelReservedInstancesListingRequest";
  /**
   * <p>The ID of the Reserved Instance listing.</p>
   */
  ReservedInstancesListingId: string | undefined;
}

export namespace CancelReservedInstancesListingRequest {
  export function isa(o: any): o is CancelReservedInstancesListingRequest {
    return _smithy.isa(o, "CancelReservedInstancesListingRequest");
  }
}

/**
 * <p>Contains the output of CancelReservedInstancesListing.</p>
 */
export interface CancelReservedInstancesListingResult extends $MetadataBearer {
  __type?: "CancelReservedInstancesListingResult";
  /**
   * <p>The Reserved Instance listing.</p>
   */
  ReservedInstancesListings?: Array<ReservedInstancesListing>;
}

export namespace CancelReservedInstancesListingResult {
  export function isa(o: any): o is CancelReservedInstancesListingResult {
    return _smithy.isa(o, "CancelReservedInstancesListingResult");
  }
}

/**
 * <p>Describes a Spot Fleet error.</p>
 */
export interface CancelSpotFleetRequestsError {
  __type?: "CancelSpotFleetRequestsError";
  /**
   * <p>The error code.</p>
   */
  Code?: CancelBatchErrorCode | string;

  /**
   * <p>The description for the error code.</p>
   */
  Message?: string;
}

export namespace CancelSpotFleetRequestsError {
  export function isa(o: any): o is CancelSpotFleetRequestsError {
    return _smithy.isa(o, "CancelSpotFleetRequestsError");
  }
}

/**
 * <p>Describes a Spot Fleet request that was not successfully canceled.</p>
 */
export interface CancelSpotFleetRequestsErrorItem {
  __type?: "CancelSpotFleetRequestsErrorItem";
  /**
   * <p>The error.</p>
   */
  Error?: CancelSpotFleetRequestsError;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId?: string;
}

export namespace CancelSpotFleetRequestsErrorItem {
  export function isa(o: any): o is CancelSpotFleetRequestsErrorItem {
    return _smithy.isa(o, "CancelSpotFleetRequestsErrorItem");
  }
}

/**
 * <p>Contains the parameters for CancelSpotFleetRequests.</p>
 */
export interface CancelSpotFleetRequestsRequest {
  __type?: "CancelSpotFleetRequestsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the Spot Fleet requests.</p>
   */
  SpotFleetRequestIds: Array<string> | undefined;

  /**
   * <p>Indicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.</p>
   */
  TerminateInstances: boolean | undefined;
}

export namespace CancelSpotFleetRequestsRequest {
  export function isa(o: any): o is CancelSpotFleetRequestsRequest {
    return _smithy.isa(o, "CancelSpotFleetRequestsRequest");
  }
}

/**
 * <p>Contains the output of CancelSpotFleetRequests.</p>
 */
export interface CancelSpotFleetRequestsResponse extends $MetadataBearer {
  __type?: "CancelSpotFleetRequestsResponse";
  /**
   * <p>Information about the Spot Fleet requests that are successfully canceled.</p>
   */
  SuccessfulFleetRequests?: Array<CancelSpotFleetRequestsSuccessItem>;

  /**
   * <p>Information about the Spot Fleet requests that are not successfully canceled.</p>
   */
  UnsuccessfulFleetRequests?: Array<CancelSpotFleetRequestsErrorItem>;
}

export namespace CancelSpotFleetRequestsResponse {
  export function isa(o: any): o is CancelSpotFleetRequestsResponse {
    return _smithy.isa(o, "CancelSpotFleetRequestsResponse");
  }
}

/**
 * <p>Describes a Spot Fleet request that was successfully canceled.</p>
 */
export interface CancelSpotFleetRequestsSuccessItem {
  __type?: "CancelSpotFleetRequestsSuccessItem";
  /**
   * <p>The current state of the Spot Fleet request.</p>
   */
  CurrentSpotFleetRequestState?: BatchState | string;

  /**
   * <p>The previous state of the Spot Fleet request.</p>
   */
  PreviousSpotFleetRequestState?: BatchState | string;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId?: string;
}

export namespace CancelSpotFleetRequestsSuccessItem {
  export function isa(o: any): o is CancelSpotFleetRequestsSuccessItem {
    return _smithy.isa(o, "CancelSpotFleetRequestsSuccessItem");
  }
}

export type CancelSpotInstanceRequestState =
  | "active"
  | "cancelled"
  | "closed"
  | "completed"
  | "open";

/**
 * <p>Contains the parameters for CancelSpotInstanceRequests.</p>
 */
export interface CancelSpotInstanceRequestsRequest {
  __type?: "CancelSpotInstanceRequestsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more Spot Instance request IDs.</p>
   */
  SpotInstanceRequestIds: Array<string> | undefined;
}

export namespace CancelSpotInstanceRequestsRequest {
  export function isa(o: any): o is CancelSpotInstanceRequestsRequest {
    return _smithy.isa(o, "CancelSpotInstanceRequestsRequest");
  }
}

/**
 * <p>Contains the output of CancelSpotInstanceRequests.</p>
 */
export interface CancelSpotInstanceRequestsResult extends $MetadataBearer {
  __type?: "CancelSpotInstanceRequestsResult";
  /**
   * <p>One or more Spot Instance requests.</p>
   */
  CancelledSpotInstanceRequests?: Array<CancelledSpotInstanceRequest>;
}

export namespace CancelSpotInstanceRequestsResult {
  export function isa(o: any): o is CancelSpotInstanceRequestsResult {
    return _smithy.isa(o, "CancelSpotInstanceRequestsResult");
  }
}

/**
 * <p>Describes a request to cancel a Spot Instance.</p>
 */
export interface CancelledSpotInstanceRequest {
  __type?: "CancelledSpotInstanceRequest";
  /**
   * <p>The ID of the Spot Instance request.</p>
   */
  SpotInstanceRequestId?: string;

  /**
   * <p>The state of the Spot Instance request.</p>
   */
  State?: CancelSpotInstanceRequestState | string;
}

export namespace CancelledSpotInstanceRequest {
  export function isa(o: any): o is CancelledSpotInstanceRequest {
    return _smithy.isa(o, "CancelledSpotInstanceRequest");
  }
}

/**
 * <p>Describes a Capacity Reservation.</p>
 */
export interface CapacityReservation {
  __type?: "CapacityReservation";
  /**
   * <p>The Availability Zone in which the capacity is reserved.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The Availability Zone ID of the Capacity Reservation.</p>
   */
  AvailabilityZoneId?: string;

  /**
   * <p>The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.</p>
   */
  AvailableInstanceCount?: number;

  /**
   * <p>The Amazon Resource Name (ARN) of the Capacity Reservation.</p>
   */
  CapacityReservationArn?: string;

  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationId?: string;

  /**
   * <p>The date and time at which the Capacity Reservation was created.</p>
   */
  CreateDate?: Date;

  /**
   * <p>Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides
   * 			dedicated throughput to Amazon EBS and an optimized configuration stack to provide
   * 			optimal I/O performance. This optimization isn't available with all instance types.
   * 			Additional usage charges apply when using an EBS- optimized instance.</p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity
   * 			is released and you can no longer launch instances into it. The Capacity Reservation's state changes to
   * 				<code>expired</code> when it reaches its end date and time.</p>
   */
  EndDate?: Date;

  /**
   * <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end
   * 			types:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time.</p>
   *             </li>
   *          </ul>
   */
  EndDateType?: EndDateType | string;

  /**
   * <p>Indicates whether the Capacity Reservation supports instances with temporary, block-level
   * 			storage.</p>
   */
  EphemeralStorage?: boolean;

  /**
   * <p>Indicates the type of instance launches that the Capacity Reservation accepts. The options
   * 			include:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>open</code> - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform,
   * 				and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying
   * 				any additional parameters.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes
   * 					(instance type, platform, and Availability Zone), and explicitly target the
   * 					Capacity Reservation. This ensures that only permitted instances can use the reserved capacity. </p>
   *             </li>
   *          </ul>
   */
  InstanceMatchCriteria?: InstanceMatchCriteria | string;

  /**
   * <p>The type of operating system for which the Capacity Reservation reserves capacity.</p>
   */
  InstancePlatform?: CapacityReservationInstancePlatform | string;

  /**
   * <p>The type of instance for which the Capacity Reservation reserves capacity.</p>
   */
  InstanceType?: string;

  /**
   * <p>The ID of the AWS account that owns the Capacity Reservation.</p>
   */
  OwnerId?: string;

  /**
   * <p>The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p>
   * 			      <ul>
   *             <li>
   *                <p>
   *                   <code>active</code> - The Capacity Reservation is active and the capacity is available for your use.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified
   * 					in your request. The reserved capacity is no longer available for your use.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>cancelled</code> - The Capacity Reservation was manually cancelled. The reserved capacity is no
   * 					longer available for your use.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>pending</code> - The Capacity Reservation request was successful but the capacity
   * 					provisioning is still pending.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>failed</code> - The Capacity Reservation request has failed. A request might fail
   * 					due to invalid request parameters, capacity constraints, or instance limit constraints.
   * 					Failed requests are retained for 60 minutes.</p>
   *             </li>
   *          </ul>
   */
  State?: CapacityReservationState | string;

  /**
   * <p>Any tags assigned to the Capacity Reservation.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>default</code> - The Capacity Reservation is created on hardware that is shared with other AWS accounts.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.</p>
   *             </li>
   *          </ul>
   */
  Tenancy?: CapacityReservationTenancy | string;

  /**
   * <p>The total number of instances for which the Capacity Reservation reserves capacity.</p>
   */
  TotalInstanceCount?: number;
}

export namespace CapacityReservation {
  export function isa(o: any): o is CapacityReservation {
    return _smithy.isa(o, "CapacityReservation");
  }
}

export enum CapacityReservationInstancePlatform {
  LINUX_UNIX = "Linux/UNIX",
  LINUX_WITH_SQL_SERVER_ENTERPRISE = "Linux with SQL Server Enterprise",
  LINUX_WITH_SQL_SERVER_STANDARD = "Linux with SQL Server Standard",
  LINUX_WITH_SQL_SERVER_WEB = "Linux with SQL Server Web",
  RED_HAT_ENTERPRISE_LINUX = "Red Hat Enterprise Linux",
  SUSE_LINUX = "SUSE Linux",
  WINDOWS = "Windows",
  WINDOWS_WITH_SQL_SERVER = "Windows with SQL Server",
  WINDOWS_WITH_SQL_SERVER_ENTERPRISE = "Windows with SQL Server Enterprise",
  WINDOWS_WITH_SQL_SERVER_STANDARD = "Windows with SQL Server Standard",
  WINDOWS_WITH_SQL_SERVER_WEB = "Windows with SQL Server Web"
}

/**
 * <p>Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand
 *          capacity.</p>
 *          <note>
 *             <p>This strategy can only be used if the EC2 Fleet is of type
 *             <code>instant</code>.</p>
 *          </note>
 *          <p>For more information about Capacity Reservations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">On-Demand Capacity
 *             Reservations</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For examples of using
 *          Capacity Reservations in an EC2 Fleet, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html">EC2 Fleet Example
 *             Configurations</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export interface CapacityReservationOptions {
  __type?: "CapacityReservationOptions";
  /**
   * <p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p>
   *          <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused
   *          Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If
   *          multiple instance pools have unused Capacity Reservations, the On-Demand allocation
   *          strategy (<code>lowest-price</code> or <code>prioritized</code>) is applied. If the number
   *          of unused Capacity Reservations is less than the On-Demand target capacity, the remaining
   *          On-Demand target capacity is launched according to the On-Demand allocation strategy
   *             (<code>lowest-price</code> or <code>prioritized</code>).</p>
   *          <p>If you do not specify a value, the fleet fulfils the On-Demand capacity according to the
   *          chosen On-Demand allocation strategy.</p>
   */
  UsageStrategy?: FleetCapacityReservationUsageStrategy | string;
}

export namespace CapacityReservationOptions {
  export function isa(o: any): o is CapacityReservationOptions {
    return _smithy.isa(o, "CapacityReservationOptions");
  }
}

/**
 * <p>Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand
 *          capacity.</p>
 *          <note>
 *             <p>This strategy can only be used if the EC2 Fleet is of type <code>instant</code>.</p>
 *          </note>
 *          <p>For more information about Capacity Reservations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">On-Demand Capacity
 *             Reservations</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. For examples of using
 *          Capacity Reservations in an EC2 Fleet, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html">EC2 Fleet Example
 *             Configurations</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export interface CapacityReservationOptionsRequest {
  __type?: "CapacityReservationOptionsRequest";
  /**
   * <p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p>
   *          <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused
   *          Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If
   *          multiple instance pools have unused Capacity Reservations, the On-Demand allocation
   *          strategy (<code>lowest-price</code> or <code>prioritized</code>) is applied. If the number
   *          of unused Capacity Reservations is less than the On-Demand target capacity, the remaining
   *          On-Demand target capacity is launched according to the On-Demand allocation strategy
   *             (<code>lowest-price</code> or <code>prioritized</code>).</p>
   *          <p>If you do not specify a value, the fleet fulfils the On-Demand capacity according to the
   *          chosen On-Demand allocation strategy.</p>
   */
  UsageStrategy?: FleetCapacityReservationUsageStrategy | string;
}

export namespace CapacityReservationOptionsRequest {
  export function isa(o: any): o is CapacityReservationOptionsRequest {
    return _smithy.isa(o, "CapacityReservationOptionsRequest");
  }
}

export type CapacityReservationPreference = "none" | "open";

/**
 * <p>Describes an instance's Capacity Reservation targeting option. You can specify only one parameter
 * 			at a time. If you specify <code>CapacityReservationPreference</code> and
 * 			<code>CapacityReservationTarget</code>, the request fails.</p>
 * 			      <p>Use the <code>CapacityReservationPreference</code> parameter to configure the instance
 * 			to run as an On-Demand Instance or to run in any <code>open</code> Capacity Reservation that has
 * 			matching attributes (instance type, platform, Availability Zone). Use the
 * 			<code>CapacityReservationTarget</code> parameter to explicitly target a specific
 * 			Capacity Reservation.</p>
 */
export interface CapacityReservationSpecification {
  __type?: "CapacityReservationSpecification";
  /**
   * <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes
   * 				(instance type, platform, Availability Zone).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The
   * 					instance runs as an On-Demand Instance.</p>
   *             </li>
   *          </ul>
   */
  CapacityReservationPreference?: CapacityReservationPreference | string;

  /**
   * <p>Information about the target Capacity Reservation.</p>
   */
  CapacityReservationTarget?: CapacityReservationTarget;
}

export namespace CapacityReservationSpecification {
  export function isa(o: any): o is CapacityReservationSpecification {
    return _smithy.isa(o, "CapacityReservationSpecification");
  }
}

/**
 * <p>Describes the instance's Capacity Reservation targeting preferences. The action returns the
 *                 <code>capacityReservationPreference</code> response element if the instance is
 *             configured to run in On-Demand capacity, or if it is configured in run in any
 *                 <code>open</code> Capacity Reservation that has matching attributes (instance type, platform,
 *             Availability Zone). The action returns the <code>capacityReservationTarget</code>
 *             response element if the instance explicily targets a specific Capacity Reservation.</p>
 */
export interface CapacityReservationSpecificationResponse {
  __type?: "CapacityReservationSpecificationResponse";
  /**
   * <p>Describes the instance's Capacity Reservation preferences. Possible preferences include:</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that
   *                     has matching attributes (instance type, platform, Availability Zone).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>none</code> - The instance avoids running in a Capacity Reservation even if one is
   *                     available. The instance runs in On-Demand capacity.</p>
   *             </li>
   *          </ul>
   */
  CapacityReservationPreference?: CapacityReservationPreference | string;

  /**
   * <p>Information about the targeted Capacity Reservation.</p>
   */
  CapacityReservationTarget?: CapacityReservationTargetResponse;
}

export namespace CapacityReservationSpecificationResponse {
  export function isa(o: any): o is CapacityReservationSpecificationResponse {
    return _smithy.isa(o, "CapacityReservationSpecificationResponse");
  }
}

export type CapacityReservationState =
  | "active"
  | "cancelled"
  | "expired"
  | "failed"
  | "pending";

/**
 * <p>Describes a target Capacity Reservation.</p>
 */
export interface CapacityReservationTarget {
  __type?: "CapacityReservationTarget";
  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationId?: string;
}

export namespace CapacityReservationTarget {
  export function isa(o: any): o is CapacityReservationTarget {
    return _smithy.isa(o, "CapacityReservationTarget");
  }
}

/**
 * <p>Describes a target Capacity Reservation.</p>
 */
export interface CapacityReservationTargetResponse {
  __type?: "CapacityReservationTargetResponse";
  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationId?: string;
}

export namespace CapacityReservationTargetResponse {
  export function isa(o: any): o is CapacityReservationTargetResponse {
    return _smithy.isa(o, "CapacityReservationTargetResponse");
  }
}

export type CapacityReservationTenancy = "dedicated" | "default";

/**
 * <p>Information about the client certificate used for authentication.</p>
 */
export interface CertificateAuthentication {
  __type?: "CertificateAuthentication";
  /**
   * <p>The ARN of the client certificate. </p>
   */
  ClientRootCertificateChain?: string;
}

export namespace CertificateAuthentication {
  export function isa(o: any): o is CertificateAuthentication {
    return _smithy.isa(o, "CertificateAuthentication");
  }
}

/**
 * <p>Information about the client certificate to be used for authentication.</p>
 */
export interface CertificateAuthenticationRequest {
  __type?: "CertificateAuthenticationRequest";
  /**
   * <p>The ARN of the client certificate. The certificate must be signed by a certificate
   * 			authority (CA) and it must be provisioned in AWS Certificate Manager (ACM).</p>
   */
  ClientRootCertificateChainArn?: string;
}

export namespace CertificateAuthenticationRequest {
  export function isa(o: any): o is CertificateAuthenticationRequest {
    return _smithy.isa(o, "CertificateAuthenticationRequest");
  }
}

/**
 * <p>Provides authorization for Amazon to bring a specific IP address range to a specific
 *          AWS account using bring your own IP addresses (BYOIP). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html#prepare-for-byoip">Prepare to Bring Your Address Range to Your AWS Account</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export interface CidrAuthorizationContext {
  __type?: "CidrAuthorizationContext";
  /**
   * <p>The plain-text authorization message for the prefix and account.</p>
   */
  Message: string | undefined;

  /**
   * <p>The signed authorization message for the prefix and account.</p>
   */
  Signature: string | undefined;
}

export namespace CidrAuthorizationContext {
  export function isa(o: any): o is CidrAuthorizationContext {
    return _smithy.isa(o, "CidrAuthorizationContext");
  }
}

/**
 * <p>Describes an IPv4 CIDR block.</p>
 */
export interface CidrBlock {
  __type?: "CidrBlock";
  /**
   * <p>The IPv4 CIDR block.</p>
   */
  CidrBlock?: string;
}

export namespace CidrBlock {
  export function isa(o: any): o is CidrBlock {
    return _smithy.isa(o, "CidrBlock");
  }
}

/**
 * <p>Describes the ClassicLink DNS support status of a VPC.</p>
 */
export interface ClassicLinkDnsSupport {
  __type?: "ClassicLinkDnsSupport";
  /**
   * <p>Indicates whether ClassicLink DNS support is enabled for the VPC.</p>
   */
  ClassicLinkDnsSupported?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace ClassicLinkDnsSupport {
  export function isa(o: any): o is ClassicLinkDnsSupport {
    return _smithy.isa(o, "ClassicLinkDnsSupport");
  }
}

/**
 * <p>Describes a linked EC2-Classic instance.</p>
 */
export interface ClassicLinkInstance {
  __type?: "ClassicLinkInstance";
  /**
   * <p>A list of security groups.</p>
   */
  Groups?: Array<GroupIdentifier>;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>Any tags assigned to the instance.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace ClassicLinkInstance {
  export function isa(o: any): o is ClassicLinkInstance {
    return _smithy.isa(o, "ClassicLinkInstance");
  }
}

/**
 * <p>Describes a Classic Load Balancer.</p>
 */
export interface ClassicLoadBalancer {
  __type?: "ClassicLoadBalancer";
  /**
   * <p>The name of the load balancer.</p>
   */
  Name?: string;
}

export namespace ClassicLoadBalancer {
  export function isa(o: any): o is ClassicLoadBalancer {
    return _smithy.isa(o, "ClassicLoadBalancer");
  }
}

/**
 * <p>Describes the Classic Load Balancers to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances
 *             with these Classic Load Balancers.</p>
 */
export interface ClassicLoadBalancersConfig {
  __type?: "ClassicLoadBalancersConfig";
  /**
   * <p>One or more Classic Load Balancers.</p>
   */
  ClassicLoadBalancers?: Array<ClassicLoadBalancer>;
}

export namespace ClassicLoadBalancersConfig {
  export function isa(o: any): o is ClassicLoadBalancersConfig {
    return _smithy.isa(o, "ClassicLoadBalancersConfig");
  }
}

/**
 * <p>Describes the state of a client certificate revocation list.</p>
 */
export interface ClientCertificateRevocationListStatus {
  __type?: "ClientCertificateRevocationListStatus";
  /**
   * <p>The state of the client certificate revocation list.</p>
   */
  Code?: ClientCertificateRevocationListStatusCode | string;

  /**
   * <p>A message about the status of the client certificate revocation list, if applicable.</p>
   */
  Message?: string;
}

export namespace ClientCertificateRevocationListStatus {
  export function isa(o: any): o is ClientCertificateRevocationListStatus {
    return _smithy.isa(o, "ClientCertificateRevocationListStatus");
  }
}

export type ClientCertificateRevocationListStatusCode = "active" | "pending";

/**
 * <p>Describes the client-specific data.</p>
 */
export interface ClientData {
  __type?: "ClientData";
  /**
   * <p>A user-defined comment about the disk upload.</p>
   */
  Comment?: string;

  /**
   * <p>The time that the disk upload ends.</p>
   */
  UploadEnd?: Date;

  /**
   * <p>The size of the uploaded disk image, in GiB.</p>
   */
  UploadSize?: number;

  /**
   * <p>The time that the disk upload starts.</p>
   */
  UploadStart?: Date;
}

export namespace ClientData {
  export function isa(o: any): o is ClientData {
    return _smithy.isa(o, "ClientData");
  }
}

/**
 * <p>Describes the authentication methods used by a Client VPN endpoint. Client VPN supports
 * 			Active Directory and mutual authentication. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/authentication-authrization.html#client-authentication">Authentication</a>
 * 			in the <i>AWS Client VPN Administrator Guide</i>.</p>
 */
export interface ClientVpnAuthentication {
  __type?: "ClientVpnAuthentication";
  /**
   * <p>Information about the Active Directory, if applicable.</p>
   */
  ActiveDirectory?: DirectoryServiceAuthentication;

  /**
   * <p>Information about the authentication certificates, if applicable.</p>
   */
  MutualAuthentication?: CertificateAuthentication;

  /**
   * <p>The authentication type used.</p>
   */
  Type?: ClientVpnAuthenticationType | string;
}

export namespace ClientVpnAuthentication {
  export function isa(o: any): o is ClientVpnAuthentication {
    return _smithy.isa(o, "ClientVpnAuthentication");
  }
}

/**
 * <p>Describes the authentication method to be used by a Client VPN endpoint. Client VPN supports
 * 			Active Directory and mutual authentication. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/authentication-authrization.html#client-authentication">Authentication</a>
 * 			in the <i>AWS Client VPN Administrator Guide</i>.</p>
 */
export interface ClientVpnAuthenticationRequest {
  __type?: "ClientVpnAuthenticationRequest";
  /**
   * <p>Information about the Active Directory to be used, if applicable. You must provide this information if <b>Type</b> is <code>directory-service-authentication</code>.</p>
   */
  ActiveDirectory?: DirectoryServiceAuthenticationRequest;

  /**
   * <p>Information about the authentication certificates to be used, if applicable. You must provide this information if <b>Type</b> is <code>certificate-authentication</code>.</p>
   */
  MutualAuthentication?: CertificateAuthenticationRequest;

  /**
   * <p>The type of client authentication to be used. Specify <code>certificate-authentication</code> to use certificate-based authentication, or
   * 			<code>directory-service-authentication</code> to use Active Directory authentication.</p>
   */
  Type?: ClientVpnAuthenticationType | string;
}

export namespace ClientVpnAuthenticationRequest {
  export function isa(o: any): o is ClientVpnAuthenticationRequest {
    return _smithy.isa(o, "ClientVpnAuthenticationRequest");
  }
}

export type ClientVpnAuthenticationType =
  | "certificate-authentication"
  | "directory-service-authentication";

/**
 * <p>Describes the state of an authorization rule.</p>
 */
export interface ClientVpnAuthorizationRuleStatus {
  __type?: "ClientVpnAuthorizationRuleStatus";
  /**
   * <p>The state of the authorization rule.</p>
   */
  Code?: ClientVpnAuthorizationRuleStatusCode | string;

  /**
   * <p>A message about the status of the authorization rule, if applicable.</p>
   */
  Message?: string;
}

export namespace ClientVpnAuthorizationRuleStatus {
  export function isa(o: any): o is ClientVpnAuthorizationRuleStatus {
    return _smithy.isa(o, "ClientVpnAuthorizationRuleStatus");
  }
}

export type ClientVpnAuthorizationRuleStatusCode =
  | "active"
  | "authorizing"
  | "failed"
  | "revoking";

/**
 * <p>Describes a client connection.</p>
 */
export interface ClientVpnConnection {
  __type?: "ClientVpnConnection";
  /**
   * <p>The IP address of the client.</p>
   */
  ClientIp?: string;

  /**
   * <p>The ID of the Client VPN endpoint to which the client is connected.</p>
   */
  ClientVpnEndpointId?: string;

  /**
   * <p>The common name associated with the client. This is either the name of the client certificate,
   * 			or the Active Directory user name.</p>
   */
  CommonName?: string;

  /**
   * <p>The date and time the client connection was terminated.</p>
   */
  ConnectionEndTime?: string;

  /**
   * <p>The date and time the client connection was established.</p>
   */
  ConnectionEstablishedTime?: string;

  /**
   * <p>The ID of the client connection.</p>
   */
  ConnectionId?: string;

  /**
   * <p>The number of bytes received by the client.</p>
   */
  EgressBytes?: string;

  /**
   * <p>The number of packets received by the client.</p>
   */
  EgressPackets?: string;

  /**
   * <p>The number of bytes sent by the client.</p>
   */
  IngressBytes?: string;

  /**
   * <p>The number of packets sent by the client.</p>
   */
  IngressPackets?: string;

  /**
   * <p>The current state of the client connection.</p>
   */
  Status?: ClientVpnConnectionStatus;

  /**
   * <p>The current date and time.</p>
   */
  Timestamp?: string;

  /**
   * <p>The username of the client who established the client connection. This information is only provided
   * 			if Active Directory client authentication is used.</p>
   */
  Username?: string;
}

export namespace ClientVpnConnection {
  export function isa(o: any): o is ClientVpnConnection {
    return _smithy.isa(o, "ClientVpnConnection");
  }
}

/**
 * <p>Describes the status of a client connection.</p>
 */
export interface ClientVpnConnectionStatus {
  __type?: "ClientVpnConnectionStatus";
  /**
   * <p>The state of the client connection.</p>
   */
  Code?: ClientVpnConnectionStatusCode | string;

  /**
   * <p>A message about the status of the client connection, if applicable.</p>
   */
  Message?: string;
}

export namespace ClientVpnConnectionStatus {
  export function isa(o: any): o is ClientVpnConnectionStatus {
    return _smithy.isa(o, "ClientVpnConnectionStatus");
  }
}

export type ClientVpnConnectionStatusCode =
  | "active"
  | "failed-to-terminate"
  | "terminated"
  | "terminating";

/**
 * <p>Describes a Client VPN endpoint.</p>
 */
export interface ClientVpnEndpoint {
  __type?: "ClientVpnEndpoint";
  /**
   * <p>Information about the associated target networks. A target network is a subnet in a VPC.</p>
   */
  AssociatedTargetNetworks?: Array<AssociatedTargetNetwork>;

  /**
   * <p>Information about the authentication method used by the Client VPN endpoint.</p>
   */
  AuthenticationOptions?: Array<ClientVpnAuthentication>;

  /**
   * <p>The IPv4 address range, in CIDR notation, from which client IP addresses are assigned.</p>
   */
  ClientCidrBlock?: string;

  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId?: string;

  /**
   * <p>Information about the client connection logging options for the Client VPN endpoint.</p>
   */
  ConnectionLogOptions?: ConnectionLogResponseOptions;

  /**
   * <p>The date and time the Client VPN endpoint was created.</p>
   */
  CreationTime?: string;

  /**
   * <p>The date and time the Client VPN endpoint was deleted, if applicable.</p>
   */
  DeletionTime?: string;

  /**
   * <p>A brief description of the endpoint.</p>
   */
  Description?: string;

  /**
   * <p>The DNS name to be used by clients when connecting to the Client VPN endpoint.</p>
   */
  DnsName?: string;

  /**
   * <p>Information about the DNS servers to be used for DNS resolution. </p>
   */
  DnsServers?: Array<string>;

  /**
   * <p>The ARN of the server certificate.</p>
   */
  ServerCertificateArn?: string;

  /**
   * <p>Indicates whether split-tunnel is enabled in the AWS Client VPN endpoint.</p>
   * 		       <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel AWS Client VPN Endpoint</a> in the <i>AWS
   * 				Client VPN Administrator Guide</i>.</p>
   */
  SplitTunnel?: boolean;

  /**
   * <p>The current state of the Client VPN endpoint.</p>
   */
  Status?: ClientVpnEndpointStatus;

  /**
   * <p>Any tags assigned to the Client VPN endpoint.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The transport protocol used by the Client VPN endpoint.</p>
   */
  TransportProtocol?: TransportProtocol | string;

  /**
   * <p>The port number for the  Client VPN endpoint.</p>
   */
  VpnPort?: number;

  /**
   * <p>The protocol used by the VPN session.</p>
   */
  VpnProtocol?: VpnProtocol | string;
}

export namespace ClientVpnEndpoint {
  export function isa(o: any): o is ClientVpnEndpoint {
    return _smithy.isa(o, "ClientVpnEndpoint");
  }
}

/**
 * <p>Describes the state of a Client VPN endpoint.</p>
 */
export interface ClientVpnEndpointStatus {
  __type?: "ClientVpnEndpointStatus";
  /**
   * <p>The state of the Client VPN endpoint. Possible states include:</p>
   * 		       <ul>
   *             <li>
   * 				           <p>
   *                   <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks
   * 					have been associated. The Client VPN endpoint cannot accept connections.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>available</code> - The Client VPN endpoint has been created and a target network has been
   * 					associated. The Client VPN endpoint can accept connections.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept
   * 					connections.</p>
   *             </li>
   *             <li>
   * 				           <p>
   *                   <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept
   * 					connections.</p>
   * 			         </li>
   *          </ul>
   */
  Code?: ClientVpnEndpointStatusCode | string;

  /**
   * <p>A message about the status of the Client VPN endpoint.</p>
   */
  Message?: string;
}

export namespace ClientVpnEndpointStatus {
  export function isa(o: any): o is ClientVpnEndpointStatus {
    return _smithy.isa(o, "ClientVpnEndpointStatus");
  }
}

export type ClientVpnEndpointStatusCode =
  | "available"
  | "deleted"
  | "deleting"
  | "pending-associate";

/**
 * <p>Information about a Client VPN endpoint route.</p>
 */
export interface ClientVpnRoute {
  __type?: "ClientVpnRoute";
  /**
   * <p>The ID of the Client VPN endpoint with which the route is associated.</p>
   */
  ClientVpnEndpointId?: string;

  /**
   * <p>A brief description of the route.</p>
   */
  Description?: string;

  /**
   * <p>The IPv4 address range, in CIDR notation, of the route destination.</p>
   */
  DestinationCidr?: string;

  /**
   * <p>Indicates how the route was associated with the Client VPN endpoint.
   * 			<code>associate</code> indicates that the route was automatically added when the target network
   * 			was associated with the Client VPN endpoint. <code>add-route</code> indicates that the route
   * 			was manually added using the <b>CreateClientVpnRoute</b> action.</p>
   */
  Origin?: string;

  /**
   * <p>The current state of the route.</p>
   */
  Status?: ClientVpnRouteStatus;

  /**
   * <p>The ID of the subnet through which traffic is routed.</p>
   */
  TargetSubnet?: string;

  /**
   * <p>The route type.</p>
   */
  Type?: string;
}

export namespace ClientVpnRoute {
  export function isa(o: any): o is ClientVpnRoute {
    return _smithy.isa(o, "ClientVpnRoute");
  }
}

/**
 * <p>Describes the state of a Client VPN endpoint route.</p>
 */
export interface ClientVpnRouteStatus {
  __type?: "ClientVpnRouteStatus";
  /**
   * <p>The state of the Client VPN endpoint route.</p>
   */
  Code?: ClientVpnRouteStatusCode | string;

  /**
   * <p>A message about the status of the Client VPN endpoint route, if applicable.</p>
   */
  Message?: string;
}

export namespace ClientVpnRouteStatus {
  export function isa(o: any): o is ClientVpnRouteStatus {
    return _smithy.isa(o, "ClientVpnRouteStatus");
  }
}

export type ClientVpnRouteStatusCode =
  | "active"
  | "creating"
  | "deleting"
  | "failed";

/**
 * <p>Describes address usage for a customer-owned address pool.</p>
 */
export interface CoipAddressUsage {
  __type?: "CoipAddressUsage";
  /**
   * <p>The allocation ID of the address.</p>
   */
  AllocationId?: string;

  /**
   * <p>The AWS account ID.</p>
   */
  AwsAccountId?: string;

  /**
   * <p>The AWS service.</p>
   */
  AwsService?: string;

  /**
   * <p>The customer-owned IP address.</p>
   */
  CoIp?: string;
}

export namespace CoipAddressUsage {
  export function isa(o: any): o is CoipAddressUsage {
    return _smithy.isa(o, "CoipAddressUsage");
  }
}

/**
 * <p>Describes a customer-owned address pool.</p>
 */
export interface CoipPool {
  __type?: "CoipPool";
  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId?: string;

  /**
   * <p>The address ranges of the address pool.</p>
   */
  PoolCidrs?: Array<string>;

  /**
   * <p>The ID of the address pool.</p>
   */
  PoolId?: string;

  /**
   * <p>The tags.</p>
   */
  Tags?: Array<Tag>;
}

export namespace CoipPool {
  export function isa(o: any): o is CoipPool {
    return _smithy.isa(o, "CoipPool");
  }
}

export interface ConfirmProductInstanceRequest {
  __type?: "ConfirmProductInstanceRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The product code. This must be a product code that you own.</p>
   */
  ProductCode: string | undefined;
}

export namespace ConfirmProductInstanceRequest {
  export function isa(o: any): o is ConfirmProductInstanceRequest {
    return _smithy.isa(o, "ConfirmProductInstanceRequest");
  }
}

export interface ConfirmProductInstanceResult extends $MetadataBearer {
  __type?: "ConfirmProductInstanceResult";
  /**
   * <p>The AWS account ID of the instance owner. This is only present if the product code is
   *             attached to the instance.</p>
   */
  OwnerId?: string;

  /**
   * <p>The return value of the request. Returns <code>true</code> if the specified product
   *             code is owned by the requester and associated with the specified instance.</p>
   */
  Return?: boolean;
}

export namespace ConfirmProductInstanceResult {
  export function isa(o: any): o is ConfirmProductInstanceResult {
    return _smithy.isa(o, "ConfirmProductInstanceResult");
  }
}

/**
 * <p>Describes the client connection logging options for the Client VPN endpoint.</p>
 */
export interface ConnectionLogOptions {
  __type?: "ConnectionLogOptions";
  /**
   * <p>The name of the CloudWatch Logs log group.</p>
   */
  CloudwatchLogGroup?: string;

  /**
   * <p>The name of the CloudWatch Logs log stream to which the connection data is published.</p>
   */
  CloudwatchLogStream?: string;

  /**
   * <p>Indicates whether connection logging is enabled.</p>
   */
  Enabled?: boolean;
}

export namespace ConnectionLogOptions {
  export function isa(o: any): o is ConnectionLogOptions {
    return _smithy.isa(o, "ConnectionLogOptions");
  }
}

/**
 * <p>Information about the client connection logging options for a Client VPN endpoint.</p>
 */
export interface ConnectionLogResponseOptions {
  __type?: "ConnectionLogResponseOptions";
  /**
   * <p>The name of the Amazon CloudWatch Logs log group to which connection logging data is published.</p>
   */
  CloudwatchLogGroup?: string;

  /**
   * <p>The name of the Amazon CloudWatch Logs log stream to which connection logging data is published.</p>
   */
  CloudwatchLogStream?: string;

  /**
   * <p>Indicates whether client connection logging is enabled for the Client VPN endpoint.</p>
   */
  Enabled?: boolean;
}

export namespace ConnectionLogResponseOptions {
  export function isa(o: any): o is ConnectionLogResponseOptions {
    return _smithy.isa(o, "ConnectionLogResponseOptions");
  }
}

/**
 * <p>Describes a connection notification for a VPC endpoint or VPC endpoint
 *             service.</p>
 */
export interface ConnectionNotification {
  __type?: "ConnectionNotification";
  /**
   * <p>The events for the notification. Valid values are <code>Accept</code>,
   *                 <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.</p>
   */
  ConnectionEvents?: Array<string>;

  /**
   * <p>The ARN of the SNS topic for the notification.</p>
   */
  ConnectionNotificationArn?: string;

  /**
   * <p>The ID of the notification.</p>
   */
  ConnectionNotificationId?: string;

  /**
   * <p>The state of the notification.</p>
   */
  ConnectionNotificationState?: ConnectionNotificationState | string;

  /**
   * <p>The type of notification.</p>
   */
  ConnectionNotificationType?: ConnectionNotificationType | string;

  /**
   * <p>The ID of the endpoint service.</p>
   */
  ServiceId?: string;

  /**
   * <p>The ID of the VPC endpoint.</p>
   */
  VpcEndpointId?: string;
}

export namespace ConnectionNotification {
  export function isa(o: any): o is ConnectionNotification {
    return _smithy.isa(o, "ConnectionNotification");
  }
}

export enum ConnectionNotificationState {
  Disabled = "Disabled",
  Enabled = "Enabled"
}

export enum ConnectionNotificationType {
  Topic = "Topic"
}

export type ContainerFormat = "ova";

/**
 * <p>Describes a conversion task.</p>
 */
export interface ConversionTask {
  __type?: "ConversionTask";
  /**
   * <p>The ID of the conversion task.</p>
   */
  ConversionTaskId?: string;

  /**
   * <p>The time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel
   *    the task.</p>
   */
  ExpirationTime?: string;

  /**
   * <p>If the task is for importing an instance, this contains information about the import instance task.</p>
   */
  ImportInstance?: ImportInstanceTaskDetails;

  /**
   * <p>If the task is for importing a volume, this contains information about the import volume task.</p>
   */
  ImportVolume?: ImportVolumeTaskDetails;

  /**
   * <p>The state of the conversion task.</p>
   */
  State?: ConversionTaskState | string;

  /**
   * <p>The status message related to the conversion task.</p>
   */
  StatusMessage?: string;

  /**
   * <p>Any tags assigned to the task.</p>
   */
  Tags?: Array<Tag>;
}

export namespace ConversionTask {
  export function isa(o: any): o is ConversionTask {
    return _smithy.isa(o, "ConversionTask");
  }
}

export type ConversionTaskState =
  | "active"
  | "cancelled"
  | "cancelling"
  | "completed";

export interface CopyFpgaImageRequest {
  __type?: "CopyFpgaImageRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   *          For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The description for the new AFI.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The name for the new AFI. The default is the name of the source AFI.</p>
   */
  Name?: string;

  /**
   * <p>The ID of the source AFI.</p>
   */
  SourceFpgaImageId: string | undefined;

  /**
   * <p>The Region that contains the source AFI.</p>
   */
  SourceRegion: string | undefined;
}

export namespace CopyFpgaImageRequest {
  export function isa(o: any): o is CopyFpgaImageRequest {
    return _smithy.isa(o, "CopyFpgaImageRequest");
  }
}

export interface CopyFpgaImageResult extends $MetadataBearer {
  __type?: "CopyFpgaImageResult";
  /**
   * <p>The ID of the new AFI.</p>
   */
  FpgaImageId?: string;
}

export namespace CopyFpgaImageResult {
  export function isa(o: any): o is CopyFpgaImageResult {
    return _smithy.isa(o, "CopyFpgaImageResult");
  }
}

/**
 * <p>Contains the parameters for CopyImage.</p>
 */
export interface CopyImageRequest {
  __type?: "CopyImageRequest";
  /**
   * <p>Unique, case-sensitive identifier you provide to ensure
   * 				idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the
   * 			  <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  ClientToken?: string;

  /**
   * <p>A description for the new AMI in the destination Region.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specifies whether the destination snapshots of the copied image should be encrypted.
   *        You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted
   *        copy of an encrypted snapshot. The default CMK for EBS is used unless you specify a non-default
   *        AWS Key Management Service (AWS KMS) CMK using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating
   *       the encrypted volume. This parameter is only required if you want to use a non-default CMK; if
   *       this parameter is not specified, the default CMK for EBS is used. If a <code>KmsKeyId</code>
   *       is specified, the <code>Encrypted</code> flag must also be set. </p>
   *    	     <p>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN.
   *    		When using an alias name, prefix it with "alias/". For example:</p>
   *    	     <ul>
   *             <li>
   *    			         <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
   *                </p>
   *    		       </li>
   *             <li>
   *    			         <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
   *                </p>
   *    		       </li>
   *             <li>
   *    			         <p>Alias name: <code>alias/ExampleAlias</code>
   *                </p>
   *    		       </li>
   *             <li>
   *    			         <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>
   *                </p>
   *    		       </li>
   *          </ul>
   *          <p>AWS parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may
   *       appear to complete even though you provided an invalid identifier. This action will eventually
   *       report failure. </p>
   *          <p>The specified CMK must exist in the Region that the snapshot is being copied to. </p>
   *          <p>Amazon EBS does not support asymmetric CMKs.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The name of the new AMI in the destination Region.</p>
   */
  Name: string | undefined;

  /**
   * <p>The ID of the AMI to copy.</p>
   */
  SourceImageId: string | undefined;

  /**
   * <p>The name of the Region that contains the AMI to copy.</p>
   */
  SourceRegion: string | undefined;
}

export namespace CopyImageRequest {
  export function isa(o: any): o is CopyImageRequest {
    return _smithy.isa(o, "CopyImageRequest");
  }
}

/**
 * <p>Contains the output of CopyImage.</p>
 */
export interface CopyImageResult extends $MetadataBearer {
  __type?: "CopyImageResult";
  /**
   * <p>The ID of the new AMI.</p>
   */
  ImageId?: string;
}

export namespace CopyImageResult {
  export function isa(o: any): o is CopyImageResult {
    return _smithy.isa(o, "CopyImageResult");
  }
}

export interface CopySnapshotRequest {
  __type?: "CopySnapshotRequest";
  /**
   * <p>A description for the EBS snapshot.</p>
   */
  Description?: string;

  /**
   * <p>The destination Region to use in the <code>PresignedUrl</code> parameter of a snapshot
   *       copy operation. This parameter is only valid for specifying the destination Region in a
   *         <code>PresignedUrl</code> parameter, where it is required.</p>
   *
   *          <p>The snapshot copy is sent to the regional endpoint that you sent the HTTP
   *       request to (for example, <code>ec2.us-east-1.amazonaws.com</code>). With the AWS CLI, this is
   *       specified using the <code>--region</code> parameter or the default Region in your AWS
   *       configuration file.</p>
   */
  DestinationRegion?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled,
   *       enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots
   *       are encrypted, even if you omit this parameter and encryption by default is not enabled. You
   *       cannot set this parameter to false. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the
   *       <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption.
   *       If this parameter is not specified, your AWS managed CMK for EBS is used. If <code>KmsKeyId</code> is
   *       specified, the encrypted state must be <code>true</code>.</p>
   *          <p>You can specify the CMK using any of the following:</p>
   *          <ul>
   *             <li>
   *                <p>Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.</p>
   *             </li>
   *             <li>
   *                <p>Key alias. For example, alias/ExampleAlias.</p>
   *             </li>
   *             <li>
   *                <p>Key ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p>
   *             </li>
   *             <li>
   *                <p>Alias ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p>
   *             </li>
   *          </ul>
   *          <p>AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid,
   *       the action can appear to complete, but eventually fails.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a
   *       pre-signed URL. This parameter is optional for unencrypted snapshots. For more information,
   *       see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html">Query
   *         Requests</a>.</p>
   *          <p>The <code>PresignedUrl</code> should use the snapshot source endpoint, the
   *         <code>CopySnapshot</code> action, and include the <code>SourceRegion</code>,
   *         <code>SourceSnapshotId</code>, and <code>DestinationRegion</code> parameters. The
   *         <code>PresignedUrl</code> must be signed using AWS Signature Version 4. Because EBS
   *       snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic
   *       that is described in <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests by Using Query
   *         Parameters (AWS Signature Version 4)</a> in the <i>Amazon Simple Storage Service API Reference</i>. An
   *       invalid or improperly signed <code>PresignedUrl</code> will cause the copy operation to fail
   *       asynchronously, and the snapshot will move to an <code>error</code> state.</p>
   */
  PresignedUrl?: string;

  /**
   * <p>The ID of the Region that contains the snapshot to be copied.</p>
   */
  SourceRegion: string | undefined;

  /**
   * <p>The ID of the EBS snapshot to copy.</p>
   */
  SourceSnapshotId: string | undefined;

  /**
   * <p>The tags to apply to the new snapshot.</p>
   */
  TagSpecifications?: Array<TagSpecification>;
}

export namespace CopySnapshotRequest {
  export function isa(o: any): o is CopySnapshotRequest {
    return _smithy.isa(o, "CopySnapshotRequest");
  }
}

export interface CopySnapshotResult extends $MetadataBearer {
  __type?: "CopySnapshotResult";
  /**
   * <p>The ID of the new snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>Any tags applied to the new snapshot.</p>
   */
  Tags?: Array<Tag>;
}

export namespace CopySnapshotResult {
  export function isa(o: any): o is CopySnapshotResult {
    return _smithy.isa(o, "CopySnapshotResult");
  }
}

export type CopyTagsFromSource = "volume";

/**
 * <p>The CPU options for the instance.</p>
 */
export interface CpuOptions {
  __type?: "CpuOptions";
  /**
   * <p>The number of CPU cores for the instance.</p>
   */
  CoreCount?: number;

  /**
   * <p>The number of threads per CPU core.</p>
   */
  ThreadsPerCore?: number;
}

export namespace CpuOptions {
  export function isa(o: any): o is CpuOptions {
    return _smithy.isa(o, "CpuOptions");
  }
}

/**
 * <p>The CPU options for the instance. Both the core count and threads per core must be
 *             specified in the request.</p>
 */
export interface CpuOptionsRequest {
  __type?: "CpuOptionsRequest";
  /**
   * <p>The number of CPU cores for the instance.</p>
   */
  CoreCount?: number;

  /**
   * <p>The number of threads per CPU core. To disable multithreading for
   *             the instance, specify a value of <code>1</code>. Otherwise, specify the default value of
   *                 <code>2</code>.</p>
   */
  ThreadsPerCore?: number;
}

export namespace CpuOptionsRequest {
  export function isa(o: any): o is CpuOptionsRequest {
    return _smithy.isa(o, "CpuOptionsRequest");
  }
}

export interface CreateCapacityReservationRequest {
  __type?: "CreateCapacityReservationRequest";
  /**
   * <p>The Availability Zone in which to create the Capacity Reservation.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The ID of the Availability Zone in which to create the Capacity Reservation.</p>
   */
  AvailabilityZoneId?: string;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   * 			request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure
   * 				Idempotency</a>.</p>
   * 		       <p>Constraint: Maximum 64 ASCII characters.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides
   * 			dedicated throughput to Amazon EBS and an optimized configuration stack to provide
   * 			optimal I/O performance. This optimization isn't available with all instance types.
   * 			Additional usage charges apply when using an EBS- optimized instance.</p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity
   * 			is released and you can no longer launch instances into it. The Capacity Reservation's state changes to
   * 				<code>expired</code> when it reaches its end date and time.</p>
   * 		       <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is
   * 				<code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is
   * 				<code>unlimited</code>.</p>
   *
   * 		       <p>If the <code>EndDateType</code> is <code>limited</code>, the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify
   * 			5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p>
   */
  EndDate?: Date;

  /**
   * <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end
   * 			types:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not
   * 					provide an <code>EndDate</code> if the <code>EndDateType</code> is
   * 						<code>unlimited</code>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must
   * 					provide an <code>EndDate</code> value if the <code>EndDateType</code> value is
   * 						<code>limited</code>.</p>
   *             </li>
   *          </ul>
   */
  EndDateType?: EndDateType | string;

  /**
   * <p>Indicates whether the Capacity Reservation supports instances with temporary, block-level
   * 			storage.</p>
   */
  EphemeralStorage?: boolean;

  /**
   * <p>The number of instances for which to reserve capacity.</p>
   */
  InstanceCount: number | undefined;

  /**
   * <p>Indicates the type of instance launches that the Capacity Reservation accepts. The options
   * 			include:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>open</code> - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform,
   * 				and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying
   * 				any additional parameters.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes
   * 					(instance type, platform, and Availability Zone), and explicitly target the
   * 					Capacity Reservation. This ensures that only permitted instances can use the reserved capacity. </p>
   *             </li>
   *          </ul>
   * 		       <p>Default: <code>open</code>
   *          </p>
   */
  InstanceMatchCriteria?: InstanceMatchCriteria | string;

  /**
   * <p>The type of operating system for which to reserve capacity.</p>
   */
  InstancePlatform: CapacityReservationInstancePlatform | string | undefined;

  /**
   * <p>The instance type for which to reserve capacity. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
   * 				Types</a> in the <i>Amazon Elastic Compute Cloud User
   * 			Guide</i>.</p>
   */
  InstanceType: string | undefined;

  /**
   * <p>The tags to apply to the Capacity Reservation during launch.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>default</code> - The Capacity Reservation is created on hardware that is shared with other AWS accounts.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single AWS account.</p>
   *             </li>
   *          </ul>
   */
  Tenancy?: CapacityReservationTenancy | string;
}

export namespace CreateCapacityReservationRequest {
  export function isa(o: any): o is CreateCapacityReservationRequest {
    return _smithy.isa(o, "CreateCapacityReservationRequest");
  }
}

export interface CreateCapacityReservationResult extends $MetadataBearer {
  __type?: "CreateCapacityReservationResult";
  /**
   * <p>Information about the Capacity Reservation.</p>
   */
  CapacityReservation?: CapacityReservation;
}

export namespace CreateCapacityReservationResult {
  export function isa(o: any): o is CreateCapacityReservationResult {
    return _smithy.isa(o, "CreateCapacityReservationResult");
  }
}

export interface CreateClientVpnEndpointRequest {
  __type?: "CreateClientVpnEndpointRequest";
  /**
   * <p>Information about the authentication method to be used to authenticate clients.</p>
   */
  AuthenticationOptions: Array<ClientVpnAuthenticationRequest> | undefined;

  /**
   * <p>The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.</p>
   */
  ClientCidrBlock: string | undefined;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the client connection logging options.</p>
   * 		       <p>If you enable client connection logging, data about client connections is sent to a
   * 			Cloudwatch Logs log stream. The following information is logged:</p>
   * 		       <ul>
   *             <li>
   *                <p>Client connection requests</p>
   *             </li>
   *             <li>
   *                <p>Client connection results (successful and unsuccessful)</p>
   *             </li>
   *             <li>
   *                <p>Reasons for unsuccessful client connection requests</p>
   *             </li>
   *             <li>
   *                <p>Client connection termination time</p>
   *             </li>
   *          </ul>
   */
  ConnectionLogOptions: ConnectionLogOptions | undefined;

  /**
   * <p>A brief description of the Client VPN endpoint.</p>
   */
  Description?: string;

  /**
   * <p>Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can
   * 			have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.</p>
   */
  DnsServers?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ARN of the server certificate. For more information, see
   * 			the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">AWS Certificate Manager User Guide</a>.</p>
   */
  ServerCertificateArn: string | undefined;

  /**
   * <p>Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.</p>
   * 		       <p>By default, split-tunnel on a VPN endpoint is disabled.</p>
   * 		       <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel AWS Client VPN Endpoint</a> in the <i>AWS
   * 				Client VPN Administrator Guide</i>.</p>
   */
  SplitTunnel?: boolean;

  /**
   * <p>The tags to apply to the Client VPN endpoint during creation.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The transport protocol to be used by the VPN session.</p>
   * 		       <p>Default value: <code>udp</code>
   *          </p>
   */
  TransportProtocol?: TransportProtocol | string;

  /**
   * <p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p>
   * 	        <p>Valid Values: <code>443</code> | <code>1194</code>
   *          </p>
   * 	        <p>Default Value: <code>443</code>
   *          </p>
   */
  VpnPort?: number;
}

export namespace CreateClientVpnEndpointRequest {
  export function isa(o: any): o is CreateClientVpnEndpointRequest {
    return _smithy.isa(o, "CreateClientVpnEndpointRequest");
  }
}

export interface CreateClientVpnEndpointResult extends $MetadataBearer {
  __type?: "CreateClientVpnEndpointResult";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId?: string;

  /**
   * <p>The DNS name to be used by clients when establishing their VPN session.</p>
   */
  DnsName?: string;

  /**
   * <p>The current state of the Client VPN endpoint.</p>
   */
  Status?: ClientVpnEndpointStatus;
}

export namespace CreateClientVpnEndpointResult {
  export function isa(o: any): o is CreateClientVpnEndpointResult {
    return _smithy.isa(o, "CreateClientVpnEndpointResult");
  }
}

export interface CreateClientVpnRouteRequest {
  __type?: "CreateClientVpnRouteRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The ID of the Client VPN endpoint to which to add the route.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>A brief description of the route.</p>
   */
  Description?: string;

  /**
   * <p>The IPv4 address range, in CIDR notation, of the route destination. For example:</p>
   * 		       <ul>
   *             <li>
   *                <p>To add a route for Internet access, enter <code>0.0.0.0/0</code>
   *                </p>
   *             </li>
   *             <li>
   *                <p>To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range</p>
   *             </li>
   *             <li>
   *                <p>To add a route for an on-premises network, enter the AWS Site-to-Site VPN connection's IPv4 CIDR range</p>
   *             </li>
   *          </ul>
   * 		       <p>Route address ranges cannot overlap with the CIDR range specified for client allocation.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the subnet through which you want to route traffic. The specified subnet must be
   * 			an existing target network of the Client VPN endpoint.</p>
   */
  TargetVpcSubnetId: string | undefined;
}

export namespace CreateClientVpnRouteRequest {
  export function isa(o: any): o is CreateClientVpnRouteRequest {
    return _smithy.isa(o, "CreateClientVpnRouteRequest");
  }
}

export interface CreateClientVpnRouteResult extends $MetadataBearer {
  __type?: "CreateClientVpnRouteResult";
  /**
   * <p>The current state of the route.</p>
   */
  Status?: ClientVpnRouteStatus;
}

export namespace CreateClientVpnRouteResult {
  export function isa(o: any): o is CreateClientVpnRouteResult {
    return _smithy.isa(o, "CreateClientVpnRouteResult");
  }
}

/**
 * <p>Contains the parameters for CreateCustomerGateway.</p>
 */
export interface CreateCustomerGatewayRequest {
  __type?: "CreateCustomerGatewayRequest";
  /**
   * <p>For devices that support BGP, the customer gateway's BGP ASN.</p>
   *         <p>Default: 65000</p>
   */
  BgpAsn: number | undefined;

  /**
   * <p>The Amazon Resource Name (ARN) for the customer gateway certificate.</p>
   */
  CertificateArn?: string;

  /**
   * <p>A name for the customer gateway device.</p>
   *         <p>Length Constraints: Up to 255 characters.</p>
   */
  DeviceName?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The Internet-routable IP address for the customer gateway's outside interface. The address must be static.</p>
   */
  PublicIp?: string;

  /**
   * <p>The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).</p>
   */
  Type: GatewayType | string | undefined;
}

export namespace CreateCustomerGatewayRequest {
  export function isa(o: any): o is CreateCustomerGatewayRequest {
    return _smithy.isa(o, "CreateCustomerGatewayRequest");
  }
}

/**
 * <p>Contains the output of CreateCustomerGateway.</p>
 */
export interface CreateCustomerGatewayResult extends $MetadataBearer {
  __type?: "CreateCustomerGatewayResult";
  /**
   * <p>Information about the customer gateway.</p>
   */
  CustomerGateway?: CustomerGateway;
}

export namespace CreateCustomerGatewayResult {
  export function isa(o: any): o is CreateCustomerGatewayResult {
    return _smithy.isa(o, "CreateCustomerGatewayResult");
  }
}

export interface CreateDefaultSubnetRequest {
  __type?: "CreateDefaultSubnetRequest";
  /**
   * <p>The Availability Zone in which to create the default subnet.</p>
   */
  AvailabilityZone: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace CreateDefaultSubnetRequest {
  export function isa(o: any): o is CreateDefaultSubnetRequest {
    return _smithy.isa(o, "CreateDefaultSubnetRequest");
  }
}

export interface CreateDefaultSubnetResult extends $MetadataBearer {
  __type?: "CreateDefaultSubnetResult";
  /**
   * <p>Information about the subnet.</p>
   */
  Subnet?: Subnet;
}

export namespace CreateDefaultSubnetResult {
  export function isa(o: any): o is CreateDefaultSubnetResult {
    return _smithy.isa(o, "CreateDefaultSubnetResult");
  }
}

export interface CreateDefaultVpcRequest {
  __type?: "CreateDefaultVpcRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace CreateDefaultVpcRequest {
  export function isa(o: any): o is CreateDefaultVpcRequest {
    return _smithy.isa(o, "CreateDefaultVpcRequest");
  }
}

export interface CreateDefaultVpcResult extends $MetadataBearer {
  __type?: "CreateDefaultVpcResult";
  /**
   * <p>Information about the VPC.</p>
   */
  Vpc?: Vpc;
}

export namespace CreateDefaultVpcResult {
  export function isa(o: any): o is CreateDefaultVpcResult {
    return _smithy.isa(o, "CreateDefaultVpcResult");
  }
}

export interface CreateDhcpOptionsRequest {
  __type?: "CreateDhcpOptionsRequest";
  /**
   * <p>A DHCP configuration option.</p>
   */
  DhcpConfigurations: Array<NewDhcpConfiguration> | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace CreateDhcpOptionsRequest {
  export function isa(o: any): o is CreateDhcpOptionsRequest {
    return _smithy.isa(o, "CreateDhcpOptionsRequest");
  }
}

export interface CreateDhcpOptionsResult extends $MetadataBearer {
  __type?: "CreateDhcpOptionsResult";
  /**
   * <p>A set of DHCP options.</p>
   */
  DhcpOptions?: DhcpOptions;
}

export namespace CreateDhcpOptionsResult {
  export function isa(o: any): o is CreateDhcpOptionsResult {
    return _smithy.isa(o, "CreateDhcpOptionsResult");
  }
}

export interface CreateEgressOnlyInternetGatewayRequest {
  __type?: "CreateEgressOnlyInternetGatewayRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   * 			request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure
   * 				Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC for which to create the egress-only internet gateway.</p>
   */
  VpcId: string | undefined;
}

export namespace CreateEgressOnlyInternetGatewayRequest {
  export function isa(o: any): o is CreateEgressOnlyInternetGatewayRequest {
    return _smithy.isa(o, "CreateEgressOnlyInternetGatewayRequest");
  }
}

export interface CreateEgressOnlyInternetGatewayResult extends $MetadataBearer {
  __type?: "CreateEgressOnlyInternetGatewayResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   * 			request.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the egress-only internet gateway.</p>
   */
  EgressOnlyInternetGateway?: EgressOnlyInternetGateway;
}

export namespace CreateEgressOnlyInternetGatewayResult {
  export function isa(o: any): o is CreateEgressOnlyInternetGatewayResult {
    return _smithy.isa(o, "CreateEgressOnlyInternetGatewayResult");
  }
}

/**
 * <p>Describes the instances that could not be launched by the fleet.</p>
 */
export interface CreateFleetError {
  __type?: "CreateFleetError";
  /**
   * <p>The error code that indicates why the instance could not be launched. For more
   *          information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.</p>
   */
  ErrorCode?: string;

  /**
   * <p>The error message that describes why the instance could not be launched. For more
   *          information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.</p>
   */
  ErrorMessage?: string;

  /**
   * <p>The launch templates and overrides that were used for launching the instances. The
   *          values that you specify in the Overrides replace the values in the launch template.</p>
   */
  LaunchTemplateAndOverrides?: LaunchTemplateAndOverridesResponse;

  /**
   * <p>Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.</p>
   */
  Lifecycle?: InstanceLifecycle | string;
}

export namespace CreateFleetError {
  export function isa(o: any): o is CreateFleetError {
    return _smithy.isa(o, "CreateFleetError");
  }
}

/**
 * <p>Describes the instances that were launched by the fleet.</p>
 */
export interface CreateFleetInstance {
  __type?: "CreateFleetInstance";
  /**
   * <p>The IDs of the instances.</p>
   */
  InstanceIds?: Array<string>;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The launch templates and overrides that were used for launching the instances. The
   *          values that you specify in the Overrides replace the values in the launch template.</p>
   */
  LaunchTemplateAndOverrides?: LaunchTemplateAndOverridesResponse;

  /**
   * <p>Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.</p>
   */
  Lifecycle?: InstanceLifecycle | string;

  /**
   * <p>The value is <code>Windows</code> for Windows instances. Otherwise, the value is
   *          blank.</p>
   */
  Platform?: PlatformValues | string;
}

export namespace CreateFleetInstance {
  export function isa(o: any): o is CreateFleetInstance {
    return _smithy.isa(o, "CreateFleetInstance");
  }
}

export interface CreateFleetRequest {
  __type?: "CreateFleetRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *          request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   *             Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether running instances should be terminated if the total target capacity of
   *          the EC2 Fleet is decreased below the current size of the EC2 Fleet.</p>
   */
  ExcessCapacityTerminationPolicy?:
    | FleetExcessCapacityTerminationPolicy
    | string;

  /**
   * <p>The configuration for the EC2 Fleet.</p>
   */
  LaunchTemplateConfigs: Array<FleetLaunchTemplateConfigRequest> | undefined;

  /**
   * <p>Describes the configuration of On-Demand Instances in an EC2 Fleet.</p>
   */
  OnDemandOptions?: OnDemandOptionsRequest;

  /**
   * <p>Indicates whether EC2 Fleet should replace unhealthy instances.</p>
   */
  ReplaceUnhealthyInstances?: boolean;

  /**
   * <p>Describes the configuration of Spot Instances in an EC2 Fleet.</p>
   */
  SpotOptions?: SpotOptionsRequest;

  /**
   * <p>The key-value pair for tagging the EC2 Fleet request on creation. The value for
   *             <code>ResourceType</code> must be <code>fleet</code>, otherwise the fleet request fails.
   *          To tag instances at launch, specify the tags in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch
   *             template</a>. For information about tagging after launch, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging Your
   *             Resources</a>. </p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The number of units to request.</p>
   */
  TargetCapacitySpecification: TargetCapacitySpecificationRequest | undefined;

  /**
   * <p>Indicates whether running instances should be terminated when the EC2 Fleet expires.</p>
   */
  TerminateInstancesWithExpiration?: boolean;

  /**
   * <p>The type of the request. By default, the EC2 Fleet places an asynchronous request for your
   *          desired capacity, and maintains it by replenishing interrupted Spot Instances
   *          (<code>maintain</code>). A value of <code>instant</code> places a synchronous one-time
   *          request, and returns errors for any instances that could not be launched. A value of
   *             <code>request</code> places an asynchronous one-time request without maintaining
   *          capacity or submitting requests in alternative capacity pools if capacity is unavailable.
   *          For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-configuration-strategies.html#ec2-fleet-request-type">EC2 Fleet
   *             Request Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  Type?: FleetType | string;

  /**
   * <p>The start date and time of the request, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *          The default is to start fulfilling the request immediately.</p>
   */
  ValidFrom?: Date;

  /**
   * <p>The end date and time of the request, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *          At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.</p>
   */
  ValidUntil?: Date;
}

export namespace CreateFleetRequest {
  export function isa(o: any): o is CreateFleetRequest {
    return _smithy.isa(o, "CreateFleetRequest");
  }
}

export interface CreateFleetResult extends $MetadataBearer {
  __type?: "CreateFleetResult";
  /**
   * <p>Information about the instances that could not be launched by the fleet. Valid only when
   *             <b>Type</b> is set to <code>instant</code>.</p>
   */
  Errors?: Array<CreateFleetError>;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId?: string;

  /**
   * <p>Information about the instances that were launched by the fleet. Valid only when
   *             <b>Type</b> is set to <code>instant</code>.</p>
   */
  Instances?: Array<CreateFleetInstance>;
}

export namespace CreateFleetResult {
  export function isa(o: any): o is CreateFleetResult {
    return _smithy.isa(o, "CreateFleetResult");
  }
}

export interface CreateFlowLogsRequest {
  __type?: "CreateFlowLogsRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure
   *                 Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group
   *             in your account.</p>
   *         <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify
   *             <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>
   */
  DeliverLogsPermissionArn?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specifies the destination to which the flow log data is to be published. Flow log data can be published
   *             to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified
   *             for <code>LogDestinationType</code>.</p>
   *         <p>If <code>LogDestinationType</code> is not specified or <code>cloud-watch-logs</code>,
   *             specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish
   *             to a log group called <code>my-logs</code>, specify
   *             <code>arn:aws:logs:us-east-1:123456789012:log-group:my-logs</code>. Alternatively,
   *             use <code>LogGroupName</code> instead.</p>
   *         <p>If LogDestinationType is <code>s3</code>, specify the ARN of the Amazon S3 bucket. You can also specify a
   *             subfolder in the bucket. To specify a subfolder in the bucket, use the following  ARN format:
   *             <code>bucket_ARN/subfolder_name/</code>. For example, to specify a subfolder named <code>my-logs</code> in a
   *             bucket named <code>my-bucket</code>, use the following ARN: <code>arn:aws:s3:::my-bucket/my-logs/</code>. You
   *             cannot use <code>AWSLogs</code> as a subfolder name. This is a reserved term.</p>
   */
  LogDestination?: string;

  /**
   * <p>Specifies the type of destination to which the flow log data is to be published. Flow log data can be
   *             published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify <code>cloud-watch-logs</code>. To
   *             publish flow log data to Amazon S3, specify <code>s3</code>.</p>
   *         <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify
   *             <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>
   *         <p>Default: <code>cloud-watch-logs</code>
   *          </p>
   */
  LogDestinationType?: LogDestinationType | string;

  /**
   * <p>The fields to include in the flow log record, in the order in which they should
   *             appear. For a list of available fields, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow Log Records</a>. If you
   *             omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.</p>
   *         <p>Specify the fields using the <code>${field-id}</code> format, separated by spaces. For
   *             the AWS CLI, use single quotation marks (' ') to surround the parameter value.</p>
   *         <p>Only applicable to flow logs that are published to an Amazon S3 bucket.</p>
   */
  LogFormat?: string;

  /**
   * <p>The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.</p>
   *         <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify
   *             <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>
   */
  LogGroupName?: string;

  /**
   * <p>The ID of the subnet, network interface, or VPC for which you want to create a flow log.</p>
   *         <p>Constraints: Maximum of 1000 resources</p>
   */
  ResourceIds: Array<string> | undefined;

  /**
   * <p>The type of resource for which to create the flow log. For example, if you specified a VPC ID for
   *             the <code>ResourceId</code> property, specify <code>VPC</code> for this property.</p>
   */
  ResourceType: FlowLogsResourceType | string | undefined;

  /**
   * <p>The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.</p>
   */
  TrafficType: TrafficType | string | undefined;
}

export namespace CreateFlowLogsRequest {
  export function isa(o: any): o is CreateFlowLogsRequest {
    return _smithy.isa(o, "CreateFlowLogsRequest");
  }
}

export interface CreateFlowLogsResult extends $MetadataBearer {
  __type?: "CreateFlowLogsResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *             request.</p>
   */
  ClientToken?: string;

  /**
   * <p>The IDs of the flow logs.</p>
   */
  FlowLogIds?: Array<string>;

  /**
   * <p>Information about the flow logs that could not be created successfully.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace CreateFlowLogsResult {
  export function isa(o: any): o is CreateFlowLogsResult {
    return _smithy.isa(o, "CreateFlowLogsResult");
  }
}

export interface CreateFpgaImageRequest {
  __type?: "CreateFpgaImageRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   *          For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>A description for the AFI.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.</p>
   */
  InputStorageLocation: StorageLocation | undefined;

  /**
   * <p>The location in Amazon S3 for the output logs.</p>
   */
  LogsStorageLocation?: StorageLocation;

  /**
   * <p>A name for the AFI.</p>
   */
  Name?: string;

  /**
   * <p>The tags to apply to the FPGA image during creation.</p>
   */
  TagSpecifications?: Array<TagSpecification>;
}

export namespace CreateFpgaImageRequest {
  export function isa(o: any): o is CreateFpgaImageRequest {
    return _smithy.isa(o, "CreateFpgaImageRequest");
  }
}

export interface CreateFpgaImageResult extends $MetadataBearer {
  __type?: "CreateFpgaImageResult";
  /**
   * <p>The global FPGA image identifier (AGFI ID).</p>
   */
  FpgaImageGlobalId?: string;

  /**
   * <p>The FPGA image identifier (AFI ID).</p>
   */
  FpgaImageId?: string;
}

export namespace CreateFpgaImageResult {
  export function isa(o: any): o is CreateFpgaImageResult {
    return _smithy.isa(o, "CreateFpgaImageResult");
  }
}

export interface CreateImageRequest {
  __type?: "CreateImageRequest";
  /**
   * <p>The block device mappings. This parameter cannot be used to modify the encryption status of existing volumes or snapshots. To create an AMI with encrypted snapshots, use the <a>CopyImage</a> action.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>A description for the new image.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>A name for the new image.</p>
   *          <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>
   */
  Name: string | undefined;

  /**
   * <p>By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the 'No Reboot' option is set, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed.</p>
   */
  NoReboot?: boolean;
}

export namespace CreateImageRequest {
  export function isa(o: any): o is CreateImageRequest {
    return _smithy.isa(o, "CreateImageRequest");
  }
}

export interface CreateImageResult extends $MetadataBearer {
  __type?: "CreateImageResult";
  /**
   * <p>The ID of the new AMI.</p>
   */
  ImageId?: string;
}

export namespace CreateImageResult {
  export function isa(o: any): o is CreateImageResult {
    return _smithy.isa(o, "CreateImageResult");
  }
}

export interface CreateInstanceExportTaskRequest {
  __type?: "CreateInstanceExportTaskRequest";
  /**
   * <p>A description for the conversion task or the resource being exported. The maximum length is 255 bytes.</p>
   */
  Description?: string;

  /**
   * <p>The format and location for an instance export task.</p>
   */
  ExportToS3Task?: ExportToS3TaskSpecification;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The target virtualization environment.</p>
   */
  TargetEnvironment?: ExportEnvironment | string;
}

export namespace CreateInstanceExportTaskRequest {
  export function isa(o: any): o is CreateInstanceExportTaskRequest {
    return _smithy.isa(o, "CreateInstanceExportTaskRequest");
  }
}

export interface CreateInstanceExportTaskResult extends $MetadataBearer {
  __type?: "CreateInstanceExportTaskResult";
  /**
   * <p>Information about the instance export task.</p>
   */
  ExportTask?: ExportTask;
}

export namespace CreateInstanceExportTaskResult {
  export function isa(o: any): o is CreateInstanceExportTaskResult {
    return _smithy.isa(o, "CreateInstanceExportTaskResult");
  }
}

export interface CreateInternetGatewayRequest {
  __type?: "CreateInternetGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace CreateInternetGatewayRequest {
  export function isa(o: any): o is CreateInternetGatewayRequest {
    return _smithy.isa(o, "CreateInternetGatewayRequest");
  }
}

export interface CreateInternetGatewayResult extends $MetadataBearer {
  __type?: "CreateInternetGatewayResult";
  /**
   * <p>Information about the internet gateway.</p>
   */
  InternetGateway?: InternetGateway;
}

export namespace CreateInternetGatewayResult {
  export function isa(o: any): o is CreateInternetGatewayResult {
    return _smithy.isa(o, "CreateInternetGatewayResult");
  }
}

export interface CreateKeyPairRequest {
  __type?: "CreateKeyPairRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>A unique name for the key pair.</p>
   * 	        <p>Constraints: Up to 255 ASCII characters</p>
   */
  KeyName: string | undefined;
}

export namespace CreateKeyPairRequest {
  export function isa(o: any): o is CreateKeyPairRequest {
    return _smithy.isa(o, "CreateKeyPairRequest");
  }
}

export interface CreateLaunchTemplateRequest {
  __type?: "CreateLaunchTemplateRequest";
  /**
   * <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the
   *             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   *                 Idempotency</a>.</p>
   *         <p>Constraint: Maximum 128 ASCII characters.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The information for the launch template.</p>
   */
  LaunchTemplateData: RequestLaunchTemplateData | undefined;

  /**
   * <p>A name for the launch template.</p>
   */
  LaunchTemplateName: string | undefined;

  /**
   * <p>The tags to apply to the launch template during creation.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>A description for the first version of the launch template.</p>
   */
  VersionDescription?: string;
}

export namespace CreateLaunchTemplateRequest {
  export function isa(o: any): o is CreateLaunchTemplateRequest {
    return _smithy.isa(o, "CreateLaunchTemplateRequest");
  }
}

export interface CreateLaunchTemplateResult extends $MetadataBearer {
  __type?: "CreateLaunchTemplateResult";
  /**
   * <p>Information about the launch template.</p>
   */
  LaunchTemplate?: LaunchTemplate;
}

export namespace CreateLaunchTemplateResult {
  export function isa(o: any): o is CreateLaunchTemplateResult {
    return _smithy.isa(o, "CreateLaunchTemplateResult");
  }
}

export interface CreateLaunchTemplateVersionRequest {
  __type?: "CreateLaunchTemplateVersionRequest";
  /**
   * <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the
   *             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   *                 Idempotency</a>.</p>
   *         <p>Constraint: Maximum 128 ASCII characters.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The information for the launch template.</p>
   */
  LaunchTemplateData: RequestLaunchTemplateData | undefined;

  /**
   * <p>The ID of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The version number of the launch template version on which to base the new version.
   *             The new version inherits the same launch parameters as the source version, except for
   *             parameters that you specify in <code>LaunchTemplateData</code>. Snapshots applied
   *             to the block device mapping are ignored when creating a new version unless they
   *             are explicitly included.</p>
   */
  SourceVersion?: string;

  /**
   * <p>A description for the version of the launch template.</p>
   */
  VersionDescription?: string;
}

export namespace CreateLaunchTemplateVersionRequest {
  export function isa(o: any): o is CreateLaunchTemplateVersionRequest {
    return _smithy.isa(o, "CreateLaunchTemplateVersionRequest");
  }
}

export interface CreateLaunchTemplateVersionResult extends $MetadataBearer {
  __type?: "CreateLaunchTemplateVersionResult";
  /**
   * <p>Information about the launch template version.</p>
   */
  LaunchTemplateVersion?: LaunchTemplateVersion;
}

export namespace CreateLaunchTemplateVersionResult {
  export function isa(o: any): o is CreateLaunchTemplateVersionResult {
    return _smithy.isa(o, "CreateLaunchTemplateVersionResult");
  }
}

export interface CreateLocalGatewayRouteRequest {
  __type?: "CreateLocalGatewayRouteRequest";
  /**
   * <p>The CIDR range used for destination matches. Routing decisions are based on
   *         the most specific match.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId: string | undefined;

  /**
   * <p>The ID of the virtual interface group.</p>
   */
  LocalGatewayVirtualInterfaceGroupId: string | undefined;
}

export namespace CreateLocalGatewayRouteRequest {
  export function isa(o: any): o is CreateLocalGatewayRouteRequest {
    return _smithy.isa(o, "CreateLocalGatewayRouteRequest");
  }
}

export interface CreateLocalGatewayRouteResult extends $MetadataBearer {
  __type?: "CreateLocalGatewayRouteResult";
  /**
   * <p>Information about the route.</p>
   */
  Route?: LocalGatewayRoute;
}

export namespace CreateLocalGatewayRouteResult {
  export function isa(o: any): o is CreateLocalGatewayRouteResult {
    return _smithy.isa(o, "CreateLocalGatewayRouteResult");
  }
}

export interface CreateLocalGatewayRouteTableVpcAssociationRequest {
  __type?: "CreateLocalGatewayRouteTableVpcAssociationRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId: string | undefined;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace CreateLocalGatewayRouteTableVpcAssociationRequest {
  export function isa(
    o: any
  ): o is CreateLocalGatewayRouteTableVpcAssociationRequest {
    return _smithy.isa(o, "CreateLocalGatewayRouteTableVpcAssociationRequest");
  }
}

export interface CreateLocalGatewayRouteTableVpcAssociationResult
  extends $MetadataBearer {
  __type?: "CreateLocalGatewayRouteTableVpcAssociationResult";
  /**
   * <p>Information about the association.</p>
   */
  LocalGatewayRouteTableVpcAssociation?: LocalGatewayRouteTableVpcAssociation;
}

export namespace CreateLocalGatewayRouteTableVpcAssociationResult {
  export function isa(
    o: any
  ): o is CreateLocalGatewayRouteTableVpcAssociationResult {
    return _smithy.isa(o, "CreateLocalGatewayRouteTableVpcAssociationResult");
  }
}

export interface CreateNatGatewayRequest {
  __type?: "CreateNatGatewayRequest";
  /**
   * <p>The allocation ID of an Elastic IP address to associate with the NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.</p>
   */
  AllocationId: string | undefined;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   * 			request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure
   * 				Idempotency</a>.</p>
   *          <p>Constraint: Maximum 64 ASCII characters.</p>
   */
  ClientToken?: string;

  /**
   * <p>The subnet in which to create the NAT gateway.</p>
   */
  SubnetId: string | undefined;
}

export namespace CreateNatGatewayRequest {
  export function isa(o: any): o is CreateNatGatewayRequest {
    return _smithy.isa(o, "CreateNatGatewayRequest");
  }
}

export interface CreateNatGatewayResult extends $MetadataBearer {
  __type?: "CreateNatGatewayResult";
  /**
   * <p>Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the NAT gateway.</p>
   */
  NatGateway?: NatGateway;
}

export namespace CreateNatGatewayResult {
  export function isa(o: any): o is CreateNatGatewayResult {
    return _smithy.isa(o, "CreateNatGatewayResult");
  }
}

export interface CreateNetworkAclEntryRequest {
  __type?: "CreateNetworkAclEntryRequest";
  /**
   * <p>The IPv4 network range to allow or deny, in CIDR notation (for example
   *                 <code>172.16.0.0/24</code>).</p>
   */
  CidrBlock?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).</p>
   */
  Egress: boolean | undefined;

  /**
   * <p>ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol
   * 		        1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.</p>
   */
  IcmpTypeCode?: IcmpTypeCode;

  /**
   * <p>The IPv6 network range to allow or deny, in CIDR notation (for example
   *                 <code>2001:db8:1234:1a00::/64</code>).</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>The ID of the network ACL.</p>
   */
  NetworkAclId: string | undefined;

  /**
   * <p>TCP or UDP protocols: The range of ports the rule applies to.
   * 		        Required if specifying protocol 6 (TCP) or 17 (UDP).</p>
   */
  PortRange?: PortRange;

  /**
   * <p>The protocol number. A value of "-1" means all protocols. If you specify "-1" or a
   *   			protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is
   * 			allowed, regardless of any ports or ICMP types or codes that you specify. If you specify
   * 			protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and
   * 			codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6)
   * 			and specify an IPv6 CIDR block, you must specify an ICMP type and code.</p>
   */
  Protocol: string | undefined;

  /**
   * <p>Indicates whether to allow or deny the traffic that matches the rule.</p>
   */
  RuleAction: RuleAction | string | undefined;

  /**
   * <p>The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.</p>
   *          <p>Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.</p>
   */
  RuleNumber: number | undefined;
}

export namespace CreateNetworkAclEntryRequest {
  export function isa(o: any): o is CreateNetworkAclEntryRequest {
    return _smithy.isa(o, "CreateNetworkAclEntryRequest");
  }
}

export interface CreateNetworkAclRequest {
  __type?: "CreateNetworkAclRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace CreateNetworkAclRequest {
  export function isa(o: any): o is CreateNetworkAclRequest {
    return _smithy.isa(o, "CreateNetworkAclRequest");
  }
}

export interface CreateNetworkAclResult extends $MetadataBearer {
  __type?: "CreateNetworkAclResult";
  /**
   * <p>Information about the network ACL.</p>
   */
  NetworkAcl?: NetworkAcl;
}

export namespace CreateNetworkAclResult {
  export function isa(o: any): o is CreateNetworkAclResult {
    return _smithy.isa(o, "CreateNetworkAclResult");
  }
}

/**
 * <p>Contains the parameters for CreateNetworkInterfacePermission.</p>
 */
export interface CreateNetworkInterfacePermissionRequest {
  __type?: "CreateNetworkInterfacePermissionRequest";
  /**
   * <p>The AWS account ID.</p>
   */
  AwsAccountId?: string;

  /**
   * <p>The AWS service. Currently not supported.</p>
   */
  AwsService?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   * 			and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   * 			Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;

  /**
   * <p>The type of permission to grant.</p>
   */
  Permission: InterfacePermissionType | string | undefined;
}

export namespace CreateNetworkInterfacePermissionRequest {
  export function isa(o: any): o is CreateNetworkInterfacePermissionRequest {
    return _smithy.isa(o, "CreateNetworkInterfacePermissionRequest");
  }
}

/**
 * <p>Contains the output of CreateNetworkInterfacePermission.</p>
 */
export interface CreateNetworkInterfacePermissionResult
  extends $MetadataBearer {
  __type?: "CreateNetworkInterfacePermissionResult";
  /**
   * <p>Information about the permission for the network interface.</p>
   */
  InterfacePermission?: NetworkInterfacePermission;
}

export namespace CreateNetworkInterfacePermissionResult {
  export function isa(o: any): o is CreateNetworkInterfacePermissionResult {
    return _smithy.isa(o, "CreateNetworkInterfacePermissionResult");
  }
}

/**
 * <p>Contains the parameters for CreateNetworkInterface.</p>
 */
export interface CreateNetworkInterfaceRequest {
  __type?: "CreateNetworkInterfaceRequest";
  /**
   * <p>A description for the network interface.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of one or more security groups.</p>
   */
  Groups?: Array<string>;

  /**
   * <p>Indicates the type of network interface. To create an Elastic Fabric Adapter (EFA), specify
   * 			<code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html">
   * 		    Elastic Fabric Adapter</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  InterfaceType?: NetworkInterfaceCreationType | string;

  /**
   * <p>The number of IPv6 addresses to assign to a network interface. Amazon EC2
   *             automatically selects the IPv6 addresses from the subnet range. You can't use this
   *             option if specifying specific IPv6 addresses. If your subnet has the <code>AssignIpv6AddressOnCreation</code> attribute set
   *             to <code>true</code>, you can specify <code>0</code> to override this setting.</p>
   */
  Ipv6AddressCount?: number;

  /**
   * <p>One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet.
   *             You can't use this option if you're specifying a number of IPv6 addresses.</p>
   */
  Ipv6Addresses?: Array<InstanceIpv6Address>;

  /**
   * <p>The primary private IPv4 address of the network interface. If you don't specify an
   *             IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you
   *             specify an IP address, you cannot indicate any IP addresses specified in
   *             <code>privateIpAddresses</code> as primary (only one IP address can be designated as
   *             primary).</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>One or more private IPv4 addresses.</p>
   */
  PrivateIpAddresses?: Array<PrivateIpAddressSpecification>;

  /**
   * <p>The number of secondary private IPv4 addresses to assign to a network interface. When
   *             you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses
   *             within the subnet's IPv4 CIDR range. You can't specify this option and specify more than
   *             one private IP address using <code>privateIpAddresses</code>.</p>
   *         <p>The number of IP addresses you can assign to a network interface varies by instance
   *             type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per ENI Per
   *                 Instance Type</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
   */
  SecondaryPrivateIpAddressCount?: number;

  /**
   * <p>The ID of the subnet to associate with the network interface.</p>
   */
  SubnetId: string | undefined;
}

export namespace CreateNetworkInterfaceRequest {
  export function isa(o: any): o is CreateNetworkInterfaceRequest {
    return _smithy.isa(o, "CreateNetworkInterfaceRequest");
  }
}

/**
 * <p>Contains the output of CreateNetworkInterface.</p>
 */
export interface CreateNetworkInterfaceResult extends $MetadataBearer {
  __type?: "CreateNetworkInterfaceResult";
  /**
   * <p>Information about the network interface.</p>
   */
  NetworkInterface?: NetworkInterface;
}

export namespace CreateNetworkInterfaceResult {
  export function isa(o: any): o is CreateNetworkInterfaceResult {
    return _smithy.isa(o, "CreateNetworkInterfaceResult");
  }
}

export interface CreatePlacementGroupRequest {
  __type?: "CreatePlacementGroupRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>A name for the placement group. Must be unique within the scope of your account for
   *             the Region.</p>
   *         <p>Constraints: Up to 255 ASCII characters</p>
   */
  GroupName?: string;

  /**
   * <p>The number of partitions. Valid only when <b>Strategy</b> is
   *             set to <code>partition</code>.</p>
   */
  PartitionCount?: number;

  /**
   * <p>The placement strategy.</p>
   */
  Strategy?: PlacementStrategy | string;
}

export namespace CreatePlacementGroupRequest {
  export function isa(o: any): o is CreatePlacementGroupRequest {
    return _smithy.isa(o, "CreatePlacementGroupRequest");
  }
}

/**
 * <p>Contains the parameters for CreateReservedInstancesListing.</p>
 */
export interface CreateReservedInstancesListingRequest {
  __type?: "CreateReservedInstancesListingRequest";
  /**
   * <p>Unique, case-sensitive identifier you provide to ensure idempotency of your
   * 				listings. This helps avoid duplicate listings. For more information, see
   * 				<a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken: string | undefined;

  /**
   * <p>The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.</p>
   */
  InstanceCount: number | undefined;

  /**
   * <p>A list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.</p>
   */
  PriceSchedules: Array<PriceScheduleSpecification> | undefined;

  /**
   * <p>The ID of the active Standard Reserved Instance.</p>
   */
  ReservedInstancesId: string | undefined;
}

export namespace CreateReservedInstancesListingRequest {
  export function isa(o: any): o is CreateReservedInstancesListingRequest {
    return _smithy.isa(o, "CreateReservedInstancesListingRequest");
  }
}

/**
 * <p>Contains the output of CreateReservedInstancesListing.</p>
 */
export interface CreateReservedInstancesListingResult extends $MetadataBearer {
  __type?: "CreateReservedInstancesListingResult";
  /**
   * <p>Information about the Standard Reserved Instance listing.</p>
   */
  ReservedInstancesListings?: Array<ReservedInstancesListing>;
}

export namespace CreateReservedInstancesListingResult {
  export function isa(o: any): o is CreateReservedInstancesListingResult {
    return _smithy.isa(o, "CreateReservedInstancesListingResult");
  }
}

export interface CreateRouteRequest {
  __type?: "CreateRouteRequest";
  /**
   * <p>The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.</p>
   */
  DestinationIpv6CidrBlock?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>[IPv6 traffic only] The ID of an egress-only internet gateway.</p>
   */
  EgressOnlyInternetGatewayId?: string;

  /**
   * <p>The ID of an internet gateway or virtual private gateway attached to your
   * 			VPC.</p>
   */
  GatewayId?: string;

  /**
   * <p>The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.</p>
   */
  InstanceId?: string;

  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>[IPv4 traffic only] The ID of a NAT gateway.</p>
   */
  NatGatewayId?: string;

  /**
   * <p>The ID of a network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The ID of the route table for the route.</p>
   */
  RouteTableId: string | undefined;

  /**
   * <p>The ID of a transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of a VPC peering connection.</p>
   */
  VpcPeeringConnectionId?: string;
}

export namespace CreateRouteRequest {
  export function isa(o: any): o is CreateRouteRequest {
    return _smithy.isa(o, "CreateRouteRequest");
  }
}

export interface CreateRouteResult extends $MetadataBearer {
  __type?: "CreateRouteResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace CreateRouteResult {
  export function isa(o: any): o is CreateRouteResult {
    return _smithy.isa(o, "CreateRouteResult");
  }
}

export interface CreateRouteTableRequest {
  __type?: "CreateRouteTableRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace CreateRouteTableRequest {
  export function isa(o: any): o is CreateRouteTableRequest {
    return _smithy.isa(o, "CreateRouteTableRequest");
  }
}

export interface CreateRouteTableResult extends $MetadataBearer {
  __type?: "CreateRouteTableResult";
  /**
   * <p>Information about the route table.</p>
   */
  RouteTable?: RouteTable;
}

export namespace CreateRouteTableResult {
  export function isa(o: any): o is CreateRouteTableResult {
    return _smithy.isa(o, "CreateRouteTableResult");
  }
}

export interface CreateSecurityGroupRequest {
  __type?: "CreateSecurityGroupRequest";
  /**
   * <p>A description for the security group. This is informational only.</p>
   * 		       <p>Constraints: Up to 255 characters in length</p>
   * 		       <p>Constraints for EC2-Classic: ASCII characters</p>
   * 		       <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*</p>
   */
  Description: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The name of the security group.</p>
   *          <p>Constraints: Up to 255 characters in length. Cannot start with
   *             <code>sg-</code>.</p>
   *          <p>Constraints for EC2-Classic: ASCII characters</p>
   *          <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*</p>
   */
  GroupName: string | undefined;

  /**
   * <p>[EC2-VPC] The ID of the VPC. Required for EC2-VPC.</p>
   */
  VpcId?: string;
}

export namespace CreateSecurityGroupRequest {
  export function isa(o: any): o is CreateSecurityGroupRequest {
    return _smithy.isa(o, "CreateSecurityGroupRequest");
  }
}

export interface CreateSecurityGroupResult extends $MetadataBearer {
  __type?: "CreateSecurityGroupResult";
  /**
   * <p>The ID of the security group.</p>
   */
  GroupId?: string;
}

export namespace CreateSecurityGroupResult {
  export function isa(o: any): o is CreateSecurityGroupResult {
    return _smithy.isa(o, "CreateSecurityGroupResult");
  }
}

export interface CreateSnapshotRequest {
  __type?: "CreateSnapshotRequest";
  /**
   * <p>A description for the snapshot.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The tags to apply to the snapshot during creation.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The ID of the EBS volume.</p>
   */
  VolumeId: string | undefined;
}

export namespace CreateSnapshotRequest {
  export function isa(o: any): o is CreateSnapshotRequest {
    return _smithy.isa(o, "CreateSnapshotRequest");
  }
}

export interface CreateSnapshotsRequest {
  __type?: "CreateSnapshotsRequest";
  /**
   * <p>Copies the tags from the specified volume to corresponding snapshot.</p>
   */
  CopyTagsFromSource?: CopyTagsFromSource | string;

  /**
   * <p> A description propagated to every snapshot specified by the instance.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The instance to specify which volumes should be included in the snapshots.</p>
   */
  InstanceSpecification: InstanceSpecification | undefined;

  /**
   * <p>Tags to apply to every snapshot specified by the instance.</p>
   */
  TagSpecifications?: Array<TagSpecification>;
}

export namespace CreateSnapshotsRequest {
  export function isa(o: any): o is CreateSnapshotsRequest {
    return _smithy.isa(o, "CreateSnapshotsRequest");
  }
}

export interface CreateSnapshotsResult extends $MetadataBearer {
  __type?: "CreateSnapshotsResult";
  /**
   * <p>List of snapshots.</p>
   */
  Snapshots?: Array<SnapshotInfo>;
}

export namespace CreateSnapshotsResult {
  export function isa(o: any): o is CreateSnapshotsResult {
    return _smithy.isa(o, "CreateSnapshotsResult");
  }
}

/**
 * <p>Contains the parameters for CreateSpotDatafeedSubscription.</p>
 */
export interface CreateSpotDatafeedSubscriptionRequest {
  __type?: "CreateSpotDatafeedSubscriptionRequest";
  /**
   * <p>The Amazon S3 bucket in which to store the Spot Instance data feed.</p>
   */
  Bucket: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>A prefix for the data feed file names.</p>
   */
  Prefix?: string;
}

export namespace CreateSpotDatafeedSubscriptionRequest {
  export function isa(o: any): o is CreateSpotDatafeedSubscriptionRequest {
    return _smithy.isa(o, "CreateSpotDatafeedSubscriptionRequest");
  }
}

/**
 * <p>Contains the output of CreateSpotDatafeedSubscription.</p>
 */
export interface CreateSpotDatafeedSubscriptionResult extends $MetadataBearer {
  __type?: "CreateSpotDatafeedSubscriptionResult";
  /**
   * <p>The Spot Instance data feed subscription.</p>
   */
  SpotDatafeedSubscription?: SpotDatafeedSubscription;
}

export namespace CreateSpotDatafeedSubscriptionResult {
  export function isa(o: any): o is CreateSpotDatafeedSubscriptionResult {
    return _smithy.isa(o, "CreateSpotDatafeedSubscriptionResult");
  }
}

export interface CreateSubnetRequest {
  __type?: "CreateSubnetRequest";
  /**
   * <p>The Availability Zone or Local Zone for the subnet.</p>
   * 		       <p>Default: AWS selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet.</p>
   *          <p>To create a subnet in a Local Zone, set this value to the Local Zone ID, for example
   *                 <code>us-west-2-lax-1a</code>. For information about the Regions that support Local
   *             Zones, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">Available Regions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The AZ ID or the Local Zone ID of the subnet.</p>
   */
  AvailabilityZoneId?: string;

  /**
   * <p>The IPv4 network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>.</p>
   */
  CidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a
   *             /64 prefix length.</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace CreateSubnetRequest {
  export function isa(o: any): o is CreateSubnetRequest {
    return _smithy.isa(o, "CreateSubnetRequest");
  }
}

export interface CreateSubnetResult extends $MetadataBearer {
  __type?: "CreateSubnetResult";
  /**
   * <p>Information about the subnet.</p>
   */
  Subnet?: Subnet;
}

export namespace CreateSubnetResult {
  export function isa(o: any): o is CreateSubnetResult {
    return _smithy.isa(o, "CreateSubnetResult");
  }
}

export interface CreateTagsRequest {
  __type?: "CreateTagsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the resources, separated by spaces.</p>
   *    	     <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>
   */
  Resources: Array<string> | undefined;

  /**
   * <p>The tags. The <code>value</code> parameter is required, but if you don't want the tag to have a value,
   *         specify the parameter with no value, and we set the value to an empty string.</p>
   */
  Tags: Array<Tag> | undefined;
}

export namespace CreateTagsRequest {
  export function isa(o: any): o is CreateTagsRequest {
    return _smithy.isa(o, "CreateTagsRequest");
  }
}

export interface CreateTrafficMirrorFilterRequest {
  __type?: "CreateTrafficMirrorFilterRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The description of the Traffic Mirror filter.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The tags to assign to a Traffic Mirror filter.</p>
   */
  TagSpecifications?: Array<TagSpecification>;
}

export namespace CreateTrafficMirrorFilterRequest {
  export function isa(o: any): o is CreateTrafficMirrorFilterRequest {
    return _smithy.isa(o, "CreateTrafficMirrorFilterRequest");
  }
}

export interface CreateTrafficMirrorFilterResult extends $MetadataBearer {
  __type?: "CreateTrafficMirrorFilterResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilter?: TrafficMirrorFilter;
}

export namespace CreateTrafficMirrorFilterResult {
  export function isa(o: any): o is CreateTrafficMirrorFilterResult {
    return _smithy.isa(o, "CreateTrafficMirrorFilterResult");
  }
}

export interface CreateTrafficMirrorFilterRuleRequest {
  __type?: "CreateTrafficMirrorFilterRuleRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The description of the Traffic Mirror rule.</p>
   */
  Description?: string;

  /**
   * <p>The destination CIDR block to assign to the Traffic Mirror rule.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>The destination port range.</p>
   */
  DestinationPortRange?: TrafficMirrorPortRangeRequest;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The protocol, for example UDP, to assign to the Traffic Mirror rule.</p>
   *          <p>For information about the protocol value, see <a href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a> on the  Internet Assigned Numbers Authority (IANA) website.</p>
   */
  Protocol?: number;

  /**
   * <p>The action to take (<code>accept</code> | <code>reject</code>) on the filtered traffic.</p>
   */
  RuleAction: TrafficMirrorRuleAction | string | undefined;

  /**
   * <p>The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given
   *          direction. The rules are processed in ascending order by rule number.</p>
   */
  RuleNumber: number | undefined;

  /**
   * <p>The source CIDR block to assign to the Traffic Mirror rule.</p>
   */
  SourceCidrBlock: string | undefined;

  /**
   * <p>The source port range.</p>
   */
  SourcePortRange?: TrafficMirrorPortRangeRequest;

  /**
   * <p>The type of traffic (<code>ingress</code> | <code>egress</code>).</p>
   */
  TrafficDirection: TrafficDirection | string | undefined;

  /**
   * <p>The ID of the filter that this rule is associated with.</p>
   */
  TrafficMirrorFilterId: string | undefined;
}

export namespace CreateTrafficMirrorFilterRuleRequest {
  export function isa(o: any): o is CreateTrafficMirrorFilterRuleRequest {
    return _smithy.isa(o, "CreateTrafficMirrorFilterRuleRequest");
  }
}

export interface CreateTrafficMirrorFilterRuleResult extends $MetadataBearer {
  __type?: "CreateTrafficMirrorFilterRuleResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The Traffic Mirror rule.</p>
   */
  TrafficMirrorFilterRule?: TrafficMirrorFilterRule;
}

export namespace CreateTrafficMirrorFilterRuleResult {
  export function isa(o: any): o is CreateTrafficMirrorFilterRuleResult {
    return _smithy.isa(o, "CreateTrafficMirrorFilterRuleResult");
  }
}

export interface CreateTrafficMirrorSessionRequest {
  __type?: "CreateTrafficMirrorSessionRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The description of the Traffic Mirror session.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the source network interface.</p>
   */
  NetworkInterfaceId: string | undefined;

  /**
   * <p>The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do
   *          not specify this parameter when you want to mirror the entire packet. To mirror a subset of
   *          the packet, set this to the length (in bytes) that you want to mirror. For example, if you
   *          set this value to 100, then the first 100 bytes that meet the filter criteria are copied to
   *          the target.</p>
   *          <p>If you do not want to mirror the entire packet, use the <code>PacketLength</code> parameter to specify the number of bytes in each packet to mirror.</p>
   */
  PacketLength?: number;

  /**
   * <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p>
   *          <p>Valid values are 1-32766.</p>
   */
  SessionNumber: number | undefined;

  /**
   * <p>The tags to assign to a Traffic Mirror session.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterId: string | undefined;

  /**
   * <p>The ID of the Traffic Mirror target.</p>
   */
  TrafficMirrorTargetId: string | undefined;

  /**
   * <p>The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN
   *          protocol, see <a href="https://tools.ietf.org/html/rfc7348">RFC 7348</a>. If you do
   *          not specify a <code>VirtualNetworkId</code>, an account-wide unique id is chosen at
   *          random.</p>
   */
  VirtualNetworkId?: number;
}

export namespace CreateTrafficMirrorSessionRequest {
  export function isa(o: any): o is CreateTrafficMirrorSessionRequest {
    return _smithy.isa(o, "CreateTrafficMirrorSessionRequest");
  }
}

export interface CreateTrafficMirrorSessionResult extends $MetadataBearer {
  __type?: "CreateTrafficMirrorSessionResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the Traffic Mirror session.</p>
   */
  TrafficMirrorSession?: TrafficMirrorSession;
}

export namespace CreateTrafficMirrorSessionResult {
  export function isa(o: any): o is CreateTrafficMirrorSessionResult {
    return _smithy.isa(o, "CreateTrafficMirrorSessionResult");
  }
}

export interface CreateTrafficMirrorTargetRequest {
  __type?: "CreateTrafficMirrorTargetRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The description of the Traffic Mirror target.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The network interface ID that is associated with the target.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.</p>
   */
  NetworkLoadBalancerArn?: string;

  /**
   * <p>The tags to assign to the Traffic Mirror target.</p>
   */
  TagSpecifications?: Array<TagSpecification>;
}

export namespace CreateTrafficMirrorTargetRequest {
  export function isa(o: any): o is CreateTrafficMirrorTargetRequest {
    return _smithy.isa(o, "CreateTrafficMirrorTargetRequest");
  }
}

export interface CreateTrafficMirrorTargetResult extends $MetadataBearer {
  __type?: "CreateTrafficMirrorTargetResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the Traffic Mirror target.</p>
   */
  TrafficMirrorTarget?: TrafficMirrorTarget;
}

export namespace CreateTrafficMirrorTargetResult {
  export function isa(o: any): o is CreateTrafficMirrorTargetResult {
    return _smithy.isa(o, "CreateTrafficMirrorTargetResult");
  }
}

export interface CreateTransitGatewayMulticastDomainRequest {
  __type?: "CreateTransitGatewayMulticastDomainRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The tags for the transit gateway multicast domain.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId: string | undefined;
}

export namespace CreateTransitGatewayMulticastDomainRequest {
  export function isa(o: any): o is CreateTransitGatewayMulticastDomainRequest {
    return _smithy.isa(o, "CreateTransitGatewayMulticastDomainRequest");
  }
}

export interface CreateTransitGatewayMulticastDomainResult
  extends $MetadataBearer {
  __type?: "CreateTransitGatewayMulticastDomainResult";
  /**
   * <p>Information about the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomain?: TransitGatewayMulticastDomain;
}

export namespace CreateTransitGatewayMulticastDomainResult {
  export function isa(o: any): o is CreateTransitGatewayMulticastDomainResult {
    return _smithy.isa(o, "CreateTransitGatewayMulticastDomainResult");
  }
}

export interface CreateTransitGatewayPeeringAttachmentRequest {
  __type?: "CreateTransitGatewayPeeringAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The AWS account ID of the owner of the peer transit gateway.</p>
   */
  PeerAccountId: string | undefined;

  /**
   * <p>The Region where the peer transit gateway is located.</p>
   */
  PeerRegion: string | undefined;

  /**
   * <p>The ID of the peer transit gateway with which to create the peering attachment.</p>
   */
  PeerTransitGatewayId: string | undefined;

  /**
   * <p>The tags to apply to the transit gateway peering attachment.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId: string | undefined;
}

export namespace CreateTransitGatewayPeeringAttachmentRequest {
  export function isa(
    o: any
  ): o is CreateTransitGatewayPeeringAttachmentRequest {
    return _smithy.isa(o, "CreateTransitGatewayPeeringAttachmentRequest");
  }
}

export interface CreateTransitGatewayPeeringAttachmentResult
  extends $MetadataBearer {
  __type?: "CreateTransitGatewayPeeringAttachmentResult";
  /**
   * <p>The transit gateway peering attachment.</p>
   */
  TransitGatewayPeeringAttachment?: TransitGatewayPeeringAttachment;
}

export namespace CreateTransitGatewayPeeringAttachmentResult {
  export function isa(
    o: any
  ): o is CreateTransitGatewayPeeringAttachmentResult {
    return _smithy.isa(o, "CreateTransitGatewayPeeringAttachmentResult");
  }
}

export interface CreateTransitGatewayRequest {
  __type?: "CreateTransitGatewayRequest";
  /**
   * <p>A description of the transit gateway.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The transit gateway options.</p>
   */
  Options?: TransitGatewayRequestOptions;

  /**
   * <p>The tags to apply to the transit gateway.</p>
   */
  TagSpecifications?: Array<TagSpecification>;
}

export namespace CreateTransitGatewayRequest {
  export function isa(o: any): o is CreateTransitGatewayRequest {
    return _smithy.isa(o, "CreateTransitGatewayRequest");
  }
}

export interface CreateTransitGatewayResult extends $MetadataBearer {
  __type?: "CreateTransitGatewayResult";
  /**
   * <p>Information about the transit gateway.</p>
   */
  TransitGateway?: TransitGateway;
}

export namespace CreateTransitGatewayResult {
  export function isa(o: any): o is CreateTransitGatewayResult {
    return _smithy.isa(o, "CreateTransitGatewayResult");
  }
}

export interface CreateTransitGatewayRouteRequest {
  __type?: "CreateTransitGatewayRouteRequest";
  /**
   * <p>Indicates whether to drop traffic that matches this route.</p>
   */
  Blackhole?: boolean;

  /**
   * <p>The CIDR range used for destination matches. Routing decisions are based on the
   *          most specific match.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace CreateTransitGatewayRouteRequest {
  export function isa(o: any): o is CreateTransitGatewayRouteRequest {
    return _smithy.isa(o, "CreateTransitGatewayRouteRequest");
  }
}

export interface CreateTransitGatewayRouteResult extends $MetadataBearer {
  __type?: "CreateTransitGatewayRouteResult";
  /**
   * <p>Information about the route.</p>
   */
  Route?: TransitGatewayRoute;
}

export namespace CreateTransitGatewayRouteResult {
  export function isa(o: any): o is CreateTransitGatewayRouteResult {
    return _smithy.isa(o, "CreateTransitGatewayRouteResult");
  }
}

export interface CreateTransitGatewayRouteTableRequest {
  __type?: "CreateTransitGatewayRouteTableRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The tags to apply to the transit gateway route table.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId: string | undefined;
}

export namespace CreateTransitGatewayRouteTableRequest {
  export function isa(o: any): o is CreateTransitGatewayRouteTableRequest {
    return _smithy.isa(o, "CreateTransitGatewayRouteTableRequest");
  }
}

export interface CreateTransitGatewayRouteTableResult extends $MetadataBearer {
  __type?: "CreateTransitGatewayRouteTableResult";
  /**
   * <p>Information about the transit gateway route table.</p>
   */
  TransitGatewayRouteTable?: TransitGatewayRouteTable;
}

export namespace CreateTransitGatewayRouteTableResult {
  export function isa(o: any): o is CreateTransitGatewayRouteTableResult {
    return _smithy.isa(o, "CreateTransitGatewayRouteTableResult");
  }
}

export interface CreateTransitGatewayVpcAttachmentRequest {
  __type?: "CreateTransitGatewayVpcAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The VPC attachment options.</p>
   */
  Options?: CreateTransitGatewayVpcAttachmentRequestOptions;

  /**
   * <p>The IDs of one or more subnets. You can specify only one subnet per Availability Zone.
   *          You must specify at least one subnet, but we recommend that you specify two subnets for better availability.
   *          The transit gateway uses one IP address from each specified subnet.</p>
   */
  SubnetIds: Array<string> | undefined;

  /**
   * <p>The tags to apply to the VPC attachment.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId: string | undefined;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace CreateTransitGatewayVpcAttachmentRequest {
  export function isa(o: any): o is CreateTransitGatewayVpcAttachmentRequest {
    return _smithy.isa(o, "CreateTransitGatewayVpcAttachmentRequest");
  }
}

/**
 * <p>Describes the options for a VPC attachment.</p>
 */
export interface CreateTransitGatewayVpcAttachmentRequestOptions {
  __type?: "CreateTransitGatewayVpcAttachmentRequestOptions";
  /**
   * <p>Enable or disable DNS support. The default is <code>enable</code>.</p>
   */
  DnsSupport?: DnsSupportValue | string;

  /**
   * <p>Enable or disable IPv6 support. The default is <code>enable</code>.</p>
   */
  Ipv6Support?: Ipv6SupportValue | string;
}

export namespace CreateTransitGatewayVpcAttachmentRequestOptions {
  export function isa(
    o: any
  ): o is CreateTransitGatewayVpcAttachmentRequestOptions {
    return _smithy.isa(o, "CreateTransitGatewayVpcAttachmentRequestOptions");
  }
}

export interface CreateTransitGatewayVpcAttachmentResult
  extends $MetadataBearer {
  __type?: "CreateTransitGatewayVpcAttachmentResult";
  /**
   * <p>Information about the VPC attachment.</p>
   */
  TransitGatewayVpcAttachment?: TransitGatewayVpcAttachment;
}

export namespace CreateTransitGatewayVpcAttachmentResult {
  export function isa(o: any): o is CreateTransitGatewayVpcAttachmentResult {
    return _smithy.isa(o, "CreateTransitGatewayVpcAttachmentResult");
  }
}

/**
 * <p>Describes the user or group to be added or removed from the list of create volume
 *       permissions for a volume.</p>
 */
export interface CreateVolumePermission {
  __type?: "CreateVolumePermission";
  /**
   * <p>The group to be added or removed. The possible value is <code>all</code>.</p>
   */
  Group?: PermissionGroup | string;

  /**
   * <p>The AWS account ID to be added or removed.</p>
   */
  UserId?: string;
}

export namespace CreateVolumePermission {
  export function isa(o: any): o is CreateVolumePermission {
    return _smithy.isa(o, "CreateVolumePermission");
  }
}

/**
 * <p>Describes modifications to the list of create volume permissions for a volume.</p>
 */
export interface CreateVolumePermissionModifications {
  __type?: "CreateVolumePermissionModifications";
  /**
   * <p>Adds the specified AWS account ID or group to the list.</p>
   */
  Add?: Array<CreateVolumePermission>;

  /**
   * <p>Removes the specified AWS account ID or group from the list.</p>
   */
  Remove?: Array<CreateVolumePermission>;
}

export namespace CreateVolumePermissionModifications {
  export function isa(o: any): o is CreateVolumePermissionModifications {
    return _smithy.isa(o, "CreateVolumePermissionModifications");
  }
}

export interface CreateVolumeRequest {
  __type?: "CreateVolumeRequest";
  /**
   * <p>The Availability Zone in which to create the volume.</p>
   */
  AvailabilityZone: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specifies whether the volume should be encrypted.
   *       The effect of setting the encryption state to <code>true</code> depends on
   * the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled.
   *       For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default">Encryption by Default</a>
   *       in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *          <p>Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption.
   *       For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported
   *         Instance Types</a>.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The number of I/O operations per second (IOPS) to provision for the volume, with a maximum
   *       ratio of 50 IOPS/GiB. Range is 100 to 64,000 IOPS for
   *       volumes in most Regions. Maximum IOPS of 64,000 is guaranteed only on
   *         <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based instances</a>. Other instance families guarantee performance up to
   *       32,000 IOPS. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the
   *         <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *          <p>This parameter is valid only for Provisioned IOPS SSD (io1) volumes.</p>
   */
  Iops?: number;

  /**
   * <p>The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption.
   *       If this parameter is not specified, your AWS managed CMK for EBS is used. If <code>KmsKeyId</code> is
   *       specified, the encrypted state must be <code>true</code>.</p>
   *          <p>You can specify the CMK using any of the following:</p>
   *          <ul>
   *             <li>
   *                <p>Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.</p>
   *             </li>
   *             <li>
   *                <p>Key alias. For example, alias/ExampleAlias.</p>
   *             </li>
   *             <li>
   *                <p>Key ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p>
   *             </li>
   *             <li>
   *                <p>Alias ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p>
   *             </li>
   *          </ul>
   *          <p>AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid,
   *       the action can appear to complete, but eventually fails.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The size of the volume, in GiBs.</p>
   *          <p>Constraints: 1-16,384 for <code>gp2</code>,
   *       4-16,384 for <code>io1</code>, 500-16,384 for
   *         <code>st1</code>, 500-16,384 for <code>sc1</code>, and
   *       1-1,024 for <code>standard</code>. If you specify a
   *       snapshot, the volume size must be equal to or larger than the snapshot size.</p>
   *          <p>Default: If you're creating the volume from a snapshot and don't specify a volume size,
   *       the default is the snapshot size.</p>
   *          <note>
   *             <p>At least one of Size or SnapshotId is required.</p>
   *          </note>
   */
  Size?: number;

  /**
   * <p>The snapshot from which to create the volume.</p>
   *          <note>
   *             <p>At least one of Size or SnapshotId are required.</p>
   *          </note>
   */
  SnapshotId?: string;

  /**
   * <p>The tags to apply to the volume during creation.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD,
   *         <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or
   *         <code>standard</code> for Magnetic volumes.</p>
   *          <p>Default: <code>gp2</code>
   *          </p>
   */
  VolumeType?: VolumeType | string;
}

export namespace CreateVolumeRequest {
  export function isa(o: any): o is CreateVolumeRequest {
    return _smithy.isa(o, "CreateVolumeRequest");
  }
}

export interface CreateVpcEndpointConnectionNotificationRequest {
  __type?: "CreateVpcEndpointConnectionNotificationRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure
   *                 Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>One or more endpoint events for which to receive notifications. Valid values are
   *                 <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and
   *                 <code>Reject</code>.</p>
   */
  ConnectionEvents: Array<string> | undefined;

  /**
   * <p>The ARN of the SNS topic for the notifications.</p>
   */
  ConnectionNotificationArn: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the endpoint service.</p>
   */
  ServiceId?: string;

  /**
   * <p>The ID of the endpoint.</p>
   */
  VpcEndpointId?: string;
}

export namespace CreateVpcEndpointConnectionNotificationRequest {
  export function isa(
    o: any
  ): o is CreateVpcEndpointConnectionNotificationRequest {
    return _smithy.isa(o, "CreateVpcEndpointConnectionNotificationRequest");
  }
}

export interface CreateVpcEndpointConnectionNotificationResult
  extends $MetadataBearer {
  __type?: "CreateVpcEndpointConnectionNotificationResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *             request.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the notification.</p>
   */
  ConnectionNotification?: ConnectionNotification;
}

export namespace CreateVpcEndpointConnectionNotificationResult {
  export function isa(
    o: any
  ): o is CreateVpcEndpointConnectionNotificationResult {
    return _smithy.isa(o, "CreateVpcEndpointConnectionNotificationResult");
  }
}

/**
 * <p>Contains the parameters for CreateVpcEndpoint.</p>
 */
export interface CreateVpcEndpointRequest {
  __type?: "CreateVpcEndpointRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure
   *                 Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>A policy to attach to the endpoint that controls access to the
   *             service. The policy must be in valid JSON format. If this parameter is not specified, we
   *             attach a default policy that allows full access to the service.</p>
   */
  PolicyDocument?: string;

  /**
   * <p>(Interface endpoint) Indicates whether to associate a private hosted zone with the
   *             specified VPC. The private hosted zone contains a record set for the default public DNS
   *             name for the service for the Region (for example,
   *                 <code>kinesis.us-east-1.amazonaws.com</code>), which resolves to the private IP
   *             addresses of the endpoint network interfaces in the VPC. This enables you to make
   *             requests to the default public DNS name for the service instead of the public DNS names
   *             that are automatically generated by the VPC endpoint service.</p>
   *         <p>To use a private hosted zone, you must set the following VPC attributes to
   *             <code>true</code>: <code>enableDnsHostnames</code> and
   *             <code>enableDnsSupport</code>. Use <a>ModifyVpcAttribute</a> to set the VPC
   *             attributes.</p>
   *         <p>Default: <code>true</code>
   *          </p>
   */
  PrivateDnsEnabled?: boolean;

  /**
   * <p>(Gateway endpoint) One or more route table IDs.</p>
   */
  RouteTableIds?: Array<string>;

  /**
   * <p>(Interface endpoint) The ID of one or more security groups to associate with the
   *             endpoint network interface.</p>
   */
  SecurityGroupIds?: Array<string>;

  /**
   * <p>The service name. To get a list of available services, use the <a>DescribeVpcEndpointServices</a> request, or get the name from the service
   *             provider.</p>
   */
  ServiceName: string | undefined;

  /**
   * <p>(Interface endpoint) The ID of one or more subnets in which to create an endpoint
   *             network interface.</p>
   */
  SubnetIds?: Array<string>;

  /**
   * <p>The type of endpoint.</p>
   *         <p>Default: Gateway</p>
   */
  VpcEndpointType?: VpcEndpointType | string;

  /**
   * <p>The ID of the VPC in which the endpoint will be used.</p>
   */
  VpcId: string | undefined;
}

export namespace CreateVpcEndpointRequest {
  export function isa(o: any): o is CreateVpcEndpointRequest {
    return _smithy.isa(o, "CreateVpcEndpointRequest");
  }
}

/**
 * <p>Contains the output of CreateVpcEndpoint.</p>
 */
export interface CreateVpcEndpointResult extends $MetadataBearer {
  __type?: "CreateVpcEndpointResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *             request.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the endpoint.</p>
   */
  VpcEndpoint?: VpcEndpoint;
}

export namespace CreateVpcEndpointResult {
  export function isa(o: any): o is CreateVpcEndpointResult {
    return _smithy.isa(o, "CreateVpcEndpointResult");
  }
}

export interface CreateVpcEndpointServiceConfigurationRequest {
  __type?: "CreateVpcEndpointServiceConfigurationRequest";
  /**
   * <p>Indicates whether requests from service consumers to create an endpoint to your service must
   *             be accepted. To accept a request, use <a>AcceptVpcEndpointConnections</a>.</p>
   */
  AcceptanceRequired?: boolean;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   *             For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure
   *                 Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your
   *             service.</p>
   */
  NetworkLoadBalancerArns: Array<string> | undefined;

  /**
   * <p>The private DNS name to assign to the VPC endpoint service.</p>
   */
  PrivateDnsName?: string;
}

export namespace CreateVpcEndpointServiceConfigurationRequest {
  export function isa(
    o: any
  ): o is CreateVpcEndpointServiceConfigurationRequest {
    return _smithy.isa(o, "CreateVpcEndpointServiceConfigurationRequest");
  }
}

export interface CreateVpcEndpointServiceConfigurationResult
  extends $MetadataBearer {
  __type?: "CreateVpcEndpointServiceConfigurationResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *             request.</p>
   */
  ClientToken?: string;

  /**
   * <p>Information about the service configuration.</p>
   */
  ServiceConfiguration?: ServiceConfiguration;
}

export namespace CreateVpcEndpointServiceConfigurationResult {
  export function isa(
    o: any
  ): o is CreateVpcEndpointServiceConfigurationResult {
    return _smithy.isa(o, "CreateVpcEndpointServiceConfigurationResult");
  }
}

export interface CreateVpcPeeringConnectionRequest {
  __type?: "CreateVpcPeeringConnectionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The AWS account ID of the owner of the accepter VPC.</p>
   *          <p>Default: Your AWS account ID</p>
   */
  PeerOwnerId?: string;

  /**
   * <p>The Region code for the accepter VPC, if the accepter VPC is located in a Region
   *             other than the Region in which you make the request.</p>
   * 		       <p>Default: The Region in which you make the request.</p>
   */
  PeerRegion?: string;

  /**
   * <p>The ID of the VPC with which you are creating the VPC peering connection. You must
   * 			specify this parameter in the request.</p>
   */
  PeerVpcId?: string;

  /**
   * <p>The ID of the requester VPC. You must specify this parameter in the
   * 			request.</p>
   */
  VpcId?: string;
}

export namespace CreateVpcPeeringConnectionRequest {
  export function isa(o: any): o is CreateVpcPeeringConnectionRequest {
    return _smithy.isa(o, "CreateVpcPeeringConnectionRequest");
  }
}

export interface CreateVpcPeeringConnectionResult extends $MetadataBearer {
  __type?: "CreateVpcPeeringConnectionResult";
  /**
   * <p>Information about the VPC peering connection.</p>
   */
  VpcPeeringConnection?: VpcPeeringConnection;
}

export namespace CreateVpcPeeringConnectionResult {
  export function isa(o: any): o is CreateVpcPeeringConnectionResult {
    return _smithy.isa(o, "CreateVpcPeeringConnectionResult");
  }
}

export interface CreateVpcRequest {
  __type?: "CreateVpcRequest";
  /**
   * <p>Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC.
   *             You cannot specify the range of IP addresses, or the size of the CIDR block.</p>
   */
  AmazonProvidedIpv6CidrBlock?: boolean;

  /**
   * <p>The IPv4 network range for the VPC, in CIDR notation. For example,
   *                 <code>10.0.0.0/16</code>.</p>
   */
  CidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The tenancy options for instances launched into the VPC. For <code>default</code>, instances
   *       are launched with shared tenancy by default. You can launch instances with any tenancy into a
   *       shared tenancy VPC. For <code>dedicated</code>, instances are launched as dedicated tenancy
   *       instances by default. You can only launch instances with a tenancy of <code>dedicated</code>
   *       or <code>host</code> into a dedicated tenancy VPC. </p>
   *          <p>
   *             <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p>
   *          <p>Default: <code>default</code>
   *          </p>
   */
  InstanceTenancy?: Tenancy | string;

  /**
   * <p>The IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p>
   *         <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.</p>
   *          <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p>
   */
  Ipv6CidrBlockNetworkBorderGroup?: string;

  /**
   * <p>The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.</p>
   */
  Ipv6Pool?: string;
}

export namespace CreateVpcRequest {
  export function isa(o: any): o is CreateVpcRequest {
    return _smithy.isa(o, "CreateVpcRequest");
  }
}

export interface CreateVpcResult extends $MetadataBearer {
  __type?: "CreateVpcResult";
  /**
   * <p>Information about the VPC.</p>
   */
  Vpc?: Vpc;
}

export namespace CreateVpcResult {
  export function isa(o: any): o is CreateVpcResult {
    return _smithy.isa(o, "CreateVpcResult");
  }
}

/**
 * <p>Contains the parameters for CreateVpnConnection.</p>
 */
export interface CreateVpnConnectionRequest {
  __type?: "CreateVpnConnectionRequest";
  /**
   * <p>The ID of the customer gateway.</p>
   */
  CustomerGatewayId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The options for the VPN connection.</p>
   */
  Options?: VpnConnectionOptionsSpecification;

  /**
   * <p>The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The type of VPN connection (<code>ipsec.1</code>).</p>
   */
  Type: string | undefined;

  /**
   * <p>The ID of the virtual private gateway. If you specify a virtual private gateway, you cannot specify a transit gateway.</p>
   */
  VpnGatewayId?: string;
}

export namespace CreateVpnConnectionRequest {
  export function isa(o: any): o is CreateVpnConnectionRequest {
    return _smithy.isa(o, "CreateVpnConnectionRequest");
  }
}

/**
 * <p>Contains the output of CreateVpnConnection.</p>
 */
export interface CreateVpnConnectionResult extends $MetadataBearer {
  __type?: "CreateVpnConnectionResult";
  /**
   * <p>Information about the VPN connection.</p>
   */
  VpnConnection?: VpnConnection;
}

export namespace CreateVpnConnectionResult {
  export function isa(o: any): o is CreateVpnConnectionResult {
    return _smithy.isa(o, "CreateVpnConnectionResult");
  }
}

/**
 * <p>Contains the parameters for CreateVpnConnectionRoute.</p>
 */
export interface CreateVpnConnectionRouteRequest {
  __type?: "CreateVpnConnectionRouteRequest";
  /**
   * <p>The CIDR block associated with the local subnet of the customer network.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>The ID of the VPN connection.</p>
   */
  VpnConnectionId: string | undefined;
}

export namespace CreateVpnConnectionRouteRequest {
  export function isa(o: any): o is CreateVpnConnectionRouteRequest {
    return _smithy.isa(o, "CreateVpnConnectionRouteRequest");
  }
}

/**
 * <p>Contains the parameters for CreateVpnGateway.</p>
 */
export interface CreateVpnGatewayRequest {
  __type?: "CreateVpnGatewayRequest";
  /**
   * <p>A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If you're using a 16-bit ASN, it must be in the 64512 to 65534 range. If you're using a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.</p>
   * 		       <p>Default: 64512</p>
   */
  AmazonSideAsn?: number;

  /**
   * <p>The Availability Zone for the virtual private gateway.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The type of VPN connection this virtual private gateway supports.</p>
   */
  Type: GatewayType | string | undefined;
}

export namespace CreateVpnGatewayRequest {
  export function isa(o: any): o is CreateVpnGatewayRequest {
    return _smithy.isa(o, "CreateVpnGatewayRequest");
  }
}

/**
 * <p>Contains the output of CreateVpnGateway.</p>
 */
export interface CreateVpnGatewayResult extends $MetadataBearer {
  __type?: "CreateVpnGatewayResult";
  /**
   * <p>Information about the virtual private gateway.</p>
   */
  VpnGateway?: VpnGateway;
}

export namespace CreateVpnGatewayResult {
  export function isa(o: any): o is CreateVpnGatewayResult {
    return _smithy.isa(o, "CreateVpnGatewayResult");
  }
}

/**
 * <p>Describes the credit option for CPU usage of a T2 or T3 instance.</p>
 */
export interface CreditSpecification {
  __type?: "CreditSpecification";
  /**
   * <p>The credit option for CPU usage of a T2 or T3 instance. Valid values are
   *                 <code>standard</code> and <code>unlimited</code>.</p>
   */
  CpuCredits?: string;
}

export namespace CreditSpecification {
  export function isa(o: any): o is CreditSpecification {
    return _smithy.isa(o, "CreditSpecification");
  }
}

/**
 * <p>The credit option for CPU usage of a T2 or T3 instance.</p>
 */
export interface CreditSpecificationRequest {
  __type?: "CreditSpecificationRequest";
  /**
   * <p>The credit option for CPU usage of a T2 or T3 instance. Valid values are
   *                 <code>standard</code> and <code>unlimited</code>.</p>
   */
  CpuCredits: string | undefined;
}

export namespace CreditSpecificationRequest {
  export function isa(o: any): o is CreditSpecificationRequest {
    return _smithy.isa(o, "CreditSpecificationRequest");
  }
}

export type CurrencyCodeValues = "USD";

/**
 * <p>Describes a customer gateway.</p>
 */
export interface CustomerGateway {
  __type?: "CustomerGateway";
  /**
   * <p>The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p>
   */
  BgpAsn?: string;

  /**
   * <p>The Amazon Resource Name (ARN) for the customer gateway certificate.</p>
   */
  CertificateArn?: string;

  /**
   * <p>The ID of the customer gateway.</p>
   */
  CustomerGatewayId?: string;

  /**
   * <p>The name of customer gateway device.</p>
   */
  DeviceName?: string;

  /**
   * <p>The Internet-routable IP address of the customer gateway's outside interface.</p>
   */
  IpAddress?: string;

  /**
   * <p>The current state of the customer gateway (<code>pending | available | deleting |
   *             deleted</code>).</p>
   */
  State?: string;

  /**
   * <p>Any tags assigned to the customer gateway.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The type of VPN connection the customer gateway supports (<code>ipsec.1</code>).</p>
   */
  Type?: string;
}

export namespace CustomerGateway {
  export function isa(o: any): o is CustomerGateway {
    return _smithy.isa(o, "CustomerGateway");
  }
}

export type DatafeedSubscriptionState = "Active" | "Inactive";

export type DefaultRouteTableAssociationValue = "disable" | "enable";

export type DefaultRouteTablePropagationValue = "disable" | "enable";

export enum DefaultTargetCapacityType {
  ON_DEMAND = "on-demand",
  SPOT = "spot"
}

export interface DeleteClientVpnEndpointRequest {
  __type?: "DeleteClientVpnEndpointRequest";
  /**
   * <p>The ID of the Client VPN to be deleted.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DeleteClientVpnEndpointRequest {
  export function isa(o: any): o is DeleteClientVpnEndpointRequest {
    return _smithy.isa(o, "DeleteClientVpnEndpointRequest");
  }
}

export interface DeleteClientVpnEndpointResult extends $MetadataBearer {
  __type?: "DeleteClientVpnEndpointResult";
  /**
   * <p>The current state of the Client VPN endpoint.</p>
   */
  Status?: ClientVpnEndpointStatus;
}

export namespace DeleteClientVpnEndpointResult {
  export function isa(o: any): o is DeleteClientVpnEndpointResult {
    return _smithy.isa(o, "DeleteClientVpnEndpointResult");
  }
}

export interface DeleteClientVpnRouteRequest {
  __type?: "DeleteClientVpnRouteRequest";
  /**
   * <p>The ID of the Client VPN endpoint from which the route is to be deleted.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>The IPv4 address range, in CIDR notation, of the route to be deleted.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the target subnet used by the route.</p>
   */
  TargetVpcSubnetId?: string;
}

export namespace DeleteClientVpnRouteRequest {
  export function isa(o: any): o is DeleteClientVpnRouteRequest {
    return _smithy.isa(o, "DeleteClientVpnRouteRequest");
  }
}

export interface DeleteClientVpnRouteResult extends $MetadataBearer {
  __type?: "DeleteClientVpnRouteResult";
  /**
   * <p>The current state of the route.</p>
   */
  Status?: ClientVpnRouteStatus;
}

export namespace DeleteClientVpnRouteResult {
  export function isa(o: any): o is DeleteClientVpnRouteResult {
    return _smithy.isa(o, "DeleteClientVpnRouteResult");
  }
}

/**
 * <p>Contains the parameters for DeleteCustomerGateway.</p>
 */
export interface DeleteCustomerGatewayRequest {
  __type?: "DeleteCustomerGatewayRequest";
  /**
   * <p>The ID of the customer gateway.</p>
   */
  CustomerGatewayId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DeleteCustomerGatewayRequest {
  export function isa(o: any): o is DeleteCustomerGatewayRequest {
    return _smithy.isa(o, "DeleteCustomerGatewayRequest");
  }
}

export interface DeleteDhcpOptionsRequest {
  __type?: "DeleteDhcpOptionsRequest";
  /**
   * <p>The ID of the DHCP options set.</p>
   */
  DhcpOptionsId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DeleteDhcpOptionsRequest {
  export function isa(o: any): o is DeleteDhcpOptionsRequest {
    return _smithy.isa(o, "DeleteDhcpOptionsRequest");
  }
}

export interface DeleteEgressOnlyInternetGatewayRequest {
  __type?: "DeleteEgressOnlyInternetGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the egress-only internet gateway.</p>
   */
  EgressOnlyInternetGatewayId: string | undefined;
}

export namespace DeleteEgressOnlyInternetGatewayRequest {
  export function isa(o: any): o is DeleteEgressOnlyInternetGatewayRequest {
    return _smithy.isa(o, "DeleteEgressOnlyInternetGatewayRequest");
  }
}

export interface DeleteEgressOnlyInternetGatewayResult extends $MetadataBearer {
  __type?: "DeleteEgressOnlyInternetGatewayResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  ReturnCode?: boolean;
}

export namespace DeleteEgressOnlyInternetGatewayResult {
  export function isa(o: any): o is DeleteEgressOnlyInternetGatewayResult {
    return _smithy.isa(o, "DeleteEgressOnlyInternetGatewayResult");
  }
}

/**
 * <p>Describes an EC2 Fleet error.</p>
 */
export interface DeleteFleetError {
  __type?: "DeleteFleetError";
  /**
   * <p>The error code.</p>
   */
  Code?: DeleteFleetErrorCode | string;

  /**
   * <p>The description for the error code.</p>
   */
  Message?: string;
}

export namespace DeleteFleetError {
  export function isa(o: any): o is DeleteFleetError {
    return _smithy.isa(o, "DeleteFleetError");
  }
}

export enum DeleteFleetErrorCode {
  FLEET_ID_DOES_NOT_EXIST = "fleetIdDoesNotExist",
  FLEET_ID_MALFORMED = "fleetIdMalformed",
  FLEET_NOT_IN_DELETABLE_STATE = "fleetNotInDeletableState",
  UNEXPECTED_ERROR = "unexpectedError"
}

/**
 * <p>Describes an EC2 Fleet that was not successfully deleted.</p>
 */
export interface DeleteFleetErrorItem {
  __type?: "DeleteFleetErrorItem";
  /**
   * <p>The error.</p>
   */
  Error?: DeleteFleetError;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId?: string;
}

export namespace DeleteFleetErrorItem {
  export function isa(o: any): o is DeleteFleetErrorItem {
    return _smithy.isa(o, "DeleteFleetErrorItem");
  }
}

/**
 * <p>Describes an EC2 Fleet that was successfully deleted.</p>
 */
export interface DeleteFleetSuccessItem {
  __type?: "DeleteFleetSuccessItem";
  /**
   * <p>The current state of the EC2 Fleet.</p>
   */
  CurrentFleetState?: FleetStateCode | string;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId?: string;

  /**
   * <p>The previous state of the EC2 Fleet.</p>
   */
  PreviousFleetState?: FleetStateCode | string;
}

export namespace DeleteFleetSuccessItem {
  export function isa(o: any): o is DeleteFleetSuccessItem {
    return _smithy.isa(o, "DeleteFleetSuccessItem");
  }
}

export interface DeleteFleetsRequest {
  __type?: "DeleteFleetsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the EC2 Fleets.</p>
   */
  FleetIds: Array<string> | undefined;

  /**
   * <p>Indicates whether to terminate instances for an EC2 Fleet if it is deleted
   *          successfully.</p>
   */
  TerminateInstances: boolean | undefined;
}

export namespace DeleteFleetsRequest {
  export function isa(o: any): o is DeleteFleetsRequest {
    return _smithy.isa(o, "DeleteFleetsRequest");
  }
}

export interface DeleteFleetsResult extends $MetadataBearer {
  __type?: "DeleteFleetsResult";
  /**
   * <p>Information about the EC2 Fleets that are successfully deleted.</p>
   */
  SuccessfulFleetDeletions?: Array<DeleteFleetSuccessItem>;

  /**
   * <p>Information about the EC2 Fleets that are not successfully deleted.</p>
   */
  UnsuccessfulFleetDeletions?: Array<DeleteFleetErrorItem>;
}

export namespace DeleteFleetsResult {
  export function isa(o: any): o is DeleteFleetsResult {
    return _smithy.isa(o, "DeleteFleetsResult");
  }
}

export interface DeleteFlowLogsRequest {
  __type?: "DeleteFlowLogsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more flow log IDs.</p>
   *         <p>Constraint: Maximum of 1000 flow log IDs.</p>
   */
  FlowLogIds: Array<string> | undefined;
}

export namespace DeleteFlowLogsRequest {
  export function isa(o: any): o is DeleteFlowLogsRequest {
    return _smithy.isa(o, "DeleteFlowLogsRequest");
  }
}

export interface DeleteFlowLogsResult extends $MetadataBearer {
  __type?: "DeleteFlowLogsResult";
  /**
   * <p>Information about the flow logs that could not be deleted successfully.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace DeleteFlowLogsResult {
  export function isa(o: any): o is DeleteFlowLogsResult {
    return _smithy.isa(o, "DeleteFlowLogsResult");
  }
}

export interface DeleteFpgaImageRequest {
  __type?: "DeleteFpgaImageRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AFI.</p>
   */
  FpgaImageId: string | undefined;
}

export namespace DeleteFpgaImageRequest {
  export function isa(o: any): o is DeleteFpgaImageRequest {
    return _smithy.isa(o, "DeleteFpgaImageRequest");
  }
}

export interface DeleteFpgaImageResult extends $MetadataBearer {
  __type?: "DeleteFpgaImageResult";
  /**
   * <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
   */
  Return?: boolean;
}

export namespace DeleteFpgaImageResult {
  export function isa(o: any): o is DeleteFpgaImageResult {
    return _smithy.isa(o, "DeleteFpgaImageResult");
  }
}

export interface DeleteInternetGatewayRequest {
  __type?: "DeleteInternetGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the internet gateway.</p>
   */
  InternetGatewayId: string | undefined;
}

export namespace DeleteInternetGatewayRequest {
  export function isa(o: any): o is DeleteInternetGatewayRequest {
    return _smithy.isa(o, "DeleteInternetGatewayRequest");
  }
}

export interface DeleteKeyPairRequest {
  __type?: "DeleteKeyPairRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName: string | undefined;
}

export namespace DeleteKeyPairRequest {
  export function isa(o: any): o is DeleteKeyPairRequest {
    return _smithy.isa(o, "DeleteKeyPairRequest");
  }
}

export interface DeleteLaunchTemplateRequest {
  __type?: "DeleteLaunchTemplateRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateName?: string;
}

export namespace DeleteLaunchTemplateRequest {
  export function isa(o: any): o is DeleteLaunchTemplateRequest {
    return _smithy.isa(o, "DeleteLaunchTemplateRequest");
  }
}

export interface DeleteLaunchTemplateResult extends $MetadataBearer {
  __type?: "DeleteLaunchTemplateResult";
  /**
   * <p>Information about the launch template.</p>
   */
  LaunchTemplate?: LaunchTemplate;
}

export namespace DeleteLaunchTemplateResult {
  export function isa(o: any): o is DeleteLaunchTemplateResult {
    return _smithy.isa(o, "DeleteLaunchTemplateResult");
  }
}

export interface DeleteLaunchTemplateVersionsRequest {
  __type?: "DeleteLaunchTemplateVersionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The version numbers of one or more launch template versions to delete.</p>
   */
  Versions: Array<string> | undefined;
}

export namespace DeleteLaunchTemplateVersionsRequest {
  export function isa(o: any): o is DeleteLaunchTemplateVersionsRequest {
    return _smithy.isa(o, "DeleteLaunchTemplateVersionsRequest");
  }
}

/**
 * <p>Describes a launch template version that could not be deleted.</p>
 */
export interface DeleteLaunchTemplateVersionsResponseErrorItem {
  __type?: "DeleteLaunchTemplateVersionsResponseErrorItem";
  /**
   * <p>The ID of the launch template.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>Information about the error.</p>
   */
  ResponseError?: ResponseError;

  /**
   * <p>The version number of the launch template.</p>
   */
  VersionNumber?: number;
}

export namespace DeleteLaunchTemplateVersionsResponseErrorItem {
  export function isa(
    o: any
  ): o is DeleteLaunchTemplateVersionsResponseErrorItem {
    return _smithy.isa(o, "DeleteLaunchTemplateVersionsResponseErrorItem");
  }
}

/**
 * <p>Describes a launch template version that was successfully deleted.</p>
 */
export interface DeleteLaunchTemplateVersionsResponseSuccessItem {
  __type?: "DeleteLaunchTemplateVersionsResponseSuccessItem";
  /**
   * <p>The ID of the launch template.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The version number of the launch template.</p>
   */
  VersionNumber?: number;
}

export namespace DeleteLaunchTemplateVersionsResponseSuccessItem {
  export function isa(
    o: any
  ): o is DeleteLaunchTemplateVersionsResponseSuccessItem {
    return _smithy.isa(o, "DeleteLaunchTemplateVersionsResponseSuccessItem");
  }
}

export interface DeleteLaunchTemplateVersionsResult extends $MetadataBearer {
  __type?: "DeleteLaunchTemplateVersionsResult";
  /**
   * <p>Information about the launch template versions that were successfully
   *             deleted.</p>
   */
  SuccessfullyDeletedLaunchTemplateVersions?: Array<
    DeleteLaunchTemplateVersionsResponseSuccessItem
  >;

  /**
   * <p>Information about the launch template versions that could not be deleted.</p>
   */
  UnsuccessfullyDeletedLaunchTemplateVersions?: Array<
    DeleteLaunchTemplateVersionsResponseErrorItem
  >;
}

export namespace DeleteLaunchTemplateVersionsResult {
  export function isa(o: any): o is DeleteLaunchTemplateVersionsResult {
    return _smithy.isa(o, "DeleteLaunchTemplateVersionsResult");
  }
}

export interface DeleteLocalGatewayRouteRequest {
  __type?: "DeleteLocalGatewayRouteRequest";
  /**
   * <p>The CIDR range for the route. This must match the CIDR for the route exactly.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId: string | undefined;
}

export namespace DeleteLocalGatewayRouteRequest {
  export function isa(o: any): o is DeleteLocalGatewayRouteRequest {
    return _smithy.isa(o, "DeleteLocalGatewayRouteRequest");
  }
}

export interface DeleteLocalGatewayRouteResult extends $MetadataBearer {
  __type?: "DeleteLocalGatewayRouteResult";
  /**
   * <p>Information about the route.</p>
   */
  Route?: LocalGatewayRoute;
}

export namespace DeleteLocalGatewayRouteResult {
  export function isa(o: any): o is DeleteLocalGatewayRouteResult {
    return _smithy.isa(o, "DeleteLocalGatewayRouteResult");
  }
}

export interface DeleteLocalGatewayRouteTableVpcAssociationRequest {
  __type?: "DeleteLocalGatewayRouteTableVpcAssociationRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the association.</p>
   */
  LocalGatewayRouteTableVpcAssociationId: string | undefined;
}

export namespace DeleteLocalGatewayRouteTableVpcAssociationRequest {
  export function isa(
    o: any
  ): o is DeleteLocalGatewayRouteTableVpcAssociationRequest {
    return _smithy.isa(o, "DeleteLocalGatewayRouteTableVpcAssociationRequest");
  }
}

export interface DeleteLocalGatewayRouteTableVpcAssociationResult
  extends $MetadataBearer {
  __type?: "DeleteLocalGatewayRouteTableVpcAssociationResult";
  /**
   * <p>Information about the association.</p>
   */
  LocalGatewayRouteTableVpcAssociation?: LocalGatewayRouteTableVpcAssociation;
}

export namespace DeleteLocalGatewayRouteTableVpcAssociationResult {
  export function isa(
    o: any
  ): o is DeleteLocalGatewayRouteTableVpcAssociationResult {
    return _smithy.isa(o, "DeleteLocalGatewayRouteTableVpcAssociationResult");
  }
}

export interface DeleteNatGatewayRequest {
  __type?: "DeleteNatGatewayRequest";
  /**
   * <p>The ID of the NAT gateway.</p>
   */
  NatGatewayId: string | undefined;
}

export namespace DeleteNatGatewayRequest {
  export function isa(o: any): o is DeleteNatGatewayRequest {
    return _smithy.isa(o, "DeleteNatGatewayRequest");
  }
}

export interface DeleteNatGatewayResult extends $MetadataBearer {
  __type?: "DeleteNatGatewayResult";
  /**
   * <p>The ID of the NAT gateway.</p>
   */
  NatGatewayId?: string;
}

export namespace DeleteNatGatewayResult {
  export function isa(o: any): o is DeleteNatGatewayResult {
    return _smithy.isa(o, "DeleteNatGatewayResult");
  }
}

export interface DeleteNetworkAclEntryRequest {
  __type?: "DeleteNetworkAclEntryRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether the rule is an egress rule.</p>
   */
  Egress: boolean | undefined;

  /**
   * <p>The ID of the network ACL.</p>
   */
  NetworkAclId: string | undefined;

  /**
   * <p>The rule number of the entry to delete.</p>
   */
  RuleNumber: number | undefined;
}

export namespace DeleteNetworkAclEntryRequest {
  export function isa(o: any): o is DeleteNetworkAclEntryRequest {
    return _smithy.isa(o, "DeleteNetworkAclEntryRequest");
  }
}

export interface DeleteNetworkAclRequest {
  __type?: "DeleteNetworkAclRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the network ACL.</p>
   */
  NetworkAclId: string | undefined;
}

export namespace DeleteNetworkAclRequest {
  export function isa(o: any): o is DeleteNetworkAclRequest {
    return _smithy.isa(o, "DeleteNetworkAclRequest");
  }
}

/**
 * <p>Contains the parameters for DeleteNetworkInterfacePermission.</p>
 */
export interface DeleteNetworkInterfacePermissionRequest {
  __type?: "DeleteNetworkInterfacePermissionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   * 			and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   * 			Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specify <code>true</code> to remove the permission even if the network interface is
   * 			attached to an instance.</p>
   */
  Force?: boolean;

  /**
   * <p>The ID of the network interface permission.</p>
   */
  NetworkInterfacePermissionId: string | undefined;
}

export namespace DeleteNetworkInterfacePermissionRequest {
  export function isa(o: any): o is DeleteNetworkInterfacePermissionRequest {
    return _smithy.isa(o, "DeleteNetworkInterfacePermissionRequest");
  }
}

/**
 * <p>Contains the output for DeleteNetworkInterfacePermission.</p>
 */
export interface DeleteNetworkInterfacePermissionResult
  extends $MetadataBearer {
  __type?: "DeleteNetworkInterfacePermissionResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds, otherwise returns an error.</p>
   */
  Return?: boolean;
}

export namespace DeleteNetworkInterfacePermissionResult {
  export function isa(o: any): o is DeleteNetworkInterfacePermissionResult {
    return _smithy.isa(o, "DeleteNetworkInterfacePermissionResult");
  }
}

/**
 * <p>Contains the parameters for DeleteNetworkInterface.</p>
 */
export interface DeleteNetworkInterfaceRequest {
  __type?: "DeleteNetworkInterfaceRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;
}

export namespace DeleteNetworkInterfaceRequest {
  export function isa(o: any): o is DeleteNetworkInterfaceRequest {
    return _smithy.isa(o, "DeleteNetworkInterfaceRequest");
  }
}

export interface DeletePlacementGroupRequest {
  __type?: "DeletePlacementGroupRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The name of the placement group.</p>
   */
  GroupName: string | undefined;
}

export namespace DeletePlacementGroupRequest {
  export function isa(o: any): o is DeletePlacementGroupRequest {
    return _smithy.isa(o, "DeletePlacementGroupRequest");
  }
}

/**
 * <p>Describes the error for a Reserved Instance whose queued purchase could not be deleted.</p>
 */
export interface DeleteQueuedReservedInstancesError {
  __type?: "DeleteQueuedReservedInstancesError";
  /**
   * <p>The error code.</p>
   */
  Code?: DeleteQueuedReservedInstancesErrorCode | string;

  /**
   * <p>The error message.</p>
   */
  Message?: string;
}

export namespace DeleteQueuedReservedInstancesError {
  export function isa(o: any): o is DeleteQueuedReservedInstancesError {
    return _smithy.isa(o, "DeleteQueuedReservedInstancesError");
  }
}

export enum DeleteQueuedReservedInstancesErrorCode {
  RESERVED_INSTANCES_ID_INVALID = "reserved-instances-id-invalid",
  RESERVED_INSTANCES_NOT_IN_QUEUED_STATE = "reserved-instances-not-in-queued-state",
  UNEXPECTED_ERROR = "unexpected-error"
}

export interface DeleteQueuedReservedInstancesRequest {
  __type?: "DeleteQueuedReservedInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the Reserved Instances.</p>
   */
  ReservedInstancesIds: Array<string> | undefined;
}

export namespace DeleteQueuedReservedInstancesRequest {
  export function isa(o: any): o is DeleteQueuedReservedInstancesRequest {
    return _smithy.isa(o, "DeleteQueuedReservedInstancesRequest");
  }
}

export interface DeleteQueuedReservedInstancesResult extends $MetadataBearer {
  __type?: "DeleteQueuedReservedInstancesResult";
  /**
   * <p>Information about the queued purchases that could not be deleted.</p>
   */
  FailedQueuedPurchaseDeletions?: Array<FailedQueuedPurchaseDeletion>;

  /**
   * <p>Information about the queued purchases that were successfully deleted.</p>
   */
  SuccessfulQueuedPurchaseDeletions?: Array<SuccessfulQueuedPurchaseDeletion>;
}

export namespace DeleteQueuedReservedInstancesResult {
  export function isa(o: any): o is DeleteQueuedReservedInstancesResult {
    return _smithy.isa(o, "DeleteQueuedReservedInstancesResult");
  }
}

export interface DeleteRouteRequest {
  __type?: "DeleteRouteRequest";
  /**
   * <p>The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The IPv6 CIDR range for the route. The value you specify must match the CIDR for the route exactly.</p>
   */
  DestinationIpv6CidrBlock?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the route table.</p>
   */
  RouteTableId: string | undefined;
}

export namespace DeleteRouteRequest {
  export function isa(o: any): o is DeleteRouteRequest {
    return _smithy.isa(o, "DeleteRouteRequest");
  }
}

export interface DeleteRouteTableRequest {
  __type?: "DeleteRouteTableRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the route table.</p>
   */
  RouteTableId: string | undefined;
}

export namespace DeleteRouteTableRequest {
  export function isa(o: any): o is DeleteRouteTableRequest {
    return _smithy.isa(o, "DeleteRouteTableRequest");
  }
}

export interface DeleteSecurityGroupRequest {
  __type?: "DeleteSecurityGroupRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the security group. Required for a nondefault VPC.</p>
   */
  GroupId?: string;

  /**
   * <p>[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.</p>
   */
  GroupName?: string;
}

export namespace DeleteSecurityGroupRequest {
  export function isa(o: any): o is DeleteSecurityGroupRequest {
    return _smithy.isa(o, "DeleteSecurityGroupRequest");
  }
}

export interface DeleteSnapshotRequest {
  __type?: "DeleteSnapshotRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the EBS snapshot.</p>
   */
  SnapshotId: string | undefined;
}

export namespace DeleteSnapshotRequest {
  export function isa(o: any): o is DeleteSnapshotRequest {
    return _smithy.isa(o, "DeleteSnapshotRequest");
  }
}

/**
 * <p>Contains the parameters for DeleteSpotDatafeedSubscription.</p>
 */
export interface DeleteSpotDatafeedSubscriptionRequest {
  __type?: "DeleteSpotDatafeedSubscriptionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DeleteSpotDatafeedSubscriptionRequest {
  export function isa(o: any): o is DeleteSpotDatafeedSubscriptionRequest {
    return _smithy.isa(o, "DeleteSpotDatafeedSubscriptionRequest");
  }
}

export interface DeleteSubnetRequest {
  __type?: "DeleteSubnetRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId: string | undefined;
}

export namespace DeleteSubnetRequest {
  export function isa(o: any): o is DeleteSubnetRequest {
    return _smithy.isa(o, "DeleteSubnetRequest");
  }
}

export interface DeleteTagsRequest {
  __type?: "DeleteTagsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the resources, separated by spaces.</p>
   *    	     <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>
   */
  Resources: Array<string> | undefined;

  /**
   * <p>The tags to delete. Specify a tag key and an optional tag value to delete
   *             specific tags. If you specify a tag key without a tag value, we delete any tag with this
   *             key regardless of its value. If you specify a tag key with an empty string as the tag
   *             value, we delete the tag only if its value is an empty string.</p>
   *         <p>If you omit this parameter, we delete all user-defined tags for the specified
   *             resources. We do not delete AWS-generated tags (tags that have the <code>aws:</code>
   *             prefix).</p>
   */
  Tags?: Array<Tag>;
}

export namespace DeleteTagsRequest {
  export function isa(o: any): o is DeleteTagsRequest {
    return _smithy.isa(o, "DeleteTagsRequest");
  }
}

export interface DeleteTrafficMirrorFilterRequest {
  __type?: "DeleteTrafficMirrorFilterRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterId: string | undefined;
}

export namespace DeleteTrafficMirrorFilterRequest {
  export function isa(o: any): o is DeleteTrafficMirrorFilterRequest {
    return _smithy.isa(o, "DeleteTrafficMirrorFilterRequest");
  }
}

export interface DeleteTrafficMirrorFilterResult extends $MetadataBearer {
  __type?: "DeleteTrafficMirrorFilterResult";
  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterId?: string;
}

export namespace DeleteTrafficMirrorFilterResult {
  export function isa(o: any): o is DeleteTrafficMirrorFilterResult {
    return _smithy.isa(o, "DeleteTrafficMirrorFilterResult");
  }
}

export interface DeleteTrafficMirrorFilterRuleRequest {
  __type?: "DeleteTrafficMirrorFilterRuleRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the Traffic Mirror rule.</p>
   */
  TrafficMirrorFilterRuleId: string | undefined;
}

export namespace DeleteTrafficMirrorFilterRuleRequest {
  export function isa(o: any): o is DeleteTrafficMirrorFilterRuleRequest {
    return _smithy.isa(o, "DeleteTrafficMirrorFilterRuleRequest");
  }
}

export interface DeleteTrafficMirrorFilterRuleResult extends $MetadataBearer {
  __type?: "DeleteTrafficMirrorFilterRuleResult";
  /**
   * <p>The ID of the deleted Traffic Mirror rule.</p>
   */
  TrafficMirrorFilterRuleId?: string;
}

export namespace DeleteTrafficMirrorFilterRuleResult {
  export function isa(o: any): o is DeleteTrafficMirrorFilterRuleResult {
    return _smithy.isa(o, "DeleteTrafficMirrorFilterRuleResult");
  }
}

export interface DeleteTrafficMirrorSessionRequest {
  __type?: "DeleteTrafficMirrorSessionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the Traffic Mirror session.</p>
   */
  TrafficMirrorSessionId: string | undefined;
}

export namespace DeleteTrafficMirrorSessionRequest {
  export function isa(o: any): o is DeleteTrafficMirrorSessionRequest {
    return _smithy.isa(o, "DeleteTrafficMirrorSessionRequest");
  }
}

export interface DeleteTrafficMirrorSessionResult extends $MetadataBearer {
  __type?: "DeleteTrafficMirrorSessionResult";
  /**
   * <p>The ID of the deleted Traffic Mirror session.</p>
   */
  TrafficMirrorSessionId?: string;
}

export namespace DeleteTrafficMirrorSessionResult {
  export function isa(o: any): o is DeleteTrafficMirrorSessionResult {
    return _smithy.isa(o, "DeleteTrafficMirrorSessionResult");
  }
}

export interface DeleteTrafficMirrorTargetRequest {
  __type?: "DeleteTrafficMirrorTargetRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the Traffic Mirror target.</p>
   */
  TrafficMirrorTargetId: string | undefined;
}

export namespace DeleteTrafficMirrorTargetRequest {
  export function isa(o: any): o is DeleteTrafficMirrorTargetRequest {
    return _smithy.isa(o, "DeleteTrafficMirrorTargetRequest");
  }
}

export interface DeleteTrafficMirrorTargetResult extends $MetadataBearer {
  __type?: "DeleteTrafficMirrorTargetResult";
  /**
   * <p>The ID of the deleted Traffic Mirror target.</p>
   */
  TrafficMirrorTargetId?: string;
}

export namespace DeleteTrafficMirrorTargetResult {
  export function isa(o: any): o is DeleteTrafficMirrorTargetResult {
    return _smithy.isa(o, "DeleteTrafficMirrorTargetResult");
  }
}

export interface DeleteTransitGatewayMulticastDomainRequest {
  __type?: "DeleteTransitGatewayMulticastDomainRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId: string | undefined;
}

export namespace DeleteTransitGatewayMulticastDomainRequest {
  export function isa(o: any): o is DeleteTransitGatewayMulticastDomainRequest {
    return _smithy.isa(o, "DeleteTransitGatewayMulticastDomainRequest");
  }
}

export interface DeleteTransitGatewayMulticastDomainResult
  extends $MetadataBearer {
  __type?: "DeleteTransitGatewayMulticastDomainResult";
  /**
   * <p>Information about the deleted transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomain?: TransitGatewayMulticastDomain;
}

export namespace DeleteTransitGatewayMulticastDomainResult {
  export function isa(o: any): o is DeleteTransitGatewayMulticastDomainResult {
    return _smithy.isa(o, "DeleteTransitGatewayMulticastDomainResult");
  }
}

export interface DeleteTransitGatewayPeeringAttachmentRequest {
  __type?: "DeleteTransitGatewayPeeringAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway peering attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace DeleteTransitGatewayPeeringAttachmentRequest {
  export function isa(
    o: any
  ): o is DeleteTransitGatewayPeeringAttachmentRequest {
    return _smithy.isa(o, "DeleteTransitGatewayPeeringAttachmentRequest");
  }
}

export interface DeleteTransitGatewayPeeringAttachmentResult
  extends $MetadataBearer {
  __type?: "DeleteTransitGatewayPeeringAttachmentResult";
  /**
   * <p>The transit gateway peering attachment.</p>
   */
  TransitGatewayPeeringAttachment?: TransitGatewayPeeringAttachment;
}

export namespace DeleteTransitGatewayPeeringAttachmentResult {
  export function isa(
    o: any
  ): o is DeleteTransitGatewayPeeringAttachmentResult {
    return _smithy.isa(o, "DeleteTransitGatewayPeeringAttachmentResult");
  }
}

export interface DeleteTransitGatewayRequest {
  __type?: "DeleteTransitGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId: string | undefined;
}

export namespace DeleteTransitGatewayRequest {
  export function isa(o: any): o is DeleteTransitGatewayRequest {
    return _smithy.isa(o, "DeleteTransitGatewayRequest");
  }
}

export interface DeleteTransitGatewayResult extends $MetadataBearer {
  __type?: "DeleteTransitGatewayResult";
  /**
   * <p>Information about the deleted transit gateway.</p>
   */
  TransitGateway?: TransitGateway;
}

export namespace DeleteTransitGatewayResult {
  export function isa(o: any): o is DeleteTransitGatewayResult {
    return _smithy.isa(o, "DeleteTransitGatewayResult");
  }
}

export interface DeleteTransitGatewayRouteRequest {
  __type?: "DeleteTransitGatewayRouteRequest";
  /**
   * <p>The CIDR range for the route. This must match the CIDR for the route exactly.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace DeleteTransitGatewayRouteRequest {
  export function isa(o: any): o is DeleteTransitGatewayRouteRequest {
    return _smithy.isa(o, "DeleteTransitGatewayRouteRequest");
  }
}

export interface DeleteTransitGatewayRouteResult extends $MetadataBearer {
  __type?: "DeleteTransitGatewayRouteResult";
  /**
   * <p>Information about the route.</p>
   */
  Route?: TransitGatewayRoute;
}

export namespace DeleteTransitGatewayRouteResult {
  export function isa(o: any): o is DeleteTransitGatewayRouteResult {
    return _smithy.isa(o, "DeleteTransitGatewayRouteResult");
  }
}

export interface DeleteTransitGatewayRouteTableRequest {
  __type?: "DeleteTransitGatewayRouteTableRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace DeleteTransitGatewayRouteTableRequest {
  export function isa(o: any): o is DeleteTransitGatewayRouteTableRequest {
    return _smithy.isa(o, "DeleteTransitGatewayRouteTableRequest");
  }
}

export interface DeleteTransitGatewayRouteTableResult extends $MetadataBearer {
  __type?: "DeleteTransitGatewayRouteTableResult";
  /**
   * <p>Information about the deleted transit gateway route table.</p>
   */
  TransitGatewayRouteTable?: TransitGatewayRouteTable;
}

export namespace DeleteTransitGatewayRouteTableResult {
  export function isa(o: any): o is DeleteTransitGatewayRouteTableResult {
    return _smithy.isa(o, "DeleteTransitGatewayRouteTableResult");
  }
}

export interface DeleteTransitGatewayVpcAttachmentRequest {
  __type?: "DeleteTransitGatewayVpcAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace DeleteTransitGatewayVpcAttachmentRequest {
  export function isa(o: any): o is DeleteTransitGatewayVpcAttachmentRequest {
    return _smithy.isa(o, "DeleteTransitGatewayVpcAttachmentRequest");
  }
}

export interface DeleteTransitGatewayVpcAttachmentResult
  extends $MetadataBearer {
  __type?: "DeleteTransitGatewayVpcAttachmentResult";
  /**
   * <p>Information about the deleted VPC attachment.</p>
   */
  TransitGatewayVpcAttachment?: TransitGatewayVpcAttachment;
}

export namespace DeleteTransitGatewayVpcAttachmentResult {
  export function isa(o: any): o is DeleteTransitGatewayVpcAttachmentResult {
    return _smithy.isa(o, "DeleteTransitGatewayVpcAttachmentResult");
  }
}

export interface DeleteVolumeRequest {
  __type?: "DeleteVolumeRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId: string | undefined;
}

export namespace DeleteVolumeRequest {
  export function isa(o: any): o is DeleteVolumeRequest {
    return _smithy.isa(o, "DeleteVolumeRequest");
  }
}

export interface DeleteVpcEndpointConnectionNotificationsRequest {
  __type?: "DeleteVpcEndpointConnectionNotificationsRequest";
  /**
   * <p>One or more notification IDs.</p>
   */
  ConnectionNotificationIds: Array<string> | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DeleteVpcEndpointConnectionNotificationsRequest {
  export function isa(
    o: any
  ): o is DeleteVpcEndpointConnectionNotificationsRequest {
    return _smithy.isa(o, "DeleteVpcEndpointConnectionNotificationsRequest");
  }
}

export interface DeleteVpcEndpointConnectionNotificationsResult
  extends $MetadataBearer {
  __type?: "DeleteVpcEndpointConnectionNotificationsResult";
  /**
   * <p>Information about the notifications that could not be deleted
   *             successfully.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace DeleteVpcEndpointConnectionNotificationsResult {
  export function isa(
    o: any
  ): o is DeleteVpcEndpointConnectionNotificationsResult {
    return _smithy.isa(o, "DeleteVpcEndpointConnectionNotificationsResult");
  }
}

export interface DeleteVpcEndpointServiceConfigurationsRequest {
  __type?: "DeleteVpcEndpointServiceConfigurationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of one or more services.</p>
   */
  ServiceIds: Array<string> | undefined;
}

export namespace DeleteVpcEndpointServiceConfigurationsRequest {
  export function isa(
    o: any
  ): o is DeleteVpcEndpointServiceConfigurationsRequest {
    return _smithy.isa(o, "DeleteVpcEndpointServiceConfigurationsRequest");
  }
}

export interface DeleteVpcEndpointServiceConfigurationsResult
  extends $MetadataBearer {
  __type?: "DeleteVpcEndpointServiceConfigurationsResult";
  /**
   * <p>Information about the service configurations that were not deleted, if
   *             applicable.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace DeleteVpcEndpointServiceConfigurationsResult {
  export function isa(
    o: any
  ): o is DeleteVpcEndpointServiceConfigurationsResult {
    return _smithy.isa(o, "DeleteVpcEndpointServiceConfigurationsResult");
  }
}

/**
 * <p>Contains the parameters for DeleteVpcEndpoints.</p>
 */
export interface DeleteVpcEndpointsRequest {
  __type?: "DeleteVpcEndpointsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more VPC endpoint IDs.</p>
   */
  VpcEndpointIds: Array<string> | undefined;
}

export namespace DeleteVpcEndpointsRequest {
  export function isa(o: any): o is DeleteVpcEndpointsRequest {
    return _smithy.isa(o, "DeleteVpcEndpointsRequest");
  }
}

/**
 * <p>Contains the output of DeleteVpcEndpoints.</p>
 */
export interface DeleteVpcEndpointsResult extends $MetadataBearer {
  __type?: "DeleteVpcEndpointsResult";
  /**
   * <p>Information about the VPC endpoints that were not successfully deleted.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace DeleteVpcEndpointsResult {
  export function isa(o: any): o is DeleteVpcEndpointsResult {
    return _smithy.isa(o, "DeleteVpcEndpointsResult");
  }
}

export interface DeleteVpcPeeringConnectionRequest {
  __type?: "DeleteVpcPeeringConnectionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC peering connection.</p>
   */
  VpcPeeringConnectionId: string | undefined;
}

export namespace DeleteVpcPeeringConnectionRequest {
  export function isa(o: any): o is DeleteVpcPeeringConnectionRequest {
    return _smithy.isa(o, "DeleteVpcPeeringConnectionRequest");
  }
}

export interface DeleteVpcPeeringConnectionResult extends $MetadataBearer {
  __type?: "DeleteVpcPeeringConnectionResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace DeleteVpcPeeringConnectionResult {
  export function isa(o: any): o is DeleteVpcPeeringConnectionResult {
    return _smithy.isa(o, "DeleteVpcPeeringConnectionResult");
  }
}

export interface DeleteVpcRequest {
  __type?: "DeleteVpcRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace DeleteVpcRequest {
  export function isa(o: any): o is DeleteVpcRequest {
    return _smithy.isa(o, "DeleteVpcRequest");
  }
}

/**
 * <p>Contains the parameters for DeleteVpnConnection.</p>
 */
export interface DeleteVpnConnectionRequest {
  __type?: "DeleteVpnConnectionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPN connection.</p>
   */
  VpnConnectionId: string | undefined;
}

export namespace DeleteVpnConnectionRequest {
  export function isa(o: any): o is DeleteVpnConnectionRequest {
    return _smithy.isa(o, "DeleteVpnConnectionRequest");
  }
}

/**
 * <p>Contains the parameters for DeleteVpnConnectionRoute.</p>
 */
export interface DeleteVpnConnectionRouteRequest {
  __type?: "DeleteVpnConnectionRouteRequest";
  /**
   * <p>The CIDR block associated with the local subnet of the customer network.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>The ID of the VPN connection.</p>
   */
  VpnConnectionId: string | undefined;
}

export namespace DeleteVpnConnectionRouteRequest {
  export function isa(o: any): o is DeleteVpnConnectionRouteRequest {
    return _smithy.isa(o, "DeleteVpnConnectionRouteRequest");
  }
}

/**
 * <p>Contains the parameters for DeleteVpnGateway.</p>
 */
export interface DeleteVpnGatewayRequest {
  __type?: "DeleteVpnGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the virtual private gateway.</p>
   */
  VpnGatewayId: string | undefined;
}

export namespace DeleteVpnGatewayRequest {
  export function isa(o: any): o is DeleteVpnGatewayRequest {
    return _smithy.isa(o, "DeleteVpnGatewayRequest");
  }
}

export interface DeprovisionByoipCidrRequest {
  __type?: "DeprovisionByoipCidrRequest";
  /**
   * <p>The address range, in CIDR notation. The prefix must be the same prefix
   *          that you specified when you provisioned the address range.</p>
   */
  Cidr: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DeprovisionByoipCidrRequest {
  export function isa(o: any): o is DeprovisionByoipCidrRequest {
    return _smithy.isa(o, "DeprovisionByoipCidrRequest");
  }
}

export interface DeprovisionByoipCidrResult extends $MetadataBearer {
  __type?: "DeprovisionByoipCidrResult";
  /**
   * <p>Information about the address range.</p>
   */
  ByoipCidr?: ByoipCidr;
}

export namespace DeprovisionByoipCidrResult {
  export function isa(o: any): o is DeprovisionByoipCidrResult {
    return _smithy.isa(o, "DeprovisionByoipCidrResult");
  }
}

/**
 * <p>Contains the parameters for DeregisterImage.</p>
 */
export interface DeregisterImageRequest {
  __type?: "DeregisterImageRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId: string | undefined;
}

export namespace DeregisterImageRequest {
  export function isa(o: any): o is DeregisterImageRequest {
    return _smithy.isa(o, "DeregisterImageRequest");
  }
}

export interface DeregisterTransitGatewayMulticastGroupMembersRequest {
  __type?: "DeregisterTransitGatewayMulticastGroupMembersRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The IDs of the group members' network interfaces.</p>
   */
  NetworkInterfaceIds?: Array<string>;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace DeregisterTransitGatewayMulticastGroupMembersRequest {
  export function isa(
    o: any
  ): o is DeregisterTransitGatewayMulticastGroupMembersRequest {
    return _smithy.isa(
      o,
      "DeregisterTransitGatewayMulticastGroupMembersRequest"
    );
  }
}

export interface DeregisterTransitGatewayMulticastGroupMembersResult
  extends $MetadataBearer {
  __type?: "DeregisterTransitGatewayMulticastGroupMembersResult";
  /**
   * <p>Information about the deregistered members.</p>
   */
  DeregisteredMulticastGroupMembers?: TransitGatewayMulticastDeregisteredGroupMembers;
}

export namespace DeregisterTransitGatewayMulticastGroupMembersResult {
  export function isa(
    o: any
  ): o is DeregisterTransitGatewayMulticastGroupMembersResult {
    return _smithy.isa(
      o,
      "DeregisterTransitGatewayMulticastGroupMembersResult"
    );
  }
}

export interface DeregisterTransitGatewayMulticastGroupSourcesRequest {
  __type?: "DeregisterTransitGatewayMulticastGroupSourcesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The IDs of the group sources' network interfaces.</p>
   */
  NetworkInterfaceIds?: Array<string>;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace DeregisterTransitGatewayMulticastGroupSourcesRequest {
  export function isa(
    o: any
  ): o is DeregisterTransitGatewayMulticastGroupSourcesRequest {
    return _smithy.isa(
      o,
      "DeregisterTransitGatewayMulticastGroupSourcesRequest"
    );
  }
}

export interface DeregisterTransitGatewayMulticastGroupSourcesResult
  extends $MetadataBearer {
  __type?: "DeregisterTransitGatewayMulticastGroupSourcesResult";
  /**
   * <p>Information about the deregistered group sources.</p>
   */
  DeregisteredMulticastGroupSources?: TransitGatewayMulticastDeregisteredGroupSources;
}

export namespace DeregisterTransitGatewayMulticastGroupSourcesResult {
  export function isa(
    o: any
  ): o is DeregisterTransitGatewayMulticastGroupSourcesResult {
    return _smithy.isa(
      o,
      "DeregisterTransitGatewayMulticastGroupSourcesResult"
    );
  }
}

export interface DescribeAccountAttributesRequest {
  __type?: "DescribeAccountAttributesRequest";
  /**
   * <p>The account attribute names.</p>
   */
  AttributeNames?: Array<AccountAttributeName | string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *            and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *            Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DescribeAccountAttributesRequest {
  export function isa(o: any): o is DescribeAccountAttributesRequest {
    return _smithy.isa(o, "DescribeAccountAttributesRequest");
  }
}

export interface DescribeAccountAttributesResult extends $MetadataBearer {
  __type?: "DescribeAccountAttributesResult";
  /**
   * <p>Information about the account attributes.</p>
   */
  AccountAttributes?: Array<AccountAttribute>;
}

export namespace DescribeAccountAttributesResult {
  export function isa(o: any): o is DescribeAccountAttributesResult {
    return _smithy.isa(o, "DescribeAccountAttributesResult");
  }
}

export interface DescribeAddressesRequest {
  __type?: "DescribeAddressesRequest";
  /**
   * <p>[EC2-VPC] Information about the allocation IDs.</p>
   */
  AllocationIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>association-id</code> - [EC2-VPC] The association ID for the address.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>)
   *               or in a VPC (<code>vpc</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-id</code> - The ID of the instance the address is associated with, if any.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-border-group</code> - The location from where the IP address is advertised.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that the address is associated with, if any.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface-owner-id</code> - The AWS account ID of the owner.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with the Elastic IP address.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>public-ip</code> - The Elastic IP address.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more Elastic IP addresses.</p>
   *          <p>Default: Describes all your Elastic IP addresses.</p>
   */
  PublicIps?: Array<string>;
}

export namespace DescribeAddressesRequest {
  export function isa(o: any): o is DescribeAddressesRequest {
    return _smithy.isa(o, "DescribeAddressesRequest");
  }
}

export interface DescribeAddressesResult extends $MetadataBearer {
  __type?: "DescribeAddressesResult";
  /**
   * <p>Information about the Elastic IP addresses.</p>
   */
  Addresses?: Array<Address>;
}

export namespace DescribeAddressesResult {
  export function isa(o: any): o is DescribeAddressesResult {
    return _smithy.isa(o, "DescribeAddressesResult");
  }
}

export interface DescribeAggregateIdFormatRequest {
  __type?: "DescribeAggregateIdFormatRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DescribeAggregateIdFormatRequest {
  export function isa(o: any): o is DescribeAggregateIdFormatRequest {
    return _smithy.isa(o, "DescribeAggregateIdFormatRequest");
  }
}

export interface DescribeAggregateIdFormatResult extends $MetadataBearer {
  __type?: "DescribeAggregateIdFormatResult";
  /**
   * <p>Information about each resource's ID format.</p>
   */
  Statuses?: Array<IdFormat>;

  /**
   * <p>Indicates whether all resource types in the Region are configured to use longer IDs.
   *             This value is only <code>true</code> if all users are configured to use longer IDs for
   *             all resources types in the Region.</p>
   */
  UseLongIdsAggregated?: boolean;
}

export namespace DescribeAggregateIdFormatResult {
  export function isa(o: any): o is DescribeAggregateIdFormatResult {
    return _smithy.isa(o, "DescribeAggregateIdFormatResult");
  }
}

export interface DescribeAvailabilityZonesRequest {
  __type?: "DescribeAvailabilityZonesRequest";
  /**
   * <p>Include all Availability Zones and Local Zones regardless of your opt in status.</p>
   *          <p>If you do not use this parameter, the results include only the zones for the Regions where you have chosen the option to opt in.</p>
   */
  AllAvailabilityZones?: boolean;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>group-name</code> - For Availability Zones, use the Region name. For Local Zones,
   *           use the name of the group associated with the Local Zone (for example,
   *             <code>us-west-2-lax-1</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>message</code> - The Availability Zone or Local Zone message.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>opt-in-status</code> - The opt in status (<code>opted-in</code>, and
   *           <code>not-opted-in</code> | <code>opt-in-not-required</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>region-name</code> - The name of the Region for the Availability Zone or Local Zone (for example, <code>us-east-1</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the Availability Zone or Local Zone (<code>available</code> |
   *           <code>information</code> | <code>impaired</code> | <code>unavailable</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>zone-id</code> - The ID of the Availability Zone (for example,
   *             <code>use1-az1</code>) or the Local Zone (for example, use
   *           <code>usw2-lax1-az1</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>zone-name</code> - The name of the Availability Zone (for example,
   *             <code>us-east-1a</code>) or the Local Zone (for example, use
   *           <code>us-west-2-lax-1a</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the Availability Zones and Local Zones.</p>
   */
  ZoneIds?: Array<string>;

  /**
   * <p>The names of the Availability Zones and Local Zones.</p>
   */
  ZoneNames?: Array<string>;
}

export namespace DescribeAvailabilityZonesRequest {
  export function isa(o: any): o is DescribeAvailabilityZonesRequest {
    return _smithy.isa(o, "DescribeAvailabilityZonesRequest");
  }
}

export interface DescribeAvailabilityZonesResult extends $MetadataBearer {
  __type?: "DescribeAvailabilityZonesResult";
  /**
   * <p>Information about the Availability Zones and Local Zones.</p>
   */
  AvailabilityZones?: Array<AvailabilityZone>;
}

export namespace DescribeAvailabilityZonesResult {
  export function isa(o: any): o is DescribeAvailabilityZonesResult {
    return _smithy.isa(o, "DescribeAvailabilityZonesResult");
  }
}

export interface DescribeBundleTasksRequest {
  __type?: "DescribeBundleTasksRequest";
  /**
   * <p>The bundle task IDs.</p>
   *          <p>Default: Describes all your bundle tasks.</p>
   */
  BundleIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>bundle-id</code> - The ID of the bundle task.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>error-code</code> - If the task failed, the error code returned.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>error-message</code> - If the task failed, the error message returned.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-id</code> - The ID of the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>s3-prefix</code> - The beginning of the AMI name.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> |
   *            <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>update-time</code> - The time of the most recent update for the task.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;
}

export namespace DescribeBundleTasksRequest {
  export function isa(o: any): o is DescribeBundleTasksRequest {
    return _smithy.isa(o, "DescribeBundleTasksRequest");
  }
}

export interface DescribeBundleTasksResult extends $MetadataBearer {
  __type?: "DescribeBundleTasksResult";
  /**
   * <p>Information about the bundle tasks.</p>
   */
  BundleTasks?: Array<BundleTask>;
}

export namespace DescribeBundleTasksResult {
  export function isa(o: any): o is DescribeBundleTasksResult {
    return _smithy.isa(o, "DescribeBundleTasksResult");
  }
}

export interface DescribeByoipCidrsRequest {
  __type?: "DescribeByoipCidrsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults: number | undefined;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeByoipCidrsRequest {
  export function isa(o: any): o is DescribeByoipCidrsRequest {
    return _smithy.isa(o, "DescribeByoipCidrsRequest");
  }
}

export interface DescribeByoipCidrsResult extends $MetadataBearer {
  __type?: "DescribeByoipCidrsResult";
  /**
   * <p>Information about your address ranges.</p>
   */
  ByoipCidrs?: Array<ByoipCidr>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeByoipCidrsResult {
  export function isa(o: any): o is DescribeByoipCidrsResult {
    return _smithy.isa(o, "DescribeByoipCidrsResult");
  }
}

export interface DescribeCapacityReservationsRequest {
  __type?: "DescribeCapacityReservationsRequest";
  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeCapacityReservationsRequest {
  export function isa(o: any): o is DescribeCapacityReservationsRequest {
    return _smithy.isa(o, "DescribeCapacityReservationsRequest");
  }
}

export interface DescribeCapacityReservationsResult extends $MetadataBearer {
  __type?: "DescribeCapacityReservationsResult";
  /**
   * <p>Information about the Capacity Reservations.</p>
   */
  CapacityReservations?: Array<CapacityReservation>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeCapacityReservationsResult {
  export function isa(o: any): o is DescribeCapacityReservationsResult {
    return _smithy.isa(o, "DescribeCapacityReservationsResult");
  }
}

export interface DescribeClassicLinkInstancesRequest {
  __type?: "DescribeClassicLinkInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   *                       <p>
   *                   <code>group-id</code> - The ID of a VPC security group that's associated with the instance.</p>
   *                   </li>
   *             <li>
   * 				           <p>
   *                   <code>instance-id</code> - The ID of the instance.</p>
   * 			         </li>
   *             <li>
   * 			            <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 			         </li>
   *             <li>
   *
   * 				           <p>
   * 					             <code>vpc-id</code> - The ID of the VPC to which the instance is
   * 					linked.</p>
   *
   * 				           <p>
   *                   <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p>
   *
   * 			         </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more instance IDs. Must be instances linked to a VPC through ClassicLink.</p>
   */
  InstanceIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   * 		       <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeClassicLinkInstancesRequest {
  export function isa(o: any): o is DescribeClassicLinkInstancesRequest {
    return _smithy.isa(o, "DescribeClassicLinkInstancesRequest");
  }
}

export interface DescribeClassicLinkInstancesResult extends $MetadataBearer {
  __type?: "DescribeClassicLinkInstancesResult";
  /**
   * <p>Information about one or more linked EC2-Classic instances.</p>
   */
  Instances?: Array<ClassicLinkInstance>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeClassicLinkInstancesResult {
  export function isa(o: any): o is DescribeClassicLinkInstancesResult {
    return _smithy.isa(o, "DescribeClassicLinkInstancesResult");
  }
}

export interface DescribeClientVpnAuthorizationRulesRequest {
  __type?: "DescribeClientVpnAuthorizationRulesRequest";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   * 	        <ul>
   *             <li>
   *                <p>
   *                   <code>description</code> - The description of the authorization rule.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>destination-cidr</code> - The CIDR of the network to which the authorization rule
   *                     applies.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>group-id</code> - The ID of the Active Directory group to which the authorization rule grants access.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnAuthorizationRulesRequest {
  export function isa(o: any): o is DescribeClientVpnAuthorizationRulesRequest {
    return _smithy.isa(o, "DescribeClientVpnAuthorizationRulesRequest");
  }
}

export interface DescribeClientVpnAuthorizationRulesResult
  extends $MetadataBearer {
  __type?: "DescribeClientVpnAuthorizationRulesResult";
  /**
   * <p>Information about the authorization rules.</p>
   */
  AuthorizationRules?: Array<AuthorizationRule>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnAuthorizationRulesResult {
  export function isa(o: any): o is DescribeClientVpnAuthorizationRulesResult {
    return _smithy.isa(o, "DescribeClientVpnAuthorizationRulesResult");
  }
}

export interface DescribeClientVpnConnectionsRequest {
  __type?: "DescribeClientVpnConnectionsRequest";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   * 	        <ul>
   *             <li>
   *                <p>
   *                   <code>connection-id</code> - The ID of the connection.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>username</code> - For Active Directory client authentication, the user name of the
   *                     client who established the client connection.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnConnectionsRequest {
  export function isa(o: any): o is DescribeClientVpnConnectionsRequest {
    return _smithy.isa(o, "DescribeClientVpnConnectionsRequest");
  }
}

export interface DescribeClientVpnConnectionsResult extends $MetadataBearer {
  __type?: "DescribeClientVpnConnectionsResult";
  /**
   * <p>Information about the active and terminated client connections.</p>
   */
  Connections?: Array<ClientVpnConnection>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnConnectionsResult {
  export function isa(o: any): o is DescribeClientVpnConnectionsResult {
    return _smithy.isa(o, "DescribeClientVpnConnectionsResult");
  }
}

export interface DescribeClientVpnEndpointsRequest {
  __type?: "DescribeClientVpnEndpointsRequest";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   * 	        <ul>
   *             <li>
   *                <p>
   *                   <code>endpoint-id</code> - The ID of the Client VPN endpoint.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transport-protocol</code> - The transport protocol (<code>tcp</code> |
   *                     <code>udp</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnEndpointsRequest {
  export function isa(o: any): o is DescribeClientVpnEndpointsRequest {
    return _smithy.isa(o, "DescribeClientVpnEndpointsRequest");
  }
}

export interface DescribeClientVpnEndpointsResult extends $MetadataBearer {
  __type?: "DescribeClientVpnEndpointsResult";
  /**
   * <p>Information about the Client VPN endpoints.</p>
   */
  ClientVpnEndpoints?: Array<ClientVpnEndpoint>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnEndpointsResult {
  export function isa(o: any): o is DescribeClientVpnEndpointsResult {
    return _smithy.isa(o, "DescribeClientVpnEndpointsResult");
  }
}

export interface DescribeClientVpnRoutesRequest {
  __type?: "DescribeClientVpnRoutesRequest";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   * 	        <ul>
   *             <li>
   *                <p>
   *                   <code>destination-cidr</code> - The CIDR of the route destination.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>origin</code> - How the route was associated with the Client VPN endpoint (<code>associate</code> | <code>add-route</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>target-subnet</code> - The ID of the subnet through which traffic is routed.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnRoutesRequest {
  export function isa(o: any): o is DescribeClientVpnRoutesRequest {
    return _smithy.isa(o, "DescribeClientVpnRoutesRequest");
  }
}

export interface DescribeClientVpnRoutesResult extends $MetadataBearer {
  __type?: "DescribeClientVpnRoutesResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the Client VPN endpoint routes.</p>
   */
  Routes?: Array<ClientVpnRoute>;
}

export namespace DescribeClientVpnRoutesResult {
  export function isa(o: any): o is DescribeClientVpnRoutesResult {
    return _smithy.isa(o, "DescribeClientVpnRoutesResult");
  }
}

export interface DescribeClientVpnTargetNetworksRequest {
  __type?: "DescribeClientVpnTargetNetworksRequest";
  /**
   * <p>The IDs of the target network associations.</p>
   */
  AssociationIds?: Array<string>;

  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   * 	        <ul>
   *             <li>
   *                <p>
   *                   <code>association-id</code> - The ID of the association.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>target-network-id</code> - The ID of the subnet specified as the target network.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vpc-id</code> - The ID of the VPC in which the target network is located.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnTargetNetworksRequest {
  export function isa(o: any): o is DescribeClientVpnTargetNetworksRequest {
    return _smithy.isa(o, "DescribeClientVpnTargetNetworksRequest");
  }
}

export interface DescribeClientVpnTargetNetworksResult extends $MetadataBearer {
  __type?: "DescribeClientVpnTargetNetworksResult";
  /**
   * <p>Information about the associated target networks.</p>
   */
  ClientVpnTargetNetworks?: Array<TargetNetwork>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeClientVpnTargetNetworksResult {
  export function isa(o: any): o is DescribeClientVpnTargetNetworksResult {
    return _smithy.isa(o, "DescribeClientVpnTargetNetworksResult");
  }
}

export interface DescribeCoipPoolsRequest {
  __type?: "DescribeCoipPoolsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters. The following are the possible values:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>coip-pool.pool-id</code>
   *                </p>
   *             </li>
   *          </ul>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>coip-pool.local-gateway-route-table-id</code>
   *                </p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the address pools.</p>
   */
  PoolIds?: Array<string>;
}

export namespace DescribeCoipPoolsRequest {
  export function isa(o: any): o is DescribeCoipPoolsRequest {
    return _smithy.isa(o, "DescribeCoipPoolsRequest");
  }
}

export interface DescribeCoipPoolsResult extends $MetadataBearer {
  __type?: "DescribeCoipPoolsResult";
  /**
   * <p>Information about the address pools.</p>
   */
  CoipPools?: Array<CoipPool>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeCoipPoolsResult {
  export function isa(o: any): o is DescribeCoipPoolsResult {
    return _smithy.isa(o, "DescribeCoipPoolsResult");
  }
}

export interface DescribeConversionTasksRequest {
  __type?: "DescribeConversionTasksRequest";
  /**
   * <p>The conversion task IDs.</p>
   */
  ConversionTaskIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DescribeConversionTasksRequest {
  export function isa(o: any): o is DescribeConversionTasksRequest {
    return _smithy.isa(o, "DescribeConversionTasksRequest");
  }
}

export interface DescribeConversionTasksResult extends $MetadataBearer {
  __type?: "DescribeConversionTasksResult";
  /**
   * <p>Information about the conversion tasks.</p>
   */
  ConversionTasks?: Array<ConversionTask>;
}

export namespace DescribeConversionTasksResult {
  export function isa(o: any): o is DescribeConversionTasksResult {
    return _smithy.isa(o, "DescribeConversionTasksResult");
  }
}

/**
 * <p>Contains the parameters for DescribeCustomerGateways.</p>
 */
export interface DescribeCustomerGatewaysRequest {
  __type?: "DescribeCustomerGatewaysRequest";
  /**
   * <p>One or more customer gateway IDs.</p>
   *         <p>Default: Describes all your customer gateways.</p>
   */
  CustomerGatewayIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>customer-gateway-id</code> - The ID of the customer gateway.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ip-address</code> - The IP address of the customer gateway's Internet-routable external interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>type</code> - The type of customer gateway. Currently, the only supported type is <code>ipsec.1</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;
}

export namespace DescribeCustomerGatewaysRequest {
  export function isa(o: any): o is DescribeCustomerGatewaysRequest {
    return _smithy.isa(o, "DescribeCustomerGatewaysRequest");
  }
}

/**
 * <p>Contains the output of DescribeCustomerGateways.</p>
 */
export interface DescribeCustomerGatewaysResult extends $MetadataBearer {
  __type?: "DescribeCustomerGatewaysResult";
  /**
   * <p>Information about one or more customer gateways.</p>
   */
  CustomerGateways?: Array<CustomerGateway>;
}

export namespace DescribeCustomerGatewaysResult {
  export function isa(o: any): o is DescribeCustomerGatewaysResult {
    return _smithy.isa(o, "DescribeCustomerGatewaysResult");
  }
}

export interface DescribeDhcpOptionsRequest {
  __type?: "DescribeDhcpOptionsRequest";
  /**
   * <p>The IDs of one or more DHCP options sets.</p>
   * 		       <p>Default: Describes all your DHCP options sets.</p>
   */
  DhcpOptionsIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 		             <p>
   *                   <code>dhcp-options-id</code> - The ID of a DHCP options set.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>value</code> - The value for one of the options.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the DHCP options set.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 		          </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeDhcpOptionsRequest {
  export function isa(o: any): o is DescribeDhcpOptionsRequest {
    return _smithy.isa(o, "DescribeDhcpOptionsRequest");
  }
}

export interface DescribeDhcpOptionsResult extends $MetadataBearer {
  __type?: "DescribeDhcpOptionsResult";
  /**
   * <p>Information about one or more DHCP options sets.</p>
   */
  DhcpOptions?: Array<DhcpOptions>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeDhcpOptionsResult {
  export function isa(o: any): o is DescribeDhcpOptionsResult {
    return _smithy.isa(o, "DescribeDhcpOptionsResult");
  }
}

export interface DescribeEgressOnlyInternetGatewaysRequest {
  __type?: "DescribeEgressOnlyInternetGatewaysRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more egress-only internet gateway IDs.</p>
   */
  EgressOnlyInternetGatewayIds?: Array<string>;

  /**
   * <p>One or more filters.</p>
   *     	    <ul>
   *             <li>
   *     			        <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *     		      </li>
   *             <li>
   *     			        <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *     		      </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeEgressOnlyInternetGatewaysRequest {
  export function isa(o: any): o is DescribeEgressOnlyInternetGatewaysRequest {
    return _smithy.isa(o, "DescribeEgressOnlyInternetGatewaysRequest");
  }
}

export interface DescribeEgressOnlyInternetGatewaysResult
  extends $MetadataBearer {
  __type?: "DescribeEgressOnlyInternetGatewaysResult";
  /**
   * <p>Information about the egress-only internet gateways.</p>
   */
  EgressOnlyInternetGateways?: Array<EgressOnlyInternetGateway>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeEgressOnlyInternetGatewaysResult {
  export function isa(o: any): o is DescribeEgressOnlyInternetGatewaysResult {
    return _smithy.isa(o, "DescribeEgressOnlyInternetGatewaysResult");
  }
}

export interface DescribeElasticGpusRequest {
  __type?: "DescribeElasticGpusRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The Elastic Graphics accelerator IDs.</p>
   */
  ElasticGpuIds?: Array<string>;

  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>availability-zone</code> - The Availability Zone in which the
   *                     Elastic Graphics accelerator resides.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>elastic-gpu-health</code> - The status of the Elastic Graphics accelerator
   *                         (<code>OK</code> | <code>IMPAIRED</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>elastic-gpu-state</code> - The state of the Elastic Graphics accelerator
   *                         (<code>ATTACHED</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>elastic-gpu-type</code> - The type of Elastic Graphics accelerator; for example,
   *                         <code>eg1.medium</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-id</code> - The ID of the instance to which the
   *                     Elastic Graphics accelerator is associated.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned <code>NextToken</code> value. This value
   *             can be between 5 and 1000.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeElasticGpusRequest {
  export function isa(o: any): o is DescribeElasticGpusRequest {
    return _smithy.isa(o, "DescribeElasticGpusRequest");
  }
}

export interface DescribeElasticGpusResult extends $MetadataBearer {
  __type?: "DescribeElasticGpusResult";
  /**
   * <p>Information about the Elastic Graphics accelerators.</p>
   */
  ElasticGpuSet?: Array<ElasticGpus>;

  /**
   * <p>The total number of items to return. If the total number of items available is more
   *             than the value specified in max-items then a Next-Token will be provided in the output
   *             that you can use to resume pagination.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to use to retrieve the next page of results. This value is
   *                 <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeElasticGpusResult {
  export function isa(o: any): o is DescribeElasticGpusResult {
    return _smithy.isa(o, "DescribeElasticGpusResult");
  }
}

export interface DescribeExportImageTasksRequest {
  __type?: "DescribeExportImageTasksRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the export image tasks.</p>
   */
  ExportImageTaskIds?: Array<string>;

  /**
   * <p>Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>,
   *     <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call.</p>
   */
  MaxResults?: number;

  /**
   * <p>A token that indicates the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeExportImageTasksRequest {
  export function isa(o: any): o is DescribeExportImageTasksRequest {
    return _smithy.isa(o, "DescribeExportImageTasksRequest");
  }
}

export interface DescribeExportImageTasksResult extends $MetadataBearer {
  __type?: "DescribeExportImageTasksResult";
  /**
   * <p>Information about the export image tasks.</p>
   */
  ExportImageTasks?: Array<ExportImageTask>;

  /**
   * <p>The token to use to get the next page of results. This value is <code>null</code> when there are no more results
   *    to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeExportImageTasksResult {
  export function isa(o: any): o is DescribeExportImageTasksResult {
    return _smithy.isa(o, "DescribeExportImageTasksResult");
  }
}

export interface DescribeExportTasksRequest {
  __type?: "DescribeExportTasksRequest";
  /**
   * <p>The export task IDs.</p>
   */
  ExportTaskIds?: Array<string>;

  /**
   * <p>the filters for the export tasks.</p>
   */
  Filters?: Array<Filter>;
}

export namespace DescribeExportTasksRequest {
  export function isa(o: any): o is DescribeExportTasksRequest {
    return _smithy.isa(o, "DescribeExportTasksRequest");
  }
}

export interface DescribeExportTasksResult extends $MetadataBearer {
  __type?: "DescribeExportTasksResult";
  /**
   * <p>Information about the export tasks.</p>
   */
  ExportTasks?: Array<ExportTask>;
}

export namespace DescribeExportTasksResult {
  export function isa(o: any): o is DescribeExportTasksResult {
    return _smithy.isa(o, "DescribeExportTasksResult");
  }
}

/**
 * <p>Describes fast snapshot restores for a snapshot.</p>
 */
export interface DescribeFastSnapshotRestoreSuccessItem {
  __type?: "DescribeFastSnapshotRestoreSuccessItem";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The time at which fast snapshot restores entered the <code>disabled</code> state.</p>
   */
  DisabledTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>disabling</code> state.</p>
   */
  DisablingTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>enabled</code> state.</p>
   */
  EnabledTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>enabling</code> state.</p>
   */
  EnablingTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>optimizing</code> state.</p>
   */
  OptimizingTime?: Date;

  /**
   * <p>The alias of the snapshot owner.</p>
   */
  OwnerAlias?: string;

  /**
   * <p>The ID of the AWS account that owns the snapshot.</p>
   */
  OwnerId?: string;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The state of fast snapshot restores.</p>
   */
  State?: FastSnapshotRestoreStateCode | string;

  /**
   * <p>The reason for the state transition. The possible values are as follows:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or
   *           <code>disabling</code>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned
   *           to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p>
   *             </li>
   *          </ul>
   */
  StateTransitionReason?: string;
}

export namespace DescribeFastSnapshotRestoreSuccessItem {
  export function isa(o: any): o is DescribeFastSnapshotRestoreSuccessItem {
    return _smithy.isa(o, "DescribeFastSnapshotRestoreSuccessItem");
  }
}

export interface DescribeFastSnapshotRestoresRequest {
  __type?: "DescribeFastSnapshotRestoresRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code>: The Availability Zone of the snapshot.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code>: The ID of the AWS account that owns the snapshot.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>snapshot-id</code>: The ID of the snapshot.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code>: The state of fast snapshot restores for the snapshot
   *          (<code>enabling</code> |
   *           <code>optimizing</code> |
   *           <code>enabled</code> |
   *           <code>disabling</code> |
   *           <code>disabled</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeFastSnapshotRestoresRequest {
  export function isa(o: any): o is DescribeFastSnapshotRestoresRequest {
    return _smithy.isa(o, "DescribeFastSnapshotRestoresRequest");
  }
}

export interface DescribeFastSnapshotRestoresResult extends $MetadataBearer {
  __type?: "DescribeFastSnapshotRestoresResult";
  /**
   * <p>Information about the state of fast snapshot restores.</p>
   */
  FastSnapshotRestores?: Array<DescribeFastSnapshotRestoreSuccessItem>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeFastSnapshotRestoresResult {
  export function isa(o: any): o is DescribeFastSnapshotRestoresResult {
    return _smithy.isa(o, "DescribeFastSnapshotRestoresResult");
  }
}

/**
 * <p>Describes the instances that could not be launched by the fleet.</p>
 */
export interface DescribeFleetError {
  __type?: "DescribeFleetError";
  /**
   * <p>The error code that indicates why the instance could not be launched. For more
   *          information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.</p>
   */
  ErrorCode?: string;

  /**
   * <p>The error message that describes why the instance could not be launched. For more
   *          information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.</p>
   */
  ErrorMessage?: string;

  /**
   * <p>The launch templates and overrides that were used for launching the instances. The
   *          values that you specify in the Overrides replace the values in the launch template.</p>
   */
  LaunchTemplateAndOverrides?: LaunchTemplateAndOverridesResponse;

  /**
   * <p>Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.</p>
   */
  Lifecycle?: InstanceLifecycle | string;
}

export namespace DescribeFleetError {
  export function isa(o: any): o is DescribeFleetError {
    return _smithy.isa(o, "DescribeFleetError");
  }
}

export interface DescribeFleetHistoryRequest {
  __type?: "DescribeFleetHistoryRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The type of events to describe. By default, all events are described.</p>
   */
  EventType?: FleetEventType | string;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId: string | undefined;

  /**
   * <p>The maximum number of results to return in a single call. Specify a value between 1 and
   *          1000. The default value is 1000. To retrieve the remaining results, make another call with
   *          the returned <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The start date and time for the events, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  StartTime: Date | undefined;
}

export namespace DescribeFleetHistoryRequest {
  export function isa(o: any): o is DescribeFleetHistoryRequest {
    return _smithy.isa(o, "DescribeFleetHistoryRequest");
  }
}

export interface DescribeFleetHistoryResult extends $MetadataBearer {
  __type?: "DescribeFleetHistoryResult";
  /**
   * <p>The ID of the EC Fleet.</p>
   */
  FleetId?: string;

  /**
   * <p>Information about the events in the history of the EC2 Fleet.</p>
   */
  HistoryRecords?: Array<HistoryRecordEntry>;

  /**
   * <p>The last date and time for the events, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *          All records up to this time were retrieved.</p>
   *          <p>If <code>nextToken</code> indicates that there are more results, this value is not
   *          present.</p>
   */
  LastEvaluatedTime?: Date;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The start date and time for the events, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  StartTime?: Date;
}

export namespace DescribeFleetHistoryResult {
  export function isa(o: any): o is DescribeFleetHistoryResult {
    return _smithy.isa(o, "DescribeFleetHistoryResult");
  }
}

export interface DescribeFleetInstancesRequest {
  __type?: "DescribeFleetInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>instance-type</code> - The instance type.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId: string | undefined;

  /**
   * <p>The maximum number of results to return in a single call. Specify a value between 1 and
   *          1000. The default value is 1000. To retrieve the remaining results, make another call with
   *          the returned <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeFleetInstancesRequest {
  export function isa(o: any): o is DescribeFleetInstancesRequest {
    return _smithy.isa(o, "DescribeFleetInstancesRequest");
  }
}

export interface DescribeFleetInstancesResult extends $MetadataBearer {
  __type?: "DescribeFleetInstancesResult";
  /**
   * <p>The running instances. This list is refreshed periodically and might be out of
   *          date.</p>
   */
  ActiveInstances?: Array<ActiveInstance>;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId?: string;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeFleetInstancesResult {
  export function isa(o: any): o is DescribeFleetInstancesResult {
    return _smithy.isa(o, "DescribeFleetInstancesResult");
  }
}

/**
 * <p>Describes the instances that were launched by the fleet.</p>
 */
export interface DescribeFleetsInstances {
  __type?: "DescribeFleetsInstances";
  /**
   * <p>The IDs of the instances.</p>
   */
  InstanceIds?: Array<string>;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The launch templates and overrides that were used for launching the instances. The
   *          values that you specify in the Overrides replace the values in the launch template.</p>
   */
  LaunchTemplateAndOverrides?: LaunchTemplateAndOverridesResponse;

  /**
   * <p>Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.</p>
   */
  Lifecycle?: InstanceLifecycle | string;

  /**
   * <p>The value is <code>Windows</code> for Windows instances. Otherwise, the value is
   *          blank.</p>
   */
  Platform?: PlatformValues | string;
}

export namespace DescribeFleetsInstances {
  export function isa(o: any): o is DescribeFleetsInstances {
    return _smithy.isa(o, "DescribeFleetsInstances");
  }
}

export interface DescribeFleetsRequest {
  __type?: "DescribeFleetsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>activity-status</code> - The progress of the EC2 Fleet ( <code>error</code> |
   *                   <code>pending-fulfillment</code> | <code>pending-termination</code> |
   *                   <code>fulfilled</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>excess-capacity-termination-policy</code> - Indicates whether to terminate
   *                running instances if the target capacity is decreased below the current EC2 Fleet size
   *                   (<code>true</code> | <code>false</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fleet-state</code> - The state of the EC2 Fleet (<code>submitted</code> |
   *                   <code>active</code> | <code>deleted</code> | <code>failed</code> |
   *                   <code>deleted-running</code> | <code>deleted-terminating</code> |
   *                   <code>modifying</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>replace-unhealthy-instances</code> - Indicates whether EC2 Fleet should replace
   *                unhealthy instances (<code>true</code> | <code>false</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>type</code> - The type of request (<code>instant</code> |
   *                   <code>request</code> | <code>maintain</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The ID of the EC2 Fleets.</p>
   */
  FleetIds?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call. Specify a value between 1 and
   *          1000. The default value is 1000. To retrieve the remaining results, make another call with
   *          the returned <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeFleetsRequest {
  export function isa(o: any): o is DescribeFleetsRequest {
    return _smithy.isa(o, "DescribeFleetsRequest");
  }
}

export interface DescribeFleetsResult extends $MetadataBearer {
  __type?: "DescribeFleetsResult";
  /**
   * <p>Information about the EC2 Fleets.</p>
   */
  Fleets?: Array<FleetData>;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeFleetsResult {
  export function isa(o: any): o is DescribeFleetsResult {
    return _smithy.isa(o, "DescribeFleetsResult");
  }
}

export interface DescribeFlowLogsRequest {
  __type?: "DescribeFlowLogsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code> |
   *                     <code>FAILED</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>log-destination-type</code> - The type of destination to which the flow
   *                     log publishes data. Possible destination types include
   *                     <code>cloud-watch-logs</code> and <code>S3</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>flow-log-id</code> - The ID of the flow log.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>log-group-name</code> - The name of the log group.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>resource-id</code> - The ID of the VPC, subnet, or network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> |
   *                     <code>REJECT</code> | <code>ALL</code>).</p>
   *             </li>
   *          </ul>
   */
  Filter?: Array<Filter>;

  /**
   * <p>One or more flow log IDs.</p>
   *         <p>Constraint: Maximum of 1000 flow log IDs.</p>
   */
  FlowLogIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeFlowLogsRequest {
  export function isa(o: any): o is DescribeFlowLogsRequest {
    return _smithy.isa(o, "DescribeFlowLogsRequest");
  }
}

export interface DescribeFlowLogsResult extends $MetadataBearer {
  __type?: "DescribeFlowLogsResult";
  /**
   * <p>Information about the flow logs.</p>
   */
  FlowLogs?: Array<FlowLog>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeFlowLogsResult {
  export function isa(o: any): o is DescribeFlowLogsResult {
    return _smithy.isa(o, "DescribeFlowLogsResult");
  }
}

export interface DescribeFpgaImageAttributeRequest {
  __type?: "DescribeFpgaImageAttributeRequest";
  /**
   * <p>The AFI attribute.</p>
   */
  Attribute: FpgaImageAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AFI.</p>
   */
  FpgaImageId: string | undefined;
}

export namespace DescribeFpgaImageAttributeRequest {
  export function isa(o: any): o is DescribeFpgaImageAttributeRequest {
    return _smithy.isa(o, "DescribeFpgaImageAttributeRequest");
  }
}

export interface DescribeFpgaImageAttributeResult extends $MetadataBearer {
  __type?: "DescribeFpgaImageAttributeResult";
  /**
   * <p>Information about the attribute.</p>
   */
  FpgaImageAttribute?: FpgaImageAttribute;
}

export namespace DescribeFpgaImageAttributeResult {
  export function isa(o: any): o is DescribeFpgaImageAttributeResult {
    return _smithy.isa(o, "DescribeFpgaImageAttributeResult");
  }
}

export interface DescribeFpgaImagesRequest {
  __type?: "DescribeFpgaImagesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>create-time</code> - The creation time of the AFI.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fpga-image-id</code> - The FPGA image identifier (AFI ID).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fpga-image-global-id</code> - The global FPGA image identifier (AGFI ID).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>name</code> - The name of the AFI.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code> - The AWS account ID of the AFI owner.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>product-code</code> - The product code.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>shell-version</code> - The version of the AWS Shell that was used to create the bitstream.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the AFI (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>unavailable</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>update-time</code> - The time of the most recent update.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The AFI IDs.</p>
   */
  FpgaImageIds?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>Filters the AFI by owner. Specify an AWS account ID, <code>self</code> (owner is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code>).</p>
   */
  Owners?: Array<string>;
}

export namespace DescribeFpgaImagesRequest {
  export function isa(o: any): o is DescribeFpgaImagesRequest {
    return _smithy.isa(o, "DescribeFpgaImagesRequest");
  }
}

export interface DescribeFpgaImagesResult extends $MetadataBearer {
  __type?: "DescribeFpgaImagesResult";
  /**
   * <p>Information about the FPGA images.</p>
   */
  FpgaImages?: Array<FpgaImage>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeFpgaImagesResult {
  export function isa(o: any): o is DescribeFpgaImagesResult {
    return _smithy.isa(o, "DescribeFpgaImagesResult");
  }
}

export interface DescribeHostReservationOfferingsRequest {
  __type?: "DescribeHostReservationOfferingsRequest";
  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>instance-family</code> - The instance family of the offering (for example,
   *                         <code>m4</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>payment-option</code> - The payment option (<code>NoUpfront</code> |
   *                         <code>PartialUpfront</code> | <code>AllUpfront</code>).</p>
   *             </li>
   *          </ul>
   */
  Filter?: Array<Filter>;

  /**
   * <p>This is the maximum duration of the reservation to purchase, specified in seconds.
   *             Reservations are available in one-year and three-year terms. The number of seconds
   *             specified must be the number of seconds in a year (365x24x60x60) times one of the
   *             supported durations (1 or 3). For example, specify 94608000 for three years.</p>
   */
  MaxDuration?: number;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p>
   */
  MaxResults?: number;

  /**
   * <p>This is the minimum duration of the reservation you'd like to purchase, specified
   *             in seconds. Reservations are available in one-year and three-year terms. The number of
   *             seconds specified must be the number of seconds in a year (365x24x60x60) times one of
   *             the supported durations (1 or 3). For example, specify 31536000 for one year.</p>
   */
  MinDuration?: number;

  /**
   * <p>The token to use to retrieve the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the reservation offering.</p>
   */
  OfferingId?: string;
}

export namespace DescribeHostReservationOfferingsRequest {
  export function isa(o: any): o is DescribeHostReservationOfferingsRequest {
    return _smithy.isa(o, "DescribeHostReservationOfferingsRequest");
  }
}

export interface DescribeHostReservationOfferingsResult
  extends $MetadataBearer {
  __type?: "DescribeHostReservationOfferingsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the offerings.</p>
   */
  OfferingSet?: Array<HostOffering>;
}

export namespace DescribeHostReservationOfferingsResult {
  export function isa(o: any): o is DescribeHostReservationOfferingsResult {
    return _smithy.isa(o, "DescribeHostReservationOfferingsResult");
  }
}

export interface DescribeHostReservationsRequest {
  __type?: "DescribeHostReservationsRequest";
  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>instance-family</code> - The instance family (for example,
   *                     <code>m4</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>payment-option</code> - The payment option (<code>NoUpfront</code> |
   *                         <code>PartialUpfront</code> | <code>AllUpfront</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>state</code> - The state of the reservation (<code>payment-pending</code>
   *                     | <code>payment-failed</code> | <code>active</code> |
   *                     <code>retired</code>).</p>
   *             </li>
   *             <li>
   *         		     <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *         	   </li>
   *             <li>
   *         		     <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *         	   </li>
   *          </ul>
   */
  Filter?: Array<Filter>;

  /**
   * <p>The host reservation IDs.</p>
   */
  HostReservationIdSet?: Array<string>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to use to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeHostReservationsRequest {
  export function isa(o: any): o is DescribeHostReservationsRequest {
    return _smithy.isa(o, "DescribeHostReservationsRequest");
  }
}

export interface DescribeHostReservationsResult extends $MetadataBearer {
  __type?: "DescribeHostReservationsResult";
  /**
   * <p>Details about the reservation's configuration.</p>
   */
  HostReservationSet?: Array<HostReservation>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeHostReservationsResult {
  export function isa(o: any): o is DescribeHostReservationsResult {
    return _smithy.isa(o, "DescribeHostReservationsResult");
  }
}

export interface DescribeHostsRequest {
  __type?: "DescribeHostsRequest";
  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>auto-placement</code> - Whether auto-placement is enabled or disabled
   *                         (<code>on</code> | <code>off</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>availability-zone</code> - The Availability Zone of the
   *                     host.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>client-token</code> - The idempotency token that you provided when you
   *                     allocated the host.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>host-reservation-id</code> - The ID of the reservation assigned to
   *                     this host.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-type</code> - The instance type size that the Dedicated Host
   *                     is configured to support.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The allocation state of the Dedicated Host
   *                         (<code>available</code> | <code>under-assessment</code> |
   *                         <code>permanent-failure</code> | <code>released</code> |
   *                         <code>released-permanent-failure</code>).</p>
   *             </li>
   *             <li>
   *         		     <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *         	   </li>
   *          </ul>
   */
  Filter?: Array<Filter>;

  /**
   * <p>The IDs of the Dedicated Hosts. The IDs are used for targeted instance
   *             launches.</p>
   */
  HostIds?: Array<string>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p>
   *          <p>You cannot specify this parameter and the host IDs parameter in the same request.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to use to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeHostsRequest {
  export function isa(o: any): o is DescribeHostsRequest {
    return _smithy.isa(o, "DescribeHostsRequest");
  }
}

export interface DescribeHostsResult extends $MetadataBearer {
  __type?: "DescribeHostsResult";
  /**
   * <p>Information about the Dedicated Hosts.</p>
   */
  Hosts?: Array<Host>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeHostsResult {
  export function isa(o: any): o is DescribeHostsResult {
    return _smithy.isa(o, "DescribeHostsResult");
  }
}

export interface DescribeIamInstanceProfileAssociationsRequest {
  __type?: "DescribeIamInstanceProfileAssociationsRequest";
  /**
   * <p>The IAM instance profile associations.</p>
   */
  AssociationIds?: Array<string>;

  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                <p>
   *                   <code>instance-id</code> - The ID of the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the association (<code>associating</code> |
   *                 <code>associated</code> | <code>disassociating</code> |
   *                 <code>disassociated</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeIamInstanceProfileAssociationsRequest {
  export function isa(
    o: any
  ): o is DescribeIamInstanceProfileAssociationsRequest {
    return _smithy.isa(o, "DescribeIamInstanceProfileAssociationsRequest");
  }
}

export interface DescribeIamInstanceProfileAssociationsResult
  extends $MetadataBearer {
  __type?: "DescribeIamInstanceProfileAssociationsResult";
  /**
   * <p>Information about the IAM instance profile associations.</p>
   */
  IamInstanceProfileAssociations?: Array<IamInstanceProfileAssociation>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeIamInstanceProfileAssociationsResult {
  export function isa(
    o: any
  ): o is DescribeIamInstanceProfileAssociationsResult {
    return _smithy.isa(o, "DescribeIamInstanceProfileAssociationsResult");
  }
}

export interface DescribeIdFormatRequest {
  __type?: "DescribeIdFormatRequest";
  /**
   * <p>The type of resource: <code>bundle</code> |
   *            <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> |
   *            <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> |
   *            <code>export-task</code> | <code>flow-log</code> | <code>image</code> |
   *            <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> |
   *            <code>network-acl</code> | <code>network-acl-association</code> |
   *            <code>network-interface</code> | <code>network-interface-attachment</code> |
   *            <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> |
   *            <code>route-table-association</code> | <code>security-group</code> |
   *            <code>snapshot</code> | <code>subnet</code> |
   *            <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code>
   *            | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> |
   *            <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>
   *          </p>
   */
  Resource?: string;
}

export namespace DescribeIdFormatRequest {
  export function isa(o: any): o is DescribeIdFormatRequest {
    return _smithy.isa(o, "DescribeIdFormatRequest");
  }
}

export interface DescribeIdFormatResult extends $MetadataBearer {
  __type?: "DescribeIdFormatResult";
  /**
   * <p>Information about the ID format for the resource.</p>
   */
  Statuses?: Array<IdFormat>;
}

export namespace DescribeIdFormatResult {
  export function isa(o: any): o is DescribeIdFormatResult {
    return _smithy.isa(o, "DescribeIdFormatResult");
  }
}

export interface DescribeIdentityIdFormatRequest {
  __type?: "DescribeIdentityIdFormatRequest";
  /**
   * <p>The ARN of the principal, which can be an IAM role, IAM user, or the root user.</p>
   */
  PrincipalArn: string | undefined;

  /**
   * <p>The type of resource: <code>bundle</code> |
   *           <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> |
   *           <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> |
   *           <code>export-task</code> | <code>flow-log</code> | <code>image</code> |
   *           <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> |
   *           <code>network-acl</code> | <code>network-acl-association</code> |
   *           <code>network-interface</code> | <code>network-interface-attachment</code> |
   *           <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> |
   *           <code>route-table-association</code> | <code>security-group</code> |
   *           <code>snapshot</code> | <code>subnet</code> |
   *           <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code>
   *           | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> |
   *           <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>
   *          </p>
   */
  Resource?: string;
}

export namespace DescribeIdentityIdFormatRequest {
  export function isa(o: any): o is DescribeIdentityIdFormatRequest {
    return _smithy.isa(o, "DescribeIdentityIdFormatRequest");
  }
}

export interface DescribeIdentityIdFormatResult extends $MetadataBearer {
  __type?: "DescribeIdentityIdFormatResult";
  /**
   * <p>Information about the ID format for the resources.</p>
   */
  Statuses?: Array<IdFormat>;
}

export namespace DescribeIdentityIdFormatResult {
  export function isa(o: any): o is DescribeIdentityIdFormatResult {
    return _smithy.isa(o, "DescribeIdentityIdFormatResult");
  }
}

/**
 * <p>Contains the parameters for DescribeImageAttribute.</p>
 */
export interface DescribeImageAttributeRequest {
  __type?: "DescribeImageAttributeRequest";
  /**
   * <p>The AMI attribute.</p>
   *    	     <p>
   *             <b>Note</b>: Depending on your account privileges, the <code>blockDeviceMapping</code>
   *    		attribute may return a <code>Client.AuthFailure</code> error. If this happens, use
   *    		<a>DescribeImages</a> to get information about the block device mapping for the AMI.</p>
   */
  Attribute: ImageAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId: string | undefined;
}

export namespace DescribeImageAttributeRequest {
  export function isa(o: any): o is DescribeImageAttributeRequest {
    return _smithy.isa(o, "DescribeImageAttributeRequest");
  }
}

export interface DescribeImagesRequest {
  __type?: "DescribeImagesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Scopes the images by users with explicit launch permissions.
   * 				Specify an AWS account ID, <code>self</code> (the sender of the request),
   * 				or <code>all</code> (public AMIs).</p>
   */
  ExecutableUsers?: Array<string>;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>architecture</code> - The image architecture (<code>i386</code> |
   *             <code>x86_64</code> | <code>arm64</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates
   *           whether the Amazon EBS volume is deleted on instance termination.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for
   *           example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the EBS
   *           volume.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>block-device-mapping.volume-size</code> - The volume size of the EBS volume, in GiB.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>block-device-mapping.volume-type</code> - The volume type of the EBS volume
   *             (<code>gp2</code> | <code>io1</code> | <code>st1 </code>| <code>sc1</code> |
   *             <code>standard</code>).</p>
   *             </li>
   *             <li>
   *     		         <p>
   *     			           <code>block-device-mapping.encrypted</code> - A Boolean that indicates whether the EBS volume is encrypted.</p>
   *     	       </li>
   *             <li>
   *                <p>
   *                   <code>description</code> - The description of the image (provided during image
   *           creation).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>ena-support</code> - A Boolean that indicates whether enhanced networking
   *           with ENA is enabled.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>hypervisor</code> - The hypervisor type (<code>ovm</code> |
   *           <code>xen</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>image-id</code> - The ID of the image.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> |
   *             <code>ramdisk</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>is-public</code> - A Boolean that indicates whether the image is public.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>kernel-id</code> - The kernel ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>manifest-location</code> - The location of the image manifest.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>name</code> - The name of the AMI (provided during image creation).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-alias</code> - String value from an
   *           Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> |
   *           <code>microsoft</code>) of snapshot owners. Not to be confused with the
   *           user-configured AWS account alias, which is set from the IAM
   *           console.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code> - The AWS account ID of the image owner.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>platform</code> - The platform. To only list Windows-based AMIs, use
   *             <code>windows</code>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>product-code</code> - The product code.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>product-code.type</code> - The type of the product code (<code>devpay</code> |
   *             <code>marketplace</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>ramdisk-id</code> - The RAM disk ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> |
   *             <code>instance-store</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the image (<code>available</code> | <code>pending</code>
   *           | <code>failed</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state-reason-code</code> - The reason code for the state change.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state-reason-message</code> - The message for the state change.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>sriov-net-support</code> - A value of <code>simple</code> indicates
   *                     that enhanced networking with the Intel 82599 VF interface is enabled.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> |
   *             <code>hvm</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The image IDs.</p>
   *          <p>Default: Describes all images available to you.</p>
   */
  ImageIds?: Array<string>;

  /**
   * <p>Filters the images by the owner. Specify an AWS account ID, <code>self</code> (owner is
   *       the sender of the request), or an AWS owner alias (valid values are <code>amazon</code> |
   *         <code>aws-marketplace</code> | <code>microsoft</code>). Omitting this option returns all
   *       images for which you have launch permissions, regardless of ownership.</p>
   */
  Owners?: Array<string>;
}

export namespace DescribeImagesRequest {
  export function isa(o: any): o is DescribeImagesRequest {
    return _smithy.isa(o, "DescribeImagesRequest");
  }
}

export interface DescribeImagesResult extends $MetadataBearer {
  __type?: "DescribeImagesResult";
  /**
   * <p>Information about the images.</p>
   */
  Images?: Array<Image>;
}

export namespace DescribeImagesResult {
  export function isa(o: any): o is DescribeImagesResult {
    return _smithy.isa(o, "DescribeImagesResult");
  }
}

export interface DescribeImportImageTasksRequest {
  __type?: "DescribeImportImageTasksRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>,
   *     <code>completed</code>, <code>deleting</code>, or <code>deleted</code>.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the import image tasks.</p>
   */
  ImportTaskIds?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call.</p>
   */
  MaxResults?: number;

  /**
   * <p>A token that indicates the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeImportImageTasksRequest {
  export function isa(o: any): o is DescribeImportImageTasksRequest {
    return _smithy.isa(o, "DescribeImportImageTasksRequest");
  }
}

export interface DescribeImportImageTasksResult extends $MetadataBearer {
  __type?: "DescribeImportImageTasksResult";
  /**
   * <p>A list of zero or more import image tasks that are currently active or were completed or canceled in the
   *    previous 7 days.</p>
   */
  ImportImageTasks?: Array<ImportImageTask>;

  /**
   * <p>The token to use to get the next page of results. This value is <code>null</code> when there are no more results
   *    to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeImportImageTasksResult {
  export function isa(o: any): o is DescribeImportImageTasksResult {
    return _smithy.isa(o, "DescribeImportImageTasksResult");
  }
}

export interface DescribeImportSnapshotTasksRequest {
  __type?: "DescribeImportSnapshotTasksRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>A list of import snapshot task IDs.</p>
   */
  ImportTaskIds?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining results, make another call
   *    with the returned <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>A token that indicates the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeImportSnapshotTasksRequest {
  export function isa(o: any): o is DescribeImportSnapshotTasksRequest {
    return _smithy.isa(o, "DescribeImportSnapshotTasksRequest");
  }
}

export interface DescribeImportSnapshotTasksResult extends $MetadataBearer {
  __type?: "DescribeImportSnapshotTasksResult";
  /**
   * <p>A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the
   *    previous 7 days.</p>
   */
  ImportSnapshotTasks?: Array<ImportSnapshotTask>;

  /**
   * <p>The token to use to get the next page of results. This value is <code>null</code> when there are no more results
   *    to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeImportSnapshotTasksResult {
  export function isa(o: any): o is DescribeImportSnapshotTasksResult {
    return _smithy.isa(o, "DescribeImportSnapshotTasksResult");
  }
}

export interface DescribeInstanceAttributeRequest {
  __type?: "DescribeInstanceAttributeRequest";
  /**
   * <p>The instance attribute.</p>
   *         <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>
   */
  Attribute: InstanceAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;
}

export namespace DescribeInstanceAttributeRequest {
  export function isa(o: any): o is DescribeInstanceAttributeRequest {
    return _smithy.isa(o, "DescribeInstanceAttributeRequest");
  }
}

export interface DescribeInstanceCreditSpecificationsRequest {
  __type?: "DescribeInstanceCreditSpecificationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>instance-id</code> - The ID of the instance.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The instance IDs.</p>
   *         <p>Default: Describes all your instances.</p>
   *         <p>Constraints: Maximum 1000 explicitly specified instance IDs.</p>
   */
  InstanceIds?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned <code>NextToken</code> value. This value
   *             can be between 5 and 1000. You cannot specify this parameter and the instance IDs
   *             parameter in the same call.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceCreditSpecificationsRequest {
  export function isa(
    o: any
  ): o is DescribeInstanceCreditSpecificationsRequest {
    return _smithy.isa(o, "DescribeInstanceCreditSpecificationsRequest");
  }
}

export interface DescribeInstanceCreditSpecificationsResult
  extends $MetadataBearer {
  __type?: "DescribeInstanceCreditSpecificationsResult";
  /**
   * <p>Information about the credit option for CPU usage of an instance.</p>
   */
  InstanceCreditSpecifications?: Array<InstanceCreditSpecification>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code>
   *             when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceCreditSpecificationsResult {
  export function isa(o: any): o is DescribeInstanceCreditSpecificationsResult {
    return _smithy.isa(o, "DescribeInstanceCreditSpecificationsResult");
  }
}

export interface DescribeInstanceStatusRequest {
  __type?: "DescribeInstanceStatusRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>availability-zone</code> - The Availability Zone of the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>event.code</code> - The code for the scheduled event
   *                         (<code>instance-reboot</code> | <code>system-reboot</code> |
   *                         <code>system-maintenance</code> | <code>instance-retirement</code> |
   *                         <code>instance-stop</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>event.description</code> - A description of the event.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>event.instance-event-id</code> - The ID of the event whose date and time
   *                     you are modifying.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>event.not-after</code> - The latest end time for the scheduled event
   *                     (for example, <code>2014-09-15T17:15:20.000Z</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>event.not-before</code> - The earliest start time for the scheduled
   *                     event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>event.not-before-deadline</code> - The deadline for starting the event
   *                     (for example, <code>2014-09-15T17:15:20.000Z</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-state-code</code> - The code for the instance state, as a
   *                     16-bit unsigned integer. The high byte is used for internal purposes and should
   *                     be ignored. The low byte is set based on the state represented. The valid values
   *                     are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64
   *                     (stopping), and 80 (stopped).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-state-name</code> - The state of the instance
   *                         (<code>pending</code> | <code>running</code> | <code>shutting-down</code> |
   *                         <code>terminated</code> | <code>stopping</code> |
   *                     <code>stopped</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-status.reachability</code> - Filters on instance status where
   *                     the name is <code>reachability</code> (<code>passed</code> | <code>failed</code>
   *                     | <code>initializing</code> | <code>insufficient-data</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-status.status</code> - The status of the instance
   *                         (<code>ok</code> | <code>impaired</code> | <code>initializing</code> |
   *                         <code>insufficient-data</code> | <code>not-applicable</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>system-status.reachability</code> - Filters on system status where the
   *                     name is <code>reachability</code> (<code>passed</code> | <code>failed</code> |
   *                         <code>initializing</code> | <code>insufficient-data</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>system-status.status</code> - The system status of the instance
   *                         (<code>ok</code> | <code>impaired</code> | <code>initializing</code> |
   *                         <code>insufficient-data</code> | <code>not-applicable</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>When <code>true</code>, includes the health status for all instances. When
   *                 <code>false</code>, includes the health status for running instances only.</p>
   *         <p>Default: <code>false</code>
   *         </p>
   */
  IncludeAllInstances?: boolean;

  /**
   * <p>The instance IDs.</p>
   *         <p>Default: Describes all your instances.</p>
   *         <p>Constraints: Maximum 100 explicitly specified instance IDs.</p>
   */
  InstanceIds?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned <code>NextToken</code> value. This value
   *             can be between 5 and 1000. You cannot specify this parameter and the instance IDs
   *             parameter in the same call.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceStatusRequest {
  export function isa(o: any): o is DescribeInstanceStatusRequest {
    return _smithy.isa(o, "DescribeInstanceStatusRequest");
  }
}

export interface DescribeInstanceStatusResult extends $MetadataBearer {
  __type?: "DescribeInstanceStatusResult";
  /**
   * <p>Information about the status of the instances.</p>
   */
  InstanceStatuses?: Array<InstanceStatus>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code>
   *             when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceStatusResult {
  export function isa(o: any): o is DescribeInstanceStatusResult {
    return _smithy.isa(o, "DescribeInstanceStatusResult");
  }
}

export interface DescribeInstanceTypeOfferingsRequest {
  __type?: "DescribeInstanceTypeOfferingsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *          and provides an error response. If you have the required permissions, the error response is
   *          <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>location</code> - This depends on the location type. For example, if the location type is
   *       <code>region</code> (default), the location is the Region code (for example, <code>us-east-2</code>.)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-type</code> - The instance type.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The location type.</p>
   */
  LocationType?: LocationType | string;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results
   *          can be seen by sending another request with the next token value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceTypeOfferingsRequest {
  export function isa(o: any): o is DescribeInstanceTypeOfferingsRequest {
    return _smithy.isa(o, "DescribeInstanceTypeOfferingsRequest");
  }
}

export interface DescribeInstanceTypeOfferingsResult extends $MetadataBearer {
  __type?: "DescribeInstanceTypeOfferingsResult";
  /**
   * <p>The instance types offered.</p>
   */
  InstanceTypeOfferings?: Array<InstanceTypeOffering>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there
   *          are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceTypeOfferingsResult {
  export function isa(o: any): o is DescribeInstanceTypeOfferingsResult {
    return _smithy.isa(o, "DescribeInstanceTypeOfferingsResult");
  }
}

export interface DescribeInstanceTypesRequest {
  __type?: "DescribeInstanceTypesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *          and provides an error response. If you have the required permissions, the error response is
   *          <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. Filter names and values are case-sensitive.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>auto-recovery-supported</code> - Indicates whether auto recovery is supported. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>bare-metal</code> - Indicates whether it is a bare metal instance type. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>burstable-performance-supported</code> - Indicates whether it is a burstable performance instance
   *      type. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>current-generation</code> - Indicates whether this instance type is the latest generation instance type
   *      of an instance family. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>ebs-info.ebs-optimized-support</code> - Indicates whether the instance type is
   *      EBS-optimized. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>ebs-info.encryption-support</code> - Indicates whether EBS encryption is supported. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>free-tier-eligible</code> - Indicates whether the instance type is eligible to use in the free
   *      tier. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>hibernation-supported</code> - Indicates whether On-Demand hibernation is supported. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>hypervisor</code> - The hypervisor used. (<code>nitro</code> | <code>xen</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-storage-info.disk.count</code> - The number of local disks.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-storage-info.disk.size-in-gb</code> - The storage size of each instance storage disk, in
   *      GB.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-storage-info.disk.type</code> - The storage technology for the local instance storage disks.
   *       (<code>hdd</code> | <code>ssd</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-storage-info.total-size-in-gb</code> - The total amount of storage available from all local
   *      instance storage, in GB.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-storage-supported</code> - Indicates whether the instance type has local instance
   *      storage. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>memory-info.size-in-mib</code> - The memory size.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-info.ena-support</code> - Indicates whether Elastic Network Adapter (ENA) is supported or
   *      required. (<code>required</code> | <code>supported</code> | <code>unsupported</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-info.ipv4-addresses-per-interface</code> - The maximum number of private IPv4 addresses per
   *      network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-info.ipv6-addresses-per-interface</code> - The maximum number of private IPv6 addresses per
   *      network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-info.ipv6-supported</code> - Indicates whether the instance type supports IPv6. (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-info.maximum-network-interfaces</code> - The maximum number of network interfaces per
   *      instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-info.network-performance</code> - Describes the network performance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>processor-info.sustained-clock-speed-in-ghz</code> - The CPU clock speed, in GHz.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vcpu-info.default-cores</code> - The default number of cores for the instance type.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vcpu-info.default-threads-per-core</code> - The default number of threads per core for the instance
   *      type.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vcpu-info.default-vcpus</code> - The default number of vCPUs for the instance type.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The instance types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute
   *     Cloud User Guide</i>.</p>
   */
  InstanceTypes?: Array<_InstanceType | string>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results
   *          can be seen by sending another request with the next token value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceTypesRequest {
  export function isa(o: any): o is DescribeInstanceTypesRequest {
    return _smithy.isa(o, "DescribeInstanceTypesRequest");
  }
}

export interface DescribeInstanceTypesResult extends $MetadataBearer {
  __type?: "DescribeInstanceTypesResult";
  /**
   * <p>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute
   *     Cloud User Guide</i>.</p>
   */
  InstanceTypes?: Array<InstanceTypeInfo>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there
   *          are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstanceTypesResult {
  export function isa(o: any): o is DescribeInstanceTypesResult {
    return _smithy.isa(o, "DescribeInstanceTypesResult");
  }
}

export interface DescribeInstancesRequest {
  __type?: "DescribeInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>affinity</code> - The affinity setting for an instance running on a
   *                     Dedicated Host (<code>default</code> | <code>host</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>architecture</code> - The instance architecture (<code>i386</code> |
   *                         <code>x86_64</code> | <code>arm64</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>availability-zone</code> - The Availability Zone of the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>block-device-mapping.attach-time</code> - The attach time for an EBS
   *                     volume mapped to the instance, for example,
   *                         <code>2010-09-15T17:15:20.000Z</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>block-device-mapping.delete-on-termination</code> - A Boolean that
   *                     indicates whether the EBS volume is deleted on instance termination.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>block-device-mapping.device-name</code> - The device name specified in the
   *                     block device mapping (for example, <code>/dev/sdh</code> or
   *                     <code>xvdh</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>block-device-mapping.status</code> - The status for the EBS volume
   *                         (<code>attaching</code> | <code>attached</code> | <code>detaching</code> |
   *                         <code>detached</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>block-device-mapping.volume-id</code> - The volume ID of the EBS
   *                     volume.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>client-token</code> - The idempotency token you provided when you launched
   *                     the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>dns-name</code> - The public DNS name of the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>group-id</code> - The ID of the security group for the instance.
   *                     EC2-Classic only.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>group-name</code> - The name of the security group for the instance.
   *                     EC2-Classic only.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>hibernation-options.configured</code> - A Boolean that indicates whether
   *                     the instance is enabled for hibernation. A value of <code>true</code> means that
   *                     the instance is enabled for hibernation. </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>host-id</code> - The ID of the Dedicated Host on which the instance is
   *                     running, if applicable.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>hypervisor</code> - The hypervisor type of the instance
   *                         (<code>ovm</code> | <code>xen</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>iam-instance-profile.arn</code> - The instance profile associated with
   *                     the instance. Specified as an ARN.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>image-id</code> - The ID of the image used to launch the
   *                     instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-id</code> - The ID of the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or
   *                     a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-state-code</code> - The state of the instance, as a 16-bit
   *                     unsigned integer. The high byte is used for internal purposes and should be
   *                     ignored. The low byte is set based on the state represented. The valid values
   *                     are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64
   *                     (stopping), and 80 (stopped).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-state-name</code> - The state of the instance
   *                         (<code>pending</code> | <code>running</code> | <code>shutting-down</code> |
   *                         <code>terminated</code> | <code>stopping</code> |
   *                     <code>stopped</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-type</code> - The type of instance (for example,
   *                         <code>t2.micro</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance.group-id</code> - The ID of the security group for the
   *                     instance. </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance.group-name</code> - The name of the security group for the
   *                     instance. </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ip-address</code> - The public IPv4 address of the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>kernel-id</code> - The kernel ID.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>key-name</code> - The name of the key pair used when the instance was
   *                     launched.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>launch-index</code> - When launching multiple instances, this is the
   *                     index for the instance in the launch group (for example, 0, 1, 2, and so on). </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>launch-time</code> - The time when the instance was launched.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>metadata-options.http-tokens</code> - The metadata request authorization
   *                     state (<code>optional</code> | <code>required</code>)</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>metadata-options.http-put-response-hop-limit</code> - The http metadata
   *                     request put response hop limit (integer, possible values <code>1</code> to
   *                         <code>64</code>)</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>metadata-options.http-endpoint</code> - Enable or disable metadata
   *                     access on http endpoint (<code>enabled</code> | <code>disabled</code>)</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>monitoring-state</code> - Indicates whether detailed monitoring is
   *                     enabled (<code>disabled</code> | <code>enabled</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.addresses.private-ip-address</code> - The private IPv4
   *                     address associated with the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.addresses.primary</code> - Specifies whether the IPv4
   *                     address of the network interface is the primary private IPv4 address.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.addresses.association.public-ip</code> - The ID of the
   *                     association of an Elastic IP address (IPv4) with a network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.addresses.association.ip-owner-id</code> - The owner
   *                     ID of the private IPv4 address associated with the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.association.public-ip</code> - The address of the
   *                     Elastic IP address (IPv4) bound to the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.association.ip-owner-id</code> - The owner of the
   *                     Elastic IP address (IPv4) associated with the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.association.allocation-id</code> - The allocation ID
   *                     returned when you allocated the Elastic IP address (IPv4) for your network
   *                     interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.association.association-id</code> - The association ID
   *                     returned when the network interface was associated with an IPv4 address.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.attachment.attachment-id</code> - The ID of the
   *                     interface attachment.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.attachment.instance-id</code> - The ID of the instance
   *                     to which the network interface is attached.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.attachment.instance-owner-id</code> - The owner ID of
   *                     the instance to which the network interface is attached.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.attachment.device-index</code> - The device index to
   *                     which the network interface is attached.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.attachment.status</code> - The status of the
   *                     attachment (<code>attaching</code> | <code>attached</code> |
   *                         <code>detaching</code> | <code>detached</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.attachment.attach-time</code> - The time that the
   *                     network interface was attached to an instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.attachment.delete-on-termination</code> - Specifies
   *                     whether the attachment is deleted when an instance is terminated.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.availability-zone</code> - The Availability Zone for
   *                     the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.description</code> - The description of the network
   *                     interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.group-id</code> - The ID of a security group
   *                     associated with the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.group-name</code> - The name of a security group
   *                     associated with the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address
   *                     associated with the network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.mac-address</code> - The MAC address of the network
   *                     interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.network-interface-id</code> - The ID of the network
   *                     interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.owner-id</code> - The ID of the owner of the network
   *                     interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.private-dns-name</code> - The private DNS name of the
   *                     network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.requester-id</code> - The requester ID for the network
   *                     interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.requester-managed</code> - Indicates whether the
   *                     network interface is being managed by AWS.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.status</code> - The status of the network interface
   *                         (<code>available</code>) | <code>in-use</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.source-dest-check</code> - Whether the network
   *                     interface performs source/destination checking. A value of <code>true</code>
   *                     means that checking is enabled, and <code>false</code> means that checking is
   *                     disabled. The value must be <code>false</code> for the network interface to
   *                     perform network address translation (NAT) in your VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.subnet-id</code> - The ID of the subnet for the
   *                     network interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>network-interface.vpc-id</code> - The ID of the VPC for the network
   *                     interface.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>owner-id</code> - The AWS account ID of the instance owner.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>placement-group-name</code> - The name of the placement group for the
   *                     instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>placement-partition-number</code> - The partition in which the instance is
   *                     located.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>platform</code> - The platform. To list only Windows instances, use
   *                         <code>windows</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>private-dns-name</code> - The private IPv4 DNS name of the
   *                     instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>private-ip-address</code> - The private IPv4 address of the
   *                     instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>product-code</code> - The product code associated with the AMI used to
   *                     launch the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>product-code.type</code> - The type of product code (<code>devpay</code> |
   *                         <code>marketplace</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>ramdisk-id</code> - The RAM disk ID.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>reason</code> - The reason for the current state of the instance (for
   *                     example, shows "User Initiated [date]" when you stop or terminate the instance).
   *                     Similar to the state-reason-code filter.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>requester-id</code> - The ID of the entity that launched the instance on
   *                     your behalf (for example, AWS Management Console, Auto Scaling, and so
   *                     on).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>reservation-id</code> - The ID of the instance's reservation. A
   *                     reservation ID is created any time you launch an instance. A reservation ID has
   *                     a one-to-one relationship with an instance launch request, but can be associated
   *                     with more than one instance if you launch multiple instances using the same
   *                     launch request. For example, if you launch one instance, you get one reservation
   *                     ID. If you launch ten instances using the same launch request, you also get one
   *                     reservation ID.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>root-device-name</code> - The device name of the root device volume (for
   *                     example, <code>/dev/sda1</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>root-device-type</code> - The type of the root device volume
   *                         (<code>ebs</code> | <code>instance-store</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>source-dest-check</code> - Indicates whether the instance performs
   *                     source/destination checking. A value of <code>true</code> means that checking is
   *                     enabled, and <code>false</code> means that checking is disabled. The value must
   *                     be <code>false</code> for the instance to perform network address translation
   *                     (NAT) in your VPC. </p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>spot-instance-request-id</code> - The ID of the Spot Instance
   *                     request.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>state-reason-code</code> - The reason code for the state change.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>state-reason-message</code> - A message that describes the state
   *                     change.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>subnet-id</code> - The ID of the subnet for the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> |
   *                         <code>default</code> | <code>host</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>virtualization-type</code> - The virtualization type of the instance
   *                         (<code>paravirtual</code> | <code>hvm</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The instance IDs.</p>
   *         <p>Default: Describes all your instances.</p>
   */
  InstanceIds?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned <code>NextToken</code> value. This value
   *             can be between 5 and 1000. You cannot specify this parameter and the instance IDs
   *             parameter in the same call.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeInstancesRequest {
  export function isa(o: any): o is DescribeInstancesRequest {
    return _smithy.isa(o, "DescribeInstancesRequest");
  }
}

export interface DescribeInstancesResult extends $MetadataBearer {
  __type?: "DescribeInstancesResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code>
   *             when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the reservations.</p>
   */
  Reservations?: Array<Reservation>;
}

export namespace DescribeInstancesResult {
  export function isa(o: any): o is DescribeInstancesResult {
    return _smithy.isa(o, "DescribeInstancesResult");
  }
}

export interface DescribeInternetGatewaysRequest {
  __type?: "DescribeInternetGatewaysRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>attachment.state</code> - The current state of the attachment between the gateway
   *                     and the VPC (<code>available</code>). Present only if a VPC is attached.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>attachment.vpc-id</code> - The ID of an attached VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>internet-gateway-id</code> - The ID of the Internet gateway.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the internet gateway.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more internet gateway IDs.</p>
   *         <p>Default: Describes all your internet gateways.</p>
   */
  InternetGatewayIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeInternetGatewaysRequest {
  export function isa(o: any): o is DescribeInternetGatewaysRequest {
    return _smithy.isa(o, "DescribeInternetGatewaysRequest");
  }
}

export interface DescribeInternetGatewaysResult extends $MetadataBearer {
  __type?: "DescribeInternetGatewaysResult";
  /**
   * <p>Information about one or more internet gateways.</p>
   */
  InternetGateways?: Array<InternetGateway>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeInternetGatewaysResult {
  export function isa(o: any): o is DescribeInternetGatewaysResult {
    return _smithy.isa(o, "DescribeInternetGatewaysResult");
  }
}

export interface DescribeIpv6PoolsRequest {
  __type?: "DescribeIpv6PoolsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the IPv6 address pools.</p>
   */
  PoolIds?: Array<string>;
}

export namespace DescribeIpv6PoolsRequest {
  export function isa(o: any): o is DescribeIpv6PoolsRequest {
    return _smithy.isa(o, "DescribeIpv6PoolsRequest");
  }
}

export interface DescribeIpv6PoolsResult extends $MetadataBearer {
  __type?: "DescribeIpv6PoolsResult";
  /**
   * <p>Information about the IPv6 address pools.</p>
   */
  Ipv6Pools?: Array<Ipv6Pool>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeIpv6PoolsResult {
  export function isa(o: any): o is DescribeIpv6PoolsResult {
    return _smithy.isa(o, "DescribeIpv6PoolsResult");
  }
}

export interface DescribeKeyPairsRequest {
  __type?: "DescribeKeyPairsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>fingerprint</code> - The fingerprint of the key pair.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>key-name</code> - The name of the key pair.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The key pair names.</p>
   *          <p>Default: Describes all your key pairs.</p>
   */
  KeyNames?: Array<string>;

  /**
   * <p>The IDs of the key pairs.</p>
   */
  KeyPairIds?: Array<string>;
}

export namespace DescribeKeyPairsRequest {
  export function isa(o: any): o is DescribeKeyPairsRequest {
    return _smithy.isa(o, "DescribeKeyPairsRequest");
  }
}

export interface DescribeKeyPairsResult extends $MetadataBearer {
  __type?: "DescribeKeyPairsResult";
  /**
   * <p>Information about the key pairs.</p>
   */
  KeyPairs?: Array<KeyPairInfo>;
}

export namespace DescribeKeyPairsResult {
  export function isa(o: any): o is DescribeKeyPairsResult {
    return _smithy.isa(o, "DescribeKeyPairsResult");
  }
}

export interface DescribeLaunchTemplateVersionsRequest {
  __type?: "DescribeLaunchTemplateVersionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                <p>
   *                   <code>create-time</code> - The time the launch template version was created.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ebs-optimized</code> - A boolean that indicates whether the instance
   *                     is optimized for Amazon EBS I/O.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>iam-instance-profile</code> - The ARN of the IAM instance
   *                     profile.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>image-id</code> - The ID of the AMI.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>instance-type</code> - The instance type.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>is-default-version</code> - A boolean that indicates whether the
   *                     launch template version is the default version.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>kernel-id</code> - The kernel ID.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ram-disk-id</code> - The RAM disk ID.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The ID of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned <code>NextToken</code> value. This value
   *             can be between 1 and 200.</p>
   */
  MaxResults?: number;

  /**
   * <p>The version number up to which to describe launch template versions.</p>
   */
  MaxVersion?: string;

  /**
   * <p>The version number after which to describe launch template versions.</p>
   */
  MinVersion?: string;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more versions of the launch template.</p>
   */
  Versions?: Array<string>;
}

export namespace DescribeLaunchTemplateVersionsRequest {
  export function isa(o: any): o is DescribeLaunchTemplateVersionsRequest {
    return _smithy.isa(o, "DescribeLaunchTemplateVersionsRequest");
  }
}

export interface DescribeLaunchTemplateVersionsResult extends $MetadataBearer {
  __type?: "DescribeLaunchTemplateVersionsResult";
  /**
   * <p>Information about the launch template versions.</p>
   */
  LaunchTemplateVersions?: Array<LaunchTemplateVersion>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is
   *                 <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLaunchTemplateVersionsResult {
  export function isa(o: any): o is DescribeLaunchTemplateVersionsResult {
    return _smithy.isa(o, "DescribeLaunchTemplateVersionsResult");
  }
}

export interface DescribeLaunchTemplatesRequest {
  __type?: "DescribeLaunchTemplatesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>create-time</code> - The time the launch template was created.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>launch-template-name</code> - The name of the launch template.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more launch template IDs.</p>
   */
  LaunchTemplateIds?: Array<string>;

  /**
   * <p>One or more launch template names.</p>
   */
  LaunchTemplateNames?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned <code>NextToken</code> value. This value
   *             can be between 1 and 200.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeLaunchTemplatesRequest {
  export function isa(o: any): o is DescribeLaunchTemplatesRequest {
    return _smithy.isa(o, "DescribeLaunchTemplatesRequest");
  }
}

export interface DescribeLaunchTemplatesResult extends $MetadataBearer {
  __type?: "DescribeLaunchTemplatesResult";
  /**
   * <p>Information about the launch templates.</p>
   */
  LaunchTemplates?: Array<LaunchTemplate>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is
   *                 <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLaunchTemplatesResult {
  export function isa(o: any): o is DescribeLaunchTemplatesResult {
    return _smithy.isa(o, "DescribeLaunchTemplatesResult");
  }
}

export interface DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest {
  __type?: "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the associations.</p>
   */
  LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest {
    return _smithy.isa(
      o,
      "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest"
    );
  }
}

export interface DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult
  extends $MetadataBearer {
  __type?: "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult";
  /**
   * <p>Information about the associations.</p>
   */
  LocalGatewayRouteTableVirtualInterfaceGroupAssociations?: Array<
    LocalGatewayRouteTableVirtualInterfaceGroupAssociation
  >;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult {
    return _smithy.isa(
      o,
      "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult"
    );
  }
}

export interface DescribeLocalGatewayRouteTableVpcAssociationsRequest {
  __type?: "DescribeLocalGatewayRouteTableVpcAssociationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the associations.</p>
   */
  LocalGatewayRouteTableVpcAssociationIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayRouteTableVpcAssociationsRequest {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayRouteTableVpcAssociationsRequest {
    return _smithy.isa(
      o,
      "DescribeLocalGatewayRouteTableVpcAssociationsRequest"
    );
  }
}

export interface DescribeLocalGatewayRouteTableVpcAssociationsResult
  extends $MetadataBearer {
  __type?: "DescribeLocalGatewayRouteTableVpcAssociationsResult";
  /**
   * <p>Information about the associations.</p>
   */
  LocalGatewayRouteTableVpcAssociations?: Array<
    LocalGatewayRouteTableVpcAssociation
  >;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayRouteTableVpcAssociationsResult {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayRouteTableVpcAssociationsResult {
    return _smithy.isa(
      o,
      "DescribeLocalGatewayRouteTableVpcAssociationsResult"
    );
  }
}

export interface DescribeLocalGatewayRouteTablesRequest {
  __type?: "DescribeLocalGatewayRouteTablesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the local gateway route tables.</p>
   */
  LocalGatewayRouteTableIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayRouteTablesRequest {
  export function isa(o: any): o is DescribeLocalGatewayRouteTablesRequest {
    return _smithy.isa(o, "DescribeLocalGatewayRouteTablesRequest");
  }
}

export interface DescribeLocalGatewayRouteTablesResult extends $MetadataBearer {
  __type?: "DescribeLocalGatewayRouteTablesResult";
  /**
   * <p>Information about the local gateway route tables.</p>
   */
  LocalGatewayRouteTables?: Array<LocalGatewayRouteTable>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayRouteTablesResult {
  export function isa(o: any): o is DescribeLocalGatewayRouteTablesResult {
    return _smithy.isa(o, "DescribeLocalGatewayRouteTablesResult");
  }
}

export interface DescribeLocalGatewayVirtualInterfaceGroupsRequest {
  __type?: "DescribeLocalGatewayVirtualInterfaceGroupsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the virtual interface groups.</p>
   */
  LocalGatewayVirtualInterfaceGroupIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayVirtualInterfaceGroupsRequest {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayVirtualInterfaceGroupsRequest {
    return _smithy.isa(o, "DescribeLocalGatewayVirtualInterfaceGroupsRequest");
  }
}

export interface DescribeLocalGatewayVirtualInterfaceGroupsResult
  extends $MetadataBearer {
  __type?: "DescribeLocalGatewayVirtualInterfaceGroupsResult";
  /**
   * <p>The virtual interface groups.</p>
   */
  LocalGatewayVirtualInterfaceGroups?: Array<LocalGatewayVirtualInterfaceGroup>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayVirtualInterfaceGroupsResult {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayVirtualInterfaceGroupsResult {
    return _smithy.isa(o, "DescribeLocalGatewayVirtualInterfaceGroupsResult");
  }
}

export interface DescribeLocalGatewayVirtualInterfacesRequest {
  __type?: "DescribeLocalGatewayVirtualInterfacesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the virtual interfaces.</p>
   */
  LocalGatewayVirtualInterfaceIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayVirtualInterfacesRequest {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayVirtualInterfacesRequest {
    return _smithy.isa(o, "DescribeLocalGatewayVirtualInterfacesRequest");
  }
}

export interface DescribeLocalGatewayVirtualInterfacesResult
  extends $MetadataBearer {
  __type?: "DescribeLocalGatewayVirtualInterfacesResult";
  /**
   * <p>Information about the virtual interfaces.</p>
   */
  LocalGatewayVirtualInterfaces?: Array<LocalGatewayVirtualInterface>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewayVirtualInterfacesResult {
  export function isa(
    o: any
  ): o is DescribeLocalGatewayVirtualInterfacesResult {
    return _smithy.isa(o, "DescribeLocalGatewayVirtualInterfacesResult");
  }
}

export interface DescribeLocalGatewaysRequest {
  __type?: "DescribeLocalGatewaysRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the local gateways.</p>
   */
  LocalGatewayIds?: Array<string>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewaysRequest {
  export function isa(o: any): o is DescribeLocalGatewaysRequest {
    return _smithy.isa(o, "DescribeLocalGatewaysRequest");
  }
}

export interface DescribeLocalGatewaysResult extends $MetadataBearer {
  __type?: "DescribeLocalGatewaysResult";
  /**
   * <p>Information about the local gateways.</p>
   */
  LocalGateways?: Array<LocalGateway>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeLocalGatewaysResult {
  export function isa(o: any): o is DescribeLocalGatewaysResult {
    return _smithy.isa(o, "DescribeLocalGatewaysResult");
  }
}

export interface DescribeMovingAddressesRequest {
  __type?: "DescribeMovingAddressesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>moving-status</code> - The status of the Elastic IP address
   *           (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining
   *       results of the initial request can be seen by sending another request with the returned
   *       <code>NextToken</code> value. This value can be between 5 and 1000; if
   *       <code>MaxResults</code> is given a value outside of this range, an error is returned.</p>
   *          <p>Default: If no value is provided, the default is 1000.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more Elastic IP addresses.</p>
   */
  PublicIps?: Array<string>;
}

export namespace DescribeMovingAddressesRequest {
  export function isa(o: any): o is DescribeMovingAddressesRequest {
    return _smithy.isa(o, "DescribeMovingAddressesRequest");
  }
}

export interface DescribeMovingAddressesResult extends $MetadataBearer {
  __type?: "DescribeMovingAddressesResult";
  /**
   * <p>The status for each Elastic IP address.</p>
   */
  MovingAddressStatuses?: Array<MovingAddressStatus>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeMovingAddressesResult {
  export function isa(o: any): o is DescribeMovingAddressesResult {
    return _smithy.isa(o, "DescribeMovingAddressesResult");
  }
}

export interface DescribeNatGatewaysRequest {
  __type?: "DescribeNatGatewaysRequest";
  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>nat-gateway-id</code> - The ID of the NAT gateway.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the NAT gateway (<code>pending</code> |
   *               <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</p>
   *             </li>
   *             <li>
   * 		             <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 		          </li>
   *             <li>
   * 			            <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 		          </li>
   *             <li>
   *                <p>
   *                   <code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</p>
   *             </li>
   *          </ul>
   */
  Filter?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>One or more NAT gateway IDs.</p>
   */
  NatGatewayIds?: Array<string>;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeNatGatewaysRequest {
  export function isa(o: any): o is DescribeNatGatewaysRequest {
    return _smithy.isa(o, "DescribeNatGatewaysRequest");
  }
}

export interface DescribeNatGatewaysResult extends $MetadataBearer {
  __type?: "DescribeNatGatewaysResult";
  /**
   * <p>Information about the NAT gateways.</p>
   */
  NatGateways?: Array<NatGateway>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeNatGatewaysResult {
  export function isa(o: any): o is DescribeNatGatewaysResult {
    return _smithy.isa(o, "DescribeNatGatewaysResult");
  }
}

export interface DescribeNetworkAclsRequest {
  __type?: "DescribeNetworkAclsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 		             <p>
   *                   <code>association.association-id</code> - The ID of an association ID for the ACL.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.cidr</code> - The IPv4 CIDR range specified in the entry.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p>
   * 		          </li>
   *             <li>
   *                   <p>
   *                   <code>entry.ipv6-cidr</code> - The IPv6 CIDR range specified in the entry.</p>
   *                </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.port-range.from</code> - The start of the port range specified in the entry. </p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.port-range.to</code> - The end of the port range specified in the entry. </p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>entry.rule-number</code> - The number of an entry (in other words, rule) in
   *                     the set of ACL entries.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>network-acl-id</code> - The ID of the network ACL.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the network ACL.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>vpc-id</code> - The ID of the VPC for the network ACL.</p>
   * 		          </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>One or more network ACL IDs.</p>
   * 		       <p>Default: Describes all your network ACLs.</p>
   */
  NetworkAclIds?: Array<string>;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeNetworkAclsRequest {
  export function isa(o: any): o is DescribeNetworkAclsRequest {
    return _smithy.isa(o, "DescribeNetworkAclsRequest");
  }
}

export interface DescribeNetworkAclsResult extends $MetadataBearer {
  __type?: "DescribeNetworkAclsResult";
  /**
   * <p>Information about one or more network ACLs.</p>
   */
  NetworkAcls?: Array<NetworkAcl>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeNetworkAclsResult {
  export function isa(o: any): o is DescribeNetworkAclsResult {
    return _smithy.isa(o, "DescribeNetworkAclsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeNetworkInterfaceAttribute.</p>
 */
export interface DescribeNetworkInterfaceAttributeRequest {
  __type?: "DescribeNetworkInterfaceAttributeRequest";
  /**
   * <p>The attribute of the network interface. This parameter is required.</p>
   */
  Attribute?: NetworkInterfaceAttribute | string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;
}

export namespace DescribeNetworkInterfaceAttributeRequest {
  export function isa(o: any): o is DescribeNetworkInterfaceAttributeRequest {
    return _smithy.isa(o, "DescribeNetworkInterfaceAttributeRequest");
  }
}

/**
 * <p>Contains the output of DescribeNetworkInterfaceAttribute.</p>
 */
export interface DescribeNetworkInterfaceAttributeResult
  extends $MetadataBearer {
  __type?: "DescribeNetworkInterfaceAttributeResult";
  /**
   * <p>The attachment (if any) of the network interface.</p>
   */
  Attachment?: NetworkInterfaceAttachment;

  /**
   * <p>The description of the network interface.</p>
   */
  Description?: AttributeValue;

  /**
   * <p>The security groups associated with the network interface.</p>
   */
  Groups?: Array<GroupIdentifier>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>Indicates whether source/destination checking is enabled.</p>
   */
  SourceDestCheck?: AttributeBooleanValue;
}

export namespace DescribeNetworkInterfaceAttributeResult {
  export function isa(o: any): o is DescribeNetworkInterfaceAttributeResult {
    return _smithy.isa(o, "DescribeNetworkInterfaceAttributeResult");
  }
}

/**
 * <p>Contains the parameters for DescribeNetworkInterfacePermissions.</p>
 */
export interface DescribeNetworkInterfacePermissionsRequest {
  __type?: "DescribeNetworkInterfacePermissionsRequest";
  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>network-interface-permission.network-interface-permission-id</code> - The ID of the
   * 				permission.</p>
   *             </li>
   *             <li>
   * 				           <p>
   *                   <code>network-interface-permission.network-interface-id</code> - The ID of
   * 					the network interface.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>network-interface-permission.aws-account-id</code> - The AWS account
   * 					ID.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>network-interface-permission.aws-service</code> - The AWS
   * 					service.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>network-interface-permission.permission</code> - The type of
   * 					permission (<code>INSTANCE-ATTACH</code> |
   * 					<code>EIP-ASSOCIATE</code>).</p>
   * 			         </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining results,
   * 			make another call with the returned <code>NextToken</code> value. If this parameter is not specified, up to 50 results are returned by default.</p>
   */
  MaxResults?: number;

  /**
   * <p>One or more network interface permission IDs.</p>
   */
  NetworkInterfacePermissionIds?: Array<string>;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeNetworkInterfacePermissionsRequest {
  export function isa(o: any): o is DescribeNetworkInterfacePermissionsRequest {
    return _smithy.isa(o, "DescribeNetworkInterfacePermissionsRequest");
  }
}

/**
 * <p>Contains the output for DescribeNetworkInterfacePermissions.</p>
 */
export interface DescribeNetworkInterfacePermissionsResult
  extends $MetadataBearer {
  __type?: "DescribeNetworkInterfacePermissionsResult";
  /**
   * <p>The network interface permissions.</p>
   */
  NetworkInterfacePermissions?: Array<NetworkInterfacePermission>;

  /**
   * <p>The token to use to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeNetworkInterfacePermissionsResult {
  export function isa(o: any): o is DescribeNetworkInterfacePermissionsResult {
    return _smithy.isa(o, "DescribeNetworkInterfacePermissionsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeNetworkInterfaces.</p>
 */
export interface DescribeNetworkInterfacesRequest {
  __type?: "DescribeNetworkInterfacesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 		             <p>
   *                   <code>addresses.private-ip-address</code> - The private IPv4 addresses
   *                     associated with the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>addresses.primary</code> - Whether the private IPv4 address is the primary
   *                     IP address associated with the network interface. </p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>addresses.association.public-ip</code> - The association ID returned when
   *                     the network interface was associated with the Elastic IP address
   *                     (IPv4).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.association-id</code> - The association ID returned when the
   *                     network interface was associated with an IPv4 address.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.allocation-id</code> - The allocation ID returned when you
   *                     allocated the Elastic IP address (IPv4) for your network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.ip-owner-id</code> - The owner of the Elastic IP address
   *                     (IPv4) associated with the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.public-ip</code> - The address of the Elastic IP address
   *                     (IPv4) bound to the network interface.</p>
   * 		          </li>
   *             <li>
   * 		 		          <p>
   *                   <code>association.public-dns-name</code> - The public DNS name for the network
   *                     interface (IPv4).</p>
   * 		 	        </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.attachment-id</code> - The ID of the interface attachment.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.attach-time</code> - The time that the network interface was attached to an instance.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.device-index</code> - The device index to which the network interface is attached.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.nat-gateway-id</code> - The ID of the NAT gateway to which the network interface is attached.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>availability-zone</code> - The Availability Zone of the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>description</code> - The description of the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>group-id</code> - The ID of a security group associated with the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>group-name</code> - The name of a security group associated with the network interface.</p>
   * 		          </li>
   *             <li>
   *                   <p>
   *                   <code>ipv6-addresses.ipv6-address</code> - An IPv6 address associated with
   *                     the network interface.</p>
   *                </li>
   *             <li>
   * 		             <p>
   *                   <code>mac-address</code> - The MAC address of the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>network-interface-id</code> - The ID of the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>owner-id</code> - The AWS account ID of the network interface owner.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>private-ip-address</code> - The private IPv4 address or addresses of the
   *                     network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>private-dns-name</code> - The private DNS name of the network interface (IPv4).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>requester-managed</code> - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>source-dest-check</code> - Indicates whether the network interface performs source/destination checking.
   * 		            A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled.
   * 		            The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>;
   * 		            if a network interface is attached to an instance the status is <code>in-use</code>.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>subnet-id</code> - The ID of the subnet for the network interface.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>vpc-id</code> - The ID of the VPC for the network interface.</p>
   * 		          </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of items to return for this request. The request returns a token that you
   *             can specify in a subsequent call to get the next set of results. You cannot specify this
   *             parameter and the network interface IDs parameter in the same request.</p>
   */
  MaxResults?: number;

  /**
   * <p>One or more network interface IDs.</p>
   * 		       <p>Default: Describes all your network interfaces.</p>
   */
  NetworkInterfaceIds?: Array<string>;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeNetworkInterfacesRequest {
  export function isa(o: any): o is DescribeNetworkInterfacesRequest {
    return _smithy.isa(o, "DescribeNetworkInterfacesRequest");
  }
}

/**
 * <p>Contains the output of DescribeNetworkInterfaces.</p>
 */
export interface DescribeNetworkInterfacesResult extends $MetadataBearer {
  __type?: "DescribeNetworkInterfacesResult";
  /**
   * <p>Information about one or more network interfaces.</p>
   */
  NetworkInterfaces?: Array<NetworkInterface>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeNetworkInterfacesResult {
  export function isa(o: any): o is DescribeNetworkInterfacesResult {
    return _smithy.isa(o, "DescribeNetworkInterfacesResult");
  }
}

export interface DescribePlacementGroupsRequest {
  __type?: "DescribePlacementGroupsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>group-name</code> - The name of the placement group.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>state</code> - The state of the placement group (<code>pending</code> |
   *                         <code>available</code> | <code>deleting</code> |
   *                     <code>deleted</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>strategy</code> - The strategy of the placement group
   *                         (<code>cluster</code> | <code>spread</code> |
   *                     <code>partition</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the placement groups.</p>
   */
  GroupIds?: Array<string>;

  /**
   * <p>The names of the placement groups.</p>
   *         <p>Default: Describes all your placement groups, or only those otherwise
   *             specified.</p>
   */
  GroupNames?: Array<string>;
}

export namespace DescribePlacementGroupsRequest {
  export function isa(o: any): o is DescribePlacementGroupsRequest {
    return _smithy.isa(o, "DescribePlacementGroupsRequest");
  }
}

export interface DescribePlacementGroupsResult extends $MetadataBearer {
  __type?: "DescribePlacementGroupsResult";
  /**
   * <p>Information about the placement groups.</p>
   */
  PlacementGroups?: Array<PlacementGroup>;
}

export namespace DescribePlacementGroupsResult {
  export function isa(o: any): o is DescribePlacementGroupsResult {
    return _smithy.isa(o, "DescribePlacementGroupsResult");
  }
}

export interface DescribePrefixListsRequest {
  __type?: "DescribePrefixListsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 				           <p>
   *                   <code>prefix-list-id</code>: The ID of a prefix list.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>prefix-list-name</code>: The name of a prefix list.</p>
   * 			         </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more prefix list IDs.</p>
   */
  PrefixListIds?: Array<string>;
}

export namespace DescribePrefixListsRequest {
  export function isa(o: any): o is DescribePrefixListsRequest {
    return _smithy.isa(o, "DescribePrefixListsRequest");
  }
}

export interface DescribePrefixListsResult extends $MetadataBearer {
  __type?: "DescribePrefixListsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>All available prefix lists.</p>
   */
  PrefixLists?: Array<PrefixList>;
}

export namespace DescribePrefixListsResult {
  export function isa(o: any): o is DescribePrefixListsResult {
    return _smithy.isa(o, "DescribePrefixListsResult");
  }
}

export interface DescribePrincipalIdFormatRequest {
  __type?: "DescribePrincipalIdFormatRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another call with the returned NextToken value. </p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The type of resource: <code>bundle</code> |
   *             <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> |
   *             <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> |
   *             <code>export-task</code> | <code>flow-log</code> | <code>image</code> |
   *             <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> |
   *             <code>network-acl</code> | <code>network-acl-association</code> |
   *             <code>network-interface</code> | <code>network-interface-attachment</code> |
   *             <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> |
   *             <code>route-table-association</code> | <code>security-group</code> |
   *             <code>snapshot</code> | <code>subnet</code> |
   *             <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code>
   *             | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> |
   *             <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>
   *          </p>
   */
  Resources?: Array<string>;
}

export namespace DescribePrincipalIdFormatRequest {
  export function isa(o: any): o is DescribePrincipalIdFormatRequest {
    return _smithy.isa(o, "DescribePrincipalIdFormatRequest");
  }
}

export interface DescribePrincipalIdFormatResult extends $MetadataBearer {
  __type?: "DescribePrincipalIdFormatResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is null when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the ID format settings for the ARN.</p>
   */
  Principals?: Array<PrincipalIdFormat>;
}

export namespace DescribePrincipalIdFormatResult {
  export function isa(o: any): o is DescribePrincipalIdFormatResult {
    return _smithy.isa(o, "DescribePrincipalIdFormatResult");
  }
}

export interface DescribePublicIpv4PoolsRequest {
  __type?: "DescribePublicIpv4PoolsRequest";
  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the address pools.</p>
   */
  PoolIds?: Array<string>;
}

export namespace DescribePublicIpv4PoolsRequest {
  export function isa(o: any): o is DescribePublicIpv4PoolsRequest {
    return _smithy.isa(o, "DescribePublicIpv4PoolsRequest");
  }
}

export interface DescribePublicIpv4PoolsResult extends $MetadataBearer {
  __type?: "DescribePublicIpv4PoolsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the address pools.</p>
   */
  PublicIpv4Pools?: Array<PublicIpv4Pool>;
}

export namespace DescribePublicIpv4PoolsResult {
  export function isa(o: any): o is DescribePublicIpv4PoolsResult {
    return _smithy.isa(o, "DescribePublicIpv4PoolsResult");
  }
}

export interface DescribeRegionsRequest {
  __type?: "DescribeRegionsRequest";
  /**
   * <p>Indicates whether to display all Regions, including Regions that are disabled for your account.</p>
   */
  AllRegions?: boolean;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>endpoint</code> - The endpoint of the Region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>opt-in-status</code> - The opt-in status of the Region (<code>opt-in-not-required</code> | <code>opted-in</code> |
   *                  <code>not-opted-in</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>region-name</code> - The name of the Region (for example, <code>us-east-1</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The names of the Regions. You can specify any Regions, whether they are enabled and disabled for your account.</p>
   */
  RegionNames?: Array<string>;
}

export namespace DescribeRegionsRequest {
  export function isa(o: any): o is DescribeRegionsRequest {
    return _smithy.isa(o, "DescribeRegionsRequest");
  }
}

export interface DescribeRegionsResult extends $MetadataBearer {
  __type?: "DescribeRegionsResult";
  /**
   * <p>Information about the Regions.</p>
   */
  Regions?: Array<Region>;
}

export namespace DescribeRegionsResult {
  export function isa(o: any): o is DescribeRegionsResult {
    return _smithy.isa(o, "DescribeRegionsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeReservedInstancesListings.</p>
 */
export interface DescribeReservedInstancesListingsRequest {
  __type?: "DescribeReservedInstancesListingsRequest";
  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>reserved-instances-id</code> - The ID of the Reserved Instances.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> |
   *            <code>cancelled</code> | <code>closed</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status-message</code> - The reason for the status.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more Reserved Instance IDs.</p>
   */
  ReservedInstancesId?: string;

  /**
   * <p>One or more Reserved Instance listing IDs.</p>
   */
  ReservedInstancesListingId?: string;
}

export namespace DescribeReservedInstancesListingsRequest {
  export function isa(o: any): o is DescribeReservedInstancesListingsRequest {
    return _smithy.isa(o, "DescribeReservedInstancesListingsRequest");
  }
}

/**
 * <p>Contains the output of DescribeReservedInstancesListings.</p>
 */
export interface DescribeReservedInstancesListingsResult
  extends $MetadataBearer {
  __type?: "DescribeReservedInstancesListingsResult";
  /**
   * <p>Information about the Reserved Instance listing.</p>
   */
  ReservedInstancesListings?: Array<ReservedInstancesListing>;
}

export namespace DescribeReservedInstancesListingsResult {
  export function isa(o: any): o is DescribeReservedInstancesListingsResult {
    return _smithy.isa(o, "DescribeReservedInstancesListingsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeReservedInstancesModifications.</p>
 */
export interface DescribeReservedInstancesModificationsRequest {
  __type?: "DescribeReservedInstancesModificationsRequest";
  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>client-token</code> - The idempotency token for the modification request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>create-date</code> - The time when the modification request was created.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>effective-date</code> - The time when the modification becomes effective.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>reserved-instances-modification-id</code> - The ID of the modification request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status</code> - The status of the Reserved Instances modification request
   *            (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status-message</code> - The reason for the status.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>update-date</code> - The time when the modification request was last updated.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>IDs for the submitted modification request.</p>
   */
  ReservedInstancesModificationIds?: Array<string>;
}

export namespace DescribeReservedInstancesModificationsRequest {
  export function isa(
    o: any
  ): o is DescribeReservedInstancesModificationsRequest {
    return _smithy.isa(o, "DescribeReservedInstancesModificationsRequest");
  }
}

/**
 * <p>Contains the output of DescribeReservedInstancesModifications.</p>
 */
export interface DescribeReservedInstancesModificationsResult
  extends $MetadataBearer {
  __type?: "DescribeReservedInstancesModificationsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when
   * 			there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The Reserved Instance modification information.</p>
   */
  ReservedInstancesModifications?: Array<ReservedInstancesModification>;
}

export namespace DescribeReservedInstancesModificationsResult {
  export function isa(
    o: any
  ): o is DescribeReservedInstancesModificationsResult {
    return _smithy.isa(o, "DescribeReservedInstancesModificationsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeReservedInstancesOfferings.</p>
 */
export interface DescribeReservedInstancesOfferingsRequest {
  __type?: "DescribeReservedInstancesOfferingsRequest";
  /**
   * <p>The Availability Zone in which the Reserved Instance can be used.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be
   *           used.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>duration</code> - The duration of the Reserved Instance (for example, one year or
   *           three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fixed-price</code> - The purchase price of the Reserved Instance (for example,
   *           9800.0).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-type</code> - The instance type that is covered by the
   *           reservation.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance
   *           Marketplace offerings. When this filter is not used, which is the default behavior, all
   *           offerings from both AWS and the Reserved Instance Marketplace are listed.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>product-description</code> - The Reserved Instance product platform description.
   *           Instances that include <code>(Amazon VPC)</code> in the product platform description will
   *           only be displayed to EC2-Classic account holders and are for use with Amazon VPC.
   *             (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE
   *             Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise
   *             Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code>
   *           | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> |
   *             <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL
   *             Server Web</code> | <code> Windows with SQL Server Web (Amazon VPC)</code> |
   *             <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server
   *             Enterprise (Amazon VPC)</code>) </p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>reserved-instances-offering-id</code> - The Reserved Instances offering
   *           ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>scope</code> - The scope of the Reserved Instance (<code>Availability Zone</code> or
   *             <code>Region</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for
   *           example, 0.84).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>Include Reserved Instance Marketplace offerings in the response.</p>
   */
  IncludeMarketplace?: boolean;

  /**
   * <p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy
   *       of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware
   *       (i.e., Dedicated Instances).</p>
   *          <p>
   *             <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p>
   *          <p>Default: <code>default</code>
   *          </p>
   */
  InstanceTenancy?: Tenancy | string;

  /**
   * <p>The instance type that the reservation will cover (for example, <code>m1.small</code>). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the
   *       <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The maximum duration (in seconds) to filter when searching for offerings.</p>
   * 		       <p>Default: 94608000 (3 years)</p>
   */
  MaxDuration?: number;

  /**
   * <p>The maximum number of instances to filter when searching for offerings.</p>
   * 		       <p>Default: 20</p>
   */
  MaxInstanceCount?: number;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining
   * 			results of the initial request can be seen by sending another request with the returned
   * 				<code>NextToken</code> value. The maximum is 100.</p>
   * 		       <p>Default: 100</p>
   */
  MaxResults?: number;

  /**
   * <p>The minimum duration (in seconds) to filter when searching for offerings.</p>
   * 		       <p>Default: 2592000 (1 month)</p>
   */
  MinDuration?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The offering class of the Reserved Instance. Can be <code>standard</code> or <code>convertible</code>.</p>
   */
  OfferingClass?: OfferingClassType | string;

  /**
   * <p>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API
   * 			version, you only have access to the <code>Medium Utilization</code> Reserved Instance
   * 			offering type. </p>
   */
  OfferingType?: OfferingTypeValues | string;

  /**
   * <p>The Reserved Instance product platform description. Instances that include <code>(Amazon
   *         VPC)</code> in the description are for use with Amazon VPC.</p>
   */
  ProductDescription?: RIProductDescription | string;

  /**
   * <p>One or more Reserved Instances offering IDs.</p>
   */
  ReservedInstancesOfferingIds?: Array<string>;
}

export namespace DescribeReservedInstancesOfferingsRequest {
  export function isa(o: any): o is DescribeReservedInstancesOfferingsRequest {
    return _smithy.isa(o, "DescribeReservedInstancesOfferingsRequest");
  }
}

/**
 * <p>Contains the output of DescribeReservedInstancesOfferings.</p>
 */
export interface DescribeReservedInstancesOfferingsResult
  extends $MetadataBearer {
  __type?: "DescribeReservedInstancesOfferingsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when
   * 			there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>A list of Reserved Instances offerings.</p>
   */
  ReservedInstancesOfferings?: Array<ReservedInstancesOffering>;
}

export namespace DescribeReservedInstancesOfferingsResult {
  export function isa(o: any): o is DescribeReservedInstancesOfferingsResult {
    return _smithy.isa(o, "DescribeReservedInstancesOfferingsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeReservedInstances.</p>
 */
export interface DescribeReservedInstancesRequest {
  __type?: "DescribeReservedInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>duration</code> - The duration of the Reserved Instance (one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-type</code> - The instance type that is covered by the reservation.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>scope</code> - The scope of the Reserved Instance (<code>Region</code> or <code>Availability Zone</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>product-description</code> - The Reserved Instance product platform description.
   *               Instances that include <code>(Amazon VPC)</code> in the product platform description will
   *               only be displayed to EC2-Classic account holders and are for use with Amazon VPC
   *               (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE
   *               Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise
   *               Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code>
   *               | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> |
   *               <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL
   *               Server Web</code> | <code>Windows with SQL Server Web (Amazon VPC)</code> |
   *               <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server
   *               Enterprise (Amazon VPC)</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>reserved-instances-id</code> - The ID of the Reserved Instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>start</code> - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the Reserved Instance (<code>payment-pending</code> | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>Describes whether the Reserved Instance is Standard or Convertible.</p>
   */
  OfferingClass?: OfferingClassType | string;

  /**
   * <p>The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API
   * 			version, you only have access to the <code>Medium Utilization</code> Reserved Instance
   * 			offering type.</p>
   */
  OfferingType?: OfferingTypeValues | string;

  /**
   * <p>One or more Reserved Instance IDs.</p>
   *          <p>Default: Describes all your Reserved Instances, or only those otherwise specified.</p>
   */
  ReservedInstancesIds?: Array<string>;
}

export namespace DescribeReservedInstancesRequest {
  export function isa(o: any): o is DescribeReservedInstancesRequest {
    return _smithy.isa(o, "DescribeReservedInstancesRequest");
  }
}

/**
 * <p>Contains the output for DescribeReservedInstances.</p>
 */
export interface DescribeReservedInstancesResult extends $MetadataBearer {
  __type?: "DescribeReservedInstancesResult";
  /**
   * <p>A list of Reserved Instances.</p>
   */
  ReservedInstances?: Array<ReservedInstances>;
}

export namespace DescribeReservedInstancesResult {
  export function isa(o: any): o is DescribeReservedInstancesResult {
    return _smithy.isa(o, "DescribeReservedInstancesResult");
  }
}

export interface DescribeRouteTablesRequest {
  __type?: "DescribeRouteTablesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 		             <p>
   *                   <code>association.route-table-association-id</code> - The ID of an association
   *                     ID for the route table.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.route-table-id</code> - The ID of the route table involved in
   *                     the association.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.subnet-id</code> - The ID of the subnet involved in the
   *                     association.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>association.main</code> - Indicates whether the route table is the main
   *                     route table for the VPC (<code>true</code> | <code>false</code>). Route tables
   *                     that do not have an association ID are not returned in the response.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the route table.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>route-table-id</code> - The ID of the route table.</p>
   * 		          </li>
   *             <li>
   * 				           <p>
   *                   <code>route.destination-cidr-block</code> - The IPv4 CIDR range specified in a
   *                     route in the table.</p>
   * 			         </li>
   *             <li>
   *                   <p>
   *                   <code>route.destination-ipv6-cidr-block</code> - The IPv6 CIDR range specified in a route in the route table.</p>
   *                </li>
   *             <li>
   * 				           <p>
   *                   <code>route.destination-prefix-list-id</code> - The ID (prefix) of the AWS
   *                     service specified in a route in the table.</p>
   * 			         </li>
   *             <li>
   *                   <p>
   *                   <code>route.egress-only-internet-gateway-id</code> - The ID of an
   *                     egress-only Internet gateway specified in a route in the route table.</p>
   *                </li>
   *             <li>
   * 		             <p>
   *                   <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p>
   * 		          </li>
   *             <li>
   *                   <p>
   *                   <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p>
   *                </li>
   *             <li>
   *                   <p>
   *                   <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p>
   *                </li>
   *             <li>
   * 		             <p>
   *                   <code>route.transit-gateway-id</code> - The ID of a transit gateway.</p>
   * 		          </li>
   *             <li>
   * 		             <p>
   *                   <code>route.origin</code> - Describes how the route was created.
   *                         <code>CreateRouteTable</code> indicates that the route was automatically
   *                     created when the route table was created; <code>CreateRoute</code> indicates
   *                     that the route was manually added to the route table;
   *                         <code>EnableVgwRoutePropagation</code> indicates that the route was
   *                     propagated by route propagation.</p>
   * 		          </li>
   *             <li>
   *                   <p>
   *                   <code>route.state</code> - The state of a route in the route table
   *                         (<code>active</code> | <code>blackhole</code>). The blackhole state
   *                     indicates that the route's target isn't available (for example, the specified
   *                     gateway isn't attached to the VPC, the specified NAT instance has been
   *                     terminated, and so on).</p>
   *                </li>
   *             <li>
   * 		            <p>
   *                   <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering
   * 		                connection specified in a route in the table.</p>
   * 		          </li>
   *             <li>
   * 		            <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 		          </li>
   *             <li>
   * 		            <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 		          </li>
   *             <li>
   * 		            <p>
   *                   <code>transit-gateway-id</code> - The ID of a transit gateway.</p>
   * 		          </li>
   *             <li>
   * 		            <p>
   *                   <code>vpc-id</code> - The ID of the VPC for the route table.</p>
   * 		          </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more route table IDs.</p>
   * 		       <p>Default: Describes all your route tables.</p>
   */
  RouteTableIds?: Array<string>;
}

export namespace DescribeRouteTablesRequest {
  export function isa(o: any): o is DescribeRouteTablesRequest {
    return _smithy.isa(o, "DescribeRouteTablesRequest");
  }
}

/**
 * <p>Contains the output of DescribeRouteTables.</p>
 */
export interface DescribeRouteTablesResult extends $MetadataBearer {
  __type?: "DescribeRouteTablesResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about one or more route tables.</p>
   */
  RouteTables?: Array<RouteTable>;
}

export namespace DescribeRouteTablesResult {
  export function isa(o: any): o is DescribeRouteTablesResult {
    return _smithy.isa(o, "DescribeRouteTablesResult");
  }
}

/**
 * <p>Contains the parameters for DescribeScheduledInstanceAvailability.</p>
 */
export interface DescribeScheduledInstanceAvailabilityRequest {
  __type?: "DescribeScheduledInstanceAvailabilityRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The time period for the first schedule to start.</p>
   */
  FirstSlotStartTimeRange: SlotDateTimeRangeRequest | undefined;

  /**
   * <p>The maximum number of results to return in a single call.
   *          This value can be between 5 and 300. The default value is 300.
   *          To retrieve the remaining results, make another call with the returned
   *          <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code>
   *          and less than 1,720.</p>
   */
  MaxSlotDurationInHours?: number;

  /**
   * <p>The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.</p>
   */
  MinSlotDurationInHours?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The schedule recurrence.</p>
   */
  Recurrence: ScheduledInstanceRecurrenceRequest | undefined;
}

export namespace DescribeScheduledInstanceAvailabilityRequest {
  export function isa(
    o: any
  ): o is DescribeScheduledInstanceAvailabilityRequest {
    return _smithy.isa(o, "DescribeScheduledInstanceAvailabilityRequest");
  }
}

/**
 * <p>Contains the output of DescribeScheduledInstanceAvailability.</p>
 */
export interface DescribeScheduledInstanceAvailabilityResult
  extends $MetadataBearer {
  __type?: "DescribeScheduledInstanceAvailabilityResult";
  /**
   * <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the available Scheduled Instances.</p>
   */
  ScheduledInstanceAvailabilitySet?: Array<ScheduledInstanceAvailability>;
}

export namespace DescribeScheduledInstanceAvailabilityResult {
  export function isa(
    o: any
  ): o is DescribeScheduledInstanceAvailabilityResult {
    return _smithy.isa(o, "DescribeScheduledInstanceAvailabilityResult");
  }
}

/**
 * <p>Contains the parameters for DescribeScheduledInstances.</p>
 */
export interface DescribeScheduledInstancesRequest {
  __type?: "DescribeScheduledInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call.
   *          This value can be between 5 and 300. The default value is 100.
   *          To retrieve the remaining results, make another call with the returned
   *          <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The Scheduled Instance IDs.</p>
   */
  ScheduledInstanceIds?: Array<string>;

  /**
   * <p>The time period for the first schedule to start.</p>
   */
  SlotStartTimeRange?: SlotStartTimeRangeRequest;
}

export namespace DescribeScheduledInstancesRequest {
  export function isa(o: any): o is DescribeScheduledInstancesRequest {
    return _smithy.isa(o, "DescribeScheduledInstancesRequest");
  }
}

/**
 * <p>Contains the output of DescribeScheduledInstances.</p>
 */
export interface DescribeScheduledInstancesResult extends $MetadataBearer {
  __type?: "DescribeScheduledInstancesResult";
  /**
   * <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the Scheduled Instances.</p>
   */
  ScheduledInstanceSet?: Array<ScheduledInstance>;
}

export namespace DescribeScheduledInstancesResult {
  export function isa(o: any): o is DescribeScheduledInstancesResult {
    return _smithy.isa(o, "DescribeScheduledInstancesResult");
  }
}

export interface DescribeSecurityGroupReferencesRequest {
  __type?: "DescribeSecurityGroupReferencesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the security groups in your account.</p>
   */
  GroupId: Array<string> | undefined;
}

export namespace DescribeSecurityGroupReferencesRequest {
  export function isa(o: any): o is DescribeSecurityGroupReferencesRequest {
    return _smithy.isa(o, "DescribeSecurityGroupReferencesRequest");
  }
}

export interface DescribeSecurityGroupReferencesResult extends $MetadataBearer {
  __type?: "DescribeSecurityGroupReferencesResult";
  /**
   * <p>Information about the VPCs with the referencing security groups.</p>
   */
  SecurityGroupReferenceSet?: Array<SecurityGroupReference>;
}

export namespace DescribeSecurityGroupReferencesResult {
  export function isa(o: any): o is DescribeSecurityGroupReferencesResult {
    return _smithy.isa(o, "DescribeSecurityGroupReferencesResult");
  }
}

export interface DescribeSecurityGroupsRequest {
  __type?: "DescribeSecurityGroupsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>description</code> - The description of the security group.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.cidr</code> - An IPv4 CIDR block for an outbound
   *                     security group rule.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.from-port</code> - For an outbound rule, the
   *                     start of port range for the TCP and UDP protocols, or an ICMP type
   *                     number.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.group-id</code> - The ID of a security group
   *                     that has been referenced in an outbound security group rule.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.group-name</code> - The name of a security group
   *                     that has been referenced in an outbound security group rule.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an
   *                     outbound security group rule.</p>
   *             </li>
   *             <li>
   *      		        <p>
   *                   <code>egress.ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS
   *                     service to which a security group rule allows outbound access.</p>
   *      	      </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.protocol</code> - The IP protocol for an
   *                     outbound security group rule (<code>tcp</code> | <code>udp</code> |
   *                         <code>icmp</code> or a protocol number).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.to-port</code> - For an outbound rule, the end
   *                     of port range for the TCP and UDP protocols, or an ICMP code.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>egress.ip-permission.user-id</code> - The ID of an AWS account that
   *                     has been referenced in an outbound security group rule.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>group-id</code> - The ID of the security group. </p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>group-name</code> - The name of the security group.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>ip-permission.cidr</code> - An IPv4 CIDR block for an inbound security
   *                     group rule.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>ip-permission.from-port</code> - For an inbound rule, the start of port
   *                     range for the TCP and UDP protocols, or an ICMP type number.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>ip-permission.group-id</code> - The ID of a security group that has been
   *                     referenced in an inbound security group rule.</p>
   *             </li>
   *             <li>
   * 				           <p>
   *                     <code>ip-permission.group-name</code> - The name of a security group that has
   *                     been referenced in an inbound security group rule.</p>
   * 			         </li>
   *             <li>
   *                <p>
   *                   <code>ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an inbound security
   *                     group rule.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS
   *                     service from which a security group rule allows inbound access.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>ip-permission.protocol</code> - The IP protocol for an inbound security
   *                     group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a
   *                     protocol number).</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>ip-permission.to-port</code> - For an inbound rule, the end of port range
   *                     for the TCP and UDP protocols, or an ICMP code.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>ip-permission.user-id</code> - The ID of an AWS account that has been
   *                     referenced in an inbound security group rule.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code> - The AWS account ID of the owner of the security group.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The IDs of the security groups. Required for security groups in a nondefault VPC.</p>
   *          <p>Default: Describes all your security groups.</p>
   */
  GroupIds?: Array<string>;

  /**
   * <p>[EC2-Classic and default VPC only] The names of the security groups. You can specify either
   * 			the security group name or the security group ID. For security groups in a nondefault VPC, use
   * 			the <code>group-name</code> filter to describe security groups by name.</p>
   *          <p>Default: Describes all your security groups.</p>
   */
  GroupNames?: Array<string>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another request with the returned <code>NextToken</code> value. This value
   *             can be between 5 and 1000. If this parameter is not specified, then all results are
   *             returned.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeSecurityGroupsRequest {
  export function isa(o: any): o is DescribeSecurityGroupsRequest {
    return _smithy.isa(o, "DescribeSecurityGroupsRequest");
  }
}

export interface DescribeSecurityGroupsResult extends $MetadataBearer {
  __type?: "DescribeSecurityGroupsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the security groups.</p>
   */
  SecurityGroups?: Array<SecurityGroup>;
}

export namespace DescribeSecurityGroupsResult {
  export function isa(o: any): o is DescribeSecurityGroupsResult {
    return _smithy.isa(o, "DescribeSecurityGroupsResult");
  }
}

export interface DescribeSnapshotAttributeRequest {
  __type?: "DescribeSnapshotAttributeRequest";
  /**
   * <p>The snapshot attribute you would like to view.</p>
   */
  Attribute: SnapshotAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the EBS snapshot.</p>
   */
  SnapshotId: string | undefined;
}

export namespace DescribeSnapshotAttributeRequest {
  export function isa(o: any): o is DescribeSnapshotAttributeRequest {
    return _smithy.isa(o, "DescribeSnapshotAttributeRequest");
  }
}

export interface DescribeSnapshotAttributeResult extends $MetadataBearer {
  __type?: "DescribeSnapshotAttributeResult";
  /**
   * <p>The users and groups that have the permissions for creating volumes from the
   *       snapshot.</p>
   */
  CreateVolumePermissions?: Array<CreateVolumePermission>;

  /**
   * <p>The product codes.</p>
   */
  ProductCodes?: Array<ProductCode>;

  /**
   * <p>The ID of the EBS snapshot.</p>
   */
  SnapshotId?: string;
}

export namespace DescribeSnapshotAttributeResult {
  export function isa(o: any): o is DescribeSnapshotAttributeResult {
    return _smithy.isa(o, "DescribeSnapshotAttributeResult");
  }
}

export interface DescribeSnapshotsRequest {
  __type?: "DescribeSnapshotsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>description</code> - A description of the snapshot.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>encrypted</code> - Indicates whether the snapshot is encrypted
   *             (<code>true</code> | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-alias</code> - Value from an Amazon-maintained list (<code>amazon</code> |
   *             <code>self</code> | <code>all</code> | <code>aws-marketplace</code> |
   *             <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured
   *           AWS account alias, which is set from the IAM console.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the snapshot.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>progress</code> - The progress of the snapshot, as a percentage (for example,
   *           80%).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>snapshot-id</code> - The snapshot ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>start-time</code> - The time stamp when the snapshot was initiated.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status</code> - The status of the snapshot (<code>pending</code> |
   *             <code>completed</code> | <code>error</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>volume-id</code> - The ID of the volume the snapshot is for.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>volume-size</code> - The size of the volume, in GiB.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in
   *       paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns
   *         <code>MaxResults</code> results in a single page along with a <code>NextToken</code>
   *       response element. The remaining results of the initial request can be seen by sending another
   *         <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This
   *       value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000,
   *       only 1000 results are returned. If this parameter is not used, then
   *         <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and
   *       the snapshot IDs parameter in the same request.</p>
   */
  MaxResults?: number;

  /**
   * <p>The <code>NextToken</code> value returned from a previous paginated
   *         <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the
   *       results exceeded the value of that parameter. Pagination continues from the end of the
   *       previous results that returned the <code>NextToken</code> value. This value is
   *         <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Describes the snapshots owned by these owners.</p>
   */
  OwnerIds?: Array<string>;

  /**
   * <p>The IDs of the AWS accounts that can create volumes from the snapshot.</p>
   */
  RestorableByUserIds?: Array<string>;

  /**
   * <p>The snapshot IDs.</p>
   *          <p>Default: Describes the snapshots for which you have create volume permissions.</p>
   */
  SnapshotIds?: Array<string>;
}

export namespace DescribeSnapshotsRequest {
  export function isa(o: any): o is DescribeSnapshotsRequest {
    return _smithy.isa(o, "DescribeSnapshotsRequest");
  }
}

export interface DescribeSnapshotsResult extends $MetadataBearer {
  __type?: "DescribeSnapshotsResult";
  /**
   * <p>The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code>
   *       request. When the results of a <code>DescribeSnapshots</code> request exceed
   *         <code>MaxResults</code>, this value can be used to retrieve the next page of results. This
   *       value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the snapshots.</p>
   */
  Snapshots?: Array<Snapshot>;
}

export namespace DescribeSnapshotsResult {
  export function isa(o: any): o is DescribeSnapshotsResult {
    return _smithy.isa(o, "DescribeSnapshotsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeSpotDatafeedSubscription.</p>
 */
export interface DescribeSpotDatafeedSubscriptionRequest {
  __type?: "DescribeSpotDatafeedSubscriptionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DescribeSpotDatafeedSubscriptionRequest {
  export function isa(o: any): o is DescribeSpotDatafeedSubscriptionRequest {
    return _smithy.isa(o, "DescribeSpotDatafeedSubscriptionRequest");
  }
}

/**
 * <p>Contains the output of DescribeSpotDatafeedSubscription.</p>
 */
export interface DescribeSpotDatafeedSubscriptionResult
  extends $MetadataBearer {
  __type?: "DescribeSpotDatafeedSubscriptionResult";
  /**
   * <p>The Spot Instance data feed subscription.</p>
   */
  SpotDatafeedSubscription?: SpotDatafeedSubscription;
}

export namespace DescribeSpotDatafeedSubscriptionResult {
  export function isa(o: any): o is DescribeSpotDatafeedSubscriptionResult {
    return _smithy.isa(o, "DescribeSpotDatafeedSubscriptionResult");
  }
}

/**
 * <p>Contains the parameters for DescribeSpotFleetInstances.</p>
 */
export interface DescribeSpotFleetInstancesRequest {
  __type?: "DescribeSpotFleetInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of results to return in a single call.
   *       Specify a value between 1 and 1000. The default value is 1000.
   *       To retrieve the remaining results, make another call with the returned
   *       <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId: string | undefined;
}

export namespace DescribeSpotFleetInstancesRequest {
  export function isa(o: any): o is DescribeSpotFleetInstancesRequest {
    return _smithy.isa(o, "DescribeSpotFleetInstancesRequest");
  }
}

/**
 * <p>Contains the output of DescribeSpotFleetInstances.</p>
 */
export interface DescribeSpotFleetInstancesResponse extends $MetadataBearer {
  __type?: "DescribeSpotFleetInstancesResponse";
  /**
   * <p>The running instances. This list is refreshed periodically and might be out of
   *             date.</p>
   */
  ActiveInstances?: Array<ActiveInstance>;

  /**
   * <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId?: string;
}

export namespace DescribeSpotFleetInstancesResponse {
  export function isa(o: any): o is DescribeSpotFleetInstancesResponse {
    return _smithy.isa(o, "DescribeSpotFleetInstancesResponse");
  }
}

/**
 * <p>Contains the parameters for DescribeSpotFleetRequestHistory.</p>
 */
export interface DescribeSpotFleetRequestHistoryRequest {
  __type?: "DescribeSpotFleetRequestHistoryRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The type of events to describe. By default, all events are described.</p>
   */
  EventType?: EventType | string;

  /**
   * <p>The maximum number of results to return in a single call.
   *       Specify a value between 1 and 1000. The default value is 1000.
   *       To retrieve the remaining results, make another call with the returned
   *       <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId: string | undefined;

  /**
   * <p>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  StartTime: Date | undefined;
}

export namespace DescribeSpotFleetRequestHistoryRequest {
  export function isa(o: any): o is DescribeSpotFleetRequestHistoryRequest {
    return _smithy.isa(o, "DescribeSpotFleetRequestHistoryRequest");
  }
}

/**
 * <p>Contains the output of DescribeSpotFleetRequestHistory.</p>
 */
export interface DescribeSpotFleetRequestHistoryResponse
  extends $MetadataBearer {
  __type?: "DescribeSpotFleetRequestHistoryResponse";
  /**
   * <p>Information about the events in the history of the Spot Fleet request.</p>
   */
  HistoryRecords?: Array<HistoryRecord>;

  /**
   * <p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *       All records up to this time were retrieved.</p>
   *          <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>
   */
  LastEvaluatedTime?: Date;

  /**
   * <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId?: string;

  /**
   * <p>The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  StartTime?: Date;
}

export namespace DescribeSpotFleetRequestHistoryResponse {
  export function isa(o: any): o is DescribeSpotFleetRequestHistoryResponse {
    return _smithy.isa(o, "DescribeSpotFleetRequestHistoryResponse");
  }
}

/**
 * <p>Contains the parameters for DescribeSpotFleetRequests.</p>
 */
export interface DescribeSpotFleetRequestsRequest {
  __type?: "DescribeSpotFleetRequestsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of results to return in a single call.
   *       Specify a value between 1 and 1000. The default value is 1000.
   *       To retrieve the remaining results, make another call with the returned
   *       <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the Spot Fleet requests.</p>
   */
  SpotFleetRequestIds?: Array<string>;
}

export namespace DescribeSpotFleetRequestsRequest {
  export function isa(o: any): o is DescribeSpotFleetRequestsRequest {
    return _smithy.isa(o, "DescribeSpotFleetRequestsRequest");
  }
}

/**
 * <p>Contains the output of DescribeSpotFleetRequests.</p>
 */
export interface DescribeSpotFleetRequestsResponse extends $MetadataBearer {
  __type?: "DescribeSpotFleetRequestsResponse";
  /**
   * <p>The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the configuration of your Spot Fleet.</p>
   */
  SpotFleetRequestConfigs?: Array<SpotFleetRequestConfig>;
}

export namespace DescribeSpotFleetRequestsResponse {
  export function isa(o: any): o is DescribeSpotFleetRequestsResponse {
    return _smithy.isa(o, "DescribeSpotFleetRequestsResponse");
  }
}

/**
 * <p>Contains the parameters for DescribeSpotInstanceRequests.</p>
 */
export interface DescribeSpotInstanceRequestsRequest {
  __type?: "DescribeSpotInstanceRequestsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>availability-zone-group</code> - The Availability Zone group.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>create-time</code> - The time stamp when the Spot Instance request was created.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fault-code</code> - The fault code related to the request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fault-message</code> - The fault message related to the request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-id</code> - The ID of the instance that fulfilled the request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch-group</code> - The Spot Instance launch group.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether the EBS volume is deleted on instance termination.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.block-device-mapping.device-name</code> - The device name for the volume in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot for the EBS volume.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.block-device-mapping.volume-size</code> - The size of the EBS volume, in GiB.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.block-device-mapping.volume-type</code> - The type of EBS volume:
   *                <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for
   *                Throughput Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code> for Magnetic.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.group-id</code> - The ID of the security group for the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.group-name</code> - The name of the security group for the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.image-id</code> - The ID of the AMI.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.kernel-id</code> - The kernel ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.key-name</code> - The name of the key pair the instance launched with.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.monitoring-enabled</code> - Whether detailed monitoring is enabled for the Spot Instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launch.ramdisk-id</code> - The RAM disk ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>launched-availability-zone</code> - The Availability Zone in which the request is launched.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.addresses.primary</code> - Indicates whether the IP address is
   *                the primary private IP address.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.delete-on-termination</code> - Indicates whether the network
   *                interface is deleted when the instance is terminated.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.description</code> - A description of the network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.device-index</code> - The index of the device for the network
   *                interface attachment on the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.group-id</code> - The ID of the security group associated with the network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.network-interface-id</code> - The ID of the network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.private-ip-address</code> - The primary private IP address of
   *                the network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>product-description</code> - The product description associated with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>spot-instance-request-id</code> - The Spot Instance request ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>spot-price</code> - The maximum hourly price for any Spot Instance launched to fulfill the request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the Spot Instance request (<code>open</code>
   *                     | <code>active</code> | <code>closed</code> | <code>cancelled</code> |
   *                         <code>failed</code>). Spot request status information can help you track
   *                     your Amazon EC2 Spot Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot
   *                         Request Status</a> in the
   *                     <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status-code</code> - The short code describing the most recent evaluation of your Spot Instance request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status-message</code> - The message explaining the status of the Spot Instance request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>type</code> - The type of Spot Instance request (<code>one-time</code> | <code>persistent</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>valid-from</code> - The start date of the request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>valid-until</code> - The end date of the request.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call. Specify a value between 5
   *             and 1000. To retrieve the remaining results, make another call with the returned
   *                 <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next set of results. This value is <code>null</code> when
   *             there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more Spot Instance request IDs.</p>
   */
  SpotInstanceRequestIds?: Array<string>;
}

export namespace DescribeSpotInstanceRequestsRequest {
  export function isa(o: any): o is DescribeSpotInstanceRequestsRequest {
    return _smithy.isa(o, "DescribeSpotInstanceRequestsRequest");
  }
}

/**
 * <p>Contains the output of DescribeSpotInstanceRequests.</p>
 */
export interface DescribeSpotInstanceRequestsResult extends $MetadataBearer {
  __type?: "DescribeSpotInstanceRequestsResult";
  /**
   * <p>The token to use to retrieve the next set of results. This value is <code>null</code>
   *             when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more Spot Instance requests.</p>
   */
  SpotInstanceRequests?: Array<SpotInstanceRequest>;
}

export namespace DescribeSpotInstanceRequestsResult {
  export function isa(o: any): o is DescribeSpotInstanceRequestsResult {
    return _smithy.isa(o, "DescribeSpotInstanceRequestsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeSpotPriceHistory.</p>
 */
export interface DescribeSpotPriceHistoryRequest {
  __type?: "DescribeSpotPriceHistoryRequest";
  /**
   * <p>Filters the results by the specified Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The date and time, up to the current date, from which to stop retrieving the price history data,
   *        in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  EndTime?: Date;

  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code> - The Availability Zone for which prices should be returned.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>product-description</code> - The product description for the Spot price
   *            (<code>Linux/UNIX</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>timestamp</code> - The time stamp of the Spot price history, in UTC format
   *                     (for example,
   *                         <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *                     You can use wildcards (* and ?). Greater than or less than comparison is not
   *                     supported.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>Filters the results by the specified instance types.</p>
   */
  InstanceTypes?: Array<_InstanceType | string>;

  /**
   * <p>The maximum number of results to return in a single call.
   *        Specify a value between 1 and 1000. The default value is 1000.
   *        To retrieve the remaining results, make another call with the returned
   *        <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of results.</p>
   */
  NextToken?: string;

  /**
   * <p>Filters the results by the specified basic product descriptions.</p>
   */
  ProductDescriptions?: Array<string>;

  /**
   * <p>The date and time, up to the past 90 days, from which to start retrieving the price history data,
   *        in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  StartTime?: Date;
}

export namespace DescribeSpotPriceHistoryRequest {
  export function isa(o: any): o is DescribeSpotPriceHistoryRequest {
    return _smithy.isa(o, "DescribeSpotPriceHistoryRequest");
  }
}

/**
 * <p>Contains the output of DescribeSpotPriceHistory.</p>
 */
export interface DescribeSpotPriceHistoryResult extends $MetadataBearer {
  __type?: "DescribeSpotPriceHistoryResult";
  /**
   * <p>The token required to retrieve the next set of results. This value is null or an empty
   *             string when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The historical Spot prices.</p>
   */
  SpotPriceHistory?: Array<SpotPrice>;
}

export namespace DescribeSpotPriceHistoryResult {
  export function isa(o: any): o is DescribeSpotPriceHistoryResult {
    return _smithy.isa(o, "DescribeSpotPriceHistoryResult");
  }
}

export interface DescribeStaleSecurityGroupsRequest {
  __type?: "DescribeStaleSecurityGroupsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace DescribeStaleSecurityGroupsRequest {
  export function isa(o: any): o is DescribeStaleSecurityGroupsRequest {
    return _smithy.isa(o, "DescribeStaleSecurityGroupsRequest");
  }
}

export interface DescribeStaleSecurityGroupsResult extends $MetadataBearer {
  __type?: "DescribeStaleSecurityGroupsResult";
  /**
   * <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the stale security groups.</p>
   */
  StaleSecurityGroupSet?: Array<StaleSecurityGroup>;
}

export namespace DescribeStaleSecurityGroupsResult {
  export function isa(o: any): o is DescribeStaleSecurityGroupsResult {
    return _smithy.isa(o, "DescribeStaleSecurityGroupsResult");
  }
}

export interface DescribeSubnetsRequest {
  __type?: "DescribeSubnetsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>availability-zone</code> - The Availability Zone for the subnet. You can also use
   *                     <code>availabilityZone</code> as the filter name.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>availability-zone-id</code> - The ID of the Availability Zone for the subnet.
   *                     You can also use <code>availabilityZoneId</code> as the filter name.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>available-ip-address-count</code> - The number of IPv4 addresses in the
   *                     subnet that are available.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>cidr-block</code> - The IPv4 CIDR block of the subnet. The CIDR block you
   *                     specify must exactly match the subnet's CIDR block for information to be
   *                     returned for the subnet. You can also use <code>cidr</code> or
   *                     <code>cidrBlock</code> as the filter names.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>default-for-az</code> - Indicates whether this is the default subnet for the
   *                     Availability Zone. You can also use <code>defaultForAz</code> as the filter name.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR
   *                     block associated with the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ipv6-cidr-block-association.association-id</code> - An association ID
   *                     for an IPv6 CIDR block associated with the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR
   *                     block associated with the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>subnet-arn</code> - The Amazon Resource Name (ARN) of the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>subnet-id</code> - The ID of the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>vpc-id</code> - The ID of the VPC for the subnet.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more subnet IDs.</p>
   * 		       <p>Default: Describes all your subnets.</p>
   */
  SubnetIds?: Array<string>;
}

export namespace DescribeSubnetsRequest {
  export function isa(o: any): o is DescribeSubnetsRequest {
    return _smithy.isa(o, "DescribeSubnetsRequest");
  }
}

export interface DescribeSubnetsResult extends $MetadataBearer {
  __type?: "DescribeSubnetsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about one or more subnets.</p>
   */
  Subnets?: Array<Subnet>;
}

export namespace DescribeSubnetsResult {
  export function isa(o: any): o is DescribeSubnetsResult {
    return _smithy.isa(o, "DescribeSubnetsResult");
  }
}

export interface DescribeTagsRequest {
  __type?: "DescribeTagsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>key</code> - The tag key.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>resource-id</code> - The ID of the resource.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>resource-type</code> - The resource type (<code>customer-gateway</code> |
   *             	  <code>dedicated-host</code> | <code>dhcp-options</code> | <code>elastic-ip</code> | <code>fleet</code> |
   *                   <code>fpga-image</code> | <code>image</code> | <code>instance</code> |
   *                   <code>host-reservation</code> | <code>internet-gateway</code> | <code>launch-template</code> |
   *                   <code>natgateway</code> | <code>network-acl</code> |
   *                   <code>network-interface</code> | <code>reserved-instances</code> |
   *                   <code>route-table</code> | <code>security-group</code> |
   *                   <code>snapshot</code> | <code>spot-instances-request</code> |
   *                   <code>subnet</code> | <code>volume</code> | <code>vpc</code> |
   *                   <code>vpc-peering-connection</code> | <code>vpn-connection</code> |
   *                   <code>vpn-gateway</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of the tag. For example,
   *                 specify "tag:Owner" for the filter name and "TeamA" for the filter value to find
   *                 resources with the tag "Owner=TeamA".</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>value</code> - The tag value.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call.
   *       This value can be between 5 and 1000.
   * 			To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeTagsRequest {
  export function isa(o: any): o is DescribeTagsRequest {
    return _smithy.isa(o, "DescribeTagsRequest");
  }
}

export interface DescribeTagsResult extends $MetadataBearer {
  __type?: "DescribeTagsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is
   *          <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The tags.</p>
   */
  Tags?: Array<TagDescription>;
}

export namespace DescribeTagsResult {
  export function isa(o: any): o is DescribeTagsResult {
    return _smithy.isa(o, "DescribeTagsResult");
  }
}

export interface DescribeTrafficMirrorFiltersRequest {
  __type?: "DescribeTrafficMirrorFiltersRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>description</code>: The Traffic Mirror filter description.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterIds?: Array<string>;
}

export namespace DescribeTrafficMirrorFiltersRequest {
  export function isa(o: any): o is DescribeTrafficMirrorFiltersRequest {
    return _smithy.isa(o, "DescribeTrafficMirrorFiltersRequest");
  }
}

export interface DescribeTrafficMirrorFiltersResult extends $MetadataBearer {
  __type?: "DescribeTrafficMirrorFiltersResult";
  /**
   * <p>The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about one or more Traffic Mirror filters.</p>
   */
  TrafficMirrorFilters?: Array<TrafficMirrorFilter>;
}

export namespace DescribeTrafficMirrorFiltersResult {
  export function isa(o: any): o is DescribeTrafficMirrorFiltersResult {
    return _smithy.isa(o, "DescribeTrafficMirrorFiltersResult");
  }
}

export interface DescribeTrafficMirrorSessionsRequest {
  __type?: "DescribeTrafficMirrorSessionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>description</code>: The Traffic Mirror session description.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>packet-length</code>: The assigned number of packets to mirror. </p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>session-number</code>: The assigned session number. </p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>traffic-mirror-session-id</code>: The ID of the Traffic Mirror session.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>virtual-network-id</code>: The virtual network ID of the Traffic Mirror session.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the Traffic Mirror session.</p>
   */
  TrafficMirrorSessionIds?: Array<string>;
}

export namespace DescribeTrafficMirrorSessionsRequest {
  export function isa(o: any): o is DescribeTrafficMirrorSessionsRequest {
    return _smithy.isa(o, "DescribeTrafficMirrorSessionsRequest");
  }
}

export interface DescribeTrafficMirrorSessionsResult extends $MetadataBearer {
  __type?: "DescribeTrafficMirrorSessionsResult";
  /**
   * <p>The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.</p>
   */
  TrafficMirrorSessions?: Array<TrafficMirrorSession>;
}

export namespace DescribeTrafficMirrorSessionsResult {
  export function isa(o: any): o is DescribeTrafficMirrorSessionsResult {
    return _smithy.isa(o, "DescribeTrafficMirrorSessionsResult");
  }
}

export interface DescribeTrafficMirrorTargetsRequest {
  __type?: "DescribeTrafficMirrorTargetsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>description</code>: The Traffic Mirror target description.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>network-load-balancer-arn</code>: The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the session.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the Traffic Mirror targets.</p>
   */
  TrafficMirrorTargetIds?: Array<string>;
}

export namespace DescribeTrafficMirrorTargetsRequest {
  export function isa(o: any): o is DescribeTrafficMirrorTargetsRequest {
    return _smithy.isa(o, "DescribeTrafficMirrorTargetsRequest");
  }
}

export interface DescribeTrafficMirrorTargetsResult extends $MetadataBearer {
  __type?: "DescribeTrafficMirrorTargetsResult";
  /**
   * <p>The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about one or more Traffic Mirror targets.</p>
   */
  TrafficMirrorTargets?: Array<TrafficMirrorTarget>;
}

export namespace DescribeTrafficMirrorTargetsResult {
  export function isa(o: any): o is DescribeTrafficMirrorTargetsResult {
    return _smithy.isa(o, "DescribeTrafficMirrorTargetsResult");
  }
}

export interface DescribeTransitGatewayAttachmentsRequest {
  __type?: "DescribeTransitGatewayAttachmentsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>association.state</code> - The state of the association (<code>associating</code> | <code>associated</code> |
   *                <code>disassociating</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>association.transit-gateway-route-table-id</code> - The ID of the route table for the transit gateway.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>resource-id</code> - The ID of the resource.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>resource-owner-id</code> - The ID of the AWS account that owns the resource.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>resource-type</code> - The resource type (<code>vpc</code> | <code>vpn</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> |  <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-id</code> - The ID of the transit gateway.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-owner-id</code> - The ID of the AWS account that owns the transit gateway.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the attachments.</p>
   */
  TransitGatewayAttachmentIds?: Array<string>;
}

export namespace DescribeTransitGatewayAttachmentsRequest {
  export function isa(o: any): o is DescribeTransitGatewayAttachmentsRequest {
    return _smithy.isa(o, "DescribeTransitGatewayAttachmentsRequest");
  }
}

export interface DescribeTransitGatewayAttachmentsResult
  extends $MetadataBearer {
  __type?: "DescribeTransitGatewayAttachmentsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the attachments.</p>
   */
  TransitGatewayAttachments?: Array<TransitGatewayAttachment>;
}

export namespace DescribeTransitGatewayAttachmentsResult {
  export function isa(o: any): o is DescribeTransitGatewayAttachmentsResult {
    return _smithy.isa(o, "DescribeTransitGatewayAttachmentsResult");
  }
}

export interface DescribeTransitGatewayMulticastDomainsRequest {
  __type?: "DescribeTransitGatewayMulticastDomainsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The state of the transit gateway multicast domain. Valid values are <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>transit-gateway-id</code> - The ID of the transit gateway.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>transit-gateway-multicast-domain-id</code> - The ID of the transit gateway multicast domain.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainIds?: Array<string>;
}

export namespace DescribeTransitGatewayMulticastDomainsRequest {
  export function isa(
    o: any
  ): o is DescribeTransitGatewayMulticastDomainsRequest {
    return _smithy.isa(o, "DescribeTransitGatewayMulticastDomainsRequest");
  }
}

export interface DescribeTransitGatewayMulticastDomainsResult
  extends $MetadataBearer {
  __type?: "DescribeTransitGatewayMulticastDomainsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the transit gateway multicast domains.</p>
   */
  TransitGatewayMulticastDomains?: Array<TransitGatewayMulticastDomain>;
}

export namespace DescribeTransitGatewayMulticastDomainsResult {
  export function isa(
    o: any
  ): o is DescribeTransitGatewayMulticastDomainsResult {
    return _smithy.isa(o, "DescribeTransitGatewayMulticastDomainsResult");
  }
}

export interface DescribeTransitGatewayPeeringAttachmentsRequest {
  __type?: "DescribeTransitGatewayPeeringAttachmentsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more IDs of the transit gateway peering attachments.</p>
   */
  TransitGatewayAttachmentIds?: Array<string>;
}

export namespace DescribeTransitGatewayPeeringAttachmentsRequest {
  export function isa(
    o: any
  ): o is DescribeTransitGatewayPeeringAttachmentsRequest {
    return _smithy.isa(o, "DescribeTransitGatewayPeeringAttachmentsRequest");
  }
}

export interface DescribeTransitGatewayPeeringAttachmentsResult
  extends $MetadataBearer {
  __type?: "DescribeTransitGatewayPeeringAttachmentsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The transit gateway peering attachments.</p>
   */
  TransitGatewayPeeringAttachments?: Array<TransitGatewayPeeringAttachment>;
}

export namespace DescribeTransitGatewayPeeringAttachmentsResult {
  export function isa(
    o: any
  ): o is DescribeTransitGatewayPeeringAttachmentsResult {
    return _smithy.isa(o, "DescribeTransitGatewayPeeringAttachmentsResult");
  }
}

export interface DescribeTransitGatewayRouteTablesRequest {
  __type?: "DescribeTransitGatewayRouteTablesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>default-association-route-table</code> - Indicates whether this is the default
   *                 association route table for the transit gateway (<code>true</code> | <code>false</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>default-propagation-route-table</code> - Indicates whether this is the default
   *                propagation route table for the transit gateway (<code>true</code> | <code>false</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> |  <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-id</code> - The ID of the transit gateway.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-route-table-id</code> - The ID of the transit gateway route table.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the transit gateway route tables.</p>
   */
  TransitGatewayRouteTableIds?: Array<string>;
}

export namespace DescribeTransitGatewayRouteTablesRequest {
  export function isa(o: any): o is DescribeTransitGatewayRouteTablesRequest {
    return _smithy.isa(o, "DescribeTransitGatewayRouteTablesRequest");
  }
}

export interface DescribeTransitGatewayRouteTablesResult
  extends $MetadataBearer {
  __type?: "DescribeTransitGatewayRouteTablesResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the transit gateway route tables.</p>
   */
  TransitGatewayRouteTables?: Array<TransitGatewayRouteTable>;
}

export namespace DescribeTransitGatewayRouteTablesResult {
  export function isa(o: any): o is DescribeTransitGatewayRouteTablesResult {
    return _smithy.isa(o, "DescribeTransitGatewayRouteTablesResult");
  }
}

export interface DescribeTransitGatewayVpcAttachmentsRequest {
  __type?: "DescribeTransitGatewayVpcAttachmentsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> |  <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-id</code> - The ID of the transit gateway.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vpc-id</code> - The ID of the VPC.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the attachments.</p>
   */
  TransitGatewayAttachmentIds?: Array<string>;
}

export namespace DescribeTransitGatewayVpcAttachmentsRequest {
  export function isa(
    o: any
  ): o is DescribeTransitGatewayVpcAttachmentsRequest {
    return _smithy.isa(o, "DescribeTransitGatewayVpcAttachmentsRequest");
  }
}

export interface DescribeTransitGatewayVpcAttachmentsResult
  extends $MetadataBearer {
  __type?: "DescribeTransitGatewayVpcAttachmentsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the VPC attachments.</p>
   */
  TransitGatewayVpcAttachments?: Array<TransitGatewayVpcAttachment>;
}

export namespace DescribeTransitGatewayVpcAttachmentsResult {
  export function isa(o: any): o is DescribeTransitGatewayVpcAttachmentsResult {
    return _smithy.isa(o, "DescribeTransitGatewayVpcAttachmentsResult");
  }
}

export interface DescribeTransitGatewaysRequest {
  __type?: "DescribeTransitGatewaysRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>options.propagation-default-route-table-id</code> - The ID of the default propagation route table.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>options.amazon-side-asn</code> - The private ASN for the Amazon side of a BGP session.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>options.association-default-route-table-id</code> - The ID of the default association route table.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>options.auto-accept-shared-attachments</code> - Indicates whether there is automatic acceptance of attachment requests (<code>enable</code> | <code>disable</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>options.default-route-table-association</code> - Indicates whether resource attachments are automatically
   *                associated with the default association route table (<code>enable</code> | <code>disable</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>options.default-route-table-propagation</code> - Indicates whether resource attachments automatically propagate
   *                routes to the default propagation route table (<code>enable</code> | <code>disable</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>options.dns-support</code> - Indicates whether DNS support is enabled (<code>enable</code> | <code>disable</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>options.vpn-ecmp-support</code> - Indicates whether Equal Cost Multipath Protocol support is enabled  (<code>enable</code> | <code>disable</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the transit gateway.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> |  <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-id</code> - The ID of the transit gateway.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the transit gateways.</p>
   */
  TransitGatewayIds?: Array<string>;
}

export namespace DescribeTransitGatewaysRequest {
  export function isa(o: any): o is DescribeTransitGatewaysRequest {
    return _smithy.isa(o, "DescribeTransitGatewaysRequest");
  }
}

export interface DescribeTransitGatewaysResult extends $MetadataBearer {
  __type?: "DescribeTransitGatewaysResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the transit gateways.</p>
   */
  TransitGateways?: Array<TransitGateway>;
}

export namespace DescribeTransitGatewaysResult {
  export function isa(o: any): o is DescribeTransitGatewaysResult {
    return _smithy.isa(o, "DescribeTransitGatewaysResult");
  }
}

export interface DescribeVolumeAttributeRequest {
  __type?: "DescribeVolumeAttributeRequest";
  /**
   * <p>The attribute of the volume. This parameter is required.</p>
   */
  Attribute: VolumeAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId: string | undefined;
}

export namespace DescribeVolumeAttributeRequest {
  export function isa(o: any): o is DescribeVolumeAttributeRequest {
    return _smithy.isa(o, "DescribeVolumeAttributeRequest");
  }
}

export interface DescribeVolumeAttributeResult extends $MetadataBearer {
  __type?: "DescribeVolumeAttributeResult";
  /**
   * <p>The state of <code>autoEnableIO</code> attribute.</p>
   */
  AutoEnableIO?: AttributeBooleanValue;

  /**
   * <p>A list of product codes.</p>
   */
  ProductCodes?: Array<ProductCode>;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId?: string;
}

export namespace DescribeVolumeAttributeResult {
  export function isa(o: any): o is DescribeVolumeAttributeResult {
    return _smithy.isa(o, "DescribeVolumeAttributeResult");
  }
}

export interface DescribeVolumeStatusRequest {
  __type?: "DescribeVolumeStatusRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>action.code</code> - The action code for the event (for example,
   *             <code>enable-volume-io</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>action.description</code> - A description of the action.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>action.event-id</code> - The event ID associated with the action.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code> - The Availability Zone of the instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>event.description</code> - A description of the event.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>event.event-id</code> - The event ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>event.event-type</code> - The event type (for <code>io-enabled</code>:
   *             <code>passed</code> | <code>failed</code>; for <code>io-performance</code>:
   *             <code>io-performance:degraded</code> | <code>io-performance:severely-degraded</code> |
   *             <code>io-performance:stalled</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>event.not-after</code> - The latest end time for the event.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>event.not-before</code> - The earliest start time for the event.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>volume-status.details-name</code> - The cause for
   *             <code>volume-status.status</code> (<code>io-enabled</code> |
   *           <code>io-performance</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>volume-status.details-status</code> - The status of
   *             <code>volume-status.details-name</code> (for <code>io-enabled</code>:
   *             <code>passed</code> | <code>failed</code>; for <code>io-performance</code>:
   *             <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> |
   *             <code>stalled</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>volume-status.status</code> - The status of the volume (<code>ok</code> |
   *             <code>impaired</code> | <code>warning</code> | <code>insufficient-data</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of volume results returned by <code>DescribeVolumeStatus</code> in
   *       paginated output. When this parameter is used, the request only returns
   *         <code>MaxResults</code> results in a single page along with a <code>NextToken</code>
   *       response element. The remaining results of the initial request can be seen by sending another
   *       request with the returned <code>NextToken</code> value. This value can be between 5 and 1000;
   *       if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned.
   *       If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all results. You
   *       cannot specify this parameter and the volume IDs parameter in the same request.</p>
   */
  MaxResults?: number;

  /**
   * <p>The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code>
   *       request. When the results of the request exceed <code>MaxResults</code>, this value can be
   *       used to retrieve the next page of results. This value is <code>null</code> when there are no
   *       more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the volumes.</p>
   *          <p>Default: Describes all your volumes.</p>
   */
  VolumeIds?: Array<string>;
}

export namespace DescribeVolumeStatusRequest {
  export function isa(o: any): o is DescribeVolumeStatusRequest {
    return _smithy.isa(o, "DescribeVolumeStatusRequest");
  }
}

export interface DescribeVolumeStatusResult extends $MetadataBearer {
  __type?: "DescribeVolumeStatusResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code>
   *       when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the status of the volumes.</p>
   */
  VolumeStatuses?: Array<VolumeStatusItem>;
}

export namespace DescribeVolumeStatusResult {
  export function isa(o: any): o is DescribeVolumeStatusResult {
    return _smithy.isa(o, "DescribeVolumeStatusResult");
  }
}

export interface DescribeVolumesModificationsRequest {
  __type?: "DescribeVolumesModificationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters. Supported filters: <code>volume-id</code>, <code>modification-state</code>,
   *         <code>target-size</code>, <code>target-iops</code>, <code>target-volume-type</code>,
   *         <code>original-size</code>, <code>original-iops</code>, <code>original-volume-type</code>,
   *         <code>start-time</code>. </p>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results (up to a limit of 500) to be returned in a paginated
   *       request.</p>
   */
  MaxResults?: number;

  /**
   * <p>The <code>nextToken</code> value returned by a previous paginated request.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of the volumes for which in-progress modifications will be described.</p>
   */
  VolumeIds?: Array<string>;
}

export namespace DescribeVolumesModificationsRequest {
  export function isa(o: any): o is DescribeVolumesModificationsRequest {
    return _smithy.isa(o, "DescribeVolumesModificationsRequest");
  }
}

export interface DescribeVolumesModificationsResult extends $MetadataBearer {
  __type?: "DescribeVolumesModificationsResult";
  /**
   * <p>Token for pagination, null if there are no more results </p>
   */
  NextToken?: string;

  /**
   * <p>Information about the volume modifications.</p>
   */
  VolumesModifications?: Array<VolumeModification>;
}

export namespace DescribeVolumesModificationsResult {
  export function isa(o: any): o is DescribeVolumesModificationsResult {
    return _smithy.isa(o, "DescribeVolumesModificationsResult");
  }
}

export interface DescribeVolumesRequest {
  __type?: "DescribeVolumesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>attachment.attach-time</code> - The time stamp when the attachment
   *           initiated.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>attachment.delete-on-termination</code> - Whether the volume is deleted on
   *           instance termination.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>attachment.device</code> - The device name specified in the block device mapping
   *           (for example, <code>/dev/sda1</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>attachment.instance-id</code> - The ID of the instance the volume is attached
   *           to.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>attachment.status</code> - The attachment state (<code>attaching</code> |
   *             <code>attached</code> | <code>detaching</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>availability-zone</code> - The Availability Zone in which the volume was
   *           created.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>create-time</code> - The time stamp when the volume was created.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>encrypted</code> - Indicates whether the volume is encrypted (<code>true</code>
   *           | <code>false</code>)</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>size</code> - The size of the volume, in GiB.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>snapshot-id</code> - The snapshot from which the volume was created.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status</code> - The status of the volume (<code>creating</code> |
   *             <code>available</code> | <code>in-use</code> | <code>deleting</code> |
   *             <code>deleted</code> | <code>error</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>volume-id</code> - The volume ID.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code>
   *           for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD,
   *             <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated
   *       output. When this parameter is used, <code>DescribeVolumes</code> only returns
   *         <code>MaxResults</code> results in a single page along with a <code>NextToken</code>
   *       response element. The remaining results of the initial request can be seen by sending another
   *         <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This
   *       value can be between 5 and 500; if <code>MaxResults</code> is given a value larger than 500,
   *       only 500 results are returned. If this parameter is not used, then
   *         <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the
   *       volume IDs parameter in the same request.</p>
   */
  MaxResults?: number;

  /**
   * <p>The <code>NextToken</code> value returned from a previous paginated
   *         <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results
   *       exceeded the value of that parameter. Pagination continues from the end of the previous
   *       results that returned the <code>NextToken</code> value. This value is <code>null</code> when
   *       there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The volume IDs.</p>
   */
  VolumeIds?: Array<string>;
}

export namespace DescribeVolumesRequest {
  export function isa(o: any): o is DescribeVolumesRequest {
    return _smithy.isa(o, "DescribeVolumesRequest");
  }
}

export interface DescribeVolumesResult extends $MetadataBearer {
  __type?: "DescribeVolumesResult";
  /**
   * <p>The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code>
   *       request. When the results of a <code>DescribeVolumes</code> request exceed
   *         <code>MaxResults</code>, this value can be used to retrieve the next page of results. This
   *       value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the volumes.</p>
   */
  Volumes?: Array<Volume>;
}

export namespace DescribeVolumesResult {
  export function isa(o: any): o is DescribeVolumesResult {
    return _smithy.isa(o, "DescribeVolumesResult");
  }
}

export interface DescribeVpcAttributeRequest {
  __type?: "DescribeVpcAttributeRequest";
  /**
   * <p>The VPC attribute.</p>
   */
  Attribute: VpcAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace DescribeVpcAttributeRequest {
  export function isa(o: any): o is DescribeVpcAttributeRequest {
    return _smithy.isa(o, "DescribeVpcAttributeRequest");
  }
}

export interface DescribeVpcAttributeResult extends $MetadataBearer {
  __type?: "DescribeVpcAttributeResult";
  /**
   * <p>Indicates whether the instances launched in the VPC get DNS hostnames.
   * 				If this attribute is <code>true</code>, instances in the VPC get DNS hostnames;
   * 				otherwise, they do not.</p>
   */
  EnableDnsHostnames?: AttributeBooleanValue;

  /**
   * <p>Indicates whether DNS resolution is enabled for
   * 				the VPC. If this attribute is <code>true</code>, the Amazon DNS server
   * 				resolves DNS hostnames for your instances to their corresponding
   * 				IP addresses; otherwise, it does not.</p>
   */
  EnableDnsSupport?: AttributeBooleanValue;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace DescribeVpcAttributeResult {
  export function isa(o: any): o is DescribeVpcAttributeResult {
    return _smithy.isa(o, "DescribeVpcAttributeResult");
  }
}

export interface DescribeVpcClassicLinkDnsSupportRequest {
  __type?: "DescribeVpcClassicLinkDnsSupportRequest";
  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more VPC IDs.</p>
   */
  VpcIds?: Array<string>;
}

export namespace DescribeVpcClassicLinkDnsSupportRequest {
  export function isa(o: any): o is DescribeVpcClassicLinkDnsSupportRequest {
    return _smithy.isa(o, "DescribeVpcClassicLinkDnsSupportRequest");
  }
}

export interface DescribeVpcClassicLinkDnsSupportResult
  extends $MetadataBearer {
  __type?: "DescribeVpcClassicLinkDnsSupportResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the ClassicLink DNS support status of the VPCs.</p>
   */
  Vpcs?: Array<ClassicLinkDnsSupport>;
}

export namespace DescribeVpcClassicLinkDnsSupportResult {
  export function isa(o: any): o is DescribeVpcClassicLinkDnsSupportResult {
    return _smithy.isa(o, "DescribeVpcClassicLinkDnsSupportResult");
  }
}

export interface DescribeVpcClassicLinkRequest {
  __type?: "DescribeVpcClassicLinkRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 				           <p>
   *                   <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink
   * 					   (<code>true</code> | <code>false</code>).</p>
   * 			         </li>
   *             <li>
   * 			            <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 			         </li>
   *             <li>
   *     			        <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 			         </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more VPCs for which you want to describe the ClassicLink status.</p>
   */
  VpcIds?: Array<string>;
}

export namespace DescribeVpcClassicLinkRequest {
  export function isa(o: any): o is DescribeVpcClassicLinkRequest {
    return _smithy.isa(o, "DescribeVpcClassicLinkRequest");
  }
}

export interface DescribeVpcClassicLinkResult extends $MetadataBearer {
  __type?: "DescribeVpcClassicLinkResult";
  /**
   * <p>The ClassicLink status of one or more VPCs.</p>
   */
  Vpcs?: Array<VpcClassicLink>;
}

export namespace DescribeVpcClassicLinkResult {
  export function isa(o: any): o is DescribeVpcClassicLinkResult {
    return _smithy.isa(o, "DescribeVpcClassicLinkResult");
  }
}

export interface DescribeVpcEndpointConnectionNotificationsRequest {
  __type?: "DescribeVpcEndpointConnectionNotificationsRequest";
  /**
   * <p>The ID of the notification.</p>
   */
  ConnectionNotificationId?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>connection-notification-arn</code> - The ARN of the SNS topic for the
   *                     notification.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>connection-notification-id</code> - The ID of the
   *                     notification.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>connection-notification-state</code> - The state of the notification
   *                         (<code>Enabled</code> | <code>Disabled</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>connection-notification-type</code> - The type of notification
   *                         (<code>Topic</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>service-id</code> - The ID of the endpoint service.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>vpc-endpoint-id</code> - The ID of the VPC endpoint.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return in a single call. To retrieve the remaining
   *             results, make another request with the returned <code>NextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to request the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeVpcEndpointConnectionNotificationsRequest {
  export function isa(
    o: any
  ): o is DescribeVpcEndpointConnectionNotificationsRequest {
    return _smithy.isa(o, "DescribeVpcEndpointConnectionNotificationsRequest");
  }
}

export interface DescribeVpcEndpointConnectionNotificationsResult
  extends $MetadataBearer {
  __type?: "DescribeVpcEndpointConnectionNotificationsResult";
  /**
   * <p>One or more notifications.</p>
   */
  ConnectionNotificationSet?: Array<ConnectionNotification>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is
   *             <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeVpcEndpointConnectionNotificationsResult {
  export function isa(
    o: any
  ): o is DescribeVpcEndpointConnectionNotificationsResult {
    return _smithy.isa(o, "DescribeVpcEndpointConnectionNotificationsResult");
  }
}

export interface DescribeVpcEndpointConnectionsRequest {
  __type?: "DescribeVpcEndpointConnectionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   *                 <p>
   *                   <code>service-id</code> - The ID of the service.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vpc-endpoint-owner</code> - The AWS account number of the owner of the
   *                     endpoint.</p>
   *             </li>
   *             <li>
   * 			            <p>
   *                   <code>vpc-endpoint-state</code> - The state of the endpoint
   * 			        (<code>pendingAcceptance</code> | <code>pending</code> |
   * 			        <code>available</code> | <code>deleting</code> | <code>deleted</code> |
   * 			        <code>rejected</code> | <code>failed</code>).</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>vpc-endpoint-id</code> - The ID of the endpoint.</p>
   * 			         </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining
   *             results of the initial request can be seen by sending another request with the returned
   *                 <code>NextToken</code> value. This value can be between 5 and 1,000; if
   *                 <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are
   *             returned.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace DescribeVpcEndpointConnectionsRequest {
  export function isa(o: any): o is DescribeVpcEndpointConnectionsRequest {
    return _smithy.isa(o, "DescribeVpcEndpointConnectionsRequest");
  }
}

export interface DescribeVpcEndpointConnectionsResult extends $MetadataBearer {
  __type?: "DescribeVpcEndpointConnectionsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about one or more VPC endpoint connections.</p>
   */
  VpcEndpointConnections?: Array<VpcEndpointConnection>;
}

export namespace DescribeVpcEndpointConnectionsResult {
  export function isa(o: any): o is DescribeVpcEndpointConnectionsResult {
    return _smithy.isa(o, "DescribeVpcEndpointConnectionsResult");
  }
}

export interface DescribeVpcEndpointServiceConfigurationsRequest {
  __type?: "DescribeVpcEndpointServiceConfigurationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 				           <p>
   *                   <code>service-name</code> - The name of the service.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>service-id</code> - The ID of the service.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>service-state</code> - The state of the service (<code>Pending</code> |
   *                         <code>Available</code> | <code>Deleting</code> | <code>Deleted</code> |
   *                         <code>Failed</code>). </p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   * 			         </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining
   *             results of the initial request can be seen by sending another request with the returned
   *                 <code>NextToken</code> value. This value can be between 5 and 1,000; if
   *                 <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are
   *             returned.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The IDs of one or more services.</p>
   */
  ServiceIds?: Array<string>;
}

export namespace DescribeVpcEndpointServiceConfigurationsRequest {
  export function isa(
    o: any
  ): o is DescribeVpcEndpointServiceConfigurationsRequest {
    return _smithy.isa(o, "DescribeVpcEndpointServiceConfigurationsRequest");
  }
}

export interface DescribeVpcEndpointServiceConfigurationsResult
  extends $MetadataBearer {
  __type?: "DescribeVpcEndpointServiceConfigurationsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about one or more services.</p>
   */
  ServiceConfigurations?: Array<ServiceConfiguration>;
}

export namespace DescribeVpcEndpointServiceConfigurationsResult {
  export function isa(
    o: any
  ): o is DescribeVpcEndpointServiceConfigurationsResult {
    return _smithy.isa(o, "DescribeVpcEndpointServiceConfigurationsResult");
  }
}

export interface DescribeVpcEndpointServicePermissionsRequest {
  __type?: "DescribeVpcEndpointServicePermissionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   * 		       <ul>
   *             <li>
   * 				           <p>
   *                   <code>principal</code> - The ARN of the principal.</p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>principal-type</code> - The principal type (<code>All</code> |
   * 						<code>Service</code> | <code>OrganizationUnit</code> | <code>Account</code>
   * 					| <code>User</code> | <code>Role</code>).</p>
   * 			         </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining
   *             results of the initial request can be seen by sending another request with the returned
   *                 <code>NextToken</code> value. This value can be between 5 and 1,000; if
   *                 <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are
   *             returned.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the service.</p>
   */
  ServiceId: string | undefined;
}

export namespace DescribeVpcEndpointServicePermissionsRequest {
  export function isa(
    o: any
  ): o is DescribeVpcEndpointServicePermissionsRequest {
    return _smithy.isa(o, "DescribeVpcEndpointServicePermissionsRequest");
  }
}

export interface DescribeVpcEndpointServicePermissionsResult
  extends $MetadataBearer {
  __type?: "DescribeVpcEndpointServicePermissionsResult";
  /**
   * <p>Information about one or more allowed principals.</p>
   */
  AllowedPrincipals?: Array<AllowedPrincipal>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace DescribeVpcEndpointServicePermissionsResult {
  export function isa(
    o: any
  ): o is DescribeVpcEndpointServicePermissionsResult {
    return _smithy.isa(o, "DescribeVpcEndpointServicePermissionsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeVpcEndpointServices.</p>
 */
export interface DescribeVpcEndpointServicesRequest {
  __type?: "DescribeVpcEndpointServicesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>service-name</code> - The name of the service.</p>
   *             </li>
   *             <li>
   *         		     <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *         	   </li>
   *             <li>
   *         		     <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *         	   </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p>
   *         <p>Constraint: If the value is greater than 1,000, we return only 1,000 items.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
   */
  NextToken?: string;

  /**
   * <p>One or more service names.</p>
   */
  ServiceNames?: Array<string>;
}

export namespace DescribeVpcEndpointServicesRequest {
  export function isa(o: any): o is DescribeVpcEndpointServicesRequest {
    return _smithy.isa(o, "DescribeVpcEndpointServicesRequest");
  }
}

/**
 * <p>Contains the output of DescribeVpcEndpointServices.</p>
 */
export interface DescribeVpcEndpointServicesResult extends $MetadataBearer {
  __type?: "DescribeVpcEndpointServicesResult";
  /**
   * <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the service.</p>
   */
  ServiceDetails?: Array<ServiceDetail>;

  /**
   * <p>A list of supported services.</p>
   */
  ServiceNames?: Array<string>;
}

export namespace DescribeVpcEndpointServicesResult {
  export function isa(o: any): o is DescribeVpcEndpointServicesResult {
    return _smithy.isa(o, "DescribeVpcEndpointServicesResult");
  }
}

/**
 * <p>Contains the parameters for DescribeVpcEndpoints.</p>
 */
export interface DescribeVpcEndpointsRequest {
  __type?: "DescribeVpcEndpointsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>service-name</code> - The name of the service.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>vpc-id</code> - The ID of the VPC in which the endpoint resides.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>vpc-endpoint-id</code> - The ID of the endpoint.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>vpc-endpoint-state</code> - The state of the endpoint
   *                         (<code>pendingAcceptance</code> | <code>pending</code> |
   *                         <code>available</code> | <code>deleting</code> | <code>deleted</code> |
   *                         <code>rejected</code> | <code>failed</code>).</p>
   *             </li>
   *             <li>
   *         		     <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *         	   </li>
   *             <li>
   *         		     <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *         	   </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p>
   *         <p>Constraint: If the value is greater than 1,000, we return only 1,000 items.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next set of items to return. (You received this token from a prior call.)</p>
   */
  NextToken?: string;

  /**
   * <p>One or more endpoint IDs.</p>
   */
  VpcEndpointIds?: Array<string>;
}

export namespace DescribeVpcEndpointsRequest {
  export function isa(o: any): o is DescribeVpcEndpointsRequest {
    return _smithy.isa(o, "DescribeVpcEndpointsRequest");
  }
}

/**
 * <p>Contains the output of DescribeVpcEndpoints.</p>
 */
export interface DescribeVpcEndpointsResult extends $MetadataBearer {
  __type?: "DescribeVpcEndpointsResult";
  /**
   * <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the endpoints.</p>
   */
  VpcEndpoints?: Array<VpcEndpoint>;
}

export namespace DescribeVpcEndpointsResult {
  export function isa(o: any): o is DescribeVpcEndpointsResult {
    return _smithy.isa(o, "DescribeVpcEndpointsResult");
  }
}

export interface DescribeVpcPeeringConnectionsRequest {
  __type?: "DescribeVpcPeeringConnectionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                     <code>accepter-vpc-info.cidr-block</code> - The IPv4 CIDR block of the accepter
   *                     VPC.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the
   *                     accepter VPC.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>accepter-vpc-info.vpc-id</code> - The ID of the accepter VPC.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>expiration-time</code> - The expiration date and time for the VPC peering
   *           connection.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>requester-vpc-info.cidr-block</code> - The IPv4 CIDR block of the
   *                     requester's VPC.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the
   *           requester VPC.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>status-code</code> - The status of the VPC peering connection
   *                         (<code>pending-acceptance</code> | <code>failed</code> |
   *                         <code>expired</code> | <code>provisioning</code> | <code>active</code> |
   *                         <code>deleting</code> | <code>deleted</code> |
   *                     <code>rejected</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>status-message</code> - A message that provides more information about the status
   *           of the VPC peering connection, if applicable.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more VPC peering connection IDs.</p>
   *          <p>Default: Describes all your VPC peering connections.</p>
   */
  VpcPeeringConnectionIds?: Array<string>;
}

export namespace DescribeVpcPeeringConnectionsRequest {
  export function isa(o: any): o is DescribeVpcPeeringConnectionsRequest {
    return _smithy.isa(o, "DescribeVpcPeeringConnectionsRequest");
  }
}

export interface DescribeVpcPeeringConnectionsResult extends $MetadataBearer {
  __type?: "DescribeVpcPeeringConnectionsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the VPC peering connections.</p>
   */
  VpcPeeringConnections?: Array<VpcPeeringConnection>;
}

export namespace DescribeVpcPeeringConnectionsResult {
  export function isa(o: any): o is DescribeVpcPeeringConnectionsResult {
    return _smithy.isa(o, "DescribeVpcPeeringConnectionsResult");
  }
}

export interface DescribeVpcsRequest {
  __type?: "DescribeVpcsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you
   *                     specify must exactly match the VPC's CIDR block for information to be returned
   *                     for the VPC. Must contain the slash followed by one or two digits (for example,
   *                     <code>/28</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with the
   *                     VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>cidr-block-association.association-id</code> - The association ID for
   *                     an IPv4 CIDR block associated with the VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>cidr-block-association.state</code> - The state of an IPv4 CIDR block
   *                     associated with the VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR
   *                     block associated with the VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ipv6-cidr-block-association.ipv6-pool</code> - The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ipv6-cidr-block-association.association-id</code> - The association
   *                     ID for an IPv6 CIDR block associated with the VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR
   *                     block associated with the VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>isDefault</code> - Indicates whether the VPC is the default VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>owner-id</code> - The ID of the AWS account that owns the VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>vpc-id</code> - The ID of the VPC.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>One or more VPC IDs.</p>
   * 		       <p>Default: Describes all your VPCs.</p>
   */
  VpcIds?: Array<string>;
}

export namespace DescribeVpcsRequest {
  export function isa(o: any): o is DescribeVpcsRequest {
    return _smithy.isa(o, "DescribeVpcsRequest");
  }
}

export interface DescribeVpcsResult extends $MetadataBearer {
  __type?: "DescribeVpcsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about one or more VPCs.</p>
   */
  Vpcs?: Array<Vpc>;
}

export namespace DescribeVpcsResult {
  export function isa(o: any): o is DescribeVpcsResult {
    return _smithy.isa(o, "DescribeVpcsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeVpnConnections.</p>
 */
export interface DescribeVpnConnectionsRequest {
  __type?: "DescribeVpnConnectionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>vpn-connection-id</code> - The ID of the VPN connection.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>transit-gateway-id</code> - The ID of a transit gateway associated with the VPN connection.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more VPN connection IDs.</p>
   *         <p>Default: Describes your VPN connections.</p>
   */
  VpnConnectionIds?: Array<string>;
}

export namespace DescribeVpnConnectionsRequest {
  export function isa(o: any): o is DescribeVpnConnectionsRequest {
    return _smithy.isa(o, "DescribeVpnConnectionsRequest");
  }
}

/**
 * <p>Contains the output of DescribeVpnConnections.</p>
 */
export interface DescribeVpnConnectionsResult extends $MetadataBearer {
  __type?: "DescribeVpnConnectionsResult";
  /**
   * <p>Information about one or more VPN connections.</p>
   */
  VpnConnections?: Array<VpnConnection>;
}

export namespace DescribeVpnConnectionsResult {
  export function isa(o: any): o is DescribeVpnConnectionsResult {
    return _smithy.isa(o, "DescribeVpnConnectionsResult");
  }
}

/**
 * <p>Contains the parameters for DescribeVpnGateways.</p>
 */
export interface DescribeVpnGatewaysRequest {
  __type?: "DescribeVpnGatewaysRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   *         <ul>
   *             <li>
   * 				           <p>
   *                   <code>amazon-side-asn</code> - The Autonomous System Number (ASN) for the Amazon side of the gateway.</p>
   * 			         </li>
   *             <li>
   *                 <p>
   *                   <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>attachment.vpc-id</code> - The ID of an attached VPC.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
   *     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>One or more virtual private gateway IDs.</p>
   *         <p>Default: Describes all your virtual private gateways.</p>
   */
  VpnGatewayIds?: Array<string>;
}

export namespace DescribeVpnGatewaysRequest {
  export function isa(o: any): o is DescribeVpnGatewaysRequest {
    return _smithy.isa(o, "DescribeVpnGatewaysRequest");
  }
}

/**
 * <p>Contains the output of DescribeVpnGateways.</p>
 */
export interface DescribeVpnGatewaysResult extends $MetadataBearer {
  __type?: "DescribeVpnGatewaysResult";
  /**
   * <p>Information about one or more virtual private gateways.</p>
   */
  VpnGateways?: Array<VpnGateway>;
}

export namespace DescribeVpnGatewaysResult {
  export function isa(o: any): o is DescribeVpnGatewaysResult {
    return _smithy.isa(o, "DescribeVpnGatewaysResult");
  }
}

export interface DetachClassicLinkVpcRequest {
  __type?: "DetachClassicLinkVpcRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance to unlink from the VPC.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The ID of the VPC to which the instance is linked.</p>
   */
  VpcId: string | undefined;
}

export namespace DetachClassicLinkVpcRequest {
  export function isa(o: any): o is DetachClassicLinkVpcRequest {
    return _smithy.isa(o, "DetachClassicLinkVpcRequest");
  }
}

export interface DetachClassicLinkVpcResult extends $MetadataBearer {
  __type?: "DetachClassicLinkVpcResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace DetachClassicLinkVpcResult {
  export function isa(o: any): o is DetachClassicLinkVpcResult {
    return _smithy.isa(o, "DetachClassicLinkVpcResult");
  }
}

export interface DetachInternetGatewayRequest {
  __type?: "DetachInternetGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the internet gateway.</p>
   */
  InternetGatewayId: string | undefined;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace DetachInternetGatewayRequest {
  export function isa(o: any): o is DetachInternetGatewayRequest {
    return _smithy.isa(o, "DetachInternetGatewayRequest");
  }
}

/**
 * <p>Contains the parameters for DetachNetworkInterface.</p>
 */
export interface DetachNetworkInterfaceRequest {
  __type?: "DetachNetworkInterfaceRequest";
  /**
   * <p>The ID of the attachment.</p>
   */
  AttachmentId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specifies whether to force a detachment.</p>
   *         <note>
   *             <ul>
   *                <li>
   *                     <p>Use the <code>Force</code> parameter only as a last resort to detach a network interface from a failed instance. </p>
   *                 </li>
   *                <li>
   *                     <p>If you use the <code>Force</code> parameter to detach a network interface, you might not be able to attach a different network interface to the same index on the instance without first stopping and starting the instance.</p>
   *                 </li>
   *                <li>
   *                     <p>If you force the detachment of a network interface, the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">instance metadata</a>
   *                         might not get updated. This means that the attributes associated
   *                         with the detached network interface might still be visible. The
   *                         instance metadata will get updated when you stop and start the
   *                         instance.</p>
   *                 </li>
   *             </ul>
   *         </note>
   */
  Force?: boolean;
}

export namespace DetachNetworkInterfaceRequest {
  export function isa(o: any): o is DetachNetworkInterfaceRequest {
    return _smithy.isa(o, "DetachNetworkInterfaceRequest");
  }
}

export interface DetachVolumeRequest {
  __type?: "DetachVolumeRequest";
  /**
   * <p>The device name.</p>
   */
  Device?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Forces detachment if the previous detachment attempt did not occur cleanly (for example,
   *       logging into an instance, unmounting the volume, and detaching normally). This option can lead
   *       to data loss or a corrupted file system. Use this option only as a last resort to detach a
   *       volume from a failed instance. The instance won't have an opportunity to flush file system
   *       caches or file system metadata. If you use this option, you must perform file system check and
   *       repair procedures.</p>
   */
  Force?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId: string | undefined;
}

export namespace DetachVolumeRequest {
  export function isa(o: any): o is DetachVolumeRequest {
    return _smithy.isa(o, "DetachVolumeRequest");
  }
}

/**
 * <p>Contains the parameters for DetachVpnGateway.</p>
 */
export interface DetachVpnGatewayRequest {
  __type?: "DetachVpnGatewayRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;

  /**
   * <p>The ID of the virtual private gateway.</p>
   */
  VpnGatewayId: string | undefined;
}

export namespace DetachVpnGatewayRequest {
  export function isa(o: any): o is DetachVpnGatewayRequest {
    return _smithy.isa(o, "DetachVpnGatewayRequest");
  }
}

export type DeviceType = "ebs" | "instance-store";

/**
 * <p>Describes a DHCP configuration option.</p>
 */
export interface DhcpConfiguration {
  __type?: "DhcpConfiguration";
  /**
   * <p>The name of a DHCP option.</p>
   */
  Key?: string;

  /**
   * <p>One or more values for the DHCP option.</p>
   */
  Values?: Array<AttributeValue>;
}

export namespace DhcpConfiguration {
  export function isa(o: any): o is DhcpConfiguration {
    return _smithy.isa(o, "DhcpConfiguration");
  }
}

/**
 * <p>Describes a set of DHCP options.</p>
 */
export interface DhcpOptions {
  __type?: "DhcpOptions";
  /**
   * <p>One or more DHCP options in the set.</p>
   */
  DhcpConfigurations?: Array<DhcpConfiguration>;

  /**
   * <p>The ID of the set of DHCP options.</p>
   */
  DhcpOptionsId?: string;

  /**
   * <p>The ID of the AWS account that owns the DHCP options set.</p>
   */
  OwnerId?: string;

  /**
   * <p>Any tags assigned to the DHCP options set.</p>
   */
  Tags?: Array<Tag>;
}

export namespace DhcpOptions {
  export function isa(o: any): o is DhcpOptions {
    return _smithy.isa(o, "DhcpOptions");
  }
}

/**
 * <p>Describes an Active Directory.</p>
 */
export interface DirectoryServiceAuthentication {
  __type?: "DirectoryServiceAuthentication";
  /**
   * <p>The ID of the Active Directory used for authentication.</p>
   */
  DirectoryId?: string;
}

export namespace DirectoryServiceAuthentication {
  export function isa(o: any): o is DirectoryServiceAuthentication {
    return _smithy.isa(o, "DirectoryServiceAuthentication");
  }
}

/**
 * <p>Describes the Active Directory to be used for client authentication.</p>
 */
export interface DirectoryServiceAuthenticationRequest {
  __type?: "DirectoryServiceAuthenticationRequest";
  /**
   * <p>The ID of the Active Directory to be used for authentication.</p>
   */
  DirectoryId?: string;
}

export namespace DirectoryServiceAuthenticationRequest {
  export function isa(o: any): o is DirectoryServiceAuthenticationRequest {
    return _smithy.isa(o, "DirectoryServiceAuthenticationRequest");
  }
}

export interface DisableEbsEncryptionByDefaultRequest {
  __type?: "DisableEbsEncryptionByDefaultRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DisableEbsEncryptionByDefaultRequest {
  export function isa(o: any): o is DisableEbsEncryptionByDefaultRequest {
    return _smithy.isa(o, "DisableEbsEncryptionByDefaultRequest");
  }
}

export interface DisableEbsEncryptionByDefaultResult extends $MetadataBearer {
  __type?: "DisableEbsEncryptionByDefaultResult";
  /**
   * <p>The updated status of encryption by default.</p>
   */
  EbsEncryptionByDefault?: boolean;
}

export namespace DisableEbsEncryptionByDefaultResult {
  export function isa(o: any): o is DisableEbsEncryptionByDefaultResult {
    return _smithy.isa(o, "DisableEbsEncryptionByDefaultResult");
  }
}

/**
 * <p>Contains information about the errors that occurred when disabling fast snapshot restores.</p>
 */
export interface DisableFastSnapshotRestoreErrorItem {
  __type?: "DisableFastSnapshotRestoreErrorItem";
  /**
   * <p>The errors.</p>
   */
  FastSnapshotRestoreStateErrors?: Array<
    DisableFastSnapshotRestoreStateErrorItem
  >;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;
}

export namespace DisableFastSnapshotRestoreErrorItem {
  export function isa(o: any): o is DisableFastSnapshotRestoreErrorItem {
    return _smithy.isa(o, "DisableFastSnapshotRestoreErrorItem");
  }
}

/**
 * <p>Describes an error that occurred when disabling fast snapshot restores.</p>
 */
export interface DisableFastSnapshotRestoreStateError {
  __type?: "DisableFastSnapshotRestoreStateError";
  /**
   * <p>The error code.</p>
   */
  Code?: string;

  /**
   * <p>The error message.</p>
   */
  Message?: string;
}

export namespace DisableFastSnapshotRestoreStateError {
  export function isa(o: any): o is DisableFastSnapshotRestoreStateError {
    return _smithy.isa(o, "DisableFastSnapshotRestoreStateError");
  }
}

/**
 * <p>Contains information about an error that occurred when disabling fast snapshot restores.</p>
 */
export interface DisableFastSnapshotRestoreStateErrorItem {
  __type?: "DisableFastSnapshotRestoreStateErrorItem";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The error.</p>
   */
  Error?: DisableFastSnapshotRestoreStateError;
}

export namespace DisableFastSnapshotRestoreStateErrorItem {
  export function isa(o: any): o is DisableFastSnapshotRestoreStateErrorItem {
    return _smithy.isa(o, "DisableFastSnapshotRestoreStateErrorItem");
  }
}

/**
 * <p>Describes fast snapshot restores that were successfully disabled.</p>
 */
export interface DisableFastSnapshotRestoreSuccessItem {
  __type?: "DisableFastSnapshotRestoreSuccessItem";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The time at which fast snapshot restores entered the <code>disabled</code> state.</p>
   */
  DisabledTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>disabling</code> state.</p>
   */
  DisablingTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>enabled</code> state.</p>
   */
  EnabledTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>enabling</code> state.</p>
   */
  EnablingTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>optimizing</code> state.</p>
   */
  OptimizingTime?: Date;

  /**
   * <p>The alias of the snapshot owner.</p>
   */
  OwnerAlias?: string;

  /**
   * <p>The ID of the AWS account that owns the snapshot.</p>
   */
  OwnerId?: string;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The state of fast snapshot restores for the snapshot.</p>
   */
  State?: FastSnapshotRestoreStateCode | string;

  /**
   * <p>The reason for the state transition. The possible values are as follows:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or
   *           <code>disabling</code>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned
   *           to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p>
   *             </li>
   *          </ul>
   */
  StateTransitionReason?: string;
}

export namespace DisableFastSnapshotRestoreSuccessItem {
  export function isa(o: any): o is DisableFastSnapshotRestoreSuccessItem {
    return _smithy.isa(o, "DisableFastSnapshotRestoreSuccessItem");
  }
}

export interface DisableFastSnapshotRestoresRequest {
  __type?: "DisableFastSnapshotRestoresRequest";
  /**
   * <p>One or more Availability Zones. For example, <code>us-east-2a</code>.</p>
   */
  AvailabilityZones: Array<string> | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>.</p>
   */
  SourceSnapshotIds: Array<string> | undefined;
}

export namespace DisableFastSnapshotRestoresRequest {
  export function isa(o: any): o is DisableFastSnapshotRestoresRequest {
    return _smithy.isa(o, "DisableFastSnapshotRestoresRequest");
  }
}

export interface DisableFastSnapshotRestoresResult extends $MetadataBearer {
  __type?: "DisableFastSnapshotRestoresResult";
  /**
   * <p>Information about the snapshots for which fast snapshot restores were successfully disabled.</p>
   */
  Successful?: Array<DisableFastSnapshotRestoreSuccessItem>;

  /**
   * <p>Information about the snapshots for which fast snapshot restores could not be disabled.</p>
   */
  Unsuccessful?: Array<DisableFastSnapshotRestoreErrorItem>;
}

export namespace DisableFastSnapshotRestoresResult {
  export function isa(o: any): o is DisableFastSnapshotRestoresResult {
    return _smithy.isa(o, "DisableFastSnapshotRestoresResult");
  }
}

export interface DisableTransitGatewayRouteTablePropagationRequest {
  __type?: "DisableTransitGatewayRouteTablePropagationRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;

  /**
   * <p>The ID of the propagation route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace DisableTransitGatewayRouteTablePropagationRequest {
  export function isa(
    o: any
  ): o is DisableTransitGatewayRouteTablePropagationRequest {
    return _smithy.isa(o, "DisableTransitGatewayRouteTablePropagationRequest");
  }
}

export interface DisableTransitGatewayRouteTablePropagationResult
  extends $MetadataBearer {
  __type?: "DisableTransitGatewayRouteTablePropagationResult";
  /**
   * <p>Information about route propagation.</p>
   */
  Propagation?: TransitGatewayPropagation;
}

export namespace DisableTransitGatewayRouteTablePropagationResult {
  export function isa(
    o: any
  ): o is DisableTransitGatewayRouteTablePropagationResult {
    return _smithy.isa(o, "DisableTransitGatewayRouteTablePropagationResult");
  }
}

/**
 * <p>Contains the parameters for DisableVgwRoutePropagation.</p>
 */
export interface DisableVgwRoutePropagationRequest {
  __type?: "DisableVgwRoutePropagationRequest";
  /**
   * <p>The ID of the virtual private gateway.</p>
   */
  GatewayId: string | undefined;

  /**
   * <p>The ID of the route table.</p>
   */
  RouteTableId: string | undefined;
}

export namespace DisableVgwRoutePropagationRequest {
  export function isa(o: any): o is DisableVgwRoutePropagationRequest {
    return _smithy.isa(o, "DisableVgwRoutePropagationRequest");
  }
}

export interface DisableVpcClassicLinkDnsSupportRequest {
  __type?: "DisableVpcClassicLinkDnsSupportRequest";
  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace DisableVpcClassicLinkDnsSupportRequest {
  export function isa(o: any): o is DisableVpcClassicLinkDnsSupportRequest {
    return _smithy.isa(o, "DisableVpcClassicLinkDnsSupportRequest");
  }
}

export interface DisableVpcClassicLinkDnsSupportResult extends $MetadataBearer {
  __type?: "DisableVpcClassicLinkDnsSupportResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace DisableVpcClassicLinkDnsSupportResult {
  export function isa(o: any): o is DisableVpcClassicLinkDnsSupportResult {
    return _smithy.isa(o, "DisableVpcClassicLinkDnsSupportResult");
  }
}

export interface DisableVpcClassicLinkRequest {
  __type?: "DisableVpcClassicLinkRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace DisableVpcClassicLinkRequest {
  export function isa(o: any): o is DisableVpcClassicLinkRequest {
    return _smithy.isa(o, "DisableVpcClassicLinkRequest");
  }
}

export interface DisableVpcClassicLinkResult extends $MetadataBearer {
  __type?: "DisableVpcClassicLinkResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace DisableVpcClassicLinkResult {
  export function isa(o: any): o is DisableVpcClassicLinkResult {
    return _smithy.isa(o, "DisableVpcClassicLinkResult");
  }
}

export interface DisassociateAddressRequest {
  __type?: "DisassociateAddressRequest";
  /**
   * <p>[EC2-VPC] The association ID. Required for EC2-VPC.</p>
   */
  AssociationId?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</p>
   */
  PublicIp?: string;
}

export namespace DisassociateAddressRequest {
  export function isa(o: any): o is DisassociateAddressRequest {
    return _smithy.isa(o, "DisassociateAddressRequest");
  }
}

export interface DisassociateClientVpnTargetNetworkRequest {
  __type?: "DisassociateClientVpnTargetNetworkRequest";
  /**
   * <p>The ID of the target network association.</p>
   */
  AssociationId: string | undefined;

  /**
   * <p>The ID of the Client VPN endpoint from which to disassociate the target network.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DisassociateClientVpnTargetNetworkRequest {
  export function isa(o: any): o is DisassociateClientVpnTargetNetworkRequest {
    return _smithy.isa(o, "DisassociateClientVpnTargetNetworkRequest");
  }
}

export interface DisassociateClientVpnTargetNetworkResult
  extends $MetadataBearer {
  __type?: "DisassociateClientVpnTargetNetworkResult";
  /**
   * <p>The ID of the target network association.</p>
   */
  AssociationId?: string;

  /**
   * <p>The current state of the target network association.</p>
   */
  Status?: AssociationStatus;
}

export namespace DisassociateClientVpnTargetNetworkResult {
  export function isa(o: any): o is DisassociateClientVpnTargetNetworkResult {
    return _smithy.isa(o, "DisassociateClientVpnTargetNetworkResult");
  }
}

export interface DisassociateIamInstanceProfileRequest {
  __type?: "DisassociateIamInstanceProfileRequest";
  /**
   * <p>The ID of the IAM instance profile association.</p>
   */
  AssociationId: string | undefined;
}

export namespace DisassociateIamInstanceProfileRequest {
  export function isa(o: any): o is DisassociateIamInstanceProfileRequest {
    return _smithy.isa(o, "DisassociateIamInstanceProfileRequest");
  }
}

export interface DisassociateIamInstanceProfileResult extends $MetadataBearer {
  __type?: "DisassociateIamInstanceProfileResult";
  /**
   * <p>Information about the IAM instance profile association.</p>
   */
  IamInstanceProfileAssociation?: IamInstanceProfileAssociation;
}

export namespace DisassociateIamInstanceProfileResult {
  export function isa(o: any): o is DisassociateIamInstanceProfileResult {
    return _smithy.isa(o, "DisassociateIamInstanceProfileResult");
  }
}

export interface DisassociateRouteTableRequest {
  __type?: "DisassociateRouteTableRequest";
  /**
   * <p>The association ID representing the current association between the route table and subnet.</p>
   */
  AssociationId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace DisassociateRouteTableRequest {
  export function isa(o: any): o is DisassociateRouteTableRequest {
    return _smithy.isa(o, "DisassociateRouteTableRequest");
  }
}

export interface DisassociateSubnetCidrBlockRequest {
  __type?: "DisassociateSubnetCidrBlockRequest";
  /**
   * <p>The association ID for the CIDR block.</p>
   */
  AssociationId: string | undefined;
}

export namespace DisassociateSubnetCidrBlockRequest {
  export function isa(o: any): o is DisassociateSubnetCidrBlockRequest {
    return _smithy.isa(o, "DisassociateSubnetCidrBlockRequest");
  }
}

export interface DisassociateSubnetCidrBlockResult extends $MetadataBearer {
  __type?: "DisassociateSubnetCidrBlockResult";
  /**
   * <p>Information about the IPv6 CIDR block association.</p>
   */
  Ipv6CidrBlockAssociation?: SubnetIpv6CidrBlockAssociation;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;
}

export namespace DisassociateSubnetCidrBlockResult {
  export function isa(o: any): o is DisassociateSubnetCidrBlockResult {
    return _smithy.isa(o, "DisassociateSubnetCidrBlockResult");
  }
}

export interface DisassociateTransitGatewayMulticastDomainRequest {
  __type?: "DisassociateTransitGatewayMulticastDomainRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the subnets;</p>
   */
  SubnetIds?: Array<string>;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace DisassociateTransitGatewayMulticastDomainRequest {
  export function isa(
    o: any
  ): o is DisassociateTransitGatewayMulticastDomainRequest {
    return _smithy.isa(o, "DisassociateTransitGatewayMulticastDomainRequest");
  }
}

export interface DisassociateTransitGatewayMulticastDomainResult
  extends $MetadataBearer {
  __type?: "DisassociateTransitGatewayMulticastDomainResult";
  /**
   * <p>Information about the association.</p>
   */
  Associations?: TransitGatewayMulticastDomainAssociations;
}

export namespace DisassociateTransitGatewayMulticastDomainResult {
  export function isa(
    o: any
  ): o is DisassociateTransitGatewayMulticastDomainResult {
    return _smithy.isa(o, "DisassociateTransitGatewayMulticastDomainResult");
  }
}

export interface DisassociateTransitGatewayRouteTableRequest {
  __type?: "DisassociateTransitGatewayRouteTableRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace DisassociateTransitGatewayRouteTableRequest {
  export function isa(
    o: any
  ): o is DisassociateTransitGatewayRouteTableRequest {
    return _smithy.isa(o, "DisassociateTransitGatewayRouteTableRequest");
  }
}

export interface DisassociateTransitGatewayRouteTableResult
  extends $MetadataBearer {
  __type?: "DisassociateTransitGatewayRouteTableResult";
  /**
   * <p>Information about the association.</p>
   */
  Association?: TransitGatewayAssociation;
}

export namespace DisassociateTransitGatewayRouteTableResult {
  export function isa(o: any): o is DisassociateTransitGatewayRouteTableResult {
    return _smithy.isa(o, "DisassociateTransitGatewayRouteTableResult");
  }
}

export interface DisassociateVpcCidrBlockRequest {
  __type?: "DisassociateVpcCidrBlockRequest";
  /**
   * <p>The association ID for the CIDR block.</p>
   */
  AssociationId: string | undefined;
}

export namespace DisassociateVpcCidrBlockRequest {
  export function isa(o: any): o is DisassociateVpcCidrBlockRequest {
    return _smithy.isa(o, "DisassociateVpcCidrBlockRequest");
  }
}

export interface DisassociateVpcCidrBlockResult extends $MetadataBearer {
  __type?: "DisassociateVpcCidrBlockResult";
  /**
   * <p>Information about the IPv4 CIDR block association.</p>
   */
  CidrBlockAssociation?: VpcCidrBlockAssociation;

  /**
   * <p>Information about the IPv6 CIDR block association.</p>
   */
  Ipv6CidrBlockAssociation?: VpcIpv6CidrBlockAssociation;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace DisassociateVpcCidrBlockResult {
  export function isa(o: any): o is DisassociateVpcCidrBlockResult {
    return _smithy.isa(o, "DisassociateVpcCidrBlockResult");
  }
}

/**
 * <p>Describes a disk image.</p>
 */
export interface DiskImage {
  __type?: "DiskImage";
  /**
   * <p>A description of the disk image.</p>
   */
  Description?: string;

  /**
   * <p>Information about the disk image.</p>
   */
  Image?: DiskImageDetail;

  /**
   * <p>Information about the volume.</p>
   */
  Volume?: VolumeDetail;
}

export namespace DiskImage {
  export function isa(o: any): o is DiskImage {
    return _smithy.isa(o, "DiskImage");
  }
}

/**
 * <p>Describes a disk image.</p>
 */
export interface DiskImageDescription {
  __type?: "DiskImageDescription";
  /**
   * <p>The checksum computed for the disk image.</p>
   */
  Checksum?: string;

  /**
   * <p>The disk image format.</p>
   */
  Format?: DiskImageFormat | string;

  /**
   * <p>A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for
   *    an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in
   *    the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
   *          <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
   */
  ImportManifestUrl?: string;

  /**
   * <p>The size of the disk image, in GiB.</p>
   */
  Size?: number;
}

export namespace DiskImageDescription {
  export function isa(o: any): o is DiskImageDescription {
    return _smithy.isa(o, "DiskImageDescription");
  }
}

/**
 * <p>Describes a disk image.</p>
 */
export interface DiskImageDetail {
  __type?: "DiskImageDetail";
  /**
   * <p>The size of the disk image, in GiB.</p>
   */
  Bytes: number | undefined;

  /**
   * <p>The disk image format.</p>
   */
  Format: DiskImageFormat | string | undefined;

  /**
   * <p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL.
   *    For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication
   *    Alternative" section of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer
   *     Guide</i>.</p>
   *          <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
   */
  ImportManifestUrl: string | undefined;
}

export namespace DiskImageDetail {
  export function isa(o: any): o is DiskImageDetail {
    return _smithy.isa(o, "DiskImageDetail");
  }
}

export type DiskImageFormat = "RAW" | "VHD" | "VMDK";

/**
 * <p>Describes a disk image volume.</p>
 */
export interface DiskImageVolumeDescription {
  __type?: "DiskImageVolumeDescription";
  /**
   * <p>The volume identifier.</p>
   */
  Id?: string;

  /**
   * <p>The size of the volume, in GiB.</p>
   */
  Size?: number;
}

export namespace DiskImageVolumeDescription {
  export function isa(o: any): o is DiskImageVolumeDescription {
    return _smithy.isa(o, "DiskImageVolumeDescription");
  }
}

/**
 * <p>Describes the disk.</p>
 */
export interface DiskInfo {
  __type?: "DiskInfo";
  /**
   * <p>The number of disks with this configuration.</p>
   */
  Count?: number;

  /**
   * <p>The size of the disk in GB.</p>
   */
  SizeInGB?: number;

  /**
   * <p>The type of disk.</p>
   */
  Type?: DiskType | string;
}

export namespace DiskInfo {
  export function isa(o: any): o is DiskInfo {
    return _smithy.isa(o, "DiskInfo");
  }
}

export type DiskType = "hdd" | "ssd";

/**
 * <p>Describes a DNS entry.</p>
 */
export interface DnsEntry {
  __type?: "DnsEntry";
  /**
   * <p>The DNS name.</p>
   */
  DnsName?: string;

  /**
   * <p>The ID of the private hosted zone.</p>
   */
  HostedZoneId?: string;
}

export namespace DnsEntry {
  export function isa(o: any): o is DnsEntry {
    return _smithy.isa(o, "DnsEntry");
  }
}

export enum DnsNameState {
  Failed = "failed",
  PendingVerification = "pendingVerification",
  Verified = "verified"
}

/**
 * <p>Information about the DNS server to be used.</p>
 */
export interface DnsServersOptionsModifyStructure {
  __type?: "DnsServersOptionsModifyStructure";
  /**
   * <p>The IPv4 address range, in CIDR notation, of the DNS servers to be used. You can specify up to
   * 			two DNS servers. Ensure that the DNS servers can be reached by the clients. The specified values
   * 			overwrite the existing values.</p>
   */
  CustomDnsServers?: Array<string>;

  /**
   * <p>Indicates whether DNS servers should be used. Specify <code>False</code> to delete the existing DNS
   * 			servers.</p>
   */
  Enabled?: boolean;
}

export namespace DnsServersOptionsModifyStructure {
  export function isa(o: any): o is DnsServersOptionsModifyStructure {
    return _smithy.isa(o, "DnsServersOptionsModifyStructure");
  }
}

export type DnsSupportValue = "disable" | "enable";

export type DomainType = "standard" | "vpc";

/**
 * <p>Describes a block device for an EBS volume.</p>
 */
export interface EbsBlockDevice {
  __type?: "EbsBlockDevice";
  /**
   * <p>Indicates whether the EBS volume is deleted on instance termination. For more
   *             information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination">Preserving Amazon EBS Volumes on Instance Termination</a> in the
   *             Amazon Elastic Compute Cloud User Guide.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>Indicates whether the encryption state of an EBS volume is changed while being
   *             restored from a backing snapshot.
   *             The effect of setting the encryption state to <code>true</code> depends on
   * the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled.
   *             For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters">Amazon EBS Encryption</a>
   *             in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         <p>In no case can you remove encryption from an encrypted volume.</p>
   *         <p>Encrypted volumes can only be attached to instances that support Amazon EBS
   *             encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported Instance Types</a>.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The number of I/O operations per second (IOPS) that the volume supports. For
   *             <code>io1</code> volumes, this represents the number of IOPS that are provisioned
   *             for the volume. For <code>gp2</code> volumes, this represents the baseline performance
   *             of the volume and the rate at which the volume accumulates I/O credits for bursting. For
   *             more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the
   *             <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         <p>Constraints: Range is 100-16,000 IOPS for <code>gp2</code> volumes and
   *             100 to 64,000IOPS for <code>io1</code> volumes in
   *             most Regions. Maximum <code>io1</code> IOPS of 64,000 is guaranteed
   *             only on <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based
   *                 instances</a>. Other instance families guarantee performance up to
   *             32,000 IOPS. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume
   *                 Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         <p>Condition: This parameter is required for requests to create <code>io1</code> volumes;
   *             it is not used in requests to create <code>gp2</code>, <code>st1</code>,
   *                 <code>sc1</code>, or <code>standard</code> volumes.</p>
   */
  Iops?: number;

  /**
   * <p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under
   *             which the EBS volume is encrypted.</p>
   *         <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by
   *                 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html">RequestSpotFleet</a>,
   *             and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html">RequestSpotInstances</a>.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The size of the volume, in GiB.</p>
   *         <p>Default: If you're creating the volume from a snapshot and don't specify a volume
   *             size, the default is the snapshot size.</p>
   *         <p>Constraints: 1-16384 for General Purpose SSD (<code>gp2</code>), 4-16384 for
   *             Provisioned IOPS SSD (<code>io1</code>), 500-16384 for Throughput Optimized HDD
   *                 (<code>st1</code>), 500-16384 for Cold HDD (<code>sc1</code>), and 1-1024 for
   *             Magnetic (<code>standard</code>) volumes. If you specify a snapshot, the volume size
   *             must be equal to or larger than the snapshot size.</p>
   */
  VolumeSize?: number;

  /**
   * <p>The volume type. If you set the type to <code>io1</code>, you must also specify
   *         	the <b>Iops</b> parameter. If you set the type to <code>gp2</code>,
   *         	<code>st1</code>, <code>sc1</code>, or <code>standard</code>, you must omit
   *         	the <b>Iops</b> parameter.</p>
   *         <p>Default: <code>gp2</code>
   *          </p>
   */
  VolumeType?: VolumeType | string;
}

export namespace EbsBlockDevice {
  export function isa(o: any): o is EbsBlockDevice {
    return _smithy.isa(o, "EbsBlockDevice");
  }
}

export type EbsEncryptionSupport = "supported" | "unsupported";

/**
 * <p>Describes the Amazon EBS features supported by the instance type.</p>
 */
export interface EbsInfo {
  __type?: "EbsInfo";
  /**
   * <p>Indicates that the instance type is Amazon EBS-optimized. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-Optimized Instances</a> in <i>Amazon EC2 User Guide for
   *     Linux Instances</i>.</p>
   */
  EbsOptimizedSupport?: EbsOptimizedSupport | string;

  /**
   * <p>Indicates whether Amazon EBS encryption is supported.</p>
   */
  EncryptionSupport?: EbsEncryptionSupport | string;
}

export namespace EbsInfo {
  export function isa(o: any): o is EbsInfo {
    return _smithy.isa(o, "EbsInfo");
  }
}

/**
 * <p>Describes a parameter used to set up an EBS volume in a block device mapping.</p>
 */
export interface EbsInstanceBlockDevice {
  __type?: "EbsInstanceBlockDevice";
  /**
   * <p>The time stamp when the attachment initiated.</p>
   */
  AttachTime?: Date;

  /**
   * <p>Indicates whether the volume is deleted on instance termination.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>The attachment state.</p>
   */
  Status?: AttachmentStatus | string;

  /**
   * <p>The ID of the EBS volume.</p>
   */
  VolumeId?: string;
}

export namespace EbsInstanceBlockDevice {
  export function isa(o: any): o is EbsInstanceBlockDevice {
    return _smithy.isa(o, "EbsInstanceBlockDevice");
  }
}

/**
 * <p>Describes information used to set up an EBS volume specified in a block device
 *             mapping.</p>
 */
export interface EbsInstanceBlockDeviceSpecification {
  __type?: "EbsInstanceBlockDeviceSpecification";
  /**
   * <p>Indicates whether the volume is deleted on instance termination.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>The ID of the EBS volume.</p>
   */
  VolumeId?: string;
}

export namespace EbsInstanceBlockDeviceSpecification {
  export function isa(o: any): o is EbsInstanceBlockDeviceSpecification {
    return _smithy.isa(o, "EbsInstanceBlockDeviceSpecification");
  }
}

export type EbsOptimizedSupport = "default" | "supported" | "unsupported";

/**
 * <p>Describes an egress-only internet gateway.</p>
 */
export interface EgressOnlyInternetGateway {
  __type?: "EgressOnlyInternetGateway";
  /**
   * <p>Information about the attachment of the egress-only internet gateway.</p>
   */
  Attachments?: Array<InternetGatewayAttachment>;

  /**
   * <p>The ID of the egress-only internet gateway.</p>
   */
  EgressOnlyInternetGatewayId?: string;

  /**
   * <p>The tags assigned to the egress-only internet gateway.</p>
   */
  Tags?: Array<Tag>;
}

export namespace EgressOnlyInternetGateway {
  export function isa(o: any): o is EgressOnlyInternetGateway {
    return _smithy.isa(o, "EgressOnlyInternetGateway");
  }
}

/**
 * <p>Describes the association between an instance and an Elastic Graphics accelerator.</p>
 */
export interface ElasticGpuAssociation {
  __type?: "ElasticGpuAssociation";
  /**
   * <p>The ID of the association.</p>
   */
  ElasticGpuAssociationId?: string;

  /**
   * <p>The state of the association between the instance and the
   *             Elastic Graphics accelerator.</p>
   */
  ElasticGpuAssociationState?: string;

  /**
   * <p>The time the Elastic Graphics accelerator was associated with the instance.</p>
   */
  ElasticGpuAssociationTime?: string;

  /**
   * <p>The ID of the Elastic Graphics accelerator.</p>
   */
  ElasticGpuId?: string;
}

export namespace ElasticGpuAssociation {
  export function isa(o: any): o is ElasticGpuAssociation {
    return _smithy.isa(o, "ElasticGpuAssociation");
  }
}

/**
 * <p>Describes the status of an Elastic Graphics accelerator.</p>
 */
export interface ElasticGpuHealth {
  __type?: "ElasticGpuHealth";
  /**
   * <p>The health status.</p>
   */
  Status?: ElasticGpuStatus | string;
}

export namespace ElasticGpuHealth {
  export function isa(o: any): o is ElasticGpuHealth {
    return _smithy.isa(o, "ElasticGpuHealth");
  }
}

/**
 * <p>A specification for an Elastic Graphics accelerator.</p>
 */
export interface ElasticGpuSpecification {
  __type?: "ElasticGpuSpecification";
  /**
   * <p>The type of Elastic Graphics accelerator. For more information about the values to specify for
   *             <code>Type</code>, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics">Elastic Graphics Basics</a>, specifically the Elastic Graphics accelerator column, in the <i>Amazon Elastic Compute Cloud User Guide for Windows
   *                 Instances</i>.</p>
   */
  Type: string | undefined;
}

export namespace ElasticGpuSpecification {
  export function isa(o: any): o is ElasticGpuSpecification {
    return _smithy.isa(o, "ElasticGpuSpecification");
  }
}

/**
 * <p>Describes an elastic GPU.</p>
 */
export interface ElasticGpuSpecificationResponse {
  __type?: "ElasticGpuSpecificationResponse";
  /**
   * <p>The elastic GPU type.</p>
   */
  Type?: string;
}

export namespace ElasticGpuSpecificationResponse {
  export function isa(o: any): o is ElasticGpuSpecificationResponse {
    return _smithy.isa(o, "ElasticGpuSpecificationResponse");
  }
}

export enum ElasticGpuState {
  Attached = "ATTACHED"
}

export enum ElasticGpuStatus {
  Impaired = "IMPAIRED",
  Ok = "OK"
}

/**
 * <p>Describes an Elastic Graphics accelerator.</p>
 */
export interface ElasticGpus {
  __type?: "ElasticGpus";
  /**
   * <p>The Availability Zone in the which the Elastic Graphics accelerator resides.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The status of the Elastic Graphics accelerator.</p>
   */
  ElasticGpuHealth?: ElasticGpuHealth;

  /**
   * <p>The ID of the Elastic Graphics accelerator.</p>
   */
  ElasticGpuId?: string;

  /**
   * <p>The state of the Elastic Graphics accelerator.</p>
   */
  ElasticGpuState?: ElasticGpuState | string;

  /**
   * <p>The type of Elastic Graphics accelerator.</p>
   */
  ElasticGpuType?: string;

  /**
   * <p>The ID of the instance to which the Elastic Graphics accelerator is attached.</p>
   */
  InstanceId?: string;

  /**
   * <p>The tags assigned to the Elastic Graphics accelerator.</p>
   */
  Tags?: Array<Tag>;
}

export namespace ElasticGpus {
  export function isa(o: any): o is ElasticGpus {
    return _smithy.isa(o, "ElasticGpus");
  }
}

/**
 * <p>
 *            Describes an elastic inference accelerator.
 *         </p>
 */
export interface ElasticInferenceAccelerator {
  __type?: "ElasticInferenceAccelerator";
  /**
   * <p>
   *             The number of elastic inference accelerators to attach to the instance.
   *         </p>
   *          <p>Default: 1</p>
   */
  Count?: number;

  /**
   * <p>
   *         	The type of elastic inference accelerator. The possible values are <code>eia1.medium</code>, <code>eia1.large</code>, and <code>eia1.xlarge</code>.
   *         </p>
   */
  Type: string | undefined;
}

export namespace ElasticInferenceAccelerator {
  export function isa(o: any): o is ElasticInferenceAccelerator {
    return _smithy.isa(o, "ElasticInferenceAccelerator");
  }
}

/**
 * <p>
 *             Describes the association between an instance and an elastic inference accelerator.
 *         </p>
 */
export interface ElasticInferenceAcceleratorAssociation {
  __type?: "ElasticInferenceAcceleratorAssociation";
  /**
   * <p>
   *             The Amazon Resource Name (ARN) of the elastic inference accelerator.
   *         </p>
   */
  ElasticInferenceAcceleratorArn?: string;

  /**
   * <p>
   *             The ID of the association.
   *         </p>
   */
  ElasticInferenceAcceleratorAssociationId?: string;

  /**
   * <p>
   *             The state of the elastic inference accelerator.
   *         </p>
   */
  ElasticInferenceAcceleratorAssociationState?: string;

  /**
   * <p>
   *             The time at which the elastic inference accelerator is associated with an instance.
   *         </p>
   */
  ElasticInferenceAcceleratorAssociationTime?: Date;
}

export namespace ElasticInferenceAcceleratorAssociation {
  export function isa(o: any): o is ElasticInferenceAcceleratorAssociation {
    return _smithy.isa(o, "ElasticInferenceAcceleratorAssociation");
  }
}

export type EnaSupport = "required" | "supported" | "unsupported";

export interface EnableEbsEncryptionByDefaultRequest {
  __type?: "EnableEbsEncryptionByDefaultRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace EnableEbsEncryptionByDefaultRequest {
  export function isa(o: any): o is EnableEbsEncryptionByDefaultRequest {
    return _smithy.isa(o, "EnableEbsEncryptionByDefaultRequest");
  }
}

export interface EnableEbsEncryptionByDefaultResult extends $MetadataBearer {
  __type?: "EnableEbsEncryptionByDefaultResult";
  /**
   * <p>The updated status of encryption by default.</p>
   */
  EbsEncryptionByDefault?: boolean;
}

export namespace EnableEbsEncryptionByDefaultResult {
  export function isa(o: any): o is EnableEbsEncryptionByDefaultResult {
    return _smithy.isa(o, "EnableEbsEncryptionByDefaultResult");
  }
}

/**
 * <p>Contains information about the errors that occurred when enabling fast snapshot restores.</p>
 */
export interface EnableFastSnapshotRestoreErrorItem {
  __type?: "EnableFastSnapshotRestoreErrorItem";
  /**
   * <p>The errors.</p>
   */
  FastSnapshotRestoreStateErrors?: Array<
    EnableFastSnapshotRestoreStateErrorItem
  >;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;
}

export namespace EnableFastSnapshotRestoreErrorItem {
  export function isa(o: any): o is EnableFastSnapshotRestoreErrorItem {
    return _smithy.isa(o, "EnableFastSnapshotRestoreErrorItem");
  }
}

/**
 * <p>Describes an error that occurred when enabling fast snapshot restores.</p>
 */
export interface EnableFastSnapshotRestoreStateError {
  __type?: "EnableFastSnapshotRestoreStateError";
  /**
   * <p>The error code.</p>
   */
  Code?: string;

  /**
   * <p>The error message.</p>
   */
  Message?: string;
}

export namespace EnableFastSnapshotRestoreStateError {
  export function isa(o: any): o is EnableFastSnapshotRestoreStateError {
    return _smithy.isa(o, "EnableFastSnapshotRestoreStateError");
  }
}

/**
 * <p>Contains information about an error that occurred when enabling fast snapshot restores.</p>
 */
export interface EnableFastSnapshotRestoreStateErrorItem {
  __type?: "EnableFastSnapshotRestoreStateErrorItem";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The error.</p>
   */
  Error?: EnableFastSnapshotRestoreStateError;
}

export namespace EnableFastSnapshotRestoreStateErrorItem {
  export function isa(o: any): o is EnableFastSnapshotRestoreStateErrorItem {
    return _smithy.isa(o, "EnableFastSnapshotRestoreStateErrorItem");
  }
}

/**
 * <p>Describes fast snapshot restores that were successfully enabled.</p>
 */
export interface EnableFastSnapshotRestoreSuccessItem {
  __type?: "EnableFastSnapshotRestoreSuccessItem";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The time at which fast snapshot restores entered the <code>disabled</code> state.</p>
   */
  DisabledTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>disabling</code> state.</p>
   */
  DisablingTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>enabled</code> state.</p>
   */
  EnabledTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>enabling</code> state.</p>
   */
  EnablingTime?: Date;

  /**
   * <p>The time at which fast snapshot restores entered the <code>optimizing</code> state.</p>
   */
  OptimizingTime?: Date;

  /**
   * <p>The alias of the snapshot owner.</p>
   */
  OwnerAlias?: string;

  /**
   * <p>The ID of the AWS account that owns the snapshot.</p>
   */
  OwnerId?: string;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The state of fast snapshot restores.</p>
   */
  State?: FastSnapshotRestoreStateCode | string;

  /**
   * <p>The reason for the state transition. The possible values are as follows:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or
   *           <code>disabling</code>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned
   *           to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p>
   *             </li>
   *          </ul>
   */
  StateTransitionReason?: string;
}

export namespace EnableFastSnapshotRestoreSuccessItem {
  export function isa(o: any): o is EnableFastSnapshotRestoreSuccessItem {
    return _smithy.isa(o, "EnableFastSnapshotRestoreSuccessItem");
  }
}

export interface EnableFastSnapshotRestoresRequest {
  __type?: "EnableFastSnapshotRestoresRequest";
  /**
   * <p>One or more Availability Zones. For example, <code>us-east-2a</code>.</p>
   */
  AvailabilityZones: Array<string> | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>. You can specify
   *       a snapshot that was shared with you from another AWS account.</p>
   */
  SourceSnapshotIds: Array<string> | undefined;
}

export namespace EnableFastSnapshotRestoresRequest {
  export function isa(o: any): o is EnableFastSnapshotRestoresRequest {
    return _smithy.isa(o, "EnableFastSnapshotRestoresRequest");
  }
}

export interface EnableFastSnapshotRestoresResult extends $MetadataBearer {
  __type?: "EnableFastSnapshotRestoresResult";
  /**
   * <p>Information about the snapshots for which fast snapshot restores were successfully enabled.</p>
   */
  Successful?: Array<EnableFastSnapshotRestoreSuccessItem>;

  /**
   * <p>Information about the snapshots for which fast snapshot restores could not be enabled.</p>
   */
  Unsuccessful?: Array<EnableFastSnapshotRestoreErrorItem>;
}

export namespace EnableFastSnapshotRestoresResult {
  export function isa(o: any): o is EnableFastSnapshotRestoresResult {
    return _smithy.isa(o, "EnableFastSnapshotRestoresResult");
  }
}

export interface EnableTransitGatewayRouteTablePropagationRequest {
  __type?: "EnableTransitGatewayRouteTablePropagationRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;

  /**
   * <p>The ID of the propagation route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace EnableTransitGatewayRouteTablePropagationRequest {
  export function isa(
    o: any
  ): o is EnableTransitGatewayRouteTablePropagationRequest {
    return _smithy.isa(o, "EnableTransitGatewayRouteTablePropagationRequest");
  }
}

export interface EnableTransitGatewayRouteTablePropagationResult
  extends $MetadataBearer {
  __type?: "EnableTransitGatewayRouteTablePropagationResult";
  /**
   * <p>Information about route propagation.</p>
   */
  Propagation?: TransitGatewayPropagation;
}

export namespace EnableTransitGatewayRouteTablePropagationResult {
  export function isa(
    o: any
  ): o is EnableTransitGatewayRouteTablePropagationResult {
    return _smithy.isa(o, "EnableTransitGatewayRouteTablePropagationResult");
  }
}

/**
 * <p>Contains the parameters for EnableVgwRoutePropagation.</p>
 */
export interface EnableVgwRoutePropagationRequest {
  __type?: "EnableVgwRoutePropagationRequest";
  /**
   * <p>The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with. </p>
   */
  GatewayId: string | undefined;

  /**
   * <p>The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to. </p>
   */
  RouteTableId: string | undefined;
}

export namespace EnableVgwRoutePropagationRequest {
  export function isa(o: any): o is EnableVgwRoutePropagationRequest {
    return _smithy.isa(o, "EnableVgwRoutePropagationRequest");
  }
}

export interface EnableVolumeIORequest {
  __type?: "EnableVolumeIORequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId: string | undefined;
}

export namespace EnableVolumeIORequest {
  export function isa(o: any): o is EnableVolumeIORequest {
    return _smithy.isa(o, "EnableVolumeIORequest");
  }
}

export interface EnableVpcClassicLinkDnsSupportRequest {
  __type?: "EnableVpcClassicLinkDnsSupportRequest";
  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace EnableVpcClassicLinkDnsSupportRequest {
  export function isa(o: any): o is EnableVpcClassicLinkDnsSupportRequest {
    return _smithy.isa(o, "EnableVpcClassicLinkDnsSupportRequest");
  }
}

export interface EnableVpcClassicLinkDnsSupportResult extends $MetadataBearer {
  __type?: "EnableVpcClassicLinkDnsSupportResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace EnableVpcClassicLinkDnsSupportResult {
  export function isa(o: any): o is EnableVpcClassicLinkDnsSupportResult {
    return _smithy.isa(o, "EnableVpcClassicLinkDnsSupportResult");
  }
}

export interface EnableVpcClassicLinkRequest {
  __type?: "EnableVpcClassicLinkRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace EnableVpcClassicLinkRequest {
  export function isa(o: any): o is EnableVpcClassicLinkRequest {
    return _smithy.isa(o, "EnableVpcClassicLinkRequest");
  }
}

export interface EnableVpcClassicLinkResult extends $MetadataBearer {
  __type?: "EnableVpcClassicLinkResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace EnableVpcClassicLinkResult {
  export function isa(o: any): o is EnableVpcClassicLinkResult {
    return _smithy.isa(o, "EnableVpcClassicLinkResult");
  }
}

export type EndDateType = "limited" | "unlimited";

export type EventCode =
  | "instance-reboot"
  | "instance-retirement"
  | "instance-stop"
  | "system-maintenance"
  | "system-reboot";

/**
 * <p>Describes an EC2 Fleet or Spot Fleet event.</p>
 */
export interface EventInformation {
  __type?: "EventInformation";
  /**
   * <p>The description of the event.</p>
   */
  EventDescription?: string;

  /**
   * <p>The event.</p>
   *
   *          <p>The following are the <code>error</code> events:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                     <code>iamFleetRoleInvalid</code> - The EC2 Fleet or Spot Fleet did not have the required
   *                     permissions either to launch or terminate an instance.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid. For more information, see the description
   *           of the event.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>spotInstanceCountLimitExceeded</code> - You've reached the limit on the number
   *           of Spot Instances that you can launch.</p>
   *             </li>
   *          </ul>
   *
   *          <p>The following are the <code>fleetRequestChange</code> events:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                     <code>active</code> - The EC2 Fleet or Spot Fleet request has been validated and Amazon EC2 is
   *                     attempting to maintain the target number of running Spot Instances.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>cancelled</code> - The EC2 Fleet or Spot Fleet request is canceled and has no running
   *                     Spot Instances. The EC2 Fleet or Spot Fleet will be deleted two days after its instances
   *                     were terminated.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>cancelled_running</code> - The EC2 Fleet or Spot Fleet request is canceled and does
   *                     not launch additional Spot Instances. Existing Spot Instances continue to run
   *                     until they are interrupted or terminated.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>cancelled_terminating</code> - The EC2 Fleet or Spot Fleet request is canceled and
   *                     its Spot Instances are terminating.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>expired</code> - The EC2 Fleet or Spot Fleet request has expired. A subsequent event
   *                     indicates that the instances were terminated, if the request was created with
   *                         <code>TerminateInstancesWithExpiration</code> set.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>modify_in_progress</code> - A request to modify the EC2 Fleet or Spot Fleet request
   *                     was accepted and is in progress.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>modify_successful</code> - The EC2 Fleet or Spot Fleet request was modified.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>price_update</code> - The price for a launch configuration was adjusted because
   *           it was too high. This change is permanent.</p>
   *             </li>
   *             <li>
   *                <p>
   *                     <code>submitted</code> - The EC2 Fleet or Spot Fleet request is being evaluated and Amazon EC2
   *                     is preparing to launch the target number of Spot Instances.</p>
   *             </li>
   *          </ul>
   *
   *          <p>The following are the <code>instanceChange</code> events:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>launched</code> - A request was fulfilled and a new instance was launched.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>terminated</code> - An instance was terminated by the user.</p>
   *             </li>
   *          </ul>
   *
   *          <p>The following are the <code>Information</code> events:</p>
   *          <ul>
   *             <li>
   *                 <p>
   *                   <code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid
   *                     and several attempts to launch instances have failed. For more information, see
   *                     the description of the event.</p>
   *             </li>
   *             <li>
   *               <p>
   *                   <code>launchSpecUnusable</code> - The price in a launch specification is not valid because it is
   *                   below the Spot price or the Spot price is above the On-Demand price.</p>
   *             </li>
   *             <li>
   *               <p>
   *                   <code>fleetProgressHalted</code> - The price in every launch specification is not valid. A launch
   *                   specification might become valid if the Spot price changes.</p>
   *             </li>
   *          </ul>
   */
  EventSubType?: string;

  /**
   * <p>The ID of the instance. This information is available only for <code>instanceChange</code> events.</p>
   */
  InstanceId?: string;
}

export namespace EventInformation {
  export function isa(o: any): o is EventInformation {
    return _smithy.isa(o, "EventInformation");
  }
}

export enum EventType {
  BATCH_CHANGE = "fleetRequestChange",
  ERROR = "error",
  INFORMATION = "information",
  INSTANCE_CHANGE = "instanceChange"
}

export enum ExcessCapacityTerminationPolicy {
  DEFAULT = "default",
  NO_TERMINATION = "noTermination"
}

export interface ExportClientVpnClientCertificateRevocationListRequest {
  __type?: "ExportClientVpnClientCertificateRevocationListRequest";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace ExportClientVpnClientCertificateRevocationListRequest {
  export function isa(
    o: any
  ): o is ExportClientVpnClientCertificateRevocationListRequest {
    return _smithy.isa(
      o,
      "ExportClientVpnClientCertificateRevocationListRequest"
    );
  }
}

export interface ExportClientVpnClientCertificateRevocationListResult
  extends $MetadataBearer {
  __type?: "ExportClientVpnClientCertificateRevocationListResult";
  /**
   * <p>Information about the client certificate revocation list.</p>
   */
  CertificateRevocationList?: string;

  /**
   * <p>The current state of the client certificate revocation list.</p>
   */
  Status?: ClientCertificateRevocationListStatus;
}

export namespace ExportClientVpnClientCertificateRevocationListResult {
  export function isa(
    o: any
  ): o is ExportClientVpnClientCertificateRevocationListResult {
    return _smithy.isa(
      o,
      "ExportClientVpnClientCertificateRevocationListResult"
    );
  }
}

export interface ExportClientVpnClientConfigurationRequest {
  __type?: "ExportClientVpnClientConfigurationRequest";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace ExportClientVpnClientConfigurationRequest {
  export function isa(o: any): o is ExportClientVpnClientConfigurationRequest {
    return _smithy.isa(o, "ExportClientVpnClientConfigurationRequest");
  }
}

export interface ExportClientVpnClientConfigurationResult
  extends $MetadataBearer {
  __type?: "ExportClientVpnClientConfigurationResult";
  /**
   * <p>The contents of the Client VPN endpoint configuration file.</p>
   */
  ClientConfiguration?: string;
}

export namespace ExportClientVpnClientConfigurationResult {
  export function isa(o: any): o is ExportClientVpnClientConfigurationResult {
    return _smithy.isa(o, "ExportClientVpnClientConfigurationResult");
  }
}

export type ExportEnvironment = "citrix" | "microsoft" | "vmware";

export interface ExportImageRequest {
  __type?: "ExportImageRequest";
  /**
   * <p>Token to enable idempotency for export image requests.</p>
   */
  ClientToken?: string;

  /**
   * <p>A description of the image being exported. The maximum length is 255 bytes.</p>
   */
  Description?: string;

  /**
   * <p>The disk image format.</p>
   */
  DiskImageFormat: DiskImageFormat | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the image.</p>
   */
  ImageId: string | undefined;

  /**
   * <p>The name of the role that grants VM Import/Export permission to export images to your S3 bucket. If this
   *    parameter is not specified, the default role is named 'vmimport'.</p>
   */
  RoleName?: string;

  /**
   * <p>Information about the destination S3 bucket. The bucket must exist and grant WRITE and READ_ACP permissions to
   *    the AWS account vm-import-export@amazon.com.</p>
   */
  S3ExportLocation: ExportTaskS3LocationRequest | undefined;
}

export namespace ExportImageRequest {
  export function isa(o: any): o is ExportImageRequest {
    return _smithy.isa(o, "ExportImageRequest");
  }
}

export interface ExportImageResult extends $MetadataBearer {
  __type?: "ExportImageResult";
  /**
   * <p>A description of the image being exported.</p>
   */
  Description?: string;

  /**
   * <p>The disk image format for the exported image.</p>
   */
  DiskImageFormat?: DiskImageFormat | string;

  /**
   * <p>The ID of the export image task.</p>
   */
  ExportImageTaskId?: string;

  /**
   * <p>The ID of the image.</p>
   */
  ImageId?: string;

  /**
   * <p>The percent complete of the export image task.</p>
   */
  Progress?: string;

  /**
   * <p>The name of the role that grants VM Import/Export permission to export images to your S3 bucket.</p>
   */
  RoleName?: string;

  /**
   * <p>Information about the destination S3 bucket.</p>
   */
  S3ExportLocation?: ExportTaskS3Location;

  /**
   * <p>The status of the export image task. The possible values are <code>active</code>, <code>completed</code>,
   *     <code>deleting</code>, and <code>deleted</code>.</p>
   */
  Status?: string;

  /**
   * <p>The status message for the export image task.</p>
   */
  StatusMessage?: string;
}

export namespace ExportImageResult {
  export function isa(o: any): o is ExportImageResult {
    return _smithy.isa(o, "ExportImageResult");
  }
}

/**
 * <p>Describes an export image task.</p>
 */
export interface ExportImageTask {
  __type?: "ExportImageTask";
  /**
   * <p>A description of the image being exported.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the export image task.</p>
   */
  ExportImageTaskId?: string;

  /**
   * <p>The ID of the image.</p>
   */
  ImageId?: string;

  /**
   * <p>The percent complete of the export image task.</p>
   */
  Progress?: string;

  /**
   * <p>Information about the destination S3 bucket.</p>
   */
  S3ExportLocation?: ExportTaskS3Location;

  /**
   * <p>The status of the export image task. The possible values are <code>active</code>, <code>completed</code>,
   *     <code>deleting</code>, and <code>deleted</code>.</p>
   */
  Status?: string;

  /**
   * <p>The status message for the export image task.</p>
   */
  StatusMessage?: string;
}

export namespace ExportImageTask {
  export function isa(o: any): o is ExportImageTask {
    return _smithy.isa(o, "ExportImageTask");
  }
}

/**
 * <p>Describes an instance export task.</p>
 */
export interface ExportTask {
  __type?: "ExportTask";
  /**
   * <p>A description of the resource being exported.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the export task.</p>
   */
  ExportTaskId?: string;

  /**
   * <p>Information about the export task.</p>
   */
  ExportToS3Task?: ExportToS3Task;

  /**
   * <p>Information about the instance to export.</p>
   */
  InstanceExportDetails?: InstanceExportDetails;

  /**
   * <p>The state of the export task.</p>
   */
  State?: ExportTaskState | string;

  /**
   * <p>The status message related to the export task.</p>
   */
  StatusMessage?: string;

  /**
   * <p>The tags for the export task.</p>
   */
  Tags?: Array<Tag>;
}

export namespace ExportTask {
  export function isa(o: any): o is ExportTask {
    return _smithy.isa(o, "ExportTask");
  }
}

/**
 * <p>Describes the destination for an export image task.</p>
 */
export interface ExportTaskS3Location {
  __type?: "ExportTaskS3Location";
  /**
   * <p>The destination S3 bucket.</p>
   */
  S3Bucket?: string;

  /**
   * <p>The prefix (logical hierarchy) in the bucket.</p>
   */
  S3Prefix?: string;
}

export namespace ExportTaskS3Location {
  export function isa(o: any): o is ExportTaskS3Location {
    return _smithy.isa(o, "ExportTaskS3Location");
  }
}

/**
 * <p>Describes the destination for an export image task.</p>
 */
export interface ExportTaskS3LocationRequest {
  __type?: "ExportTaskS3LocationRequest";
  /**
   * <p>The destination S3 bucket.</p>
   */
  S3Bucket: string | undefined;

  /**
   * <p>The prefix (logical hierarchy) in the bucket.</p>
   */
  S3Prefix?: string;
}

export namespace ExportTaskS3LocationRequest {
  export function isa(o: any): o is ExportTaskS3LocationRequest {
    return _smithy.isa(o, "ExportTaskS3LocationRequest");
  }
}

export type ExportTaskState =
  | "active"
  | "cancelled"
  | "cancelling"
  | "completed";

/**
 * <p>Describes the format and location for an instance export task.</p>
 */
export interface ExportToS3Task {
  __type?: "ExportToS3Task";
  /**
   * <p>The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is
   *    exported.</p>
   */
  ContainerFormat?: ContainerFormat | string;

  /**
   * <p>The format for the exported image.</p>
   */
  DiskImageFormat?: DiskImageFormat | string;

  /**
   * <p>The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP
   *    permissions to the AWS account <code>vm-import-export@amazon.com</code>.</p>
   */
  S3Bucket?: string;

  /**
   * <p>The encryption key for your S3 bucket.</p>
   */
  S3Key?: string;
}

export namespace ExportToS3Task {
  export function isa(o: any): o is ExportToS3Task {
    return _smithy.isa(o, "ExportToS3Task");
  }
}

/**
 * <p>Describes an instance export task.</p>
 */
export interface ExportToS3TaskSpecification {
  __type?: "ExportToS3TaskSpecification";
  /**
   * <p>The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is
   *    exported.</p>
   */
  ContainerFormat?: ContainerFormat | string;

  /**
   * <p>The format for the exported image.</p>
   */
  DiskImageFormat?: DiskImageFormat | string;

  /**
   * <p>The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP
   *    permissions to the AWS account <code>vm-import-export@amazon.com</code>.</p>
   */
  S3Bucket?: string;

  /**
   * <p>The image is written to a single object in the S3 bucket at the S3 key s3prefix + exportTaskId + '.' +
   *    diskImageFormat.</p>
   */
  S3Prefix?: string;
}

export namespace ExportToS3TaskSpecification {
  export function isa(o: any): o is ExportToS3TaskSpecification {
    return _smithy.isa(o, "ExportToS3TaskSpecification");
  }
}

export interface ExportTransitGatewayRoutesRequest {
  __type?: "ExportTransitGatewayRoutesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>attachment.transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.exact-match</code> - The exact match of the specified filter.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the attachment (<code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> |  <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-route-destination-cidr-block</code> - The CIDR range.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>type</code> - The type of route (<code>active</code> |
   *                <code>blackhole</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The name of the S3 bucket.</p>
   */
  S3Bucket: string | undefined;

  /**
   * <p>The ID of the route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace ExportTransitGatewayRoutesRequest {
  export function isa(o: any): o is ExportTransitGatewayRoutesRequest {
    return _smithy.isa(o, "ExportTransitGatewayRoutesRequest");
  }
}

export interface ExportTransitGatewayRoutesResult extends $MetadataBearer {
  __type?: "ExportTransitGatewayRoutesResult";
  /**
   * <p>The URL of the exported file in Amazon S3. For example,
   *          s3://<i>bucket_name</i>/VPCTransitGateway/TransitGatewayRouteTables/<i>file_name</i>.</p>
   */
  S3Location?: string;
}

export namespace ExportTransitGatewayRoutesResult {
  export function isa(o: any): o is ExportTransitGatewayRoutesResult {
    return _smithy.isa(o, "ExportTransitGatewayRoutesResult");
  }
}

/**
 * <p>Describes a Reserved Instance whose queued purchase was not deleted.</p>
 */
export interface FailedQueuedPurchaseDeletion {
  __type?: "FailedQueuedPurchaseDeletion";
  /**
   * <p>The error.</p>
   */
  Error?: DeleteQueuedReservedInstancesError;

  /**
   * <p>The ID of the Reserved Instance.</p>
   */
  ReservedInstancesId?: string;
}

export namespace FailedQueuedPurchaseDeletion {
  export function isa(o: any): o is FailedQueuedPurchaseDeletion {
    return _smithy.isa(o, "FailedQueuedPurchaseDeletion");
  }
}

export type FastSnapshotRestoreStateCode =
  | "disabled"
  | "disabling"
  | "enabled"
  | "enabling"
  | "optimizing";

/**
 * <p>A filter name and value pair that is used to return a more specific list of results from a describe operation.
 *          Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.
 *          The filters supported by a describe operation are documented with the describe operation. For example:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <a>DescribeAvailabilityZones</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeImages</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeInstances</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeKeyPairs</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeSecurityGroups</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeSnapshots</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeSubnets</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeTags</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeVolumes</a>
 *                </p>
 *             </li>
 *             <li>
 *                <p>
 *                   <a>DescribeVpcs</a>
 *                </p>
 *             </li>
 *          </ul>
 */
export interface Filter {
  __type?: "Filter";
  /**
   * <p>The name of the filter. Filter names are case-sensitive.</p>
   */
  Name?: string;

  /**
   * <p>The filter values. Filter values are case-sensitive.</p>
   */
  Values?: Array<string>;
}

export namespace Filter {
  export function isa(o: any): o is Filter {
    return _smithy.isa(o, "Filter");
  }
}

export enum FleetActivityStatus {
  ERROR = "error",
  FULFILLED = "fulfilled",
  PENDING_FULFILLMENT = "pending_fulfillment",
  PENDING_TERMINATION = "pending_termination"
}

export enum FleetCapacityReservationUsageStrategy {
  USE_CAPACITY_RESERVATIONS_FIRST = "use-capacity-reservations-first"
}

/**
 * <p>Describes an EC2 Fleet.</p>
 */
export interface FleetData {
  __type?: "FleetData";
  /**
   * <p>The progress of the EC2 Fleet. If there is an error, the status is <code>error</code>. After
   *          all requests are placed, the status is <code>pending_fulfillment</code>. If the size of the
   *          EC2 Fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>.
   *          If the size of the EC2 Fleet is decreased, the status is <code>pending_termination</code> while
   *          instances are terminating.</p>
   */
  ActivityStatus?: FleetActivityStatus | string;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
   *          request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   *             Idempotency</a>.</p>
   *          <p>Constraints: Maximum 64 ASCII characters</p>
   */
  ClientToken?: string;

  /**
   * <p>The creation date and time of the EC2 Fleet.</p>
   */
  CreateTime?: Date;

  /**
   * <p>Information about the instances that could not be launched by the fleet. Valid only when
   *             <b>Type</b> is set to <code>instant</code>.</p>
   */
  Errors?: Array<DescribeFleetError>;

  /**
   * <p>Indicates whether running instances should be terminated if the target capacity of the
   *          EC2 Fleet is decreased below the current size of the EC2 Fleet.</p>
   */
  ExcessCapacityTerminationPolicy?:
    | FleetExcessCapacityTerminationPolicy
    | string;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId?: string;

  /**
   * <p>The state of the EC2 Fleet.</p>
   */
  FleetState?: FleetStateCode | string;

  /**
   * <p>The number of units fulfilled by this request compared to the set target
   *          capacity.</p>
   */
  FulfilledCapacity?: number;

  /**
   * <p>The number of units fulfilled by this request compared to the set target On-Demand
   *          capacity.</p>
   */
  FulfilledOnDemandCapacity?: number;

  /**
   * <p>Information about the instances that were launched by the fleet. Valid only when
   *             <b>Type</b> is set to <code>instant</code>.</p>
   */
  Instances?: Array<DescribeFleetsInstances>;

  /**
   * <p>The launch template and overrides.</p>
   */
  LaunchTemplateConfigs?: Array<FleetLaunchTemplateConfig>;

  /**
   * <p>The allocation strategy of On-Demand Instances in an EC2 Fleet.</p>
   */
  OnDemandOptions?: OnDemandOptions;

  /**
   * <p>Indicates whether EC2 Fleet should replace unhealthy instances.</p>
   */
  ReplaceUnhealthyInstances?: boolean;

  /**
   * <p>The configuration of Spot Instances in an EC2 Fleet.</p>
   */
  SpotOptions?: SpotOptions;

  /**
   * <p>The tags for an EC2 Fleet resource.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The number of units to request. You can choose to set the target capacity in terms of
   *          instances or a performance characteristic that is important to your application workload,
   *          such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can
   *          specify a target capacity of 0 and add capacity later.</p>
   */
  TargetCapacitySpecification?: TargetCapacitySpecification;

  /**
   * <p>Indicates whether running instances should be terminated when the EC2 Fleet expires. </p>
   */
  TerminateInstancesWithExpiration?: boolean;

  /**
   * <p>The type of request. Indicates whether the EC2 Fleet only <code>requests</code> the target
   *          capacity, or also attempts to <code>maintain</code> it. If you request a certain target
   *          capacity, EC2 Fleet only places the required requests; it does not attempt to replenish
   *          instances if capacity is diminished, and it does not submit requests in alternative
   *          capacity pools if capacity is unavailable. To maintain a certain target capacity, EC2 Fleet
   *          places the required requests to meet this target capacity. It also automatically
   *          replenishes any interrupted Spot Instances. Default: <code>maintain</code>.</p>
   */
  Type?: FleetType | string;

  /**
   * <p>The start date and time of the request, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *          The default is to start fulfilling the request immediately. </p>
   */
  ValidFrom?: Date;

  /**
   * <p>The end date and time of the request, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *          At this point, no new instance requests are placed or able to fulfill the request. The
   *          default end date is 7 days from the current date. </p>
   */
  ValidUntil?: Date;
}

export namespace FleetData {
  export function isa(o: any): o is FleetData {
    return _smithy.isa(o, "FleetData");
  }
}

export enum FleetEventType {
  FLEET_CHANGE = "fleet-change",
  INSTANCE_CHANGE = "instance-change",
  SERVICE_ERROR = "service-error"
}

export enum FleetExcessCapacityTerminationPolicy {
  NO_TERMINATION = "no-termination",
  TERMINATION = "termination"
}

/**
 * <p>Describes a launch template and overrides.</p>
 */
export interface FleetLaunchTemplateConfig {
  __type?: "FleetLaunchTemplateConfig";
  /**
   * <p>The launch template.</p>
   */
  LaunchTemplateSpecification?: FleetLaunchTemplateSpecification;

  /**
   * <p>Any parameters that you specify override the same parameters in the launch
   *          template.</p>
   */
  Overrides?: Array<FleetLaunchTemplateOverrides>;
}

export namespace FleetLaunchTemplateConfig {
  export function isa(o: any): o is FleetLaunchTemplateConfig {
    return _smithy.isa(o, "FleetLaunchTemplateConfig");
  }
}

/**
 * <p>Describes a launch template and overrides.</p>
 */
export interface FleetLaunchTemplateConfigRequest {
  __type?: "FleetLaunchTemplateConfigRequest";
  /**
   * <p>The launch template to use. You must specify either the launch template ID or launch
   *          template name in the request. </p>
   */
  LaunchTemplateSpecification?: FleetLaunchTemplateSpecificationRequest;

  /**
   * <p>Any parameters that you specify override the same parameters in the launch
   *          template.</p>
   */
  Overrides?: Array<FleetLaunchTemplateOverridesRequest>;
}

export namespace FleetLaunchTemplateConfigRequest {
  export function isa(o: any): o is FleetLaunchTemplateConfigRequest {
    return _smithy.isa(o, "FleetLaunchTemplateConfigRequest");
  }
}

/**
 * <p>Describes overrides for a launch template.</p>
 */
export interface FleetLaunchTemplateOverrides {
  __type?: "FleetLaunchTemplateOverrides";
  /**
   * <p>The Availability Zone in which to launch the instances.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The maximum price per unit hour that you are willing to pay for a Spot Instance.</p>
   */
  MaxPrice?: string;

  /**
   * <p>The location where the instance launched, if applicable.</p>
   */
  Placement?: PlacementResponse;

  /**
   * <p>The priority for the launch template override. If <b>AllocationStrategy</b> is set to <code>prioritized</code>, EC2 Fleet uses priority to
   *          determine which launch template override to use first in fulfilling On-Demand capacity. The
   *          highest priority is launched first. Valid values are whole numbers starting at
   *             <code>0</code>. The lower the number, the higher the priority. If no number is set, the
   *          override has the lowest priority.</p>
   */
  Priority?: number;

  /**
   * <p>The ID of the subnet in which to launch the instances.</p>
   */
  SubnetId?: string;

  /**
   * <p>The number of units provided by the specified instance type.</p>
   */
  WeightedCapacity?: number;
}

export namespace FleetLaunchTemplateOverrides {
  export function isa(o: any): o is FleetLaunchTemplateOverrides {
    return _smithy.isa(o, "FleetLaunchTemplateOverrides");
  }
}

/**
 * <p>Describes overrides for a launch template.</p>
 */
export interface FleetLaunchTemplateOverridesRequest {
  __type?: "FleetLaunchTemplateOverridesRequest";
  /**
   * <p>The Availability Zone in which to launch the instances.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The maximum price per unit hour that you are willing to pay for a Spot Instance.</p>
   */
  MaxPrice?: string;

  /**
   * <p>The location where the instance launched, if applicable.</p>
   */
  Placement?: Placement;

  /**
   * <p>The priority for the launch template override. If <b>AllocationStrategy</b> is set to <code>prioritized</code>, EC2 Fleet uses priority to
   *          determine which launch template override to use first in fulfilling On-Demand capacity. The
   *          highest priority is launched first. Valid values are whole numbers starting at
   *             <code>0</code>. The lower the number, the higher the priority. If no number is set, the
   *          launch template override has the lowest priority.</p>
   */
  Priority?: number;

  /**
   * <p>The ID of the subnet in which to launch the instances.</p>
   */
  SubnetId?: string;

  /**
   * <p>The number of units provided by the specified instance type.</p>
   */
  WeightedCapacity?: number;
}

export namespace FleetLaunchTemplateOverridesRequest {
  export function isa(o: any): o is FleetLaunchTemplateOverridesRequest {
    return _smithy.isa(o, "FleetLaunchTemplateOverridesRequest");
  }
}

/**
 * <p>Describes a launch template.</p>
 */
export interface FleetLaunchTemplateSpecification {
  __type?: "FleetLaunchTemplateSpecification";
  /**
   * <p>The ID of the launch template. You must specify either a template ID or a template name.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template. You must specify either a template name or a template ID.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The version number of the launch template. You must specify a version number.</p>
   */
  Version?: string;
}

export namespace FleetLaunchTemplateSpecification {
  export function isa(o: any): o is FleetLaunchTemplateSpecification {
    return _smithy.isa(o, "FleetLaunchTemplateSpecification");
  }
}

/**
 * <p>The launch template to use. You must specify either the launch template ID or launch
 *          template name in the request. </p>
 */
export interface FleetLaunchTemplateSpecificationRequest {
  __type?: "FleetLaunchTemplateSpecificationRequest";
  /**
   * <p>The ID of the launch template.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The version number of the launch template. Note: This is a required parameter and will be updated soon. </p>
   */
  Version?: string;
}

export namespace FleetLaunchTemplateSpecificationRequest {
  export function isa(o: any): o is FleetLaunchTemplateSpecificationRequest {
    return _smithy.isa(o, "FleetLaunchTemplateSpecificationRequest");
  }
}

export enum FleetOnDemandAllocationStrategy {
  LOWEST_PRICE = "lowest-price",
  PRIORITIZED = "prioritized"
}

export enum FleetStateCode {
  ACTIVE = "active",
  DELETED = "deleted",
  DELETED_RUNNING = "deleted_running",
  DELETED_TERMINATING_INSTANCES = "deleted_terminating",
  FAILED = "failed",
  MODIFYING = "modifying",
  SUBMITTED = "submitted"
}

export enum FleetType {
  INSTANT = "instant",
  MAINTAIN = "maintain",
  REQUEST = "request"
}

/**
 * <p>Describes a flow log.</p>
 */
export interface FlowLog {
  __type?: "FlowLog";
  /**
   * <p>The date and time the flow log was created.</p>
   */
  CreationTime?: Date;

  /**
   * <p>Information about the error that occurred. <code>Rate limited</code> indicates that
   *             CloudWatch Logs throttling has been applied for one or more network interfaces, or that you've
   *             reached the limit on the number of log groups that you can create. <code>Access
   *                 error</code> indicates that the IAM role associated with the flow log does not have
   *             sufficient permissions to publish to CloudWatch Logs. <code>Unknown error</code> indicates an
   *             internal error.</p>
   */
  DeliverLogsErrorMessage?: string;

  /**
   * <p>The ARN of the IAM role that posts logs to CloudWatch Logs.</p>
   */
  DeliverLogsPermissionArn?: string;

  /**
   * <p>The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p>
   */
  DeliverLogsStatus?: string;

  /**
   * <p>The flow log ID.</p>
   */
  FlowLogId?: string;

  /**
   * <p>The status of the flow log (<code>ACTIVE</code>).</p>
   */
  FlowLogStatus?: string;

  /**
   * <p>Specifies the destination to which the flow log data is published. Flow log data can be
   *             published to an CloudWatch Logs log group or an Amazon S3 bucket. If the flow log publishes to CloudWatch Logs,
   *             this element indicates the Amazon Resource Name (ARN) of the CloudWatch Logs log group to which
   *             the data is published. If the flow log publishes to Amazon S3, this element indicates the ARN
   *             of the Amazon S3 bucket to which the data is published.</p>
   */
  LogDestination?: string;

  /**
   * <p>Specifies the type of destination to which the flow log data is published. Flow log data can be
   *             published to CloudWatch Logs or Amazon S3.</p>
   */
  LogDestinationType?: LogDestinationType | string;

  /**
   * <p>The format of the flow log record.</p>
   */
  LogFormat?: string;

  /**
   * <p>The name of the flow log group.</p>
   */
  LogGroupName?: string;

  /**
   * <p>The ID of the resource on which the flow log was created.</p>
   */
  ResourceId?: string;

  /**
   * <p>The type of traffic captured for the flow log.</p>
   */
  TrafficType?: TrafficType | string;
}

export namespace FlowLog {
  export function isa(o: any): o is FlowLog {
    return _smithy.isa(o, "FlowLog");
  }
}

export type FlowLogsResourceType = "NetworkInterface" | "Subnet" | "VPC";

/**
 * <p>Describes the FPGA accelerator for the instance type.</p>
 */
export interface FpgaDeviceInfo {
  __type?: "FpgaDeviceInfo";
  /**
   * <p>The count of FPGA accelerators for the instance type.</p>
   */
  Count?: number;

  /**
   * <p>The manufacturer of the FPGA accelerator.</p>
   */
  Manufacturer?: string;

  /**
   * <p>Describes the memory for the FPGA accelerator for the instance type.</p>
   */
  MemoryInfo?: FpgaDeviceMemoryInfo;

  /**
   * <p>The name of the FPGA accelerator.</p>
   */
  Name?: string;
}

export namespace FpgaDeviceInfo {
  export function isa(o: any): o is FpgaDeviceInfo {
    return _smithy.isa(o, "FpgaDeviceInfo");
  }
}

/**
 * <p>Describes the memory for the FPGA accelerator for the instance type.</p>
 */
export interface FpgaDeviceMemoryInfo {
  __type?: "FpgaDeviceMemoryInfo";
  /**
   * <p>The size (in MiB) for the memory available to the FPGA accelerator.</p>
   */
  SizeInMiB?: number;
}

export namespace FpgaDeviceMemoryInfo {
  export function isa(o: any): o is FpgaDeviceMemoryInfo {
    return _smithy.isa(o, "FpgaDeviceMemoryInfo");
  }
}

/**
 * <p>Describes an Amazon FPGA image (AFI).</p>
 */
export interface FpgaImage {
  __type?: "FpgaImage";
  /**
   * <p>The date and time the AFI was created.</p>
   */
  CreateTime?: Date;

  /**
   * <p>Indicates whether data retention support is enabled for the AFI.</p>
   */
  DataRetentionSupport?: boolean;

  /**
   * <p>The description of the AFI.</p>
   */
  Description?: string;

  /**
   * <p>The global FPGA image identifier (AGFI ID).</p>
   */
  FpgaImageGlobalId?: string;

  /**
   * <p>The FPGA image identifier (AFI ID).</p>
   */
  FpgaImageId?: string;

  /**
   * <p>The name of the AFI.</p>
   */
  Name?: string;

  /**
   * <p>The alias of the AFI owner. Possible values include <code>self</code>, <code>amazon</code>, and <code>aws-marketplace</code>.</p>
   */
  OwnerAlias?: string;

  /**
   * <p>The AWS account ID of the AFI owner.</p>
   */
  OwnerId?: string;

  /**
   * <p>Information about the PCI bus.</p>
   */
  PciId?: PciId;

  /**
   * <p>The product codes for the AFI.</p>
   */
  ProductCodes?: Array<ProductCode>;

  /**
   * <p>Indicates whether the AFI is public.</p>
   */
  Public?: boolean;

  /**
   * <p>The version of the AWS Shell that was used to create the bitstream.</p>
   */
  ShellVersion?: string;

  /**
   * <p>Information about the state of the AFI.</p>
   */
  State?: FpgaImageState;

  /**
   * <p>Any tags assigned to the AFI.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The time of the most recent update to the AFI.</p>
   */
  UpdateTime?: Date;
}

export namespace FpgaImage {
  export function isa(o: any): o is FpgaImage {
    return _smithy.isa(o, "FpgaImage");
  }
}

/**
 * <p>Describes an Amazon FPGA image (AFI) attribute.</p>
 */
export interface FpgaImageAttribute {
  __type?: "FpgaImageAttribute";
  /**
   * <p>The description of the AFI.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the AFI.</p>
   */
  FpgaImageId?: string;

  /**
   * <p>The load permissions.</p>
   */
  LoadPermissions?: Array<LoadPermission>;

  /**
   * <p>The name of the AFI.</p>
   */
  Name?: string;

  /**
   * <p>The product codes.</p>
   */
  ProductCodes?: Array<ProductCode>;
}

export namespace FpgaImageAttribute {
  export function isa(o: any): o is FpgaImageAttribute {
    return _smithy.isa(o, "FpgaImageAttribute");
  }
}

export type FpgaImageAttributeName =
  | "description"
  | "loadPermission"
  | "name"
  | "productCodes";

/**
 * <p>Describes the state of the bitstream generation process for an Amazon FPGA image (AFI).</p>
 */
export interface FpgaImageState {
  __type?: "FpgaImageState";
  /**
   * <p>The state. The following are the possible values:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>pending</code> - AFI bitstream generation is in progress.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>available</code> - The AFI is available for use.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>failed</code> - AFI bitstream generation failed.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>unavailable</code> - The AFI is no longer available for use.</p>
   *             </li>
   *          </ul>
   */
  Code?: FpgaImageStateCode | string;

  /**
   * <p>If the state is <code>failed</code>, this is the error message.</p>
   */
  Message?: string;
}

export namespace FpgaImageState {
  export function isa(o: any): o is FpgaImageState {
    return _smithy.isa(o, "FpgaImageState");
  }
}

export type FpgaImageStateCode =
  | "available"
  | "failed"
  | "pending"
  | "unavailable";

/**
 * <p>Describes the FPGAs for the instance type.</p>
 */
export interface FpgaInfo {
  __type?: "FpgaInfo";
  /**
   * <p>Describes the FPGAs for the instance type.</p>
   */
  Fpgas?: Array<FpgaDeviceInfo>;

  /**
   * <p>The total memory of all FPGA accelerators for the instance type.</p>
   */
  TotalFpgaMemoryInMiB?: number;
}

export namespace FpgaInfo {
  export function isa(o: any): o is FpgaInfo {
    return _smithy.isa(o, "FpgaInfo");
  }
}

export type GatewayType = "ipsec.1";

export interface GetAssociatedIpv6PoolCidrsRequest {
  __type?: "GetAssociatedIpv6PoolCidrsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the IPv6 address pool.</p>
   */
  PoolId: string | undefined;
}

export namespace GetAssociatedIpv6PoolCidrsRequest {
  export function isa(o: any): o is GetAssociatedIpv6PoolCidrsRequest {
    return _smithy.isa(o, "GetAssociatedIpv6PoolCidrsRequest");
  }
}

export interface GetAssociatedIpv6PoolCidrsResult extends $MetadataBearer {
  __type?: "GetAssociatedIpv6PoolCidrsResult";
  /**
   * <p>Information about the IPv6 CIDR block associations.</p>
   */
  Ipv6CidrAssociations?: Array<Ipv6CidrAssociation>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace GetAssociatedIpv6PoolCidrsResult {
  export function isa(o: any): o is GetAssociatedIpv6PoolCidrsResult {
    return _smithy.isa(o, "GetAssociatedIpv6PoolCidrsResult");
  }
}

export interface GetCapacityReservationUsageRequest {
  __type?: "GetCapacityReservationUsageRequest";
  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned nextToken value.</p>
   * 		       <p>Valid range: Minimum value of 1. Maximum value of 1000.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token to retrieve the next page of results.</p>
   */
  NextToken?: string;
}

export namespace GetCapacityReservationUsageRequest {
  export function isa(o: any): o is GetCapacityReservationUsageRequest {
    return _smithy.isa(o, "GetCapacityReservationUsageRequest");
  }
}

export interface GetCapacityReservationUsageResult extends $MetadataBearer {
  __type?: "GetCapacityReservationUsageResult";
  /**
   * <p>The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.</p>
   */
  AvailableInstanceCount?: number;

  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationId?: string;

  /**
   * <p>The type of instance for which the Capacity Reservation reserves capacity.</p>
   */
  InstanceType?: string;

  /**
   * <p>Information about the Capacity Reservation usage.</p>
   */
  InstanceUsages?: Array<InstanceUsage>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p>
   * 			      <ul>
   *             <li>
   *                <p>
   *                   <code>active</code> - The Capacity Reservation is active and the capacity is available for your use.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified
   * 					in your request. The reserved capacity is no longer available for your use.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>cancelled</code> - The Capacity Reservation was manually cancelled. The reserved capacity is no
   * 					longer available for your use.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>pending</code> - The Capacity Reservation request was successful but the capacity
   * 					provisioning is still pending.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>failed</code> - The Capacity Reservation request has failed. A request might fail
   * 					due to invalid request parameters, capacity constraints, or instance limit constraints.
   * 					Failed requests are retained for 60 minutes.</p>
   *             </li>
   *          </ul>
   */
  State?: CapacityReservationState | string;

  /**
   * <p>The number of instances for which the Capacity Reservation reserves capacity.</p>
   */
  TotalInstanceCount?: number;
}

export namespace GetCapacityReservationUsageResult {
  export function isa(o: any): o is GetCapacityReservationUsageResult {
    return _smithy.isa(o, "GetCapacityReservationUsageResult");
  }
}

export interface GetCoipPoolUsageRequest {
  __type?: "GetCoipPoolUsageRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The filters. The following are the possible values:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>coip-address-usage.allocation-id</code>
   *                </p>
   *             </li>
   *          </ul>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>coip-address-usage.aws-account-id</code>
   *                </p>
   *             </li>
   *          </ul>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>coip-address-usage.aws-service</code>
   *                </p>
   *             </li>
   *          </ul>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>coip-address-usage.co-ip</code>
   *                </p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the address pool.</p>
   */
  PoolId: string | undefined;
}

export namespace GetCoipPoolUsageRequest {
  export function isa(o: any): o is GetCoipPoolUsageRequest {
    return _smithy.isa(o, "GetCoipPoolUsageRequest");
  }
}

export interface GetCoipPoolUsageResult extends $MetadataBearer {
  __type?: "GetCoipPoolUsageResult";
  /**
   * <p>Information about the address usage.</p>
   */
  CoipAddressUsages?: Array<CoipAddressUsage>;

  /**
   * <p>The ID of the customer-owned address pool.</p>
   */
  CoipPoolId?: string;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId?: string;
}

export namespace GetCoipPoolUsageResult {
  export function isa(o: any): o is GetCoipPoolUsageResult {
    return _smithy.isa(o, "GetCoipPoolUsageResult");
  }
}

export interface GetConsoleOutputRequest {
  __type?: "GetConsoleOutputRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>When enabled, retrieves the latest console output for the instance.</p>
   *         <p>Default: disabled (<code>false</code>)</p>
   */
  Latest?: boolean;
}

export namespace GetConsoleOutputRequest {
  export function isa(o: any): o is GetConsoleOutputRequest {
    return _smithy.isa(o, "GetConsoleOutputRequest");
  }
}

export interface GetConsoleOutputResult extends $MetadataBearer {
  __type?: "GetConsoleOutputResult";
  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The console output, base64-encoded. If you are using a command line tool, the tool
   *             decodes the output for you.</p>
   */
  Output?: string;

  /**
   * <p>The time at which the output was last updated.</p>
   */
  Timestamp?: Date;
}

export namespace GetConsoleOutputResult {
  export function isa(o: any): o is GetConsoleOutputResult {
    return _smithy.isa(o, "GetConsoleOutputResult");
  }
}

export interface GetConsoleScreenshotRequest {
  __type?: "GetConsoleScreenshotRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>When set to <code>true</code>, acts as keystroke input and wakes up an instance that's
   *             in standby or "sleep" mode.</p>
   */
  WakeUp?: boolean;
}

export namespace GetConsoleScreenshotRequest {
  export function isa(o: any): o is GetConsoleScreenshotRequest {
    return _smithy.isa(o, "GetConsoleScreenshotRequest");
  }
}

export interface GetConsoleScreenshotResult extends $MetadataBearer {
  __type?: "GetConsoleScreenshotResult";
  /**
   * <p>The data that comprises the image.</p>
   */
  ImageData?: string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;
}

export namespace GetConsoleScreenshotResult {
  export function isa(o: any): o is GetConsoleScreenshotResult {
    return _smithy.isa(o, "GetConsoleScreenshotResult");
  }
}

export interface GetDefaultCreditSpecificationRequest {
  __type?: "GetDefaultCreditSpecificationRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The instance family.</p>
   */
  InstanceFamily: UnlimitedSupportedInstanceFamily | string | undefined;
}

export namespace GetDefaultCreditSpecificationRequest {
  export function isa(o: any): o is GetDefaultCreditSpecificationRequest {
    return _smithy.isa(o, "GetDefaultCreditSpecificationRequest");
  }
}

export interface GetDefaultCreditSpecificationResult extends $MetadataBearer {
  __type?: "GetDefaultCreditSpecificationResult";
  /**
   * <p>The default credit option for CPU usage of the instance family.</p>
   */
  InstanceFamilyCreditSpecification?: InstanceFamilyCreditSpecification;
}

export namespace GetDefaultCreditSpecificationResult {
  export function isa(o: any): o is GetDefaultCreditSpecificationResult {
    return _smithy.isa(o, "GetDefaultCreditSpecificationResult");
  }
}

export interface GetEbsDefaultKmsKeyIdRequest {
  __type?: "GetEbsDefaultKmsKeyIdRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace GetEbsDefaultKmsKeyIdRequest {
  export function isa(o: any): o is GetEbsDefaultKmsKeyIdRequest {
    return _smithy.isa(o, "GetEbsDefaultKmsKeyIdRequest");
  }
}

export interface GetEbsDefaultKmsKeyIdResult extends $MetadataBearer {
  __type?: "GetEbsDefaultKmsKeyIdResult";
  /**
   * <p>The Amazon Resource Name (ARN) of the default CMK for encryption by default.</p>
   */
  KmsKeyId?: string;
}

export namespace GetEbsDefaultKmsKeyIdResult {
  export function isa(o: any): o is GetEbsDefaultKmsKeyIdResult {
    return _smithy.isa(o, "GetEbsDefaultKmsKeyIdResult");
  }
}

export interface GetEbsEncryptionByDefaultRequest {
  __type?: "GetEbsEncryptionByDefaultRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace GetEbsEncryptionByDefaultRequest {
  export function isa(o: any): o is GetEbsEncryptionByDefaultRequest {
    return _smithy.isa(o, "GetEbsEncryptionByDefaultRequest");
  }
}

export interface GetEbsEncryptionByDefaultResult extends $MetadataBearer {
  __type?: "GetEbsEncryptionByDefaultResult";
  /**
   * <p>Indicates whether encryption by default is enabled.</p>
   */
  EbsEncryptionByDefault?: boolean;
}

export namespace GetEbsEncryptionByDefaultResult {
  export function isa(o: any): o is GetEbsEncryptionByDefaultResult {
    return _smithy.isa(o, "GetEbsEncryptionByDefaultResult");
  }
}

export interface GetHostReservationPurchasePreviewRequest {
  __type?: "GetHostReservationPurchasePreviewRequest";
  /**
   * <p>The IDs of the Dedicated Hosts with which the reservation is associated.</p>
   */
  HostIdSet: Array<string> | undefined;

  /**
   * <p>The offering ID of the reservation.</p>
   */
  OfferingId: string | undefined;
}

export namespace GetHostReservationPurchasePreviewRequest {
  export function isa(o: any): o is GetHostReservationPurchasePreviewRequest {
    return _smithy.isa(o, "GetHostReservationPurchasePreviewRequest");
  }
}

export interface GetHostReservationPurchasePreviewResult
  extends $MetadataBearer {
  __type?: "GetHostReservationPurchasePreviewResult";
  /**
   * <p>The currency in which the <code>totalUpfrontPrice</code> and
   *                 <code>totalHourlyPrice</code> amounts are specified. At this time, the only
   *             supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The purchase information of the Dedicated Host reservation and the Dedicated Hosts
   *             associated with it.</p>
   */
  Purchase?: Array<Purchase>;

  /**
   * <p>The potential total hourly price of the reservation per hour.</p>
   */
  TotalHourlyPrice?: string;

  /**
   * <p>The potential total upfront price. This is billed immediately.</p>
   */
  TotalUpfrontPrice?: string;
}

export namespace GetHostReservationPurchasePreviewResult {
  export function isa(o: any): o is GetHostReservationPurchasePreviewResult {
    return _smithy.isa(o, "GetHostReservationPurchasePreviewResult");
  }
}

export interface GetLaunchTemplateDataRequest {
  __type?: "GetLaunchTemplateDataRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;
}

export namespace GetLaunchTemplateDataRequest {
  export function isa(o: any): o is GetLaunchTemplateDataRequest {
    return _smithy.isa(o, "GetLaunchTemplateDataRequest");
  }
}

export interface GetLaunchTemplateDataResult extends $MetadataBearer {
  __type?: "GetLaunchTemplateDataResult";
  /**
   * <p>The instance data.</p>
   */
  LaunchTemplateData?: ResponseLaunchTemplateData;
}

export namespace GetLaunchTemplateDataResult {
  export function isa(o: any): o is GetLaunchTemplateDataResult {
    return _smithy.isa(o, "GetLaunchTemplateDataResult");
  }
}

export interface GetPasswordDataRequest {
  __type?: "GetPasswordDataRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the Windows instance.</p>
   */
  InstanceId: string | undefined;
}

export namespace GetPasswordDataRequest {
  export function isa(o: any): o is GetPasswordDataRequest {
    return _smithy.isa(o, "GetPasswordDataRequest");
  }
}

export interface GetPasswordDataResult extends $MetadataBearer {
  __type?: "GetPasswordDataResult";
  /**
   * <p>The ID of the Windows instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The password of the instance. Returns an empty string if the password is not
   *             available.</p>
   */
  PasswordData?: string;

  /**
   * <p>The time the data was last updated.</p>
   */
  Timestamp?: Date;
}

export namespace GetPasswordDataResult {
  export function isa(o: any): o is GetPasswordDataResult {
    return _smithy.isa(o, "GetPasswordDataResult");
  }
}

/**
 * <p>Contains the parameters for GetReservedInstanceExchangeQuote.</p>
 */
export interface GetReservedInstancesExchangeQuoteRequest {
  __type?: "GetReservedInstancesExchangeQuoteRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the Convertible Reserved Instances to exchange.</p>
   */
  ReservedInstanceIds: Array<string> | undefined;

  /**
   * <p>The configuration of the target Convertible Reserved Instance to exchange for your
   *             current Convertible Reserved Instances.</p>
   */
  TargetConfigurations?: Array<TargetConfigurationRequest>;
}

export namespace GetReservedInstancesExchangeQuoteRequest {
  export function isa(o: any): o is GetReservedInstancesExchangeQuoteRequest {
    return _smithy.isa(o, "GetReservedInstancesExchangeQuoteRequest");
  }
}

/**
 * <p>Contains the output of GetReservedInstancesExchangeQuote.</p>
 */
export interface GetReservedInstancesExchangeQuoteResult
  extends $MetadataBearer {
  __type?: "GetReservedInstancesExchangeQuoteResult";
  /**
   * <p>The currency of the transaction.</p>
   */
  CurrencyCode?: string;

  /**
   * <p>If <code>true</code>, the exchange is valid. If <code>false</code>, the exchange cannot be completed.</p>
   */
  IsValidExchange?: boolean;

  /**
   * <p>The new end date of the reservation term.</p>
   */
  OutputReservedInstancesWillExpireAt?: Date;

  /**
   * <p>The total true upfront charge for the exchange.</p>
   */
  PaymentDue?: string;

  /**
   * <p>The cost associated with the Reserved Instance.</p>
   */
  ReservedInstanceValueRollup?: ReservationValue;

  /**
   * <p>The configuration of your Convertible Reserved Instances.</p>
   */
  ReservedInstanceValueSet?: Array<ReservedInstanceReservationValue>;

  /**
   * <p>The cost associated with the Reserved Instance.</p>
   */
  TargetConfigurationValueRollup?: ReservationValue;

  /**
   * <p>The values of the target Convertible Reserved Instances.</p>
   */
  TargetConfigurationValueSet?: Array<TargetReservationValue>;

  /**
   * <p>Describes the reason why the exchange cannot be completed.</p>
   */
  ValidationFailureReason?: string;
}

export namespace GetReservedInstancesExchangeQuoteResult {
  export function isa(o: any): o is GetReservedInstancesExchangeQuoteResult {
    return _smithy.isa(o, "GetReservedInstancesExchangeQuoteResult");
  }
}

export interface GetTransitGatewayAttachmentPropagationsRequest {
  __type?: "GetTransitGatewayAttachmentPropagationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-route-table-id</code> - The ID of the transit gateway route table.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace GetTransitGatewayAttachmentPropagationsRequest {
  export function isa(
    o: any
  ): o is GetTransitGatewayAttachmentPropagationsRequest {
    return _smithy.isa(o, "GetTransitGatewayAttachmentPropagationsRequest");
  }
}

export interface GetTransitGatewayAttachmentPropagationsResult
  extends $MetadataBearer {
  __type?: "GetTransitGatewayAttachmentPropagationsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the propagation route tables.</p>
   */
  TransitGatewayAttachmentPropagations?: Array<
    TransitGatewayAttachmentPropagation
  >;
}

export namespace GetTransitGatewayAttachmentPropagationsResult {
  export function isa(
    o: any
  ): o is GetTransitGatewayAttachmentPropagationsResult {
    return _smithy.isa(o, "GetTransitGatewayAttachmentPropagationsResult");
  }
}

export interface GetTransitGatewayMulticastDomainAssociationsRequest {
  __type?: "GetTransitGatewayMulticastDomainAssociationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>resource-id</code> - The ID of the resource.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>resource-type</code> - The type of resource. The valid value is: <code>vpc</code>.</p>
   *             </li>
   *             <li>
   *
   *                 <p>
   *                   <code>state</code> - The state of the subnet association. Valid values are
   *                         <code>associated</code> |
   *                         <code>associating</code>
   *                     | <code>disassociated</code> | <code>disassociating</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>subnet-id</code> - The ID of the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace GetTransitGatewayMulticastDomainAssociationsRequest {
  export function isa(
    o: any
  ): o is GetTransitGatewayMulticastDomainAssociationsRequest {
    return _smithy.isa(
      o,
      "GetTransitGatewayMulticastDomainAssociationsRequest"
    );
  }
}

export interface GetTransitGatewayMulticastDomainAssociationsResult
  extends $MetadataBearer {
  __type?: "GetTransitGatewayMulticastDomainAssociationsResult";
  /**
   * <p>Information about the multicast domain associations.</p>
   */
  MulticastDomainAssociations?: Array<TransitGatewayMulticastDomainAssociation>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace GetTransitGatewayMulticastDomainAssociationsResult {
  export function isa(
    o: any
  ): o is GetTransitGatewayMulticastDomainAssociationsResult {
    return _smithy.isa(o, "GetTransitGatewayMulticastDomainAssociationsResult");
  }
}

export interface GetTransitGatewayRouteTableAssociationsRequest {
  __type?: "GetTransitGatewayRouteTableAssociationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>resource-id</code> - The ID of the resource.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>resource-type</code> - The resource type (<code>vpc</code> | <code>vpn</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace GetTransitGatewayRouteTableAssociationsRequest {
  export function isa(
    o: any
  ): o is GetTransitGatewayRouteTableAssociationsRequest {
    return _smithy.isa(o, "GetTransitGatewayRouteTableAssociationsRequest");
  }
}

export interface GetTransitGatewayRouteTableAssociationsResult
  extends $MetadataBearer {
  __type?: "GetTransitGatewayRouteTableAssociationsResult";
  /**
   * <p>Information about the associations.</p>
   */
  Associations?: Array<TransitGatewayRouteTableAssociation>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace GetTransitGatewayRouteTableAssociationsResult {
  export function isa(
    o: any
  ): o is GetTransitGatewayRouteTableAssociationsResult {
    return _smithy.isa(o, "GetTransitGatewayRouteTableAssociationsResult");
  }
}

export interface GetTransitGatewayRouteTablePropagationsRequest {
  __type?: "GetTransitGatewayRouteTablePropagationsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>resource-id</code> - The ID of the resource.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>resource-type</code> - The resource type (<code>vpc</code> | <code>vpn</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace GetTransitGatewayRouteTablePropagationsRequest {
  export function isa(
    o: any
  ): o is GetTransitGatewayRouteTablePropagationsRequest {
    return _smithy.isa(o, "GetTransitGatewayRouteTablePropagationsRequest");
  }
}

export interface GetTransitGatewayRouteTablePropagationsResult
  extends $MetadataBearer {
  __type?: "GetTransitGatewayRouteTablePropagationsResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the route table propagations.</p>
   */
  TransitGatewayRouteTablePropagations?: Array<
    TransitGatewayRouteTablePropagation
  >;
}

export namespace GetTransitGatewayRouteTablePropagationsResult {
  export function isa(
    o: any
  ): o is GetTransitGatewayRouteTablePropagationsResult {
    return _smithy.isa(o, "GetTransitGatewayRouteTablePropagationsResult");
  }
}

/**
 * <p>Describes the GPU accelerators for the instance type.</p>
 */
export interface GpuDeviceInfo {
  __type?: "GpuDeviceInfo";
  /**
   * <p>The number of GPUs for the instance type.</p>
   */
  Count?: number;

  /**
   * <p>The manufacturer of the GPU accelerator.</p>
   */
  Manufacturer?: string;

  /**
   * <p>Describes the memory available to the GPU accelerator.</p>
   */
  MemoryInfo?: GpuDeviceMemoryInfo;

  /**
   * <p>The name of the GPU accelerator.</p>
   */
  Name?: string;
}

export namespace GpuDeviceInfo {
  export function isa(o: any): o is GpuDeviceInfo {
    return _smithy.isa(o, "GpuDeviceInfo");
  }
}

/**
 * <p>Describes the memory available to the GPU accelerator.</p>
 */
export interface GpuDeviceMemoryInfo {
  __type?: "GpuDeviceMemoryInfo";
  /**
   * <p>The size (in MiB) for the memory available to the GPU accelerator.</p>
   */
  SizeInMiB?: number;
}

export namespace GpuDeviceMemoryInfo {
  export function isa(o: any): o is GpuDeviceMemoryInfo {
    return _smithy.isa(o, "GpuDeviceMemoryInfo");
  }
}

/**
 * <p>Describes the GPU accelerators for the instance type.</p>
 */
export interface GpuInfo {
  __type?: "GpuInfo";
  /**
   * <p>Describes the GPU accelerators for the instance type.</p>
   */
  Gpus?: Array<GpuDeviceInfo>;

  /**
   * <p>The total size of the memory for the GPU accelerators for the instance type.</p>
   */
  TotalGpuMemoryInMiB?: number;
}

export namespace GpuInfo {
  export function isa(o: any): o is GpuInfo {
    return _smithy.isa(o, "GpuInfo");
  }
}

/**
 * <p>Describes a security group.</p>
 */
export interface GroupIdentifier {
  __type?: "GroupIdentifier";
  /**
   * <p>The ID of the security group.</p>
   */
  GroupId?: string;

  /**
   * <p>The name of the security group.</p>
   */
  GroupName?: string;
}

export namespace GroupIdentifier {
  export function isa(o: any): o is GroupIdentifier {
    return _smithy.isa(o, "GroupIdentifier");
  }
}

/**
 * <p>Indicates whether your instance is configured for hibernation. This parameter is valid
 *             only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation
 *                 prerequisites</a>. For
 *             more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate Your Instance</a> in the
 *                 <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export interface HibernationOptions {
  __type?: "HibernationOptions";
  /**
   * <p>If this parameter is set to <code>true</code>, your instance is enabled for
   *             hibernation; otherwise, it is not enabled for hibernation.</p>
   */
  Configured?: boolean;
}

export namespace HibernationOptions {
  export function isa(o: any): o is HibernationOptions {
    return _smithy.isa(o, "HibernationOptions");
  }
}

/**
 * <p>Indicates whether your instance is configured for hibernation. This parameter is valid
 *             only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation
 *                 prerequisites</a>. For
 *             more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate Your Instance</a> in the
 *                 <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export interface HibernationOptionsRequest {
  __type?: "HibernationOptionsRequest";
  /**
   * <p>If you set this parameter to <code>true</code>, your instance is enabled for
   *             hibernation.</p>
   *         <p>Default: <code>false</code>
   *          </p>
   */
  Configured?: boolean;
}

export namespace HibernationOptionsRequest {
  export function isa(o: any): o is HibernationOptionsRequest {
    return _smithy.isa(o, "HibernationOptionsRequest");
  }
}

/**
 * <p>Describes an event in the history of the Spot Fleet request.</p>
 */
export interface HistoryRecord {
  __type?: "HistoryRecord";
  /**
   * <p>Information about the event.</p>
   */
  EventInformation?: EventInformation;

  /**
   * <p>The event type.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>error</code> - An error with the Spot Fleet request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>fleetRequestChange</code> - A change in the status or configuration of the Spot Fleet request.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>instanceChange</code> - An instance was launched or terminated.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>Information</code> - An informational event.</p>
   *             </li>
   *          </ul>
   */
  EventType?: EventType | string;

  /**
   * <p>The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  Timestamp?: Date;
}

export namespace HistoryRecord {
  export function isa(o: any): o is HistoryRecord {
    return _smithy.isa(o, "HistoryRecord");
  }
}

/**
 * <p>Describes an event in the history of an EC2 Fleet.</p>
 */
export interface HistoryRecordEntry {
  __type?: "HistoryRecordEntry";
  /**
   * <p>Information about the event.</p>
   */
  EventInformation?: EventInformation;

  /**
   * <p>The event type.</p>
   */
  EventType?: FleetEventType | string;

  /**
   * <p>The date and time of the event, in UTC format (for example,
   *             <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  Timestamp?: Date;
}

export namespace HistoryRecordEntry {
  export function isa(o: any): o is HistoryRecordEntry {
    return _smithy.isa(o, "HistoryRecordEntry");
  }
}

/**
 * <p>Describes the properties of the Dedicated Host.</p>
 */
export interface Host {
  __type?: "Host";
  /**
   * <p>The time that the Dedicated Host was allocated.</p>
   */
  AllocationTime?: Date;

  /**
   * <p>Indicates whether the Dedicated Host supports multiple instance types of the same instance family,
   * 			or a specific instance type only. <code>one</code> indicates that the Dedicated Host supports
   * 			multiple instance types in the instance family. <code>off</code> indicates that the Dedicated
   * 			Host supports a single instance type only.</p>
   */
  AllowsMultipleInstanceTypes?: AllowsMultipleInstanceTypes | string;

  /**
   * <p>Whether auto-placement is on or off.</p>
   */
  AutoPlacement?: AutoPlacement | string;

  /**
   * <p>The Availability Zone of the Dedicated Host.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The ID of the Availability Zone in which the Dedicated Host is allocated.</p>
   */
  AvailabilityZoneId?: string;

  /**
   * <p>Information about the instances running on the Dedicated Host.</p>
   */
  AvailableCapacity?: AvailableCapacity;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The ID of the Dedicated Host.</p>
   */
  HostId?: string;

  /**
   * <p>The hardware specifications of the Dedicated Host.</p>
   */
  HostProperties?: HostProperties;

  /**
   * <p>Indicates whether host recovery is enabled or disabled for the Dedicated Host.</p>
   */
  HostRecovery?: HostRecovery | string;

  /**
   * <p>The reservation ID of the Dedicated Host. This returns a <code>null</code> response
   *             if the Dedicated Host doesn't have an associated reservation.</p>
   */
  HostReservationId?: string;

  /**
   * <p>The IDs and instance type that are currently running on the Dedicated
   *             Host.</p>
   */
  Instances?: Array<HostInstance>;

  /**
   * <p>Indicates whether the Dedicated Host is in a host resource group. If
   * 			<b>memberOfServiceLinkedResourceGroup</b> is
   * 			<code>true</code>, the host is in a host resource group; otherwise, it is not.</p>
   */
  MemberOfServiceLinkedResourceGroup?: boolean;

  /**
   * <p>The ID of the AWS account that owns the Dedicated Host.</p>
   */
  OwnerId?: string;

  /**
   * <p>The time that the Dedicated Host was released.</p>
   */
  ReleaseTime?: Date;

  /**
   * <p>The Dedicated Host's state.</p>
   */
  State?: AllocationState | string;

  /**
   * <p>Any tags assigned to the Dedicated Host.</p>
   */
  Tags?: Array<Tag>;
}

export namespace Host {
  export function isa(o: any): o is Host {
    return _smithy.isa(o, "Host");
  }
}

/**
 * <p>Describes an instance running on a Dedicated Host.</p>
 */
export interface HostInstance {
  __type?: "HostInstance";
  /**
   * <p>The ID of instance that is running on the Dedicated Host.</p>
   */
  InstanceId?: string;

  /**
   * <p>The instance type (for example, <code>m3.medium</code>) of the running instance.</p>
   */
  InstanceType?: string;

  /**
   * <p>The ID of the AWS account that owns the instance.</p>
   */
  OwnerId?: string;
}

export namespace HostInstance {
  export function isa(o: any): o is HostInstance {
    return _smithy.isa(o, "HostInstance");
  }
}

/**
 * <p>Details about the Dedicated Host Reservation offering.</p>
 */
export interface HostOffering {
  __type?: "HostOffering";
  /**
   * <p>The currency of the offering.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The duration of the offering (in seconds).</p>
   */
  Duration?: number;

  /**
   * <p>The hourly price of the offering.</p>
   */
  HourlyPrice?: string;

  /**
   * <p>The instance family of the offering.</p>
   */
  InstanceFamily?: string;

  /**
   * <p>The ID of the offering.</p>
   */
  OfferingId?: string;

  /**
   * <p>The available payment option.</p>
   */
  PaymentOption?: PaymentOption | string;

  /**
   * <p>The upfront price of the offering. Does not apply to No Upfront
   *             offerings.</p>
   */
  UpfrontPrice?: string;
}

export namespace HostOffering {
  export function isa(o: any): o is HostOffering {
    return _smithy.isa(o, "HostOffering");
  }
}

/**
 * <p>Describes the properties of a Dedicated Host.</p>
 */
export interface HostProperties {
  __type?: "HostProperties";
  /**
   * <p>The number of cores on the Dedicated Host.</p>
   */
  Cores?: number;

  /**
   * <p>The instance family supported by the Dedicated Host. For example, <code>m5</code>.</p>
   */
  InstanceFamily?: string;

  /**
   * <p>The instance type supported by the Dedicated Host. For example, <code>m5.large</code>.
   *         	If the host supports multiple instance types, no <b>instanceType</b>
   *         	is returned.</p>
   */
  InstanceType?: string;

  /**
   * <p>The number of sockets on the Dedicated Host.</p>
   */
  Sockets?: number;

  /**
   * <p>The total number of vCPUs on the Dedicated Host.</p>
   */
  TotalVCpus?: number;
}

export namespace HostProperties {
  export function isa(o: any): o is HostProperties {
    return _smithy.isa(o, "HostProperties");
  }
}

export type HostRecovery = "off" | "on";

/**
 * <p>Details about the Dedicated Host Reservation and associated Dedicated
 *             Hosts.</p>
 */
export interface HostReservation {
  __type?: "HostReservation";
  /**
   * <p>The number of Dedicated Hosts the reservation is associated with.</p>
   */
  Count?: number;

  /**
   * <p>The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code>
   *             amounts are specified. At this time, the only supported currency is
   *             <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The length of the reservation's term, specified in seconds. Can be <code>31536000
   *                 (1 year)</code> | <code>94608000 (3 years)</code>.</p>
   */
  Duration?: number;

  /**
   * <p>The date and time that the reservation ends.</p>
   */
  End?: Date;

  /**
   * <p>The IDs of the Dedicated Hosts associated with the reservation.</p>
   */
  HostIdSet?: Array<string>;

  /**
   * <p>The ID of the reservation that specifies the associated Dedicated Hosts.</p>
   */
  HostReservationId?: string;

  /**
   * <p>The hourly price of the reservation.</p>
   */
  HourlyPrice?: string;

  /**
   * <p>The instance family of the Dedicated Host Reservation. The instance family on the
   *             Dedicated Host must be the same in order for it to benefit from the
   *             reservation.</p>
   */
  InstanceFamily?: string;

  /**
   * <p>The ID of the reservation. This remains the same regardless of which Dedicated
   *             Hosts are associated with it.</p>
   */
  OfferingId?: string;

  /**
   * <p>The payment option selected for this reservation.</p>
   */
  PaymentOption?: PaymentOption | string;

  /**
   * <p>The date and time that the reservation started.</p>
   */
  Start?: Date;

  /**
   * <p>The state of the reservation.</p>
   */
  State?: ReservationState | string;

  /**
   * <p>Any tags assigned to the Dedicated Host Reservation.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The upfront price of the reservation.</p>
   */
  UpfrontPrice?: string;
}

export namespace HostReservation {
  export function isa(o: any): o is HostReservation {
    return _smithy.isa(o, "HostReservation");
  }
}

export type HostTenancy = "dedicated" | "host";

export enum HttpTokensState {
  optional = "optional",
  required = "required"
}

export type HypervisorType = "ovm" | "xen";

/**
 * <p>The internet key exchange (IKE) version permitted for the VPN tunnel.</p>
 */
export interface IKEVersionsListValue {
  __type?: "IKEVersionsListValue";
  /**
   * <p>The IKE version.</p>
   */
  Value?: string;
}

export namespace IKEVersionsListValue {
  export function isa(o: any): o is IKEVersionsListValue {
    return _smithy.isa(o, "IKEVersionsListValue");
  }
}

/**
 * <p>The IKE version that is permitted for the VPN tunnel.</p>
 */
export interface IKEVersionsRequestListValue {
  __type?: "IKEVersionsRequestListValue";
  /**
   * <p>The IKE version.</p>
   */
  Value?: string;
}

export namespace IKEVersionsRequestListValue {
  export function isa(o: any): o is IKEVersionsRequestListValue {
    return _smithy.isa(o, "IKEVersionsRequestListValue");
  }
}

/**
 * <p>Describes an IAM instance profile.</p>
 */
export interface IamInstanceProfile {
  __type?: "IamInstanceProfile";
  /**
   * <p>The Amazon Resource Name (ARN) of the instance profile.</p>
   */
  Arn?: string;

  /**
   * <p>The ID of the instance profile.</p>
   */
  Id?: string;
}

export namespace IamInstanceProfile {
  export function isa(o: any): o is IamInstanceProfile {
    return _smithy.isa(o, "IamInstanceProfile");
  }
}

/**
 * <p>Describes an association between an IAM instance profile and an instance.</p>
 */
export interface IamInstanceProfileAssociation {
  __type?: "IamInstanceProfileAssociation";
  /**
   * <p>The ID of the association.</p>
   */
  AssociationId?: string;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: IamInstanceProfile;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The state of the association.</p>
   */
  State?: IamInstanceProfileAssociationState | string;

  /**
   * <p>The time the IAM instance profile was associated with the instance.</p>
   */
  Timestamp?: Date;
}

export namespace IamInstanceProfileAssociation {
  export function isa(o: any): o is IamInstanceProfileAssociation {
    return _smithy.isa(o, "IamInstanceProfileAssociation");
  }
}

export enum IamInstanceProfileAssociationState {
  ASSOCIATED = "associated",
  ASSOCIATING = "associating",
  DISASSOCIATED = "disassociated",
  DISASSOCIATING = "disassociating"
}

/**
 * <p>Describes an IAM instance profile.</p>
 */
export interface IamInstanceProfileSpecification {
  __type?: "IamInstanceProfileSpecification";
  /**
   * <p>The Amazon Resource Name (ARN) of the instance profile.</p>
   */
  Arn?: string;

  /**
   * <p>The name of the instance profile.</p>
   */
  Name?: string;
}

export namespace IamInstanceProfileSpecification {
  export function isa(o: any): o is IamInstanceProfileSpecification {
    return _smithy.isa(o, "IamInstanceProfileSpecification");
  }
}

/**
 * <p>Describes the ICMP type and code.</p>
 */
export interface IcmpTypeCode {
  __type?: "IcmpTypeCode";
  /**
   * <p>The ICMP code. A value of -1 means all codes for the specified ICMP type.</p>
   */
  Code?: number;

  /**
   * <p>The ICMP type. A value of -1 means all types.</p>
   */
  Type?: number;
}

export namespace IcmpTypeCode {
  export function isa(o: any): o is IcmpTypeCode {
    return _smithy.isa(o, "IcmpTypeCode");
  }
}

/**
 * <p>Describes the ID format for a resource.</p>
 */
export interface IdFormat {
  __type?: "IdFormat";
  /**
   * <p>The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.</p>
   */
  Deadline?: Date;

  /**
   * <p>The type of resource.</p>
   */
  Resource?: string;

  /**
   * <p>Indicates whether longer IDs (17-character IDs) are enabled for the resource.</p>
   */
  UseLongIds?: boolean;
}

export namespace IdFormat {
  export function isa(o: any): o is IdFormat {
    return _smithy.isa(o, "IdFormat");
  }
}

/**
 * <p>Describes an image.</p>
 */
export interface Image {
  __type?: "Image";
  /**
   * <p>The architecture of the image.</p>
   */
  Architecture?: ArchitectureValues | string;

  /**
   * <p>Any block device mapping entries.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>The date and time the image was created.</p>
   */
  CreationDate?: string;

  /**
   * <p>The description of the AMI that was provided during image creation.</p>
   */
  Description?: string;

  /**
   * <p>Specifies whether enhanced networking with ENA is enabled.</p>
   */
  EnaSupport?: boolean;

  /**
   * <p>The hypervisor type of the image.</p>
   */
  Hypervisor?: HypervisorType | string;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId?: string;

  /**
   * <p>The location of the AMI.</p>
   */
  ImageLocation?: string;

  /**
   * <p>The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or
   *         the AWS account ID of the AMI owner.</p>
   */
  ImageOwnerAlias?: string;

  /**
   * <p>The type of image.</p>
   */
  ImageType?: ImageTypeValues | string;

  /**
   * <p>The kernel associated with the image, if any. Only applicable for machine images.</p>
   */
  KernelId?: string;

  /**
   * <p>The name of the AMI that was provided during image creation.</p>
   */
  Name?: string;

  /**
   * <p>The AWS account ID of the image owner.</p>
   */
  OwnerId?: string;

  /**
   * <p>This value is set to <code>windows</code> for Windows AMIs; otherwise, it is blank.</p>
   */
  Platform?: PlatformValues | string;

  /**
   * <p>Any product codes associated with the AMI.</p>
   */
  ProductCodes?: Array<ProductCode>;

  /**
   * <p>Indicates whether the image has public launch permissions. The value is <code>true</code> if
   * 				this image has public launch permissions or <code>false</code>
   * 				if it has only implicit and explicit launch permissions.</p>
   */
  Public?: boolean;

  /**
   * <p>The RAM disk associated with the image, if any. Only applicable for machine images.</p>
   */
  RamdiskId?: string;

  /**
   * <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
   */
  RootDeviceName?: string;

  /**
   * <p>The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume.</p>
   */
  RootDeviceType?: DeviceType | string;

  /**
   * <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
   */
  SriovNetSupport?: string;

  /**
   * <p>The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance.</p>
   */
  State?: ImageState | string;

  /**
   * <p>The reason for the state change.</p>
   */
  StateReason?: StateReason;

  /**
   * <p>Any tags assigned to the image.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The type of virtualization of the AMI.</p>
   */
  VirtualizationType?: VirtualizationType | string;
}

export namespace Image {
  export function isa(o: any): o is Image {
    return _smithy.isa(o, "Image");
  }
}

/**
 * <p>Describes an image attribute.</p>
 */
export interface ImageAttribute extends $MetadataBearer {
  __type?: "ImageAttribute";
  /**
   * <p>The block device mapping entries.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>A description for the AMI.</p>
   */
  Description?: AttributeValue;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId?: string;

  /**
   * <p>The kernel ID.</p>
   */
  KernelId?: AttributeValue;

  /**
   * <p>The launch permissions.</p>
   */
  LaunchPermissions?: Array<LaunchPermission>;

  /**
   * <p>The product codes.</p>
   */
  ProductCodes?: Array<ProductCode>;

  /**
   * <p>The RAM disk ID.</p>
   */
  RamdiskId?: AttributeValue;

  /**
   * <p>Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.</p>
   */
  SriovNetSupport?: AttributeValue;
}

export namespace ImageAttribute {
  export function isa(o: any): o is ImageAttribute {
    return _smithy.isa(o, "ImageAttribute");
  }
}

export type ImageAttributeName =
  | "blockDeviceMapping"
  | "description"
  | "kernel"
  | "launchPermission"
  | "productCodes"
  | "ramdisk"
  | "sriovNetSupport";

/**
 * <p>Describes the disk container object for an import image task.</p>
 */
export interface ImageDiskContainer {
  __type?: "ImageDiskContainer";
  /**
   * <p>The description of the disk image.</p>
   */
  Description?: string;

  /**
   * <p>The block device mapping for the disk.</p>
   */
  DeviceName?: string;

  /**
   * <p>The format of the disk image being imported.</p>
   *          <p>Valid values: <code>VHD</code> | <code>VMDK</code> | <code>OVA</code>
   *          </p>
   */
  Format?: string;

  /**
   * <p>The ID of the EBS snapshot to be used for importing the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an
   *    Amazon S3 URL (s3://..)</p>
   */
  Url?: string;

  /**
   * <p>The S3 bucket for the disk image.</p>
   */
  UserBucket?: UserBucket;
}

export namespace ImageDiskContainer {
  export function isa(o: any): o is ImageDiskContainer {
    return _smithy.isa(o, "ImageDiskContainer");
  }
}

export type ImageState =
  | "available"
  | "deregistered"
  | "error"
  | "failed"
  | "invalid"
  | "pending"
  | "transient";

export type ImageTypeValues = "kernel" | "machine" | "ramdisk";

export interface ImportClientVpnClientCertificateRevocationListRequest {
  __type?: "ImportClientVpnClientCertificateRevocationListRequest";
  /**
   * <p>The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List</a> in the
   * 				<i>AWS Client VPN Administrator Guide</i>.</p>
   */
  CertificateRevocationList: string | undefined;

  /**
   * <p>The ID of the Client VPN endpoint to which the client certificate revocation list applies.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace ImportClientVpnClientCertificateRevocationListRequest {
  export function isa(
    o: any
  ): o is ImportClientVpnClientCertificateRevocationListRequest {
    return _smithy.isa(
      o,
      "ImportClientVpnClientCertificateRevocationListRequest"
    );
  }
}

export interface ImportClientVpnClientCertificateRevocationListResult
  extends $MetadataBearer {
  __type?: "ImportClientVpnClientCertificateRevocationListResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace ImportClientVpnClientCertificateRevocationListResult {
  export function isa(
    o: any
  ): o is ImportClientVpnClientCertificateRevocationListResult {
    return _smithy.isa(
      o,
      "ImportClientVpnClientCertificateRevocationListResult"
    );
  }
}

/**
 * <p>The request information of license configurations.</p>
 */
export interface ImportImageLicenseConfigurationRequest {
  __type?: "ImportImageLicenseConfigurationRequest";
  /**
   * <p>The ARN of a license configuration.</p>
   */
  LicenseConfigurationArn?: string;
}

export namespace ImportImageLicenseConfigurationRequest {
  export function isa(o: any): o is ImportImageLicenseConfigurationRequest {
    return _smithy.isa(o, "ImportImageLicenseConfigurationRequest");
  }
}

/**
 * <p> The response information for license configurations.</p>
 */
export interface ImportImageLicenseConfigurationResponse {
  __type?: "ImportImageLicenseConfigurationResponse";
  /**
   * <p>The ARN of a license configuration.</p>
   */
  LicenseConfigurationArn?: string;
}

export namespace ImportImageLicenseConfigurationResponse {
  export function isa(o: any): o is ImportImageLicenseConfigurationResponse {
    return _smithy.isa(o, "ImportImageLicenseConfigurationResponse");
  }
}

export interface ImportImageRequest {
  __type?: "ImportImageRequest";
  /**
   * <p>The architecture of the virtual machine.</p>
   *          <p>Valid values: <code>i386</code> | <code>x86_64</code> | <code>arm64</code>
   *          </p>
   */
  Architecture?: string;

  /**
   * <p>The client-specific data.</p>
   */
  ClientData?: ClientData;

  /**
   * <p>The token to enable idempotency for VM import requests.</p>
   */
  ClientToken?: string;

  /**
   * <p>A description string for the import image task.</p>
   */
  Description?: string;

  /**
   * <p>Information about the disk containers.</p>
   */
  DiskContainers?: Array<ImageDiskContainer>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specifies whether the destination AMI of the imported image should be encrypted. The default CMK for EBS is used
   *    unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the
   *     <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The target hypervisor platform.</p>
   *          <p>Valid values: <code>xen</code>
   *          </p>
   */
  Hypervisor?: string;

  /**
   * <p>An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the
   *    encrypted AMI. This parameter is only required if you want to use a non-default CMK; if this
   *    parameter is not specified, the default CMK for EBS is used. If a <code>KmsKeyId</code> is
   *    specified, the <code>Encrypted</code> flag must also be set. </p>
   *          <p>The CMK identifier may be provided in any of the following formats: </p>
   *          <ul>
   *             <li>
   *                <p>Key ID</p>
   *             </li>
   *             <li>
   *                <p>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code> namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p>
   *             </li>
   *             <li>
   *                <p>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p>
   *             </li>
   *             <li>
   *                <p>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code> namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>. </p>
   *             </li>
   *          </ul>
   *          <p>AWS parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may appear to complete even
   *    though you provided an invalid identifier. This action will eventually report failure. </p>
   *          <p>The specified CMK must exist in the Region that the AMI is being copied to.</p>
   *          <p>Amazon EBS does not support asymmetric CMKs.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The ARNs of the license configurations.</p>
   */
  LicenseSpecifications?: Array<ImportImageLicenseConfigurationRequest>;

  /**
   * <p>The license type to be used for the Amazon Machine Image (AMI) after importing.</p>
   *          <p>By default, we detect the source-system operating system (OS) and apply the appropriate license. Specify
   *     <code>AWS</code> to replace the source-system license with an AWS license, if appropriate. Specify <code>BYOL</code>
   *    to retain the source-system license, if appropriate.</p>
   *          <p>To use <code>BYOL</code>, you must have existing licenses with rights to use these licenses in a third party
   *    cloud, such as AWS. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image">Prerequisites</a> in the
   *    VM Import/Export User Guide.</p>
   */
  LicenseType?: string;

  /**
   * <p>The operating system of the virtual machine.</p>
   *          <p>Valid values: <code>Windows</code> | <code>Linux</code>
   *          </p>
   */
  Platform?: string;

  /**
   * <p>The name of the role to use when not using the default role, 'vmimport'.</p>
   */
  RoleName?: string;
}

export namespace ImportImageRequest {
  export function isa(o: any): o is ImportImageRequest {
    return _smithy.isa(o, "ImportImageRequest");
  }
}

export interface ImportImageResult extends $MetadataBearer {
  __type?: "ImportImageResult";
  /**
   * <p>The architecture of the virtual machine.</p>
   */
  Architecture?: string;

  /**
   * <p>A description of the import task.</p>
   */
  Description?: string;

  /**
   * <p>Indicates whether the AMI is encypted.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The target hypervisor of the import task.</p>
   */
  Hypervisor?: string;

  /**
   * <p>The ID of the Amazon Machine Image (AMI) created by the import task.</p>
   */
  ImageId?: string;

  /**
   * <p>The task ID of the import image task.</p>
   */
  ImportTaskId?: string;

  /**
   * <p>The identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key
   *    (CMK) that was used to create the encrypted AMI.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The ARNs of the license configurations.</p>
   */
  LicenseSpecifications?: Array<ImportImageLicenseConfigurationResponse>;

  /**
   * <p>The license type of the virtual machine.</p>
   */
  LicenseType?: string;

  /**
   * <p>The operating system of the virtual machine.</p>
   */
  Platform?: string;

  /**
   * <p>The progress of the task.</p>
   */
  Progress?: string;

  /**
   * <p>Information about the snapshots.</p>
   */
  SnapshotDetails?: Array<SnapshotDetail>;

  /**
   * <p>A brief status of the task.</p>
   */
  Status?: string;

  /**
   * <p>A detailed status message of the import task.</p>
   */
  StatusMessage?: string;
}

export namespace ImportImageResult {
  export function isa(o: any): o is ImportImageResult {
    return _smithy.isa(o, "ImportImageResult");
  }
}

/**
 * <p>Describes an import image task.</p>
 */
export interface ImportImageTask {
  __type?: "ImportImageTask";
  /**
   * <p>The architecture of the virtual machine.</p>
   *          <p>Valid values: <code>i386</code> | <code>x86_64</code> | <code>arm64</code>
   *          </p>
   */
  Architecture?: string;

  /**
   * <p>A description of the import task.</p>
   */
  Description?: string;

  /**
   * <p>Indicates whether the image is encrypted.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The target hypervisor for the import task.</p>
   *          <p>Valid values: <code>xen</code>
   *          </p>
   */
  Hypervisor?: string;

  /**
   * <p>The ID of the Amazon Machine Image (AMI) of the imported virtual machine.</p>
   */
  ImageId?: string;

  /**
   * <p>The ID of the import image task.</p>
   */
  ImportTaskId?: string;

  /**
   * <p>The identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create
   *    the encrypted image.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The ARNs of the license configurations that are associated with the import image task.</p>
   */
  LicenseSpecifications?: Array<ImportImageLicenseConfigurationResponse>;

  /**
   * <p>The license type of the virtual machine.</p>
   */
  LicenseType?: string;

  /**
   * <p>The description string for the import image task.</p>
   */
  Platform?: string;

  /**
   * <p>The percentage of progress of the import image task.</p>
   */
  Progress?: string;

  /**
   * <p>Information about the snapshots.</p>
   */
  SnapshotDetails?: Array<SnapshotDetail>;

  /**
   * <p>A brief status for the import image task.</p>
   */
  Status?: string;

  /**
   * <p>A descriptive status message for the import image task.</p>
   */
  StatusMessage?: string;

  /**
   * <p>The tags for the import image task.</p>
   */
  Tags?: Array<Tag>;
}

export namespace ImportImageTask {
  export function isa(o: any): o is ImportImageTask {
    return _smithy.isa(o, "ImportImageTask");
  }
}

/**
 * <p>Describes the launch specification for VM import.</p>
 */
export interface ImportInstanceLaunchSpecification {
  __type?: "ImportInstanceLaunchSpecification";
  /**
   * <p>Reserved.</p>
   */
  AdditionalInfo?: string;

  /**
   * <p>The architecture of the instance.</p>
   */
  Architecture?: ArchitectureValues | string;

  /**
   * <p>The security group IDs.</p>
   */
  GroupIds?: Array<string>;

  /**
   * <p>The security group names.</p>
   */
  GroupNames?: Array<string>;

  /**
   * <p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the
   *    operating system command for system shutdown).</p>
   */
  InstanceInitiatedShutdownBehavior?: ShutdownBehavior | string;

  /**
   * <p>The instance type. For more information about the instance types that you can import, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-instance-types">Instance Types</a> in the
   *    VM Import/Export User Guide.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>Indicates whether monitoring is enabled.</p>
   */
  Monitoring?: boolean;

  /**
   * <p>The placement information for the instance.</p>
   */
  Placement?: Placement;

  /**
   * <p>[EC2-VPC] An available IP address from the IP address range of the subnet.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>[EC2-VPC] The ID of the subnet in which to launch the instance.</p>
   */
  SubnetId?: string;

  /**
   * <p>The Base64-encoded user data to make available to the instance.</p>
   */
  UserData?: UserData;
}

export namespace ImportInstanceLaunchSpecification {
  export function isa(o: any): o is ImportInstanceLaunchSpecification {
    return _smithy.isa(o, "ImportInstanceLaunchSpecification");
  }
}

export interface ImportInstanceRequest {
  __type?: "ImportInstanceRequest";
  /**
   * <p>A description for the instance being imported.</p>
   */
  Description?: string;

  /**
   * <p>The disk image.</p>
   */
  DiskImages?: Array<DiskImage>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The launch specification.</p>
   */
  LaunchSpecification?: ImportInstanceLaunchSpecification;

  /**
   * <p>The instance operating system.</p>
   */
  Platform: PlatformValues | string | undefined;
}

export namespace ImportInstanceRequest {
  export function isa(o: any): o is ImportInstanceRequest {
    return _smithy.isa(o, "ImportInstanceRequest");
  }
}

export interface ImportInstanceResult extends $MetadataBearer {
  __type?: "ImportInstanceResult";
  /**
   * <p>Information about the conversion task.</p>
   */
  ConversionTask?: ConversionTask;
}

export namespace ImportInstanceResult {
  export function isa(o: any): o is ImportInstanceResult {
    return _smithy.isa(o, "ImportInstanceResult");
  }
}

/**
 * <p>Describes an import instance task.</p>
 */
export interface ImportInstanceTaskDetails {
  __type?: "ImportInstanceTaskDetails";
  /**
   * <p>A description of the task.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The instance operating system.</p>
   */
  Platform?: PlatformValues | string;

  /**
   * <p>The volumes.</p>
   */
  Volumes?: Array<ImportInstanceVolumeDetailItem>;
}

export namespace ImportInstanceTaskDetails {
  export function isa(o: any): o is ImportInstanceTaskDetails {
    return _smithy.isa(o, "ImportInstanceTaskDetails");
  }
}

/**
 * <p>Describes an import volume task.</p>
 */
export interface ImportInstanceVolumeDetailItem {
  __type?: "ImportInstanceVolumeDetailItem";
  /**
   * <p>The Availability Zone where the resulting instance will reside.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The number of bytes converted so far.</p>
   */
  BytesConverted?: number;

  /**
   * <p>A description of the task.</p>
   */
  Description?: string;

  /**
   * <p>The image.</p>
   */
  Image?: DiskImageDescription;

  /**
   * <p>The status of the import of this particular disk image.</p>
   */
  Status?: string;

  /**
   * <p>The status information or errors related to the disk image.</p>
   */
  StatusMessage?: string;

  /**
   * <p>The volume.</p>
   */
  Volume?: DiskImageVolumeDescription;
}

export namespace ImportInstanceVolumeDetailItem {
  export function isa(o: any): o is ImportInstanceVolumeDetailItem {
    return _smithy.isa(o, "ImportInstanceVolumeDetailItem");
  }
}

export interface ImportKeyPairRequest {
  __type?: "ImportKeyPairRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>A unique name for the key pair.</p>
   */
  KeyName: string | undefined;

  /**
   * <p>The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.</p>
   */
  PublicKeyMaterial: Uint8Array | undefined;
}

export namespace ImportKeyPairRequest {
  export function isa(o: any): o is ImportKeyPairRequest {
    return _smithy.isa(o, "ImportKeyPairRequest");
  }
}

export interface ImportKeyPairResult extends $MetadataBearer {
  __type?: "ImportKeyPairResult";
  /**
   * <p>The MD5 public key fingerprint as specified in section 4 of RFC 4716.</p>
   */
  KeyFingerprint?: string;

  /**
   * <p>The key pair name you provided.</p>
   */
  KeyName?: string;
}

export namespace ImportKeyPairResult {
  export function isa(o: any): o is ImportKeyPairResult {
    return _smithy.isa(o, "ImportKeyPairResult");
  }
}

export interface ImportSnapshotRequest {
  __type?: "ImportSnapshotRequest";
  /**
   * <p>The client-specific data.</p>
   */
  ClientData?: ClientData;

  /**
   * <p>Token to enable idempotency for VM import requests.</p>
   */
  ClientToken?: string;

  /**
   * <p>The description string for the import snapshot task.</p>
   */
  Description?: string;

  /**
   * <p>Information about the disk container.</p>
   */
  DiskContainer?: SnapshotDiskContainer;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specifies whether the destination snapshot of the imported image should be encrypted. The default CMK for EBS is
   *    used unless you specify a non-default AWS Key Management Service (AWS KMS) CMK using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the
   *     <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>An identifier for the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the
   *    encrypted snapshot. This parameter is only required if you want to use a non-default CMK; if this
   *    parameter is not specified, the default CMK for EBS is used. If a <code>KmsKeyId</code> is
   *    specified, the <code>Encrypted</code> flag must also be set. </p>
   *          <p>The CMK identifier may be provided in any of the following formats: </p>
   *          <ul>
   *             <li>
   *                <p>Key ID</p>
   *             </li>
   *             <li>
   *                <p>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code> namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p>
   *             </li>
   *             <li>
   *                <p>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p>
   *             </li>
   *             <li>
   *                <p>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the CMK, the AWS account ID of the CMK owner, the <code>alias</code> namespace, and then the CMK alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>. </p>
   *             </li>
   *          </ul>
   *          <p>AWS parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may appear to complete even
   *    though you provided an invalid identifier. This action will eventually report failure. </p>
   *          <p>The specified CMK must exist in the Region that the snapshot is being copied to.</p>
   *          <p>Amazon EBS does not support asymmetric CMKs.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The name of the role to use when not using the default role, 'vmimport'.</p>
   */
  RoleName?: string;
}

export namespace ImportSnapshotRequest {
  export function isa(o: any): o is ImportSnapshotRequest {
    return _smithy.isa(o, "ImportSnapshotRequest");
  }
}

export interface ImportSnapshotResult extends $MetadataBearer {
  __type?: "ImportSnapshotResult";
  /**
   * <p>A description of the import snapshot task.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the import snapshot task.</p>
   */
  ImportTaskId?: string;

  /**
   * <p>Information about the import snapshot task.</p>
   */
  SnapshotTaskDetail?: SnapshotTaskDetail;
}

export namespace ImportSnapshotResult {
  export function isa(o: any): o is ImportSnapshotResult {
    return _smithy.isa(o, "ImportSnapshotResult");
  }
}

/**
 * <p>Describes an import snapshot task.</p>
 */
export interface ImportSnapshotTask {
  __type?: "ImportSnapshotTask";
  /**
   * <p>A description of the import snapshot task.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the import snapshot task.</p>
   */
  ImportTaskId?: string;

  /**
   * <p>Describes an import snapshot task.</p>
   */
  SnapshotTaskDetail?: SnapshotTaskDetail;

  /**
   * <p>The tags for the import snapshot task.</p>
   */
  Tags?: Array<Tag>;
}

export namespace ImportSnapshotTask {
  export function isa(o: any): o is ImportSnapshotTask {
    return _smithy.isa(o, "ImportSnapshotTask");
  }
}

export interface ImportVolumeRequest {
  __type?: "ImportVolumeRequest";
  /**
   * <p>The Availability Zone for the resulting EBS volume.</p>
   */
  AvailabilityZone: string | undefined;

  /**
   * <p>A description of the volume.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The disk image.</p>
   */
  Image: DiskImageDetail | undefined;

  /**
   * <p>The volume size.</p>
   */
  Volume: VolumeDetail | undefined;
}

export namespace ImportVolumeRequest {
  export function isa(o: any): o is ImportVolumeRequest {
    return _smithy.isa(o, "ImportVolumeRequest");
  }
}

export interface ImportVolumeResult extends $MetadataBearer {
  __type?: "ImportVolumeResult";
  /**
   * <p>Information about the conversion task.</p>
   */
  ConversionTask?: ConversionTask;
}

export namespace ImportVolumeResult {
  export function isa(o: any): o is ImportVolumeResult {
    return _smithy.isa(o, "ImportVolumeResult");
  }
}

/**
 * <p>Describes an import volume task.</p>
 */
export interface ImportVolumeTaskDetails {
  __type?: "ImportVolumeTaskDetails";
  /**
   * <p>The Availability Zone where the resulting volume will reside.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The number of bytes converted so far.</p>
   */
  BytesConverted?: number;

  /**
   * <p>The description you provided when starting the import volume task.</p>
   */
  Description?: string;

  /**
   * <p>The image.</p>
   */
  Image?: DiskImageDescription;

  /**
   * <p>The volume.</p>
   */
  Volume?: DiskImageVolumeDescription;
}

export namespace ImportVolumeTaskDetails {
  export function isa(o: any): o is ImportVolumeTaskDetails {
    return _smithy.isa(o, "ImportVolumeTaskDetails");
  }
}

/**
 * <p>Describes the Inference accelerators for the instance type.</p>
 */
export interface InferenceAcceleratorInfo {
  __type?: "InferenceAcceleratorInfo";
  /**
   * <p>Describes the Inference accelerators for the instance type.</p>
   */
  Accelerators?: Array<InferenceDeviceInfo>;
}

export namespace InferenceAcceleratorInfo {
  export function isa(o: any): o is InferenceAcceleratorInfo {
    return _smithy.isa(o, "InferenceAcceleratorInfo");
  }
}

/**
 * <p>Describes the Inference accelerators for the instance type.</p>
 */
export interface InferenceDeviceInfo {
  __type?: "InferenceDeviceInfo";
  /**
   * <p>The number of Inference accelerators for the instance type.</p>
   */
  Count?: number;

  /**
   * <p>The manufacturer of the Inference accelerator.</p>
   */
  Manufacturer?: string;

  /**
   * <p>The name of the Inference accelerator.</p>
   */
  Name?: string;
}

export namespace InferenceDeviceInfo {
  export function isa(o: any): o is InferenceDeviceInfo {
    return _smithy.isa(o, "InferenceDeviceInfo");
  }
}

/**
 * <p>Describes an instance.</p>
 */
export interface Instance {
  __type?: "Instance";
  /**
   * <p>The AMI launch index, which can be used to find this instance in the launch
   *             group.</p>
   */
  AmiLaunchIndex?: number;

  /**
   * <p>The architecture of the image.</p>
   */
  Architecture?: ArchitectureValues | string;

  /**
   * <p>Any block device mapping entries for the instance.</p>
   */
  BlockDeviceMappings?: Array<InstanceBlockDeviceMapping>;

  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationId?: string;

  /**
   * <p>Information about the Capacity Reservation targeting option.</p>
   */
  CapacityReservationSpecification?: CapacityReservationSpecificationResponse;

  /**
   * <p>The idempotency token you provided when you launched the instance, if
   *             applicable.</p>
   */
  ClientToken?: string;

  /**
   * <p>The CPU options for the instance.</p>
   */
  CpuOptions?: CpuOptions;

  /**
   * <p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
   *             provides dedicated throughput to Amazon EBS and an optimized configuration stack to
   *             provide optimal I/O performance. This optimization isn't available with all instance
   *             types. Additional usage charges apply when using an EBS Optimized instance.</p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The Elastic GPU associated with the instance.</p>
   */
  ElasticGpuAssociations?: Array<ElasticGpuAssociation>;

  /**
   * <p> The elastic inference accelerator associated with the instance.</p>
   */
  ElasticInferenceAcceleratorAssociations?: Array<
    ElasticInferenceAcceleratorAssociation
  >;

  /**
   * <p>Specifies whether enhanced networking with ENA is enabled.</p>
   */
  EnaSupport?: boolean;

  /**
   * <p>Indicates whether the instance is enabled for hibernation.</p>
   */
  HibernationOptions?: HibernationOptions;

  /**
   * <p>The hypervisor type of the instance.</p>
   */
  Hypervisor?: HypervisorType | string;

  /**
   * <p>The IAM instance profile associated with the instance, if applicable.</p>
   */
  IamInstanceProfile?: IamInstanceProfile;

  /**
   * <p>The ID of the AMI used to launch the instance.</p>
   */
  ImageId?: string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>Indicates whether this is a Spot Instance or a Scheduled Instance.</p>
   */
  InstanceLifecycle?: InstanceLifecycleType | string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The kernel associated with this instance, if applicable.</p>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair, if this instance was launched with an associated key
   *             pair.</p>
   */
  KeyName?: string;

  /**
   * <p>The time the instance was launched.</p>
   */
  LaunchTime?: Date;

  /**
   * <p>The license configurations.</p>
   */
  Licenses?: Array<LicenseConfiguration>;

  /**
   * <p>The metadata options for the instance.</p>
   */
  MetadataOptions?: InstanceMetadataOptionsResponse;

  /**
   * <p>The monitoring for the instance.</p>
   */
  Monitoring?: Monitoring;

  /**
   * <p>[EC2-VPC] The network interfaces for the instance.</p>
   */
  NetworkInterfaces?: Array<InstanceNetworkInterface>;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The location where the instance launched, if applicable.</p>
   */
  Placement?: Placement;

  /**
   * <p>The value is <code>Windows</code> for Windows instances; otherwise blank.</p>
   */
  Platform?: PlatformValues | string;

  /**
   * <p>(IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname
   *             can only be used inside the Amazon EC2 network. This name is not available until the
   *             instance enters the <code>running</code> state. </p>
   *         <p>[EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private DNS
   *             hostnames if you've enabled DNS resolution and DNS hostnames in your VPC. If you are not
   *             using the Amazon-provided DNS server in your VPC, your custom domain name servers must
   *             resolve the hostname as appropriate.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>The private IPv4 address assigned to the instance.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>The product codes attached to this instance, if applicable.</p>
   */
  ProductCodes?: Array<ProductCode>;

  /**
   * <p>(IPv4 only) The public DNS name assigned to the instance. This name is not available
   *             until the instance enters the <code>running</code> state. For EC2-VPC, this name is only
   *             available if you've enabled DNS hostnames for your VPC.</p>
   */
  PublicDnsName?: string;

  /**
   * <p>The public IPv4 address assigned to the instance, if applicable.</p>
   */
  PublicIpAddress?: string;

  /**
   * <p>The RAM disk associated with this instance, if applicable.</p>
   */
  RamdiskId?: string;

  /**
   * <p>The device name of the root device volume (for example,
   *             <code>/dev/sda1</code>).</p>
   */
  RootDeviceName?: string;

  /**
   * <p>The root device type used by the AMI. The AMI can use an EBS volume or an instance
   *             store volume.</p>
   */
  RootDeviceType?: DeviceType | string;

  /**
   * <p>The security groups for the instance.</p>
   */
  SecurityGroups?: Array<GroupIdentifier>;

  /**
   * <p>Specifies whether to enable an instance launched in a VPC to perform NAT. This
   *             controls whether source/destination checking is enabled on the instance. A value of
   *                 <code>true</code> means that checking is enabled, and <code>false</code> means that
   *             checking is disabled. The value must be <code>false</code> for the instance to perform
   *             NAT. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT Instances</a> in the
   *                 <i>Amazon Virtual Private Cloud User Guide</i>.</p>
   */
  SourceDestCheck?: boolean;

  /**
   * <p>If the request is a Spot Instance request, the ID of the request.</p>
   */
  SpotInstanceRequestId?: string;

  /**
   * <p>Specifies whether enhanced networking with the Intel 82599 Virtual Function interface
   *             is enabled.</p>
   */
  SriovNetSupport?: string;

  /**
   * <p>The current state of the instance.</p>
   */
  State?: InstanceState;

  /**
   * <p>The reason for the most recent state transition.</p>
   */
  StateReason?: StateReason;

  /**
   * <p>The reason for the most recent state transition. This might be an empty string.</p>
   */
  StateTransitionReason?: string;

  /**
   * <p>[EC2-VPC] The ID of the subnet in which the instance is running.</p>
   */
  SubnetId?: string;

  /**
   * <p>Any tags assigned to the instance.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The virtualization type of the instance.</p>
   */
  VirtualizationType?: VirtualizationType | string;

  /**
   * <p>[EC2-VPC] The ID of the VPC in which the instance is running.</p>
   */
  VpcId?: string;
}

export namespace Instance {
  export function isa(o: any): o is Instance {
    return _smithy.isa(o, "Instance");
  }
}

/**
 * <p>Describes an instance attribute.</p>
 */
export interface InstanceAttribute extends $MetadataBearer {
  __type?: "InstanceAttribute";
  /**
   * <p>The block device mapping of the instance.</p>
   */
  BlockDeviceMappings?: Array<InstanceBlockDeviceMapping>;

  /**
   * <p>If the value is <code>true</code>, you can't terminate the instance through the Amazon
   *             EC2 console, CLI, or API; otherwise, you can.</p>
   */
  DisableApiTermination?: AttributeBooleanValue;

  /**
   * <p>Indicates whether the instance is optimized for Amazon EBS I/O.</p>
   */
  EbsOptimized?: AttributeBooleanValue;

  /**
   * <p>Indicates whether enhanced networking with ENA is enabled.</p>
   */
  EnaSupport?: AttributeBooleanValue;

  /**
   * <p>The security groups associated with the instance.</p>
   */
  Groups?: Array<GroupIdentifier>;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>Indicates whether an instance stops or terminates when you initiate shutdown from the
   *             instance (using the operating system command for system shutdown).</p>
   */
  InstanceInitiatedShutdownBehavior?: AttributeValue;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: AttributeValue;

  /**
   * <p>The kernel ID.</p>
   */
  KernelId?: AttributeValue;

  /**
   * <p>A list of product codes.</p>
   */
  ProductCodes?: Array<ProductCode>;

  /**
   * <p>The RAM disk ID.</p>
   */
  RamdiskId?: AttributeValue;

  /**
   * <p>The device name of the root device volume (for example,
   *             <code>/dev/sda1</code>).</p>
   */
  RootDeviceName?: AttributeValue;

  /**
   * <p>Indicates whether source/destination checking is enabled. A value of <code>true</code>
   *             means that checking is enabled, and <code>false</code> means that checking is disabled.
   *             This value must be <code>false</code> for a NAT instance to perform NAT.</p>
   */
  SourceDestCheck?: AttributeBooleanValue;

  /**
   * <p>Indicates whether enhanced networking with the Intel 82599 Virtual Function interface
   *             is enabled.</p>
   */
  SriovNetSupport?: AttributeValue;

  /**
   * <p>The user data.</p>
   */
  UserData?: AttributeValue;
}

export namespace InstanceAttribute {
  export function isa(o: any): o is InstanceAttribute {
    return _smithy.isa(o, "InstanceAttribute");
  }
}

export type InstanceAttributeName =
  | "blockDeviceMapping"
  | "disableApiTermination"
  | "ebsOptimized"
  | "enaSupport"
  | "groupSet"
  | "instanceInitiatedShutdownBehavior"
  | "instanceType"
  | "kernel"
  | "productCodes"
  | "ramdisk"
  | "rootDeviceName"
  | "sourceDestCheck"
  | "sriovNetSupport"
  | "userData";

/**
 * <p>Describes a block device mapping.</p>
 */
export interface InstanceBlockDeviceMapping {
  __type?: "InstanceBlockDeviceMapping";
  /**
   * <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
   */
  DeviceName?: string;

  /**
   * <p>Parameters used to automatically set up EBS volumes when the instance is
   *             launched.</p>
   */
  Ebs?: EbsInstanceBlockDevice;
}

export namespace InstanceBlockDeviceMapping {
  export function isa(o: any): o is InstanceBlockDeviceMapping {
    return _smithy.isa(o, "InstanceBlockDeviceMapping");
  }
}

/**
 * <p>Describes a block device mapping entry.</p>
 */
export interface InstanceBlockDeviceMappingSpecification {
  __type?: "InstanceBlockDeviceMappingSpecification";
  /**
   * <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
   */
  DeviceName?: string;

  /**
   * <p>Parameters used to automatically set up EBS volumes when the instance is
   *             launched.</p>
   */
  Ebs?: EbsInstanceBlockDeviceSpecification;

  /**
   * <p>suppress the specified device included in the block device mapping.</p>
   */
  NoDevice?: string;

  /**
   * <p>The virtual device name.</p>
   */
  VirtualName?: string;
}

export namespace InstanceBlockDeviceMappingSpecification {
  export function isa(o: any): o is InstanceBlockDeviceMappingSpecification {
    return _smithy.isa(o, "InstanceBlockDeviceMappingSpecification");
  }
}

/**
 * <p>Information about the number of instances that can be launched onto the Dedicated
 *     		Host.</p>
 */
export interface InstanceCapacity {
  __type?: "InstanceCapacity";
  /**
   * <p>The number of instances that can be launched onto the Dedicated Host based on the
   *     		host's available capacity.</p>
   */
  AvailableCapacity?: number;

  /**
   * <p>The instance type supported by the Dedicated Host.</p>
   */
  InstanceType?: string;

  /**
   * <p>The total number of instances that can be launched onto the Dedicated Host if there
   *     		are no instances running on it.</p>
   */
  TotalCapacity?: number;
}

export namespace InstanceCapacity {
  export function isa(o: any): o is InstanceCapacity {
    return _smithy.isa(o, "InstanceCapacity");
  }
}

/**
 * <p>Describes a Reserved Instance listing state.</p>
 */
export interface InstanceCount {
  __type?: "InstanceCount";
  /**
   * <p>The number of listed Reserved Instances in the state specified by the <code>state</code>.</p>
   */
  InstanceCount?: number;

  /**
   * <p>The states of the listed Reserved Instances.</p>
   */
  State?: ListingState | string;
}

export namespace InstanceCount {
  export function isa(o: any): o is InstanceCount {
    return _smithy.isa(o, "InstanceCount");
  }
}

/**
 * <p>Describes the credit option for CPU usage of a burstable performance instance. </p>
 */
export interface InstanceCreditSpecification {
  __type?: "InstanceCreditSpecification";
  /**
   * <p>The credit option for CPU usage of the instance. Valid values are
   *                 <code>standard</code> and <code>unlimited</code>.</p>
   */
  CpuCredits?: string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;
}

export namespace InstanceCreditSpecification {
  export function isa(o: any): o is InstanceCreditSpecification {
    return _smithy.isa(o, "InstanceCreditSpecification");
  }
}

/**
 * <p>Describes the credit option for CPU usage of a burstable performance instance.</p>
 */
export interface InstanceCreditSpecificationRequest {
  __type?: "InstanceCreditSpecificationRequest";
  /**
   * <p>The credit option for CPU usage of the instance. Valid values are
   *                 <code>standard</code> and <code>unlimited</code>.</p>
   */
  CpuCredits?: string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;
}

export namespace InstanceCreditSpecificationRequest {
  export function isa(o: any): o is InstanceCreditSpecificationRequest {
    return _smithy.isa(o, "InstanceCreditSpecificationRequest");
  }
}

/**
 * <p>Describes an instance to export.</p>
 */
export interface InstanceExportDetails {
  __type?: "InstanceExportDetails";
  /**
   * <p>The ID of the resource being exported.</p>
   */
  InstanceId?: string;

  /**
   * <p>The target virtualization environment.</p>
   */
  TargetEnvironment?: ExportEnvironment | string;
}

export namespace InstanceExportDetails {
  export function isa(o: any): o is InstanceExportDetails {
    return _smithy.isa(o, "InstanceExportDetails");
  }
}

/**
 * <p>Describes the default credit option for CPU usage of a burstable performance instance family.</p>
 */
export interface InstanceFamilyCreditSpecification {
  __type?: "InstanceFamilyCreditSpecification";
  /**
   * <p>The default credit option for CPU usage of the instance family. Valid values are <code>standard</code> and <code>unlimited</code>.</p>
   */
  CpuCredits?: string;

  /**
   * <p>The instance family.</p>
   */
  InstanceFamily?: UnlimitedSupportedInstanceFamily | string;
}

export namespace InstanceFamilyCreditSpecification {
  export function isa(o: any): o is InstanceFamilyCreditSpecification {
    return _smithy.isa(o, "InstanceFamilyCreditSpecification");
  }
}

export enum InstanceHealthStatus {
  HEALTHY_STATUS = "healthy",
  UNHEALTHY_STATUS = "unhealthy"
}

export type InstanceInterruptionBehavior = "hibernate" | "stop" | "terminate";

/**
 * <p>Describes an IPv6 address.</p>
 */
export interface InstanceIpv6Address {
  __type?: "InstanceIpv6Address";
  /**
   * <p>The IPv6 address.</p>
   */
  Ipv6Address?: string;
}

export namespace InstanceIpv6Address {
  export function isa(o: any): o is InstanceIpv6Address {
    return _smithy.isa(o, "InstanceIpv6Address");
  }
}

/**
 * <p>Describes an IPv6 address.</p>
 */
export interface InstanceIpv6AddressRequest {
  __type?: "InstanceIpv6AddressRequest";
  /**
   * <p>The IPv6 address.</p>
   */
  Ipv6Address?: string;
}

export namespace InstanceIpv6AddressRequest {
  export function isa(o: any): o is InstanceIpv6AddressRequest {
    return _smithy.isa(o, "InstanceIpv6AddressRequest");
  }
}

export enum InstanceLifecycle {
  ON_DEMAND = "on-demand",
  SPOT = "spot"
}

export type InstanceLifecycleType = "scheduled" | "spot";

/**
 * <p>Describes the market (purchasing) option for the instances.</p>
 */
export interface InstanceMarketOptionsRequest {
  __type?: "InstanceMarketOptionsRequest";
  /**
   * <p>The market type.</p>
   */
  MarketType?: MarketType | string;

  /**
   * <p>The options for Spot Instances.</p>
   */
  SpotOptions?: SpotMarketOptions;
}

export namespace InstanceMarketOptionsRequest {
  export function isa(o: any): o is InstanceMarketOptionsRequest {
    return _smithy.isa(o, "InstanceMarketOptionsRequest");
  }
}

export type InstanceMatchCriteria = "open" | "targeted";

export type InstanceMetadataEndpointState = "disabled" | "enabled";

/**
 * <p>The metadata options for the instance.</p>
 */
export interface InstanceMetadataOptionsRequest {
  __type?: "InstanceMetadataOptionsRequest";
  /**
   * <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If
   *             the parameter is not specified, the default state is <code>enabled</code>.</p>
   *         <note>
   *             <p>If you specify a value of <code>disabled</code>, you will not be able to access your
   *                 instance metadata.</p>
   *         </note>
   */
  HttpEndpoint?: InstanceMetadataEndpointState | string;

  /**
   * <p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the
   *             number, the further instance metadata requests can travel.</p>
   *         <p>Default: 1</p>
   *         <p>Possible values: Integers from 1 to 64</p>
   */
  HttpPutResponseHopLimit?: number;

  /**
   * <p>The state of token usage for your instance metadata requests. If the parameter is not
   *             specified in the request, the default state is <code>optional</code>.</p>
   *         <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata
   *             with or without a signed token header on your request. If you retrieve the IAM role
   *             credentials without a token, the version 1.0 role credentials are returned. If you
   *             retrieve the IAM role credentials using a valid signed token, the version 2.0 role
   *             credentials are returned.</p>
   *         <p>If the state is <code>required</code>, you must send a signed token header with any
   *             instance metadata retrieval requests. In this state, retrieving the IAM role credentials
   *             always returns the version 2.0 credentials; the version 1.0 credentials are not
   *             available.</p>
   */
  HttpTokens?: HttpTokensState | string;
}

export namespace InstanceMetadataOptionsRequest {
  export function isa(o: any): o is InstanceMetadataOptionsRequest {
    return _smithy.isa(o, "InstanceMetadataOptionsRequest");
  }
}

/**
 * <p>The metadata options for the instance.</p>
 */
export interface InstanceMetadataOptionsResponse {
  __type?: "InstanceMetadataOptionsResponse";
  /**
   * <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If
   *             the parameter is not specified, the default state is <code>enabled</code>.</p>
   *         <note>
   *             <p>If you specify a value of <code>disabled</code>, you will not be able to access your
   *                 instance metadata.</p>
   *         </note>
   */
  HttpEndpoint?: InstanceMetadataEndpointState | string;

  /**
   * <p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the
   *             number, the further instance metadata requests can travel.</p>
   *         <p>Default: 1</p>
   *         <p>Possible values: Integers from 1 to 64</p>
   */
  HttpPutResponseHopLimit?: number;

  /**
   * <p>The state of token usage for your instance metadata requests. If the parameter is not
   *             specified in the request, the default state is <code>optional</code>.</p>
   *         <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata
   *             with or without a signed token header on your request. If you retrieve the IAM role
   *             credentials without a token, the version 1.0 role credentials are returned. If you
   *             retrieve the IAM role credentials using a valid signed token, the version 2.0 role
   *             credentials are returned.</p>
   *         <p>If the state is <code>required</code>, you must send a signed token header with any
   *             instance metadata retrieval requests. In this state, retrieving the IAM role credential
   *             always returns the version 2.0 credentials; the version 1.0 credentials are not
   *             available.</p>
   */
  HttpTokens?: HttpTokensState | string;

  /**
   * <p>The state of the metadata option changes.</p>
   *         <p>
   *             <code>pending</code> - The metadata options are being updated and the instance is not
   *             ready to process metadata traffic with the new selection.</p>
   *         <p>
   *             <code>applied</code> - The metadata options have been successfully applied on the
   *             instance.</p>
   */
  State?: InstanceMetadataOptionsState | string;
}

export namespace InstanceMetadataOptionsResponse {
  export function isa(o: any): o is InstanceMetadataOptionsResponse {
    return _smithy.isa(o, "InstanceMetadataOptionsResponse");
  }
}

export type InstanceMetadataOptionsState = "applied" | "pending";

/**
 * <p>Describes the monitoring of an instance.</p>
 */
export interface InstanceMonitoring {
  __type?: "InstanceMonitoring";
  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The monitoring for the instance.</p>
   */
  Monitoring?: Monitoring;
}

export namespace InstanceMonitoring {
  export function isa(o: any): o is InstanceMonitoring {
    return _smithy.isa(o, "InstanceMonitoring");
  }
}

/**
 * <p>Describes a network interface.</p>
 */
export interface InstanceNetworkInterface {
  __type?: "InstanceNetworkInterface";
  /**
   * <p>The association information for an Elastic IPv4 associated with the network
   *             interface.</p>
   */
  Association?: InstanceNetworkInterfaceAssociation;

  /**
   * <p>The network interface attachment.</p>
   */
  Attachment?: InstanceNetworkInterfaceAttachment;

  /**
   * <p>The description.</p>
   */
  Description?: string;

  /**
   * <p>One or more security groups.</p>
   */
  Groups?: Array<GroupIdentifier>;

  /**
   * <p>Describes the type of network interface.</p>
   * 		       <p>Valid values: <code>interface</code> | <code>efa</code>
   *          </p>
   */
  InterfaceType?: string;

  /**
   * <p>One or more IPv6 addresses associated with the network interface.</p>
   */
  Ipv6Addresses?: Array<InstanceIpv6Address>;

  /**
   * <p>The MAC address.</p>
   */
  MacAddress?: string;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The ID of the AWS account that created the network interface.</p>
   */
  OwnerId?: string;

  /**
   * <p>The private DNS name.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>The IPv4 address of the network interface within the subnet.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>One or more private IPv4 addresses associated with the network interface.</p>
   */
  PrivateIpAddresses?: Array<InstancePrivateIpAddress>;

  /**
   * <p>Indicates whether to validate network traffic to or from this network interface.</p>
   */
  SourceDestCheck?: boolean;

  /**
   * <p>The status of the network interface.</p>
   */
  Status?: NetworkInterfaceStatus | string;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace InstanceNetworkInterface {
  export function isa(o: any): o is InstanceNetworkInterface {
    return _smithy.isa(o, "InstanceNetworkInterface");
  }
}

/**
 * <p>Describes association information for an Elastic IP address (IPv4).</p>
 */
export interface InstanceNetworkInterfaceAssociation {
  __type?: "InstanceNetworkInterfaceAssociation";
  /**
   * <p>The ID of the owner of the Elastic IP address.</p>
   */
  IpOwnerId?: string;

  /**
   * <p>The public DNS name.</p>
   */
  PublicDnsName?: string;

  /**
   * <p>The public IP address or Elastic IP address bound to the network interface.</p>
   */
  PublicIp?: string;
}

export namespace InstanceNetworkInterfaceAssociation {
  export function isa(o: any): o is InstanceNetworkInterfaceAssociation {
    return _smithy.isa(o, "InstanceNetworkInterfaceAssociation");
  }
}

/**
 * <p>Describes a network interface attachment.</p>
 */
export interface InstanceNetworkInterfaceAttachment {
  __type?: "InstanceNetworkInterfaceAttachment";
  /**
   * <p>The time stamp when the attachment initiated.</p>
   */
  AttachTime?: Date;

  /**
   * <p>The ID of the network interface attachment.</p>
   */
  AttachmentId?: string;

  /**
   * <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>The index of the device on the instance for the network interface attachment.</p>
   */
  DeviceIndex?: number;

  /**
   * <p>The attachment state.</p>
   */
  Status?: AttachmentStatus | string;
}

export namespace InstanceNetworkInterfaceAttachment {
  export function isa(o: any): o is InstanceNetworkInterfaceAttachment {
    return _smithy.isa(o, "InstanceNetworkInterfaceAttachment");
  }
}

/**
 * <p>Describes a network interface.</p>
 */
export interface InstanceNetworkInterfaceSpecification {
  __type?: "InstanceNetworkInterfaceSpecification";
  /**
   * <p>Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The
   *             public IP address can only be assigned to a network interface for eth0, and can only be
   *             assigned to a new network interface, not an existing one. You cannot specify more than one
   *             network interface in the request. If launching into a default subnet, the default value is
   *             <code>true</code>.</p>
   */
  AssociatePublicIpAddress?: boolean;

  /**
   * <p>If set to <code>true</code>, the interface is deleted when the instance is terminated. You can
   *             specify <code>true</code> only if creating a new network interface when launching an
   *             instance.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>The description of the network interface. Applies only if creating a network interface when launching an instance.</p>
   */
  Description?: string;

  /**
   * <p>The position of the network interface in the attachment order.
   *           A primary network interface has a device index of 0.</p>
   *         <p>If you specify a network interface when launching an instance,
   *           you must specify the device index.</p>
   */
  DeviceIndex?: number;

  /**
   * <p>The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.</p>
   */
  Groups?: Array<string>;

  /**
   * <p>The type of network interface. To create an Elastic Fabric Adapter (EFA), specify
   * 			<code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html">Elastic Fabric Adapter</a> in the
   * 			<i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   * 		       <p>If you are not creating an EFA, specify <code>interface</code> or omit this parameter.</p>
   * 		       <p>Valid values: <code>interface</code> | <code>efa</code>
   *          </p>
   */
  InterfaceType?: string;

  /**
   * <p>A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses
   *             the IPv6 addresses from the range of the subnet. You cannot specify this option and the
   *             option to assign specific IPv6 addresses in the same request. You can specify this
   *             option if you've specified a minimum number of instances to launch.</p>
   */
  Ipv6AddressCount?: number;

  /**
   * <p>One or more IPv6 addresses to assign to the network interface. You cannot specify
   *             this option and the option to assign a number of IPv6 addresses in the same request. You
   *             cannot specify this option if you've specified a minimum number of instances to
   *             launch.</p>
   */
  Ipv6Addresses?: Array<InstanceIpv6Address>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching
   *         	more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're
   *         	launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.</p>
   */
  PrivateIpAddresses?: Array<PrivateIpAddressSpecification>;

  /**
   * <p>The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're
   *         	launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.</p>
   */
  SecondaryPrivateIpAddressCount?: number;

  /**
   * <p>The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.</p>
   */
  SubnetId?: string;
}

export namespace InstanceNetworkInterfaceSpecification {
  export function isa(o: any): o is InstanceNetworkInterfaceSpecification {
    return _smithy.isa(o, "InstanceNetworkInterfaceSpecification");
  }
}

/**
 * <p>Describes a private IPv4 address.</p>
 */
export interface InstancePrivateIpAddress {
  __type?: "InstancePrivateIpAddress";
  /**
   * <p>The association information for an Elastic IP address for the network interface.</p>
   */
  Association?: InstanceNetworkInterfaceAssociation;

  /**
   * <p>Indicates whether this IPv4 address is the primary private IP address of the network interface.</p>
   */
  Primary?: boolean;

  /**
   * <p>The private IPv4 DNS name.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>The private IPv4 address of the network interface.</p>
   */
  PrivateIpAddress?: string;
}

export namespace InstancePrivateIpAddress {
  export function isa(o: any): o is InstancePrivateIpAddress {
    return _smithy.isa(o, "InstancePrivateIpAddress");
  }
}

/**
 * <p>The instance details to specify which volumes should be snapshotted.</p>
 */
export interface InstanceSpecification {
  __type?: "InstanceSpecification";
  /**
   * <p>Excludes the root volume from being snapshotted.</p>
   */
  ExcludeBootVolume?: boolean;

  /**
   * <p>The instance to specify which volumes should be snapshotted.</p>
   */
  InstanceId?: string;
}

export namespace InstanceSpecification {
  export function isa(o: any): o is InstanceSpecification {
    return _smithy.isa(o, "InstanceSpecification");
  }
}

/**
 * <p>Describes the current state of an instance.</p>
 */
export interface InstanceState {
  __type?: "InstanceState";
  /**
   * <p>The state of the instance as a 16-bit unsigned integer. </p>
   *         <p>The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values
   *             between 256 and 65,535. These numerical values are used for internal purposes and should
   *             be ignored.</p>
   *         <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values
   *             between 0 and 255. </p>
   *         <p>The valid values for instance-state-code will all be in the range of the low byte and
   *             they are:</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>0</code> : <code>pending</code>
   *                 </p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>16</code> : <code>running</code>
   *                 </p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>32</code> : <code>shutting-down</code>
   *                 </p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>48</code> : <code>terminated</code>
   *                 </p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>64</code> : <code>stopping</code>
   *                 </p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>80</code> : <code>stopped</code>
   *                 </p>
   *             </li>
   *          </ul>
   *         <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in
   *             decimal.</p>
   */
  Code?: number;

  /**
   * <p>The current state of the instance.</p>
   */
  Name?: InstanceStateName | string;
}

export namespace InstanceState {
  export function isa(o: any): o is InstanceState {
    return _smithy.isa(o, "InstanceState");
  }
}

/**
 * <p>Describes an instance state change.</p>
 */
export interface InstanceStateChange {
  __type?: "InstanceStateChange";
  /**
   * <p>The current state of the instance.</p>
   */
  CurrentState?: InstanceState;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The previous state of the instance.</p>
   */
  PreviousState?: InstanceState;
}

export namespace InstanceStateChange {
  export function isa(o: any): o is InstanceStateChange {
    return _smithy.isa(o, "InstanceStateChange");
  }
}

export type InstanceStateName =
  | "pending"
  | "running"
  | "shutting-down"
  | "stopped"
  | "stopping"
  | "terminated";

/**
 * <p>Describes the status of an instance.</p>
 */
export interface InstanceStatus {
  __type?: "InstanceStatus";
  /**
   * <p>The Availability Zone of the instance.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>Any scheduled events associated with the instance.</p>
   */
  Events?: Array<InstanceStatusEvent>;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The intended state of the instance. <a>DescribeInstanceStatus</a> requires
   *             that an instance be in the <code>running</code> state.</p>
   */
  InstanceState?: InstanceState;

  /**
   * <p>Reports impaired functionality that stems from issues internal to the instance, such
   *             as impaired reachability.</p>
   */
  InstanceStatus?: InstanceStatusSummary;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>Reports impaired functionality that stems from issues related to the systems that
   *             support an instance, such as hardware failures and network connectivity problems.</p>
   */
  SystemStatus?: InstanceStatusSummary;
}

export namespace InstanceStatus {
  export function isa(o: any): o is InstanceStatus {
    return _smithy.isa(o, "InstanceStatus");
  }
}

/**
 * <p>Describes the instance status.</p>
 */
export interface InstanceStatusDetails {
  __type?: "InstanceStatusDetails";
  /**
   * <p>The time when a status check failed. For an instance that was launched and impaired,
   *             this is the time when the instance was launched.</p>
   */
  ImpairedSince?: Date;

  /**
   * <p>The type of instance status.</p>
   */
  Name?: StatusName | string;

  /**
   * <p>The status.</p>
   */
  Status?: StatusType | string;
}

export namespace InstanceStatusDetails {
  export function isa(o: any): o is InstanceStatusDetails {
    return _smithy.isa(o, "InstanceStatusDetails");
  }
}

/**
 * <p>Describes a scheduled event for an instance.</p>
 */
export interface InstanceStatusEvent {
  __type?: "InstanceStatusEvent";
  /**
   * <p>The event code.</p>
   */
  Code?: EventCode | string;

  /**
   * <p>A description of the event.</p>
   *         <p>After a scheduled event is completed, it can still be described for up to a week. If
   *             the event has been completed, this description starts with the following text:
   *             [Completed].</p>
   */
  Description?: string;

  /**
   * <p>The ID of the event.</p>
   */
  InstanceEventId?: string;

  /**
   * <p>The latest scheduled end time for the event.</p>
   */
  NotAfter?: Date;

  /**
   * <p>The earliest scheduled start time for the event.</p>
   */
  NotBefore?: Date;

  /**
   * <p>The deadline for starting the event.</p>
   */
  NotBeforeDeadline?: Date;
}

export namespace InstanceStatusEvent {
  export function isa(o: any): o is InstanceStatusEvent {
    return _smithy.isa(o, "InstanceStatusEvent");
  }
}

/**
 * <p>Describes the status of an instance.</p>
 */
export interface InstanceStatusSummary {
  __type?: "InstanceStatusSummary";
  /**
   * <p>The system instance health or application instance health.</p>
   */
  Details?: Array<InstanceStatusDetails>;

  /**
   * <p>The status.</p>
   */
  Status?: SummaryStatus | string;
}

export namespace InstanceStatusSummary {
  export function isa(o: any): o is InstanceStatusSummary {
    return _smithy.isa(o, "InstanceStatusSummary");
  }
}

/**
 * <p>Describes the disks that are available for the instance type.</p>
 */
export interface InstanceStorageInfo {
  __type?: "InstanceStorageInfo";
  /**
   * <p>Array describing the disks that are available for the instance type.</p>
   */
  Disks?: Array<DiskInfo>;

  /**
   * <p>The total size of the disks, in GB.</p>
   */
  TotalSizeInGB?: number;
}

export namespace InstanceStorageInfo {
  export function isa(o: any): o is InstanceStorageInfo {
    return _smithy.isa(o, "InstanceStorageInfo");
  }
}

export type _InstanceType =
  | "a1.2xlarge"
  | "a1.4xlarge"
  | "a1.large"
  | "a1.medium"
  | "a1.metal"
  | "a1.xlarge"
  | "c1.medium"
  | "c1.xlarge"
  | "c3.2xlarge"
  | "c3.4xlarge"
  | "c3.8xlarge"
  | "c3.large"
  | "c3.xlarge"
  | "c4.2xlarge"
  | "c4.4xlarge"
  | "c4.8xlarge"
  | "c4.large"
  | "c4.xlarge"
  | "c5.12xlarge"
  | "c5.18xlarge"
  | "c5.24xlarge"
  | "c5.2xlarge"
  | "c5.4xlarge"
  | "c5.9xlarge"
  | "c5.large"
  | "c5.metal"
  | "c5.xlarge"
  | "c5d.12xlarge"
  | "c5d.18xlarge"
  | "c5d.24xlarge"
  | "c5d.2xlarge"
  | "c5d.4xlarge"
  | "c5d.9xlarge"
  | "c5d.large"
  | "c5d.metal"
  | "c5d.xlarge"
  | "c5n.18xlarge"
  | "c5n.2xlarge"
  | "c5n.4xlarge"
  | "c5n.9xlarge"
  | "c5n.large"
  | "c5n.xlarge"
  | "cc1.4xlarge"
  | "cc2.8xlarge"
  | "cg1.4xlarge"
  | "cr1.8xlarge"
  | "d2.2xlarge"
  | "d2.4xlarge"
  | "d2.8xlarge"
  | "d2.xlarge"
  | "f1.16xlarge"
  | "f1.2xlarge"
  | "f1.4xlarge"
  | "g2.2xlarge"
  | "g2.8xlarge"
  | "g3.16xlarge"
  | "g3.4xlarge"
  | "g3.8xlarge"
  | "g3s.xlarge"
  | "g4dn.12xlarge"
  | "g4dn.16xlarge"
  | "g4dn.2xlarge"
  | "g4dn.4xlarge"
  | "g4dn.8xlarge"
  | "g4dn.xlarge"
  | "h1.16xlarge"
  | "h1.2xlarge"
  | "h1.4xlarge"
  | "h1.8xlarge"
  | "hi1.4xlarge"
  | "hs1.8xlarge"
  | "i2.2xlarge"
  | "i2.4xlarge"
  | "i2.8xlarge"
  | "i2.xlarge"
  | "i3.16xlarge"
  | "i3.2xlarge"
  | "i3.4xlarge"
  | "i3.8xlarge"
  | "i3.large"
  | "i3.metal"
  | "i3.xlarge"
  | "i3en.12xlarge"
  | "i3en.24xlarge"
  | "i3en.2xlarge"
  | "i3en.3xlarge"
  | "i3en.6xlarge"
  | "i3en.large"
  | "i3en.metal"
  | "i3en.xlarge"
  | "inf1.24xlarge"
  | "inf1.2xlarge"
  | "inf1.6xlarge"
  | "inf1.xlarge"
  | "m1.large"
  | "m1.medium"
  | "m1.small"
  | "m1.xlarge"
  | "m2.2xlarge"
  | "m2.4xlarge"
  | "m2.xlarge"
  | "m3.2xlarge"
  | "m3.large"
  | "m3.medium"
  | "m3.xlarge"
  | "m4.10xlarge"
  | "m4.16xlarge"
  | "m4.2xlarge"
  | "m4.4xlarge"
  | "m4.large"
  | "m4.xlarge"
  | "m5.12xlarge"
  | "m5.16xlarge"
  | "m5.24xlarge"
  | "m5.2xlarge"
  | "m5.4xlarge"
  | "m5.8xlarge"
  | "m5.large"
  | "m5.metal"
  | "m5.xlarge"
  | "m5a.12xlarge"
  | "m5a.16xlarge"
  | "m5a.24xlarge"
  | "m5a.2xlarge"
  | "m5a.4xlarge"
  | "m5a.8xlarge"
  | "m5a.large"
  | "m5a.xlarge"
  | "m5ad.12xlarge"
  | "m5ad.16xlarge"
  | "m5ad.24xlarge"
  | "m5ad.2xlarge"
  | "m5ad.4xlarge"
  | "m5ad.8xlarge"
  | "m5ad.large"
  | "m5ad.xlarge"
  | "m5d.12xlarge"
  | "m5d.16xlarge"
  | "m5d.24xlarge"
  | "m5d.2xlarge"
  | "m5d.4xlarge"
  | "m5d.8xlarge"
  | "m5d.large"
  | "m5d.metal"
  | "m5d.xlarge"
  | "m5dn.12xlarge"
  | "m5dn.16xlarge"
  | "m5dn.24xlarge"
  | "m5dn.2xlarge"
  | "m5dn.4xlarge"
  | "m5dn.8xlarge"
  | "m5dn.large"
  | "m5dn.xlarge"
  | "m5n.12xlarge"
  | "m5n.16xlarge"
  | "m5n.24xlarge"
  | "m5n.2xlarge"
  | "m5n.4xlarge"
  | "m5n.8xlarge"
  | "m5n.large"
  | "m5n.xlarge"
  | "p2.16xlarge"
  | "p2.8xlarge"
  | "p2.xlarge"
  | "p3.16xlarge"
  | "p3.2xlarge"
  | "p3.8xlarge"
  | "p3dn.24xlarge"
  | "r3.2xlarge"
  | "r3.4xlarge"
  | "r3.8xlarge"
  | "r3.large"
  | "r3.xlarge"
  | "r4.16xlarge"
  | "r4.2xlarge"
  | "r4.4xlarge"
  | "r4.8xlarge"
  | "r4.large"
  | "r4.xlarge"
  | "r5.12xlarge"
  | "r5.16xlarge"
  | "r5.24xlarge"
  | "r5.2xlarge"
  | "r5.4xlarge"
  | "r5.8xlarge"
  | "r5.large"
  | "r5.metal"
  | "r5.xlarge"
  | "r5a.12xlarge"
  | "r5a.16xlarge"
  | "r5a.24xlarge"
  | "r5a.2xlarge"
  | "r5a.4xlarge"
  | "r5a.8xlarge"
  | "r5a.large"
  | "r5a.xlarge"
  | "r5ad.12xlarge"
  | "r5ad.16xlarge"
  | "r5ad.24xlarge"
  | "r5ad.2xlarge"
  | "r5ad.4xlarge"
  | "r5ad.8xlarge"
  | "r5ad.large"
  | "r5ad.xlarge"
  | "r5d.12xlarge"
  | "r5d.16xlarge"
  | "r5d.24xlarge"
  | "r5d.2xlarge"
  | "r5d.4xlarge"
  | "r5d.8xlarge"
  | "r5d.large"
  | "r5d.metal"
  | "r5d.xlarge"
  | "r5dn.12xlarge"
  | "r5dn.16xlarge"
  | "r5dn.24xlarge"
  | "r5dn.2xlarge"
  | "r5dn.4xlarge"
  | "r5dn.8xlarge"
  | "r5dn.large"
  | "r5dn.xlarge"
  | "r5n.12xlarge"
  | "r5n.16xlarge"
  | "r5n.24xlarge"
  | "r5n.2xlarge"
  | "r5n.4xlarge"
  | "r5n.8xlarge"
  | "r5n.large"
  | "r5n.xlarge"
  | "t1.micro"
  | "t2.2xlarge"
  | "t2.large"
  | "t2.medium"
  | "t2.micro"
  | "t2.nano"
  | "t2.small"
  | "t2.xlarge"
  | "t3.2xlarge"
  | "t3.large"
  | "t3.medium"
  | "t3.micro"
  | "t3.nano"
  | "t3.small"
  | "t3.xlarge"
  | "t3a.2xlarge"
  | "t3a.large"
  | "t3a.medium"
  | "t3a.micro"
  | "t3a.nano"
  | "t3a.small"
  | "t3a.xlarge"
  | "u-12tb1.metal"
  | "u-18tb1.metal"
  | "u-24tb1.metal"
  | "u-6tb1.metal"
  | "u-9tb1.metal"
  | "x1.16xlarge"
  | "x1.32xlarge"
  | "x1e.16xlarge"
  | "x1e.2xlarge"
  | "x1e.32xlarge"
  | "x1e.4xlarge"
  | "x1e.8xlarge"
  | "x1e.xlarge"
  | "z1d.12xlarge"
  | "z1d.2xlarge"
  | "z1d.3xlarge"
  | "z1d.6xlarge"
  | "z1d.large"
  | "z1d.metal"
  | "z1d.xlarge";

export enum InstanceTypeHypervisor {
  NITRO = "nitro",
  XEN = "xen"
}

/**
 * <p>Describes the instance type.</p>
 */
export interface InstanceTypeInfo {
  __type?: "InstanceTypeInfo";
  /**
   * <p>Indicates whether auto recovery is supported.</p>
   */
  AutoRecoverySupported?: boolean;

  /**
   * <p>Indicates whether the instance is bare metal.</p>
   */
  BareMetal?: boolean;

  /**
   * <p>Indicates whether the instance type is a burstable performance instance type.</p>
   */
  BurstablePerformanceSupported?: boolean;

  /**
   * <p>Indicates whether the instance type is a current generation.</p>
   */
  CurrentGeneration?: boolean;

  /**
   * <p>Indicates whether Dedicated Hosts are supported on the instance type.</p>
   */
  DedicatedHostsSupported?: boolean;

  /**
   * <p>Describes the Amazon EBS settings for the instance type.</p>
   */
  EbsInfo?: EbsInfo;

  /**
   * <p>Describes the FPGA accelerator settings for the instance type.</p>
   */
  FpgaInfo?: FpgaInfo;

  /**
   * <p>Indicates whether the instance type is eligible for the free tier.</p>
   */
  FreeTierEligible?: boolean;

  /**
   * <p>Describes the GPU accelerator settings for the instance type.</p>
   */
  GpuInfo?: GpuInfo;

  /**
   * <p>Indicates whether On-Demand hibernation is supported.</p>
   */
  HibernationSupported?: boolean;

  /**
   * <p>Indicates the hypervisor used for the instance type.</p>
   */
  Hypervisor?: InstanceTypeHypervisor | string;

  /**
   * <p>Describes the Inference accelerator settings for the instance type.</p>
   */
  InferenceAcceleratorInfo?: InferenceAcceleratorInfo;

  /**
   * <p>Describes the disks for the instance type.</p>
   */
  InstanceStorageInfo?: InstanceStorageInfo;

  /**
   * <p>Indicates whether instance storage is supported.</p>
   */
  InstanceStorageSupported?: boolean;

  /**
   * <p>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute
   *     Cloud User Guide</i>.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>Describes the memory for the instance type.</p>
   */
  MemoryInfo?: MemoryInfo;

  /**
   * <p>Describes the network settings for the instance type.</p>
   */
  NetworkInfo?: NetworkInfo;

  /**
   * <p>Describes the placement group settings for the instance type.</p>
   */
  PlacementGroupInfo?: PlacementGroupInfo;

  /**
   * <p>Describes the processor.</p>
   */
  ProcessorInfo?: ProcessorInfo;

  /**
   * <p>Indicates the supported root device types.</p>
   */
  SupportedRootDeviceTypes?: Array<RootDeviceType | string>;

  /**
   * <p>Indicates whether the instance type is offered for spot or On-Demand.</p>
   */
  SupportedUsageClasses?: Array<UsageClassType | string>;

  /**
   * <p>Describes the vCPU configurations for the instance type.</p>
   */
  VCpuInfo?: VCpuInfo;
}

export namespace InstanceTypeInfo {
  export function isa(o: any): o is InstanceTypeInfo {
    return _smithy.isa(o, "InstanceTypeInfo");
  }
}

/**
 * <p>The instance types offered.</p>
 */
export interface InstanceTypeOffering {
  __type?: "InstanceTypeOffering";
  /**
   * <p>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute
   *     Cloud User Guide</i>.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The identifier for the location. This depends on the location type. For example, if the location type is
   *     <code>region</code>, the location is the Region code (for example, <code>us-east-2</code>.)</p>
   */
  Location?: string;

  /**
   * <p>The location type.</p>
   */
  LocationType?: LocationType | string;
}

export namespace InstanceTypeOffering {
  export function isa(o: any): o is InstanceTypeOffering {
    return _smithy.isa(o, "InstanceTypeOffering");
  }
}

/**
 * <p>Information about the Capacity Reservation usage.</p>
 */
export interface InstanceUsage {
  __type?: "InstanceUsage";
  /**
   * <p>The ID of the AWS account that is making use of the Capacity Reservation.</p>
   */
  AccountId?: string;

  /**
   * <p>The number of instances the AWS account currently has in the Capacity Reservation.</p>
   */
  UsedInstanceCount?: number;
}

export namespace InstanceUsage {
  export function isa(o: any): o is InstanceUsage {
    return _smithy.isa(o, "InstanceUsage");
  }
}

export type InterfacePermissionType = "EIP-ASSOCIATE" | "INSTANCE-ATTACH";

/**
 * <p>Describes an internet gateway.</p>
 */
export interface InternetGateway {
  __type?: "InternetGateway";
  /**
   * <p>Any VPCs attached to the internet gateway.</p>
   */
  Attachments?: Array<InternetGatewayAttachment>;

  /**
   * <p>The ID of the internet gateway.</p>
   */
  InternetGatewayId?: string;

  /**
   * <p>The ID of the AWS account that owns the internet gateway.</p>
   */
  OwnerId?: string;

  /**
   * <p>Any tags assigned to the internet gateway.</p>
   */
  Tags?: Array<Tag>;
}

export namespace InternetGateway {
  export function isa(o: any): o is InternetGateway {
    return _smithy.isa(o, "InternetGateway");
  }
}

/**
 * <p>Describes the attachment of a VPC to an internet gateway or an egress-only internet
 * 			gateway.</p>
 */
export interface InternetGatewayAttachment {
  __type?: "InternetGatewayAttachment";
  /**
   * <p>The current state of the attachment. For an internet gateway, the state is
   * 				<code>available</code> when attached to a VPC; otherwise, this value is not
   * 			returned.</p>
   */
  State?: AttachmentStatus | string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace InternetGatewayAttachment {
  export function isa(o: any): o is InternetGatewayAttachment {
    return _smithy.isa(o, "InternetGatewayAttachment");
  }
}

/**
 * <p>Describes a set of permissions for a security group rule.</p>
 */
export interface IpPermission {
  __type?: "IpPermission";
  /**
   * <p>The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number.
   *         A value of <code>-1</code> indicates all ICMP/ICMPv6 types. If you specify all
   * 		ICMP/ICMPv6 types, you must specify all codes.</p>
   */
  FromPort?: number;

  /**
   * <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>)
   *         or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>).</p>
   *          <p>[VPC only] Use <code>-1</code> to specify all protocols. When authorizing
   *         security group rules, specifying <code>-1</code> or a protocol number other than
   *         <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows
   *         traffic on all ports, regardless of any port range you specify. For <code>tcp</code>,
   *         <code>udp</code>, and <code>icmp</code>, you must specify a port range. For <code>icmpv6</code>,
   *         the port range is optional; if you omit the port range, traffic for all types and codes is allowed.</p>
   */
  IpProtocol?: string;

  /**
   * <p>The IPv4 ranges.</p>
   */
  IpRanges?: Array<IpRange>;

  /**
   * <p>[VPC only] The IPv6 ranges.</p>
   */
  Ipv6Ranges?: Array<Ipv6Range>;

  /**
   * <p>[VPC only] The prefix list IDs for an AWS service. With outbound rules, this is the
   *         AWS service to access through a VPC endpoint from instances associated with the security
   *         group.</p>
   */
  PrefixListIds?: Array<PrefixListId>;

  /**
   * <p>The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value
   * 		of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types,
   *         you must specify all codes.</p>
   */
  ToPort?: number;

  /**
   * <p>The security group and AWS account ID pairs.</p>
   */
  UserIdGroupPairs?: Array<UserIdGroupPair>;
}

export namespace IpPermission {
  export function isa(o: any): o is IpPermission {
    return _smithy.isa(o, "IpPermission");
  }
}

/**
 * <p>Describes an IPv4 range.</p>
 */
export interface IpRange {
  __type?: "IpRange";
  /**
   * <p>The IPv4 CIDR range. You can either specify a CIDR range or a source security group,
   *             not both. To specify a single IPv4 address, use the /32 prefix length.</p>
   */
  CidrIp?: string;

  /**
   * <p>A description for the security group rule that references this IPv4 address range.</p>
   *          <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9,
   *         spaces, and ._-:/()#,@[]+=&;{}!$*</p>
   */
  Description?: string;
}

export namespace IpRange {
  export function isa(o: any): o is IpRange {
    return _smithy.isa(o, "IpRange");
  }
}

/**
 * <p>Describes an IPv6 CIDR block association.</p>
 */
export interface Ipv6CidrAssociation {
  __type?: "Ipv6CidrAssociation";
  /**
   * <p>The resource that's associated with the IPv6 CIDR block.</p>
   */
  AssociatedResource?: string;

  /**
   * <p>The IPv6 CIDR block.</p>
   */
  Ipv6Cidr?: string;
}

export namespace Ipv6CidrAssociation {
  export function isa(o: any): o is Ipv6CidrAssociation {
    return _smithy.isa(o, "Ipv6CidrAssociation");
  }
}

/**
 * <p>Describes an IPv6 CIDR block.</p>
 */
export interface Ipv6CidrBlock {
  __type?: "Ipv6CidrBlock";
  /**
   * <p>The IPv6 CIDR block.</p>
   */
  Ipv6CidrBlock?: string;
}

export namespace Ipv6CidrBlock {
  export function isa(o: any): o is Ipv6CidrBlock {
    return _smithy.isa(o, "Ipv6CidrBlock");
  }
}

/**
 * <p>Describes an IPv6 address pool.</p>
 */
export interface Ipv6Pool {
  __type?: "Ipv6Pool";
  /**
   * <p>The description for the address pool.</p>
   */
  Description?: string;

  /**
   * <p>The CIDR blocks for the address pool.</p>
   */
  PoolCidrBlocks?: Array<PoolCidrBlock>;

  /**
   * <p>The ID of the address pool.</p>
   */
  PoolId?: string;

  /**
   * <p>Any tags for the address pool.</p>
   */
  Tags?: Array<Tag>;
}

export namespace Ipv6Pool {
  export function isa(o: any): o is Ipv6Pool {
    return _smithy.isa(o, "Ipv6Pool");
  }
}

/**
 * <p>[EC2-VPC only] Describes an IPv6 range.</p>
 */
export interface Ipv6Range {
  __type?: "Ipv6Range";
  /**
   * <p>The IPv6 CIDR range. You can either specify a CIDR range or a source security group,
   *         not both. To specify a single IPv6 address, use the /128 prefix length.</p>
   */
  CidrIpv6?: string;

  /**
   * <p>A description for the security group rule that references this IPv6 address range.</p>
   *          <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9,
   *         spaces, and ._-:/()#,@[]+=&;{}!$*</p>
   */
  Description?: string;
}

export namespace Ipv6Range {
  export function isa(o: any): o is Ipv6Range {
    return _smithy.isa(o, "Ipv6Range");
  }
}

export type Ipv6SupportValue = "disable" | "enable";

/**
 * <p>Describes a key pair.</p>
 */
export interface KeyPair extends $MetadataBearer {
  __type?: "KeyPair";
  /**
   * <p>The SHA-1 digest of the DER encoded private key.</p>
   */
  KeyFingerprint?: string;

  /**
   * <p>An unencrypted PEM encoded RSA private key.</p>
   */
  KeyMaterial?: string;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName?: string;

  /**
   * <p>The ID of the key pair.</p>
   */
  KeyPairId?: string;
}

export namespace KeyPair {
  export function isa(o: any): o is KeyPair {
    return _smithy.isa(o, "KeyPair");
  }
}

/**
 * <p>Describes a key pair.</p>
 */
export interface KeyPairInfo {
  __type?: "KeyPairInfo";
  /**
   * <p>If you used <a>CreateKeyPair</a> to create the key pair, this is the SHA-1 digest of the DER encoded private key.
   *         If you used <a>ImportKeyPair</a> to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.</p>
   */
  KeyFingerprint?: string;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName?: string;

  /**
   * <p>The ID of the key pair.</p>
   */
  KeyPairId?: string;

  /**
   * <p>Any tags applied to the key pair.</p>
   */
  Tags?: Array<Tag>;
}

export namespace KeyPairInfo {
  export function isa(o: any): o is KeyPairInfo {
    return _smithy.isa(o, "KeyPairInfo");
  }
}

/**
 * <p>The last error that occurred for a VPC endpoint.</p>
 */
export interface LastError {
  __type?: "LastError";
  /**
   * <p>The error code for the VPC endpoint error.</p>
   */
  Code?: string;

  /**
   * <p>The error message for the VPC endpoint error.</p>
   */
  Message?: string;
}

export namespace LastError {
  export function isa(o: any): o is LastError {
    return _smithy.isa(o, "LastError");
  }
}

/**
 * <p>Describes a launch permission.</p>
 */
export interface LaunchPermission {
  __type?: "LaunchPermission";
  /**
   * <p>The name of the group.</p>
   */
  Group?: PermissionGroup | string;

  /**
   * <p>The AWS account ID.</p>
   */
  UserId?: string;
}

export namespace LaunchPermission {
  export function isa(o: any): o is LaunchPermission {
    return _smithy.isa(o, "LaunchPermission");
  }
}

/**
 * <p>Describes a launch permission modification.</p>
 */
export interface LaunchPermissionModifications {
  __type?: "LaunchPermissionModifications";
  /**
   * <p>The AWS account ID to add to the list of launch permissions for the AMI.</p>
   */
  Add?: Array<LaunchPermission>;

  /**
   * <p>The AWS account ID to remove from the list of launch permissions for the AMI.</p>
   */
  Remove?: Array<LaunchPermission>;
}

export namespace LaunchPermissionModifications {
  export function isa(o: any): o is LaunchPermissionModifications {
    return _smithy.isa(o, "LaunchPermissionModifications");
  }
}

/**
 * <p>Describes the launch specification for an instance.</p>
 */
export interface LaunchSpecification {
  __type?: "LaunchSpecification";
  /**
   * <p>Deprecated.</p>
   */
  AddressingType?: string;

  /**
   * <p>One or more block device mapping entries.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
   *          <p>Default: <code>false</code>
   *          </p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: IamInstanceProfileSpecification;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The ID of the kernel.</p>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName?: string;

  /**
   * <p>Describes the monitoring of an instance.</p>
   */
  Monitoring?: RunInstancesMonitoringEnabled;

  /**
   * <p>One or more network interfaces. If you specify a network interface, you must specify
   *            subnet IDs and security group IDs using the network interface.</p>
   */
  NetworkInterfaces?: Array<InstanceNetworkInterfaceSpecification>;

  /**
   * <p>The placement information for the instance.</p>
   */
  Placement?: SpotPlacement;

  /**
   * <p>The ID of the RAM disk.</p>
   */
  RamdiskId?: string;

  /**
   * <p>One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.</p>
   */
  SecurityGroups?: Array<GroupIdentifier>;

  /**
   * <p>The ID of the subnet in which to launch the instance.</p>
   */
  SubnetId?: string;

  /**
   * <p>The Base64-encoded user data for the instance.</p>
   */
  UserData?: string;
}

export namespace LaunchSpecification {
  export function isa(o: any): o is LaunchSpecification {
    return _smithy.isa(o, "LaunchSpecification");
  }
}

/**
 * <p>Describes a launch template.</p>
 */
export interface LaunchTemplate {
  __type?: "LaunchTemplate";
  /**
   * <p>The time launch template was created.</p>
   */
  CreateTime?: Date;

  /**
   * <p>The principal that created the launch template. </p>
   */
  CreatedBy?: string;

  /**
   * <p>The version number of the default version of the launch template.</p>
   */
  DefaultVersionNumber?: number;

  /**
   * <p>The version number of the latest version of the launch template.</p>
   */
  LatestVersionNumber?: number;

  /**
   * <p>The ID of the launch template.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The tags for the launch template.</p>
   */
  Tags?: Array<Tag>;
}

export namespace LaunchTemplate {
  export function isa(o: any): o is LaunchTemplate {
    return _smithy.isa(o, "LaunchTemplate");
  }
}

/**
 * <p>Describes a launch template and overrides.</p>
 */
export interface LaunchTemplateAndOverridesResponse {
  __type?: "LaunchTemplateAndOverridesResponse";
  /**
   * <p>The launch template.</p>
   */
  LaunchTemplateSpecification?: FleetLaunchTemplateSpecification;

  /**
   * <p>Any parameters that you specify override the same parameters in the launch
   *          template.</p>
   */
  Overrides?: FleetLaunchTemplateOverrides;
}

export namespace LaunchTemplateAndOverridesResponse {
  export function isa(o: any): o is LaunchTemplateAndOverridesResponse {
    return _smithy.isa(o, "LaunchTemplateAndOverridesResponse");
  }
}

/**
 * <p>Describes a block device mapping.</p>
 */
export interface LaunchTemplateBlockDeviceMapping {
  __type?: "LaunchTemplateBlockDeviceMapping";
  /**
   * <p>The device name.</p>
   */
  DeviceName?: string;

  /**
   * <p>Information about the block device for an EBS volume.</p>
   */
  Ebs?: LaunchTemplateEbsBlockDevice;

  /**
   * <p>Suppresses the specified device included in the block device mapping of the AMI.</p>
   */
  NoDevice?: string;

  /**
   * <p>The virtual device name (ephemeralN).</p>
   */
  VirtualName?: string;
}

export namespace LaunchTemplateBlockDeviceMapping {
  export function isa(o: any): o is LaunchTemplateBlockDeviceMapping {
    return _smithy.isa(o, "LaunchTemplateBlockDeviceMapping");
  }
}

/**
 * <p>Describes a block device mapping.</p>
 */
export interface LaunchTemplateBlockDeviceMappingRequest {
  __type?: "LaunchTemplateBlockDeviceMappingRequest";
  /**
   * <p>The device name (for example, /dev/sdh or xvdh).</p>
   */
  DeviceName?: string;

  /**
   * <p>Parameters used to automatically set up EBS volumes when the instance is launched.</p>
   */
  Ebs?: LaunchTemplateEbsBlockDeviceRequest;

  /**
   * <p>Suppresses the specified device included in the block device mapping of the AMI.</p>
   */
  NoDevice?: string;

  /**
   * <p>The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p>
   */
  VirtualName?: string;
}

export namespace LaunchTemplateBlockDeviceMappingRequest {
  export function isa(o: any): o is LaunchTemplateBlockDeviceMappingRequest {
    return _smithy.isa(o, "LaunchTemplateBlockDeviceMappingRequest");
  }
}

/**
 * <p>Describes an instance's Capacity Reservation targeting option. You can specify only one option at a time. Use the
 * 			<code>CapacityReservationPreference</code> parameter to configure the instance to run in On-Demand capacity or
 * 			to run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
 * 			Use the <code>CapacityReservationTarget</code> parameter to explicitly target a specific Capacity Reservation.</p>
 */
export interface LaunchTemplateCapacityReservationSpecificationRequest {
  __type?: "LaunchTemplateCapacityReservationSpecificationRequest";
  /**
   * <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes
   * 				(instance type, platform, Availability Zone).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance
   * 				runs in On-Demand capacity.</p>
   *             </li>
   *          </ul>
   */
  CapacityReservationPreference?: CapacityReservationPreference | string;

  /**
   * <p>Information about the target Capacity Reservation.</p>
   */
  CapacityReservationTarget?: CapacityReservationTarget;
}

export namespace LaunchTemplateCapacityReservationSpecificationRequest {
  export function isa(
    o: any
  ): o is LaunchTemplateCapacityReservationSpecificationRequest {
    return _smithy.isa(
      o,
      "LaunchTemplateCapacityReservationSpecificationRequest"
    );
  }
}

/**
 * <p>Information about the Capacity Reservation targeting option.</p>
 */
export interface LaunchTemplateCapacityReservationSpecificationResponse {
  __type?: "LaunchTemplateCapacityReservationSpecificationResponse";
  /**
   * <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes
   * 				(instance type, platform, Availability Zone).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance
   * 				runs in On-Demand capacity.</p>
   *             </li>
   *          </ul>
   */
  CapacityReservationPreference?: CapacityReservationPreference | string;

  /**
   * <p>Information about the target Capacity Reservation.</p>
   */
  CapacityReservationTarget?: CapacityReservationTargetResponse;
}

export namespace LaunchTemplateCapacityReservationSpecificationResponse {
  export function isa(
    o: any
  ): o is LaunchTemplateCapacityReservationSpecificationResponse {
    return _smithy.isa(
      o,
      "LaunchTemplateCapacityReservationSpecificationResponse"
    );
  }
}

/**
 * <p>Describes a launch template and overrides.</p>
 */
export interface LaunchTemplateConfig {
  __type?: "LaunchTemplateConfig";
  /**
   * <p>The launch template.</p>
   */
  LaunchTemplateSpecification?: FleetLaunchTemplateSpecification;

  /**
   * <p>Any parameters that you specify override the same parameters in the launch template.</p>
   */
  Overrides?: Array<LaunchTemplateOverrides>;
}

export namespace LaunchTemplateConfig {
  export function isa(o: any): o is LaunchTemplateConfig {
    return _smithy.isa(o, "LaunchTemplateConfig");
  }
}

/**
 * <p>The CPU options for the instance.</p>
 */
export interface LaunchTemplateCpuOptions {
  __type?: "LaunchTemplateCpuOptions";
  /**
   * <p>The number of CPU cores for the instance.</p>
   */
  CoreCount?: number;

  /**
   * <p>The number of threads per CPU core.</p>
   */
  ThreadsPerCore?: number;
}

export namespace LaunchTemplateCpuOptions {
  export function isa(o: any): o is LaunchTemplateCpuOptions {
    return _smithy.isa(o, "LaunchTemplateCpuOptions");
  }
}

/**
 * <p>The CPU options for the instance. Both the core count and threads per core
 * 			must be specified in the request.</p>
 */
export interface LaunchTemplateCpuOptionsRequest {
  __type?: "LaunchTemplateCpuOptionsRequest";
  /**
   * <p>The number of CPU cores for the instance.</p>
   */
  CoreCount?: number;

  /**
   * <p>The number of threads per CPU core. To disable multithreading
   * 			for the instance, specify a value of 1. Otherwise, specify the default value of 2.</p>
   */
  ThreadsPerCore?: number;
}

export namespace LaunchTemplateCpuOptionsRequest {
  export function isa(o: any): o is LaunchTemplateCpuOptionsRequest {
    return _smithy.isa(o, "LaunchTemplateCpuOptionsRequest");
  }
}

/**
 * <p>Describes a block device for an EBS volume.</p>
 */
export interface LaunchTemplateEbsBlockDevice {
  __type?: "LaunchTemplateEbsBlockDevice";
  /**
   * <p>Indicates whether the EBS volume is deleted on instance termination.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>Indicates whether the EBS volume is encrypted.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The number of I/O operations per second (IOPS) that the volume supports. </p>
   */
  Iops?: number;

  /**
   * <p>The ARN of the AWS Key Management Service (AWS KMS) CMK used for encryption.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The size of the volume, in GiB.</p>
   */
  VolumeSize?: number;

  /**
   * <p>The volume type.</p>
   */
  VolumeType?: VolumeType | string;
}

export namespace LaunchTemplateEbsBlockDevice {
  export function isa(o: any): o is LaunchTemplateEbsBlockDevice {
    return _smithy.isa(o, "LaunchTemplateEbsBlockDevice");
  }
}

/**
 * <p>The parameters for a block device for an EBS volume.</p>
 */
export interface LaunchTemplateEbsBlockDeviceRequest {
  __type?: "LaunchTemplateEbsBlockDeviceRequest";
  /**
   * <p>Indicates whether the EBS volume is deleted on instance termination.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The number of I/O operations per second (IOPS) that the volume supports. For io1, this represents the number of IOPS that are provisioned for the volume. For gp2, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, and bursting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         <p>Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2, st1, sc1, or standard volumes.</p>
   */
  Iops?: number;

  /**
   * <p>The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used for
   *             encryption.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The size of the volume, in GiB.</p>
   *         <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>
   */
  VolumeSize?: number;

  /**
   * <p>The volume type.</p>
   */
  VolumeType?: VolumeType | string;
}

export namespace LaunchTemplateEbsBlockDeviceRequest {
  export function isa(o: any): o is LaunchTemplateEbsBlockDeviceRequest {
    return _smithy.isa(o, "LaunchTemplateEbsBlockDeviceRequest");
  }
}

/**
 * <p>
 *             Describes an elastic inference accelerator.
 *         </p>
 */
export interface LaunchTemplateElasticInferenceAccelerator {
  __type?: "LaunchTemplateElasticInferenceAccelerator";
  /**
   * <p>
   *     		The number of elastic inference accelerators to attach to the instance.
   *     	</p>
   *     	    <p>Default: 1</p>
   */
  Count?: number;

  /**
   * <p>
   *             The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.
   *         </p>
   */
  Type: string | undefined;
}

export namespace LaunchTemplateElasticInferenceAccelerator {
  export function isa(o: any): o is LaunchTemplateElasticInferenceAccelerator {
    return _smithy.isa(o, "LaunchTemplateElasticInferenceAccelerator");
  }
}

/**
 * <p>
 *             Describes an elastic inference accelerator.
 *         </p>
 */
export interface LaunchTemplateElasticInferenceAcceleratorResponse {
  __type?: "LaunchTemplateElasticInferenceAcceleratorResponse";
  /**
   * <p>
   *     		The number of elastic inference accelerators to attach to the instance.
   *     	</p>
   *     	    <p>Default: 1</p>
   */
  Count?: number;

  /**
   * <p>
   *             The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge.
   *         </p>
   */
  Type?: string;
}

export namespace LaunchTemplateElasticInferenceAcceleratorResponse {
  export function isa(
    o: any
  ): o is LaunchTemplateElasticInferenceAcceleratorResponse {
    return _smithy.isa(o, "LaunchTemplateElasticInferenceAcceleratorResponse");
  }
}

export enum LaunchTemplateErrorCode {
  LAUNCH_TEMPLATE_ID_DOES_NOT_EXIST = "launchTemplateIdDoesNotExist",
  LAUNCH_TEMPLATE_ID_MALFORMED = "launchTemplateIdMalformed",
  LAUNCH_TEMPLATE_NAME_DOES_NOT_EXIST = "launchTemplateNameDoesNotExist",
  LAUNCH_TEMPLATE_NAME_MALFORMED = "launchTemplateNameMalformed",
  LAUNCH_TEMPLATE_VERSION_DOES_NOT_EXIST = "launchTemplateVersionDoesNotExist",
  UNEXPECTED_ERROR = "unexpectedError"
}

/**
 * <p>Indicates whether an instance is configured for hibernation.</p>
 */
export interface LaunchTemplateHibernationOptions {
  __type?: "LaunchTemplateHibernationOptions";
  /**
   * <p>If this parameter is set to <code>true</code>, the instance is enabled for hibernation; otherwise, it is not enabled for hibernation.</p>
   */
  Configured?: boolean;
}

export namespace LaunchTemplateHibernationOptions {
  export function isa(o: any): o is LaunchTemplateHibernationOptions {
    return _smithy.isa(o, "LaunchTemplateHibernationOptions");
  }
}

/**
 * <p>Indicates whether the instance is configured for hibernation. This parameter is valid only
 *             if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation
 *                 prerequisites</a>.</p>
 */
export interface LaunchTemplateHibernationOptionsRequest {
  __type?: "LaunchTemplateHibernationOptionsRequest";
  /**
   * <p>If you set this parameter to <code>true</code>, the instance is enabled for hibernation.</p>
   *          <p>Default: <code>false</code>
   *          </p>
   */
  Configured?: boolean;
}

export namespace LaunchTemplateHibernationOptionsRequest {
  export function isa(o: any): o is LaunchTemplateHibernationOptionsRequest {
    return _smithy.isa(o, "LaunchTemplateHibernationOptionsRequest");
  }
}

export enum LaunchTemplateHttpTokensState {
  optional = "optional",
  required = "required"
}

/**
 * <p>Describes an IAM instance profile.</p>
 */
export interface LaunchTemplateIamInstanceProfileSpecification {
  __type?: "LaunchTemplateIamInstanceProfileSpecification";
  /**
   * <p>The Amazon Resource Name (ARN) of the instance profile.</p>
   */
  Arn?: string;

  /**
   * <p>The name of the instance profile.</p>
   */
  Name?: string;
}

export namespace LaunchTemplateIamInstanceProfileSpecification {
  export function isa(
    o: any
  ): o is LaunchTemplateIamInstanceProfileSpecification {
    return _smithy.isa(o, "LaunchTemplateIamInstanceProfileSpecification");
  }
}

/**
 * <p>An IAM instance profile.</p>
 */
export interface LaunchTemplateIamInstanceProfileSpecificationRequest {
  __type?: "LaunchTemplateIamInstanceProfileSpecificationRequest";
  /**
   * <p>The Amazon Resource Name (ARN) of the instance profile.</p>
   */
  Arn?: string;

  /**
   * <p>The name of the instance profile.</p>
   */
  Name?: string;
}

export namespace LaunchTemplateIamInstanceProfileSpecificationRequest {
  export function isa(
    o: any
  ): o is LaunchTemplateIamInstanceProfileSpecificationRequest {
    return _smithy.isa(
      o,
      "LaunchTemplateIamInstanceProfileSpecificationRequest"
    );
  }
}

/**
 * <p>The market (purchasing) option for the instances.</p>
 */
export interface LaunchTemplateInstanceMarketOptions {
  __type?: "LaunchTemplateInstanceMarketOptions";
  /**
   * <p>The market type.</p>
   */
  MarketType?: MarketType | string;

  /**
   * <p>The options for Spot Instances.</p>
   */
  SpotOptions?: LaunchTemplateSpotMarketOptions;
}

export namespace LaunchTemplateInstanceMarketOptions {
  export function isa(o: any): o is LaunchTemplateInstanceMarketOptions {
    return _smithy.isa(o, "LaunchTemplateInstanceMarketOptions");
  }
}

/**
 * <p>The market (purchasing) option for the instances.</p>
 */
export interface LaunchTemplateInstanceMarketOptionsRequest {
  __type?: "LaunchTemplateInstanceMarketOptionsRequest";
  /**
   * <p>The market type.</p>
   */
  MarketType?: MarketType | string;

  /**
   * <p>The options for Spot Instances.</p>
   */
  SpotOptions?: LaunchTemplateSpotMarketOptionsRequest;
}

export namespace LaunchTemplateInstanceMarketOptionsRequest {
  export function isa(o: any): o is LaunchTemplateInstanceMarketOptionsRequest {
    return _smithy.isa(o, "LaunchTemplateInstanceMarketOptionsRequest");
  }
}

export type LaunchTemplateInstanceMetadataEndpointState =
  | "disabled"
  | "enabled";

/**
 * <p>The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the
 *                 <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export interface LaunchTemplateInstanceMetadataOptions {
  __type?: "LaunchTemplateInstanceMetadataOptions";
  /**
   * <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p>
   *         <note>
   *             <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata.
   *             </p>
   *         </note>
   */
  HttpEndpoint?: LaunchTemplateInstanceMetadataEndpointState | string;

  /**
   * <p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p>
   *          <p>Default: 1</p>
   *          <p>Possible values: Integers from 1 to 64</p>
   */
  HttpPutResponseHopLimit?: number;

  /**
   * <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p>
   *         <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p>
   *         <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
   */
  HttpTokens?: LaunchTemplateHttpTokensState | string;

  /**
   * <p>The state of the metadata option changes.</p>
   *          <p>
   *             <code>pending</code> - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.</p>
   *          <p>
   *             <code>applied</code> - The metadata options have been successfully applied on the instance.</p>
   */
  State?: LaunchTemplateInstanceMetadataOptionsState | string;
}

export namespace LaunchTemplateInstanceMetadataOptions {
  export function isa(o: any): o is LaunchTemplateInstanceMetadataOptions {
    return _smithy.isa(o, "LaunchTemplateInstanceMetadataOptions");
  }
}

/**
 * <p>The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the
 *             <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export interface LaunchTemplateInstanceMetadataOptionsRequest {
  __type?: "LaunchTemplateInstanceMetadataOptionsRequest";
  /**
   * <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p>
   *          <note>
   *             <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata.
   * </p>
   *          </note>
   */
  HttpEndpoint?: LaunchTemplateInstanceMetadataEndpointState | string;

  /**
   * <p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p>
   *         <p>Default: 1</p>
   *         <p>Possible values: Integers from 1 to 64</p>
   */
  HttpPutResponseHopLimit?: number;

  /**
   * <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p>
   *         <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p>
   *             <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
   */
  HttpTokens?: LaunchTemplateHttpTokensState | string;
}

export namespace LaunchTemplateInstanceMetadataOptionsRequest {
  export function isa(
    o: any
  ): o is LaunchTemplateInstanceMetadataOptionsRequest {
    return _smithy.isa(o, "LaunchTemplateInstanceMetadataOptionsRequest");
  }
}

export type LaunchTemplateInstanceMetadataOptionsState = "applied" | "pending";

/**
 * <p>Describes a network interface.</p>
 */
export interface LaunchTemplateInstanceNetworkInterfaceSpecification {
  __type?: "LaunchTemplateInstanceNetworkInterfaceSpecification";
  /**
   * <p>Indicates whether to associate a public IPv4 address with eth0 for a new network interface.</p>
   */
  AssociatePublicIpAddress?: boolean;

  /**
   * <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>A description for the network interface.</p>
   */
  Description?: string;

  /**
   * <p>The device index for the network interface attachment.</p>
   */
  DeviceIndex?: number;

  /**
   * <p>The IDs of one or more security groups.</p>
   */
  Groups?: Array<string>;

  /**
   * <p>The type of network interface.</p>
   */
  InterfaceType?: string;

  /**
   * <p>The number of IPv6 addresses for the network interface.</p>
   */
  Ipv6AddressCount?: number;

  /**
   * <p>The IPv6 addresses for the network interface.</p>
   */
  Ipv6Addresses?: Array<InstanceIpv6Address>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The primary private IPv4 address of the network interface.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>One or more private IPv4 addresses.</p>
   */
  PrivateIpAddresses?: Array<PrivateIpAddressSpecification>;

  /**
   * <p>The number of secondary private IPv4 addresses for the network interface.</p>
   */
  SecondaryPrivateIpAddressCount?: number;

  /**
   * <p>The ID of the subnet for the network interface.</p>
   */
  SubnetId?: string;
}

export namespace LaunchTemplateInstanceNetworkInterfaceSpecification {
  export function isa(
    o: any
  ): o is LaunchTemplateInstanceNetworkInterfaceSpecification {
    return _smithy.isa(
      o,
      "LaunchTemplateInstanceNetworkInterfaceSpecification"
    );
  }
}

/**
 * <p>The parameters for a network interface.</p>
 */
export interface LaunchTemplateInstanceNetworkInterfaceSpecificationRequest {
  __type?: "LaunchTemplateInstanceNetworkInterfaceSpecificationRequest";
  /**
   * <p>Associates a public IPv4 address with eth0 for a new network interface.</p>
   */
  AssociatePublicIpAddress?: boolean;

  /**
   * <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>A description for the network interface.</p>
   */
  Description?: string;

  /**
   * <p>The device index for the network interface attachment.</p>
   */
  DeviceIndex?: number;

  /**
   * <p>The IDs of one or more security groups.</p>
   */
  Groups?: Array<string>;

  /**
   * <p>The type of network interface. To create an Elastic Fabric Adapter (EFA), specify
   * 			<code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html">Elastic Fabric Adapter</a> in the
   * 			<i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   * 		       <p>If you are not creating an EFA, specify <code>interface</code> or omit this parameter.</p>
   * 		       <p>Valid values: <code>interface</code> | <code>efa</code>
   *          </p>
   */
  InterfaceType?: string;

  /**
   * <p>The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.</p>
   */
  Ipv6AddressCount?: number;

  /**
   * <p>One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.</p>
   */
  Ipv6Addresses?: Array<InstanceIpv6AddressRequest>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The primary private IPv4 address of the network interface.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>One or more private IPv4 addresses.</p>
   */
  PrivateIpAddresses?: Array<PrivateIpAddressSpecification>;

  /**
   * <p>The number of secondary private IPv4 addresses to assign to a network interface.</p>
   */
  SecondaryPrivateIpAddressCount?: number;

  /**
   * <p>The ID of the subnet for the network interface.</p>
   */
  SubnetId?: string;
}

export namespace LaunchTemplateInstanceNetworkInterfaceSpecificationRequest {
  export function isa(
    o: any
  ): o is LaunchTemplateInstanceNetworkInterfaceSpecificationRequest {
    return _smithy.isa(
      o,
      "LaunchTemplateInstanceNetworkInterfaceSpecificationRequest"
    );
  }
}

/**
 * <p>Describes a license configuration.</p>
 */
export interface LaunchTemplateLicenseConfiguration {
  __type?: "LaunchTemplateLicenseConfiguration";
  /**
   * <p>The Amazon Resource Name (ARN) of the license configuration.</p>
   */
  LicenseConfigurationArn?: string;
}

export namespace LaunchTemplateLicenseConfiguration {
  export function isa(o: any): o is LaunchTemplateLicenseConfiguration {
    return _smithy.isa(o, "LaunchTemplateLicenseConfiguration");
  }
}

/**
 * <p>Describes a license configuration.</p>
 */
export interface LaunchTemplateLicenseConfigurationRequest {
  __type?: "LaunchTemplateLicenseConfigurationRequest";
  /**
   * <p>The Amazon Resource Name (ARN) of the license configuration.</p>
   */
  LicenseConfigurationArn?: string;
}

export namespace LaunchTemplateLicenseConfigurationRequest {
  export function isa(o: any): o is LaunchTemplateLicenseConfigurationRequest {
    return _smithy.isa(o, "LaunchTemplateLicenseConfigurationRequest");
  }
}

/**
 * <p>Describes overrides for a launch template.</p>
 */
export interface LaunchTemplateOverrides {
  __type?: "LaunchTemplateOverrides";
  /**
   * <p>The Availability Zone in which to launch the instances.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The priority for the launch template override. If <b>OnDemandAllocationStrategy</b> is set to <code>prioritized</code>, Spot Fleet uses
   *             priority to determine which launch template override to use first in fulfilling
   *             On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at <code>0</code>. The lower
   *             the number, the higher the priority. If no number is set, the launch template override
   *             has the lowest priority.</p>
   */
  Priority?: number;

  /**
   * <p>The maximum price per unit hour that you are willing to pay for a Spot Instance.</p>
   */
  SpotPrice?: string;

  /**
   * <p>The ID of the subnet in which to launch the instances.</p>
   */
  SubnetId?: string;

  /**
   * <p>The number of units provided by the specified instance type.</p>
   */
  WeightedCapacity?: number;
}

export namespace LaunchTemplateOverrides {
  export function isa(o: any): o is LaunchTemplateOverrides {
    return _smithy.isa(o, "LaunchTemplateOverrides");
  }
}

/**
 * <p>Describes the placement of an instance.</p>
 */
export interface LaunchTemplatePlacement {
  __type?: "LaunchTemplatePlacement";
  /**
   * <p>The affinity setting for the instance on the Dedicated Host.</p>
   */
  Affinity?: string;

  /**
   * <p>The Availability Zone of the instance.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The name of the placement group for the instance.</p>
   */
  GroupName?: string;

  /**
   * <p>The ID of the Dedicated Host for the instance.</p>
   */
  HostId?: string;

  /**
   * <p>The ARN of the host resource group in which to launch the instances.
   *     	</p>
   */
  HostResourceGroupArn?: string;

  /**
   * <p>The number of the partition the instance should launch in. Valid only if the placement group strategy is set to <code>partition</code>.</p>
   */
  PartitionNumber?: number;

  /**
   * <p>Reserved for future use.</p>
   */
  SpreadDomain?: string;

  /**
   * <p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. </p>
   */
  Tenancy?: Tenancy | string;
}

export namespace LaunchTemplatePlacement {
  export function isa(o: any): o is LaunchTemplatePlacement {
    return _smithy.isa(o, "LaunchTemplatePlacement");
  }
}

/**
 * <p>Describes the placement of an instance.</p>
 */
export interface LaunchTemplatePlacementRequest {
  __type?: "LaunchTemplatePlacementRequest";
  /**
   * <p>The affinity setting for an instance on a Dedicated Host.</p>
   */
  Affinity?: string;

  /**
   * <p>The Availability Zone for the instance.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The name of the placement group for the instance.</p>
   */
  GroupName?: string;

  /**
   * <p>The ID of the Dedicated Host for the instance.</p>
   */
  HostId?: string;

  /**
   * <p>The ARN of the host resource group in which to launch the instances. If you specify a host
   * 		resource group ARN, omit the <b>Tenancy</b> parameter
   * 		or set it to <code>host</code>.</p>
   */
  HostResourceGroupArn?: string;

  /**
   * <p>The number of the partition the instance should launch in. Valid only if the placement group strategy is set to <code>partition</code>.</p>
   */
  PartitionNumber?: number;

  /**
   * <p>Reserved for future use.</p>
   */
  SpreadDomain?: string;

  /**
   * <p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy
   *         	of dedicated runs on single-tenant hardware.</p>
   */
  Tenancy?: Tenancy | string;
}

export namespace LaunchTemplatePlacementRequest {
  export function isa(o: any): o is LaunchTemplatePlacementRequest {
    return _smithy.isa(o, "LaunchTemplatePlacementRequest");
  }
}

/**
 * <p>The launch template to use. You must specify either the launch template ID or
 *             launch template name in the request, but not both.</p>
 */
export interface LaunchTemplateSpecification {
  __type?: "LaunchTemplateSpecification";
  /**
   * <p>The ID of the launch template.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The version number of the launch template.</p>
   *         <p>Default: The default version for the launch template.</p>
   */
  Version?: string;
}

export namespace LaunchTemplateSpecification {
  export function isa(o: any): o is LaunchTemplateSpecification {
    return _smithy.isa(o, "LaunchTemplateSpecification");
  }
}

/**
 * <p>The options for Spot Instances.</p>
 */
export interface LaunchTemplateSpotMarketOptions {
  __type?: "LaunchTemplateSpotMarketOptions";
  /**
   * <p>The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p>
   */
  BlockDurationMinutes?: number;

  /**
   * <p>The behavior when a Spot Instance is interrupted.</p>
   */
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;

  /**
   * <p>The maximum hourly price you're willing to pay for the Spot Instances.</p>
   */
  MaxPrice?: string;

  /**
   * <p>The Spot Instance request type.</p>
   */
  SpotInstanceType?: SpotInstanceType | string;

  /**
   * <p>The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.</p>
   */
  ValidUntil?: Date;
}

export namespace LaunchTemplateSpotMarketOptions {
  export function isa(o: any): o is LaunchTemplateSpotMarketOptions {
    return _smithy.isa(o, "LaunchTemplateSpotMarketOptions");
  }
}

/**
 * <p>The options for Spot Instances.</p>
 */
export interface LaunchTemplateSpotMarketOptionsRequest {
  __type?: "LaunchTemplateSpotMarketOptionsRequest";
  /**
   * <p>The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p>
   */
  BlockDurationMinutes?: number;

  /**
   * <p>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</p>
   */
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;

  /**
   * <p>The maximum hourly price you're willing to pay for the Spot Instances.</p>
   */
  MaxPrice?: string;

  /**
   * <p>The Spot Instance request type.</p>
   */
  SpotInstanceType?: SpotInstanceType | string;

  /**
   * <p>The end date of the request.
   *             For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached.
   *             If the request is persistent, it remains active until it is canceled or this date and time is reached.
   *             The default end date is 7 days from the current date.</p>
   */
  ValidUntil?: Date;
}

export namespace LaunchTemplateSpotMarketOptionsRequest {
  export function isa(o: any): o is LaunchTemplateSpotMarketOptionsRequest {
    return _smithy.isa(o, "LaunchTemplateSpotMarketOptionsRequest");
  }
}

/**
 * <p>The tag specification for the launch template.</p>
 */
export interface LaunchTemplateTagSpecification {
  __type?: "LaunchTemplateTagSpecification";
  /**
   * <p>The type of resource.</p>
   */
  ResourceType?: ResourceType | string;

  /**
   * <p>The tags for the resource.</p>
   */
  Tags?: Array<Tag>;
}

export namespace LaunchTemplateTagSpecification {
  export function isa(o: any): o is LaunchTemplateTagSpecification {
    return _smithy.isa(o, "LaunchTemplateTagSpecification");
  }
}

/**
 * <p>The tags specification for the launch template.</p>
 */
export interface LaunchTemplateTagSpecificationRequest {
  __type?: "LaunchTemplateTagSpecificationRequest";
  /**
   * <p>The type of resource to tag. Currently, the resource types that support tagging on
   *             creation are <code>instance</code> and <code>volume</code>. To tag a resource after it
   *         	has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.</p>
   */
  ResourceType?: ResourceType | string;

  /**
   * <p>The tags to apply to the resource.</p>
   */
  Tags?: Array<Tag>;
}

export namespace LaunchTemplateTagSpecificationRequest {
  export function isa(o: any): o is LaunchTemplateTagSpecificationRequest {
    return _smithy.isa(o, "LaunchTemplateTagSpecificationRequest");
  }
}

/**
 * <p>Describes a launch template version.</p>
 */
export interface LaunchTemplateVersion {
  __type?: "LaunchTemplateVersion";
  /**
   * <p>The time the version was created.</p>
   */
  CreateTime?: Date;

  /**
   * <p>The principal that created the version.</p>
   */
  CreatedBy?: string;

  /**
   * <p>Indicates whether the version is the default version.</p>
   */
  DefaultVersion?: boolean;

  /**
   * <p>Information about the launch template.</p>
   */
  LaunchTemplateData?: ResponseLaunchTemplateData;

  /**
   * <p>The ID of the launch template.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template.</p>
   */
  LaunchTemplateName?: string;

  /**
   * <p>The description for the version.</p>
   */
  VersionDescription?: string;

  /**
   * <p>The version number.</p>
   */
  VersionNumber?: number;
}

export namespace LaunchTemplateVersion {
  export function isa(o: any): o is LaunchTemplateVersion {
    return _smithy.isa(o, "LaunchTemplateVersion");
  }
}

/**
 * <p>Describes the monitoring for the instance.</p>
 */
export interface LaunchTemplatesMonitoring {
  __type?: "LaunchTemplatesMonitoring";
  /**
   * <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is
   *             enabled.</p>
   */
  Enabled?: boolean;
}

export namespace LaunchTemplatesMonitoring {
  export function isa(o: any): o is LaunchTemplatesMonitoring {
    return _smithy.isa(o, "LaunchTemplatesMonitoring");
  }
}

/**
 * <p>Describes the monitoring for the instance.</p>
 */
export interface LaunchTemplatesMonitoringRequest {
  __type?: "LaunchTemplatesMonitoringRequest";
  /**
   * <p>Specify <code>true</code> to enable detailed monitoring. Otherwise, basic monitoring is enabled.</p>
   */
  Enabled?: boolean;
}

export namespace LaunchTemplatesMonitoringRequest {
  export function isa(o: any): o is LaunchTemplatesMonitoringRequest {
    return _smithy.isa(o, "LaunchTemplatesMonitoringRequest");
  }
}

/**
 * <p>Describes a license configuration.</p>
 */
export interface LicenseConfiguration {
  __type?: "LicenseConfiguration";
  /**
   * <p>The Amazon Resource Name (ARN) of the license configuration.</p>
   */
  LicenseConfigurationArn?: string;
}

export namespace LicenseConfiguration {
  export function isa(o: any): o is LicenseConfiguration {
    return _smithy.isa(o, "LicenseConfiguration");
  }
}

/**
 * <p>Describes a license configuration.</p>
 */
export interface LicenseConfigurationRequest {
  __type?: "LicenseConfigurationRequest";
  /**
   * <p>The Amazon Resource Name (ARN) of the license configuration.</p>
   */
  LicenseConfigurationArn?: string;
}

export namespace LicenseConfigurationRequest {
  export function isa(o: any): o is LicenseConfigurationRequest {
    return _smithy.isa(o, "LicenseConfigurationRequest");
  }
}

export type ListingState = "available" | "cancelled" | "pending" | "sold";

export type ListingStatus = "active" | "cancelled" | "closed" | "pending";

/**
 * <p>Describes the Classic Load Balancers and target groups to attach to a Spot Fleet request.</p>
 */
export interface LoadBalancersConfig {
  __type?: "LoadBalancersConfig";
  /**
   * <p>The Classic Load Balancers.</p>
   */
  ClassicLoadBalancersConfig?: ClassicLoadBalancersConfig;

  /**
   * <p>The target groups.</p>
   */
  TargetGroupsConfig?: TargetGroupsConfig;
}

export namespace LoadBalancersConfig {
  export function isa(o: any): o is LoadBalancersConfig {
    return _smithy.isa(o, "LoadBalancersConfig");
  }
}

/**
 * <p>Describes a load permission.</p>
 */
export interface LoadPermission {
  __type?: "LoadPermission";
  /**
   * <p>The name of the group.</p>
   */
  Group?: PermissionGroup | string;

  /**
   * <p>The AWS account ID.</p>
   */
  UserId?: string;
}

export namespace LoadPermission {
  export function isa(o: any): o is LoadPermission {
    return _smithy.isa(o, "LoadPermission");
  }
}

/**
 * <p>Describes modifications to the load permissions of an Amazon FPGA image (AFI).</p>
 */
export interface LoadPermissionModifications {
  __type?: "LoadPermissionModifications";
  /**
   * <p>The load permissions to add.</p>
   */
  Add?: Array<LoadPermissionRequest>;

  /**
   * <p>The load permissions to remove.</p>
   */
  Remove?: Array<LoadPermissionRequest>;
}

export namespace LoadPermissionModifications {
  export function isa(o: any): o is LoadPermissionModifications {
    return _smithy.isa(o, "LoadPermissionModifications");
  }
}

/**
 * <p>Describes a load permission.</p>
 */
export interface LoadPermissionRequest {
  __type?: "LoadPermissionRequest";
  /**
   * <p>The name of the group.</p>
   */
  Group?: PermissionGroup | string;

  /**
   * <p>The AWS account ID.</p>
   */
  UserId?: string;
}

export namespace LoadPermissionRequest {
  export function isa(o: any): o is LoadPermissionRequest {
    return _smithy.isa(o, "LoadPermissionRequest");
  }
}

/**
 * <p>Describes a local gateway.</p>
 */
export interface LocalGateway {
  __type?: "LocalGateway";
  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The ID of the AWS account ID that owns the local gateway.</p>
   */
  OwnerId?: string;

  /**
   * <p>The state of the local gateway.</p>
   */
  State?: string;

  /**
   * <p>The tags assigned to the local gateway.</p>
   */
  Tags?: Array<Tag>;
}

export namespace LocalGateway {
  export function isa(o: any): o is LocalGateway {
    return _smithy.isa(o, "LocalGateway");
  }
}

/**
 * <p>Describes a route for a local gateway route table.</p>
 */
export interface LocalGatewayRoute {
  __type?: "LocalGatewayRoute";
  /**
   * <p>The CIDR block used for destination matches.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId?: string;

  /**
   * <p>The ID of the virtual interface group.</p>
   */
  LocalGatewayVirtualInterfaceGroupId?: string;

  /**
   * <p>The state of the route.</p>
   */
  State?: LocalGatewayRouteState | string;

  /**
   * <p>The route type.</p>
   */
  Type?: LocalGatewayRouteType | string;
}

export namespace LocalGatewayRoute {
  export function isa(o: any): o is LocalGatewayRoute {
    return _smithy.isa(o, "LocalGatewayRoute");
  }
}

export type LocalGatewayRouteState =
  | "active"
  | "blackhole"
  | "deleted"
  | "deleting"
  | "pending";

/**
 * <p>Describes a local gateway route table.</p>
 */
export interface LocalGatewayRouteTable {
  __type?: "LocalGatewayRouteTable";
  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The state of the local gateway route table.</p>
   */
  State?: string;

  /**
   * <p>The tags assigned to the local gateway route table.</p>
   */
  Tags?: Array<Tag>;
}

export namespace LocalGatewayRouteTable {
  export function isa(o: any): o is LocalGatewayRouteTable {
    return _smithy.isa(o, "LocalGatewayRouteTable");
  }
}

/**
 * <p>Describes an association between a local gateway route table and a virtual interface group.</p>
 */
export interface LocalGatewayRouteTableVirtualInterfaceGroupAssociation {
  __type?: "LocalGatewayRouteTableVirtualInterfaceGroupAssociation";
  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId?: string;

  /**
   * <p>The ID of the association.</p>
   */
  LocalGatewayRouteTableVirtualInterfaceGroupAssociationId?: string;

  /**
   * <p>The ID of the virtual interface group.</p>
   */
  LocalGatewayVirtualInterfaceGroupId?: string;

  /**
   * <p>The state of the association.</p>
   */
  State?: string;

  /**
   * <p>The tags assigned to the association.</p>
   */
  Tags?: Array<Tag>;
}

export namespace LocalGatewayRouteTableVirtualInterfaceGroupAssociation {
  export function isa(
    o: any
  ): o is LocalGatewayRouteTableVirtualInterfaceGroupAssociation {
    return _smithy.isa(
      o,
      "LocalGatewayRouteTableVirtualInterfaceGroupAssociation"
    );
  }
}

/**
 * <p>Describes an association between a local gateway route table and a VPC.</p>
 */
export interface LocalGatewayRouteTableVpcAssociation {
  __type?: "LocalGatewayRouteTableVpcAssociation";
  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId?: string;

  /**
   * <p>The ID of the association.</p>
   */
  LocalGatewayRouteTableVpcAssociationId?: string;

  /**
   * <p>The state of the association.</p>
   */
  State?: string;

  /**
   * <p>The tags assigned to the association.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace LocalGatewayRouteTableVpcAssociation {
  export function isa(o: any): o is LocalGatewayRouteTableVpcAssociation {
    return _smithy.isa(o, "LocalGatewayRouteTableVpcAssociation");
  }
}

export type LocalGatewayRouteType = "propagated" | "static";

/**
 * <p>Describes a local gateway virtual interface.</p>
 */
export interface LocalGatewayVirtualInterface {
  __type?: "LocalGatewayVirtualInterface";
  /**
   * <p>The local address.</p>
   */
  LocalAddress?: string;

  /**
   * <p>The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the local gateway.</p>
   */
  LocalBgpAsn?: number;

  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>The ID of the virtual interface.</p>
   */
  LocalGatewayVirtualInterfaceId?: string;

  /**
   * <p>The peer address.</p>
   */
  PeerAddress?: string;

  /**
   * <p>The peer BGP ASN.</p>
   */
  PeerBgpAsn?: number;

  /**
   * <p>The tags assigned to the virtual interface.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VLAN.</p>
   */
  Vlan?: number;
}

export namespace LocalGatewayVirtualInterface {
  export function isa(o: any): o is LocalGatewayVirtualInterface {
    return _smithy.isa(o, "LocalGatewayVirtualInterface");
  }
}

/**
 * <p>Describes a local gateway virtual interface group.</p>
 */
export interface LocalGatewayVirtualInterfaceGroup {
  __type?: "LocalGatewayVirtualInterfaceGroup";
  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>The ID of the virtual interface group.</p>
   */
  LocalGatewayVirtualInterfaceGroupId?: string;

  /**
   * <p>The IDs of the virtual interfaces.</p>
   */
  LocalGatewayVirtualInterfaceIds?: Array<string>;

  /**
   * <p>The tags assigned to the virtual interface group.</p>
   */
  Tags?: Array<Tag>;
}

export namespace LocalGatewayVirtualInterfaceGroup {
  export function isa(o: any): o is LocalGatewayVirtualInterfaceGroup {
    return _smithy.isa(o, "LocalGatewayVirtualInterfaceGroup");
  }
}

export type LocationType =
  | "availability-zone"
  | "availability-zone-id"
  | "region";

export type LogDestinationType = "cloud-watch-logs" | "s3";

export type MarketType = "spot";

export type MembershipType = "igmp" | "static";

/**
 * <p>Describes the memory for the instance type.</p>
 */
export interface MemoryInfo {
  __type?: "MemoryInfo";
  /**
   * <p>Size of the memory, in MiB.</p>
   */
  SizeInMiB?: number;
}

export namespace MemoryInfo {
  export function isa(o: any): o is MemoryInfo {
    return _smithy.isa(o, "MemoryInfo");
  }
}

export interface ModifyCapacityReservationRequest {
  __type?: "ModifyCapacityReservationRequest";
  /**
   * <p>The ID of the Capacity Reservation.</p>
   */
  CapacityReservationId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity
   * 			is released and you can no longer launch instances into it. The Capacity Reservation's state changes to
   * 				<code>expired</code> when it reaches its end date and time.</p>
   * 		       <p>The Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify
   * 			5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p>
   * 		       <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is
   * 				<code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is
   * 				<code>unlimited</code>.</p>
   */
  EndDate?: Date;

  /**
   * <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end
   * 			types:</p>
   * 		       <ul>
   *             <li>
   *                <p>
   *                   <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not
   * 					provide an <code>EndDate</code> value if <code>EndDateType</code> is
   * 						<code>unlimited</code>.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must
   * 					provide an <code>EndDate</code> value if <code>EndDateType</code> is
   * 						<code>limited</code>.</p>
   *             </li>
   *          </ul>
   */
  EndDateType?: EndDateType | string;

  /**
   * <p>The number of instances for which to reserve capacity.</p>
   */
  InstanceCount?: number;
}

export namespace ModifyCapacityReservationRequest {
  export function isa(o: any): o is ModifyCapacityReservationRequest {
    return _smithy.isa(o, "ModifyCapacityReservationRequest");
  }
}

export interface ModifyCapacityReservationResult extends $MetadataBearer {
  __type?: "ModifyCapacityReservationResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace ModifyCapacityReservationResult {
  export function isa(o: any): o is ModifyCapacityReservationResult {
    return _smithy.isa(o, "ModifyCapacityReservationResult");
  }
}

export interface ModifyClientVpnEndpointRequest {
  __type?: "ModifyClientVpnEndpointRequest";
  /**
   * <p>The ID of the Client VPN endpoint to modify.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Information about the client connection logging options.</p>
   * 		       <p>If you enable client connection logging, data about client connections is sent to a
   * 			Cloudwatch Logs log stream. The following information is logged:</p>
   * 		       <ul>
   *             <li>
   *                <p>Client connection requests</p>
   *             </li>
   *             <li>
   *                <p>Client connection results (successful and unsuccessful)</p>
   *             </li>
   *             <li>
   *                <p>Reasons for unsuccessful client connection requests</p>
   *             </li>
   *             <li>
   *                <p>Client connection termination time</p>
   *             </li>
   *          </ul>
   */
  ConnectionLogOptions?: ConnectionLogOptions;

  /**
   * <p>A brief description of the Client VPN endpoint.</p>
   */
  Description?: string;

  /**
   * <p>Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have
   * 			up to two DNS servers.</p>
   */
  DnsServers?: DnsServersOptionsModifyStructure;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ARN of the server certificate to be used. The server certificate must be provisioned in AWS Certificate Manager (ACM).</p>
   */
  ServerCertificateArn?: string;

  /**
   * <p>Indicates whether the VPN is split-tunnel.</p>
   *         <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel AWS Client VPN Endpoint</a> in the <i>AWS
   *                 Client VPN Administrator Guide</i>.</p>
   */
  SplitTunnel?: boolean;

  /**
   * <p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p>
   * 	        <p>Valid Values: <code>443</code> | <code>1194</code>
   *          </p>
   * 	        <p>Default Value: <code>443</code>
   *          </p>
   */
  VpnPort?: number;
}

export namespace ModifyClientVpnEndpointRequest {
  export function isa(o: any): o is ModifyClientVpnEndpointRequest {
    return _smithy.isa(o, "ModifyClientVpnEndpointRequest");
  }
}

export interface ModifyClientVpnEndpointResult extends $MetadataBearer {
  __type?: "ModifyClientVpnEndpointResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace ModifyClientVpnEndpointResult {
  export function isa(o: any): o is ModifyClientVpnEndpointResult {
    return _smithy.isa(o, "ModifyClientVpnEndpointResult");
  }
}

export interface ModifyDefaultCreditSpecificationRequest {
  __type?: "ModifyDefaultCreditSpecificationRequest";
  /**
   * <p>The credit option for CPU usage of the instance family.</p>
   *         <p>Valid Values: <code>standard</code> | <code>unlimited</code>
   *          </p>
   */
  CpuCredits: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The instance family.</p>
   */
  InstanceFamily: UnlimitedSupportedInstanceFamily | string | undefined;
}

export namespace ModifyDefaultCreditSpecificationRequest {
  export function isa(o: any): o is ModifyDefaultCreditSpecificationRequest {
    return _smithy.isa(o, "ModifyDefaultCreditSpecificationRequest");
  }
}

export interface ModifyDefaultCreditSpecificationResult
  extends $MetadataBearer {
  __type?: "ModifyDefaultCreditSpecificationResult";
  /**
   * <p>The default credit option for CPU usage of the instance family.</p>
   */
  InstanceFamilyCreditSpecification?: InstanceFamilyCreditSpecification;
}

export namespace ModifyDefaultCreditSpecificationResult {
  export function isa(o: any): o is ModifyDefaultCreditSpecificationResult {
    return _smithy.isa(o, "ModifyDefaultCreditSpecificationResult");
  }
}

export interface ModifyEbsDefaultKmsKeyIdRequest {
  __type?: "ModifyEbsDefaultKmsKeyIdRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption.
   *       If this parameter is not specified, your AWS managed CMK for EBS is used. If <code>KmsKeyId</code> is
   *       specified, the encrypted state must be <code>true</code>.</p>
   *          <p>You can specify the CMK using any of the following:</p>
   *          <ul>
   *             <li>
   *                <p>Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab.</p>
   *             </li>
   *             <li>
   *                <p>Key alias. For example, alias/ExampleAlias.</p>
   *             </li>
   *             <li>
   *                <p>Key ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p>
   *             </li>
   *             <li>
   *                <p>Alias ARN. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p>
   *             </li>
   *          </ul>
   *          <p>AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid,
   *       the action can appear to complete, but eventually fails.</p>
   *          <p>Amazon EBS does not support asymmetric CMKs.</p>
   */
  KmsKeyId: string | undefined;
}

export namespace ModifyEbsDefaultKmsKeyIdRequest {
  export function isa(o: any): o is ModifyEbsDefaultKmsKeyIdRequest {
    return _smithy.isa(o, "ModifyEbsDefaultKmsKeyIdRequest");
  }
}

export interface ModifyEbsDefaultKmsKeyIdResult extends $MetadataBearer {
  __type?: "ModifyEbsDefaultKmsKeyIdResult";
  /**
   * <p>The Amazon Resource Name (ARN) of the default CMK for encryption by default.</p>
   */
  KmsKeyId?: string;
}

export namespace ModifyEbsDefaultKmsKeyIdResult {
  export function isa(o: any): o is ModifyEbsDefaultKmsKeyIdResult {
    return _smithy.isa(o, "ModifyEbsDefaultKmsKeyIdResult");
  }
}

export interface ModifyFleetRequest {
  __type?: "ModifyFleetRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether running instances should be terminated if the total target capacity of
   *          the EC2 Fleet is decreased below the current size of the EC2 Fleet.</p>
   */
  ExcessCapacityTerminationPolicy?:
    | FleetExcessCapacityTerminationPolicy
    | string;

  /**
   * <p>The ID of the EC2 Fleet.</p>
   */
  FleetId: string | undefined;

  /**
   * <p>The size of the EC2 Fleet.</p>
   */
  TargetCapacitySpecification: TargetCapacitySpecificationRequest | undefined;
}

export namespace ModifyFleetRequest {
  export function isa(o: any): o is ModifyFleetRequest {
    return _smithy.isa(o, "ModifyFleetRequest");
  }
}

export interface ModifyFleetResult extends $MetadataBearer {
  __type?: "ModifyFleetResult";
  /**
   * <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
   */
  Return?: boolean;
}

export namespace ModifyFleetResult {
  export function isa(o: any): o is ModifyFleetResult {
    return _smithy.isa(o, "ModifyFleetResult");
  }
}

export interface ModifyFpgaImageAttributeRequest {
  __type?: "ModifyFpgaImageAttributeRequest";
  /**
   * <p>The name of the attribute.</p>
   */
  Attribute?: FpgaImageAttributeName | string;

  /**
   * <p>A description for the AFI.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AFI.</p>
   */
  FpgaImageId: string | undefined;

  /**
   * <p>The load permission for the AFI.</p>
   */
  LoadPermission?: LoadPermissionModifications;

  /**
   * <p>A name for the AFI.</p>
   */
  Name?: string;

  /**
   * <p>The operation type.</p>
   */
  OperationType?: OperationType | string;

  /**
   * <p>The product codes. After you add a product code to an AFI, it can't be removed.
   * 		    This parameter is valid only when modifying the <code>productCodes</code> attribute.</p>
   */
  ProductCodes?: Array<string>;

  /**
   * <p>The user groups. This parameter is valid only when modifying the <code>loadPermission</code> attribute.</p>
   */
  UserGroups?: Array<string>;

  /**
   * <p>The AWS account IDs. This parameter is valid only when modifying the <code>loadPermission</code> attribute.</p>
   */
  UserIds?: Array<string>;
}

export namespace ModifyFpgaImageAttributeRequest {
  export function isa(o: any): o is ModifyFpgaImageAttributeRequest {
    return _smithy.isa(o, "ModifyFpgaImageAttributeRequest");
  }
}

export interface ModifyFpgaImageAttributeResult extends $MetadataBearer {
  __type?: "ModifyFpgaImageAttributeResult";
  /**
   * <p>Information about the attribute.</p>
   */
  FpgaImageAttribute?: FpgaImageAttribute;
}

export namespace ModifyFpgaImageAttributeResult {
  export function isa(o: any): o is ModifyFpgaImageAttributeResult {
    return _smithy.isa(o, "ModifyFpgaImageAttributeResult");
  }
}

export interface ModifyHostsRequest {
  __type?: "ModifyHostsRequest";
  /**
   * <p>Specify whether to enable or disable auto-placement.</p>
   */
  AutoPlacement?: AutoPlacement | string;

  /**
   * <p>The IDs of the Dedicated Hosts to modify.</p>
   */
  HostIds: Array<string> | undefined;

  /**
   * <p>Indicates whether to enable or disable host recovery for the Dedicated Host. For more information,
   * 			see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html">
   * 				Host Recovery</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  HostRecovery?: HostRecovery | string;

  /**
   * <p>Specifies the instance family to be supported by the Dedicated Host. Specify this parameter
   * 			to modify a Dedicated Host to support multiple instance types within its current
   * 			instance family.</p>
   *
   * 		       <p>If you want to modify a Dedicated Host to support a specific instance type only, omit this parameter
   * 			and specify <b>InstanceType</b> instead. You cannot specify
   * 			<b>InstanceFamily</b> and <b>InstanceType</b>
   * 			in the same request.</p>
   */
  InstanceFamily?: string;

  /**
   * <p>Specifies the instance type to be supported by the Dedicated Host. Specify this parameter to
   * 			modify a Dedicated Host to support only a specific instance type.</p>
   *
   * 		       <p>If you want to modify a Dedicated Host to support multiple instance types in its current instance
   * 			family, omit this parameter and specify <b>InstanceFamily</b>
   * 			instead. You cannot specify <b>InstanceType</b> and
   * 			<b>InstanceFamily</b> in the same request.</p>
   */
  InstanceType?: string;
}

export namespace ModifyHostsRequest {
  export function isa(o: any): o is ModifyHostsRequest {
    return _smithy.isa(o, "ModifyHostsRequest");
  }
}

export interface ModifyHostsResult extends $MetadataBearer {
  __type?: "ModifyHostsResult";
  /**
   * <p>The IDs of the Dedicated Hosts that were successfully modified.</p>
   */
  Successful?: Array<string>;

  /**
   * <p>The IDs of the Dedicated Hosts that could not be modified. Check whether the
   *             setting you requested can be used.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace ModifyHostsResult {
  export function isa(o: any): o is ModifyHostsResult {
    return _smithy.isa(o, "ModifyHostsResult");
  }
}

export interface ModifyIdFormatRequest {
  __type?: "ModifyIdFormatRequest";
  /**
   * <p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> |
   *            <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> |
   *            <code>export-task</code> | <code>flow-log</code> | <code>image</code> |
   *            <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code>
   *            | <code>network-acl-association</code> | <code>network-interface</code> |
   *            <code>network-interface-attachment</code> | <code>prefix-list</code> |
   *            <code>route-table</code> | <code>route-table-association</code> |
   *            <code>security-group</code> | <code>subnet</code> |
   *            <code>subnet-cidr-block-association</code> | <code>vpc</code> |
   *            <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p>
   *          <p>Alternatively, use the <code>all-current</code> option to include all resource types that are
   *        currently within their opt-in period for longer IDs.</p>
   */
  Resource: string | undefined;

  /**
   * <p>Indicate whether the resource should use longer IDs (17-character IDs).</p>
   */
  UseLongIds: boolean | undefined;
}

export namespace ModifyIdFormatRequest {
  export function isa(o: any): o is ModifyIdFormatRequest {
    return _smithy.isa(o, "ModifyIdFormatRequest");
  }
}

export interface ModifyIdentityIdFormatRequest {
  __type?: "ModifyIdentityIdFormatRequest";
  /**
   * <p>The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify
   *        <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of
   *        the account.</p>
   */
  PrincipalArn: string | undefined;

  /**
   * <p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> |
   *           <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> |
   *           <code>export-task</code> | <code>flow-log</code> | <code>image</code> |
   *           <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code>
   *           | <code>network-acl-association</code> | <code>network-interface</code> |
   *           <code>network-interface-attachment</code> | <code>prefix-list</code> |
   *           <code>route-table</code> | <code>route-table-association</code> |
   *           <code>security-group</code> | <code>subnet</code> |
   *           <code>subnet-cidr-block-association</code> | <code>vpc</code> |
   *           <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p>
   *          <p>Alternatively, use the <code>all-current</code> option to include all resource types that are
   *           currently within their opt-in period for longer IDs.</p>
   */
  Resource: string | undefined;

  /**
   * <p>Indicates whether the resource should use longer IDs (17-character IDs)</p>
   */
  UseLongIds: boolean | undefined;
}

export namespace ModifyIdentityIdFormatRequest {
  export function isa(o: any): o is ModifyIdentityIdFormatRequest {
    return _smithy.isa(o, "ModifyIdentityIdFormatRequest");
  }
}

/**
 * <p>Contains the parameters for ModifyImageAttribute.</p>
 */
export interface ModifyImageAttributeRequest {
  __type?: "ModifyImageAttributeRequest";
  /**
   * <p>The name of the attribute to modify.
   *        The valid values are <code>description</code>, <code>launchPermission</code>, and <code>productCodes</code>.</p>
   */
  Attribute?: string;

  /**
   * <p>A new description for the AMI.</p>
   */
  Description?: AttributeValue;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId: string | undefined;

  /**
   * <p>A new launch permission for the AMI.</p>
   */
  LaunchPermission?: LaunchPermissionModifications;

  /**
   * <p>The operation type.
   *        This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.</p>
   */
  OperationType?: OperationType | string;

  /**
   * <p>The DevPay product codes. After you add a product code to an AMI, it can't be removed.</p>
   */
  ProductCodes?: Array<string>;

  /**
   * <p>The user groups.
   *        This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.</p>
   */
  UserGroups?: Array<string>;

  /**
   * <p>The AWS account IDs.
   *        This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.</p>
   */
  UserIds?: Array<string>;

  /**
   * <p>The value of the attribute being modified.
   *        This parameter can be used only when the <code>Attribute</code> parameter is <code>description</code> or <code>productCodes</code>.</p>
   */
  Value?: string;
}

export namespace ModifyImageAttributeRequest {
  export function isa(o: any): o is ModifyImageAttributeRequest {
    return _smithy.isa(o, "ModifyImageAttributeRequest");
  }
}

export interface ModifyInstanceAttributeRequest {
  __type?: "ModifyInstanceAttributeRequest";
  /**
   * <p>The name of the attribute.</p>
   */
  Attribute?: InstanceAttributeName | string;

  /**
   * <p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently
   *             attached. The volume must be owned by the caller. If no value is specified for
   *                 <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is
   *             deleted when the instance is terminated.</p>
   *         <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when
   *             you launch the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Updating the Block Device Mapping when Launching an Instance</a> in the
   *                 <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  BlockDeviceMappings?: Array<InstanceBlockDeviceMappingSpecification>;

  /**
   * <p>If the value is <code>true</code>, you can't terminate the instance using the Amazon
   *             EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot
   *             Instances.</p>
   */
  DisableApiTermination?: AttributeBooleanValue;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Specifies whether the instance is optimized for Amazon EBS I/O. This optimization
   *             provides dedicated throughput to Amazon EBS and an optimized configuration stack to
   *             provide optimal EBS I/O performance. This optimization isn't available with all instance
   *             types. Additional usage charges apply when using an EBS Optimized instance.</p>
   */
  EbsOptimized?: AttributeBooleanValue;

  /**
   * <p>Set to <code>true</code> to enable enhanced networking with ENA for the
   *             instance.</p>
   *         <p>This option is supported only for HVM instances. Specifying this option with a PV
   *             instance can make it unreachable.</p>
   */
  EnaSupport?: AttributeBooleanValue;

  /**
   * <p>[EC2-VPC] Changes the security groups of the instance. You must specify at least one
   *             security group, even if it's just the default security group for the VPC. You must
   *             specify the security group ID, not the security group name.</p>
   */
  Groups?: Array<string>;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>Specifies whether an instance stops or terminates when you initiate shutdown from the
   *             instance (using the operating system command for system shutdown).</p>
   */
  InstanceInitiatedShutdownBehavior?: AttributeValue;

  /**
   * <p>Changes the instance type to the specified value. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance
   *                 Types</a>. If the instance type is not valid, the error returned is
   *                 <code>InvalidInstanceAttributeValue</code>.</p>
   */
  InstanceType?: AttributeValue;

  /**
   * <p>Changes the instance's kernel to the specified value. We recommend that you use
   *             PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.</p>
   */
  Kernel?: AttributeValue;

  /**
   * <p>Changes the instance's RAM disk to the specified value. We recommend that you use
   *             PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.</p>
   */
  Ramdisk?: AttributeValue;

  /**
   * <p>Specifies whether source/destination checking is enabled. A value of <code>true</code>
   *             means that checking is enabled, and <code>false</code> means that checking is disabled.
   *             This value must be <code>false</code> for a NAT instance to perform NAT.</p>
   */
  SourceDestCheck?: AttributeBooleanValue;

  /**
   * <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual
   *             Function interface for the instance.</p>
   *         <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function
   *             interface at this time.</p>
   *         <p>This option is supported only for HVM instances. Specifying this option with a PV
   *             instance can make it unreachable.</p>
   */
  SriovNetSupport?: AttributeValue;

  /**
   * <p>Changes the instance's user data to the specified value. If you are using an AWS SDK
   *             or command line tool, base64-encoding is performed for you, and you can load the text
   *             from a file. Otherwise, you must provide base64-encoded text.</p>
   */
  UserData?: BlobAttributeValue;

  /**
   * <p>A new value for the attribute. Use only with the <code>kernel</code>,
   *                 <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or
   *                 <code>instanceInitiatedShutdownBehavior</code> attribute.</p>
   */
  Value?: string;
}

export namespace ModifyInstanceAttributeRequest {
  export function isa(o: any): o is ModifyInstanceAttributeRequest {
    return _smithy.isa(o, "ModifyInstanceAttributeRequest");
  }
}

export interface ModifyInstanceCapacityReservationAttributesRequest {
  __type?: "ModifyInstanceCapacityReservationAttributesRequest";
  /**
   * <p>Information about the Capacity Reservation targeting option.</p>
   */
  CapacityReservationSpecification:
    | CapacityReservationSpecification
    | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance to be modified.</p>
   */
  InstanceId: string | undefined;
}

export namespace ModifyInstanceCapacityReservationAttributesRequest {
  export function isa(
    o: any
  ): o is ModifyInstanceCapacityReservationAttributesRequest {
    return _smithy.isa(o, "ModifyInstanceCapacityReservationAttributesRequest");
  }
}

export interface ModifyInstanceCapacityReservationAttributesResult
  extends $MetadataBearer {
  __type?: "ModifyInstanceCapacityReservationAttributesResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace ModifyInstanceCapacityReservationAttributesResult {
  export function isa(
    o: any
  ): o is ModifyInstanceCapacityReservationAttributesResult {
    return _smithy.isa(o, "ModifyInstanceCapacityReservationAttributesResult");
  }
}

export interface ModifyInstanceCreditSpecificationRequest {
  __type?: "ModifyInstanceCreditSpecificationRequest";
  /**
   * <p>A unique, case-sensitive token that you provide to ensure idempotency of your
   *             modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   *                 Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Information about the credit option for CPU usage.</p>
   */
  InstanceCreditSpecifications:
    | Array<InstanceCreditSpecificationRequest>
    | undefined;
}

export namespace ModifyInstanceCreditSpecificationRequest {
  export function isa(o: any): o is ModifyInstanceCreditSpecificationRequest {
    return _smithy.isa(o, "ModifyInstanceCreditSpecificationRequest");
  }
}

export interface ModifyInstanceCreditSpecificationResult
  extends $MetadataBearer {
  __type?: "ModifyInstanceCreditSpecificationResult";
  /**
   * <p>Information about the instances whose credit option for CPU usage was successfully
   *             modified.</p>
   */
  SuccessfulInstanceCreditSpecifications?: Array<
    SuccessfulInstanceCreditSpecificationItem
  >;

  /**
   * <p>Information about the instances whose credit option for CPU usage was not
   *             modified.</p>
   */
  UnsuccessfulInstanceCreditSpecifications?: Array<
    UnsuccessfulInstanceCreditSpecificationItem
  >;
}

export namespace ModifyInstanceCreditSpecificationResult {
  export function isa(o: any): o is ModifyInstanceCreditSpecificationResult {
    return _smithy.isa(o, "ModifyInstanceCreditSpecificationResult");
  }
}

export interface ModifyInstanceEventStartTimeRequest {
  __type?: "ModifyInstanceEventStartTimeRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the event whose date and time you are modifying.</p>
   */
  InstanceEventId: string | undefined;

  /**
   * <p>The ID of the instance with the scheduled event.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>The new date and time when the event will take place.</p>
   */
  NotBefore: Date | undefined;
}

export namespace ModifyInstanceEventStartTimeRequest {
  export function isa(o: any): o is ModifyInstanceEventStartTimeRequest {
    return _smithy.isa(o, "ModifyInstanceEventStartTimeRequest");
  }
}

export interface ModifyInstanceEventStartTimeResult extends $MetadataBearer {
  __type?: "ModifyInstanceEventStartTimeResult";
  /**
   * <p>Describes a scheduled event for an instance.</p>
   */
  Event?: InstanceStatusEvent;
}

export namespace ModifyInstanceEventStartTimeResult {
  export function isa(o: any): o is ModifyInstanceEventStartTimeResult {
    return _smithy.isa(o, "ModifyInstanceEventStartTimeResult");
  }
}

export interface ModifyInstanceMetadataOptionsRequest {
  __type?: "ModifyInstanceMetadataOptionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If
   *             the parameter is not specified, the existing state is maintained.</p>
   *         <note>
   *             <p>If you specify a value of <code>disabled</code>, you will not be able to access your
   *                 instance metadata.</p>
   *         </note>
   */
  HttpEndpoint?: InstanceMetadataEndpointState | string;

  /**
   * <p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the
   *             number, the further instance metadata requests can travel. If no parameter is specified, the existing state is maintained.</p>
   *         <p>Possible values: Integers from 1 to 64</p>
   */
  HttpPutResponseHopLimit?: number;

  /**
   * <p>The state of token usage for your instance metadata requests. If the parameter is not
   *             specified in the request, the default state is <code>optional</code>.</p>
   *         <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata
   *             with or without a signed token header on your request. If you retrieve the IAM role
   *             credentials without a token, the version 1.0 role credentials are returned. If you
   *             retrieve the IAM role credentials using a valid signed token, the version 2.0 role
   *             credentials are returned.</p>
   *         <p>If the state is <code>required</code>, you must send a signed token header with any
   *             instance metadata retrieval requests. In this state, retrieving the IAM role credential
   *             always returns the version 2.0 credentials; the version 1.0 credentials are not
   *             available.</p>
   */
  HttpTokens?: HttpTokensState | string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;
}

export namespace ModifyInstanceMetadataOptionsRequest {
  export function isa(o: any): o is ModifyInstanceMetadataOptionsRequest {
    return _smithy.isa(o, "ModifyInstanceMetadataOptionsRequest");
  }
}

export interface ModifyInstanceMetadataOptionsResult extends $MetadataBearer {
  __type?: "ModifyInstanceMetadataOptionsResult";
  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The metadata options for the instance.</p>
   */
  InstanceMetadataOptions?: InstanceMetadataOptionsResponse;
}

export namespace ModifyInstanceMetadataOptionsResult {
  export function isa(o: any): o is ModifyInstanceMetadataOptionsResult {
    return _smithy.isa(o, "ModifyInstanceMetadataOptionsResult");
  }
}

export interface ModifyInstancePlacementRequest {
  __type?: "ModifyInstancePlacementRequest";
  /**
   * <p>The affinity setting for the instance.</p>
   */
  Affinity?: Affinity | string;

  /**
   * <p>The name of the placement group in which to place the instance. For spread placement
   *             groups, the instance must have a tenancy of <code>default</code>. For cluster and
   *             partition placement groups, the instance must have a tenancy of <code>default</code> or
   *                 <code>dedicated</code>.</p>
   *         <p>To remove an instance from a placement group, specify an empty string
   *             ("").</p>
   */
  GroupName?: string;

  /**
   * <p>The ID of the Dedicated Host with which to associate the instance.</p>
   */
  HostId?: string;

  /**
   * <p>The ARN of the host resource group in which to place the instance.</p>
   */
  HostResourceGroupArn?: string;

  /**
   * <p>The ID of the instance that you are modifying.</p>
   */
  InstanceId: string | undefined;

  /**
   * <p>Reserved for future use.</p>
   */
  PartitionNumber?: number;

  /**
   * <p>The tenancy for the instance.</p>
   */
  Tenancy?: HostTenancy | string;
}

export namespace ModifyInstancePlacementRequest {
  export function isa(o: any): o is ModifyInstancePlacementRequest {
    return _smithy.isa(o, "ModifyInstancePlacementRequest");
  }
}

export interface ModifyInstancePlacementResult extends $MetadataBearer {
  __type?: "ModifyInstancePlacementResult";
  /**
   * <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
   */
  Return?: boolean;
}

export namespace ModifyInstancePlacementResult {
  export function isa(o: any): o is ModifyInstancePlacementResult {
    return _smithy.isa(o, "ModifyInstancePlacementResult");
  }
}

export interface ModifyLaunchTemplateRequest {
  __type?: "ModifyLaunchTemplateRequest";
  /**
   * <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the
   *             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   *                 Idempotency</a>.</p>
   *         <p>Constraint: Maximum 128 ASCII characters.</p>
   */
  ClientToken?: string;

  /**
   * <p>The version number of the launch template to set as the default version.</p>
   */
  DefaultVersion?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually
   *             making the request, and provides an error response. If you have the required
   *             permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is
   *                 <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateId?: string;

  /**
   * <p>The name of the launch template. You must specify either the launch template ID or
   *             launch template name in the request.</p>
   */
  LaunchTemplateName?: string;
}

export namespace ModifyLaunchTemplateRequest {
  export function isa(o: any): o is ModifyLaunchTemplateRequest {
    return _smithy.isa(o, "ModifyLaunchTemplateRequest");
  }
}

export interface ModifyLaunchTemplateResult extends $MetadataBearer {
  __type?: "ModifyLaunchTemplateResult";
  /**
   * <p>Information about the launch template.</p>
   */
  LaunchTemplate?: LaunchTemplate;
}

export namespace ModifyLaunchTemplateResult {
  export function isa(o: any): o is ModifyLaunchTemplateResult {
    return _smithy.isa(o, "ModifyLaunchTemplateResult");
  }
}

/**
 * <p>Contains the parameters for ModifyNetworkInterfaceAttribute.</p>
 */
export interface ModifyNetworkInterfaceAttributeRequest {
  __type?: "ModifyNetworkInterfaceAttributeRequest";
  /**
   * <p>Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.</p>
   */
  Attachment?: NetworkInterfaceAttachmentChanges;

  /**
   * <p>A description for the network interface.</p>
   */
  Description?: AttributeValue;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.</p>
   */
  Groups?: Array<string>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;

  /**
   * <p>Indicates whether source/destination checking is enabled.
   *             A value of <code>true</code> means checking
   *             is enabled, and <code>false</code> means checking is disabled. This value
   *             must be <code>false</code> for a NAT instance to perform NAT. For more
   *             information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html">NAT
   *                 Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
   */
  SourceDestCheck?: AttributeBooleanValue;
}

export namespace ModifyNetworkInterfaceAttributeRequest {
  export function isa(o: any): o is ModifyNetworkInterfaceAttributeRequest {
    return _smithy.isa(o, "ModifyNetworkInterfaceAttributeRequest");
  }
}

/**
 * <p>Contains the parameters for ModifyReservedInstances.</p>
 */
export interface ModifyReservedInstancesRequest {
  __type?: "ModifyReservedInstancesRequest";
  /**
   * <p>A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see
   *    		<a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The IDs of the Reserved Instances to modify.</p>
   */
  ReservedInstancesIds: Array<string> | undefined;

  /**
   * <p>The configuration settings for the Reserved Instances to modify.</p>
   */
  TargetConfigurations: Array<ReservedInstancesConfiguration> | undefined;
}

export namespace ModifyReservedInstancesRequest {
  export function isa(o: any): o is ModifyReservedInstancesRequest {
    return _smithy.isa(o, "ModifyReservedInstancesRequest");
  }
}

/**
 * <p>Contains the output of ModifyReservedInstances.</p>
 */
export interface ModifyReservedInstancesResult extends $MetadataBearer {
  __type?: "ModifyReservedInstancesResult";
  /**
   * <p>The ID for the modification.</p>
   */
  ReservedInstancesModificationId?: string;
}

export namespace ModifyReservedInstancesResult {
  export function isa(o: any): o is ModifyReservedInstancesResult {
    return _smithy.isa(o, "ModifyReservedInstancesResult");
  }
}

export interface ModifySnapshotAttributeRequest {
  __type?: "ModifySnapshotAttributeRequest";
  /**
   * <p>The snapshot attribute to modify. Only volume creation permissions can be modified.</p>
   */
  Attribute?: SnapshotAttributeName | string;

  /**
   * <p>A JSON representation of the snapshot attribute modification.</p>
   */
  CreateVolumePermission?: CreateVolumePermissionModifications;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The group to modify for the snapshot.</p>
   */
  GroupNames?: Array<string>;

  /**
   * <p>The type of operation to perform to the attribute.</p>
   */
  OperationType?: OperationType | string;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId: string | undefined;

  /**
   * <p>The account ID to modify for the snapshot.</p>
   */
  UserIds?: Array<string>;
}

export namespace ModifySnapshotAttributeRequest {
  export function isa(o: any): o is ModifySnapshotAttributeRequest {
    return _smithy.isa(o, "ModifySnapshotAttributeRequest");
  }
}

/**
 * <p>Contains the parameters for ModifySpotFleetRequest.</p>
 */
export interface ModifySpotFleetRequestRequest {
  __type?: "ModifySpotFleetRequestRequest";
  /**
   * <p>Indicates whether running Spot Instances should be terminated if the target capacity of the Spot Fleet request is decreased below the current size of the Spot Fleet.</p>
   */
  ExcessCapacityTerminationPolicy?: ExcessCapacityTerminationPolicy | string;

  /**
   * <p>The number of On-Demand Instances in the fleet.</p>
   */
  OnDemandTargetCapacity?: number;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId: string | undefined;

  /**
   * <p>The size of the fleet.</p>
   */
  TargetCapacity?: number;
}

export namespace ModifySpotFleetRequestRequest {
  export function isa(o: any): o is ModifySpotFleetRequestRequest {
    return _smithy.isa(o, "ModifySpotFleetRequestRequest");
  }
}

/**
 * <p>Contains the output of ModifySpotFleetRequest.</p>
 */
export interface ModifySpotFleetRequestResponse extends $MetadataBearer {
  __type?: "ModifySpotFleetRequestResponse";
  /**
   * <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
   */
  Return?: boolean;
}

export namespace ModifySpotFleetRequestResponse {
  export function isa(o: any): o is ModifySpotFleetRequestResponse {
    return _smithy.isa(o, "ModifySpotFleetRequestResponse");
  }
}

export interface ModifySubnetAttributeRequest {
  __type?: "ModifySubnetAttributeRequest";
  /**
   * <p>Specify <code>true</code> to indicate that network interfaces created in the
   *             specified subnet should be assigned an IPv6 address. This includes a network interface
   *             that's created when launching an instance into the subnet (the instance therefore
   *             receives an IPv6 address). </p>
   *         <p>If you enable the IPv6 addressing feature for your subnet, your network interface
   *             or instance only receives an IPv6 address if it's created using version
   *                 <code>2016-11-15</code> or later of the Amazon EC2 API.</p>
   */
  AssignIpv6AddressOnCreation?: AttributeBooleanValue;

  /**
   * <p>Specify <code>true</code> to indicate that ENIs attached to instances created in the
   *             specified subnet should be assigned a public IPv4 address.</p>
   */
  MapPublicIpOnLaunch?: AttributeBooleanValue;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId: string | undefined;
}

export namespace ModifySubnetAttributeRequest {
  export function isa(o: any): o is ModifySubnetAttributeRequest {
    return _smithy.isa(o, "ModifySubnetAttributeRequest");
  }
}

export interface ModifyTrafficMirrorFilterNetworkServicesRequest {
  __type?: "ModifyTrafficMirrorFilterNetworkServicesRequest";
  /**
   * <p>The network service, for example Amazon DNS, that you want to mirror.</p>
   */
  AddNetworkServices?: Array<TrafficMirrorNetworkService | string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The network service, for example Amazon DNS, that you no longer want to mirror.</p>
   */
  RemoveNetworkServices?: Array<TrafficMirrorNetworkService | string>;

  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterId: string | undefined;
}

export namespace ModifyTrafficMirrorFilterNetworkServicesRequest {
  export function isa(
    o: any
  ): o is ModifyTrafficMirrorFilterNetworkServicesRequest {
    return _smithy.isa(o, "ModifyTrafficMirrorFilterNetworkServicesRequest");
  }
}

export interface ModifyTrafficMirrorFilterNetworkServicesResult
  extends $MetadataBearer {
  __type?: "ModifyTrafficMirrorFilterNetworkServicesResult";
  /**
   * <p>The Traffic Mirror filter that the network service is associated with.</p>
   */
  TrafficMirrorFilter?: TrafficMirrorFilter;
}

export namespace ModifyTrafficMirrorFilterNetworkServicesResult {
  export function isa(
    o: any
  ): o is ModifyTrafficMirrorFilterNetworkServicesResult {
    return _smithy.isa(o, "ModifyTrafficMirrorFilterNetworkServicesResult");
  }
}

export interface ModifyTrafficMirrorFilterRuleRequest {
  __type?: "ModifyTrafficMirrorFilterRuleRequest";
  /**
   * <p>The description to assign to the Traffic Mirror rule.</p>
   */
  Description?: string;

  /**
   * <p>The destination CIDR block to assign to the Traffic Mirror rule.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The destination ports that are associated with the Traffic Mirror rule.</p>
   */
  DestinationPortRange?: TrafficMirrorPortRangeRequest;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The protocol, for example TCP, to assign to the Traffic Mirror rule.</p>
   */
  Protocol?: number;

  /**
   * <p>The properties that you want to remove from the Traffic Mirror filter rule.</p>
   *          <p>When you remove a property from a Traffic Mirror filter rule, the property is set to the default.</p>
   */
  RemoveFields?: Array<TrafficMirrorFilterRuleField | string>;

  /**
   * <p>The action to assign to the rule.</p>
   */
  RuleAction?: TrafficMirrorRuleAction | string;

  /**
   * <p>The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given
   *          direction. The rules are processed in ascending order by rule number.</p>
   */
  RuleNumber?: number;

  /**
   * <p>The source CIDR block to assign to the Traffic Mirror rule.</p>
   */
  SourceCidrBlock?: string;

  /**
   * <p>The port range to assign to the Traffic Mirror rule.</p>
   */
  SourcePortRange?: TrafficMirrorPortRangeRequest;

  /**
   * <p>The type of traffic (<code>ingress</code> | <code>egress</code>) to assign to the rule.</p>
   */
  TrafficDirection?: TrafficDirection | string;

  /**
   * <p>The ID of the Traffic Mirror rule.</p>
   */
  TrafficMirrorFilterRuleId: string | undefined;
}

export namespace ModifyTrafficMirrorFilterRuleRequest {
  export function isa(o: any): o is ModifyTrafficMirrorFilterRuleRequest {
    return _smithy.isa(o, "ModifyTrafficMirrorFilterRuleRequest");
  }
}

export interface ModifyTrafficMirrorFilterRuleResult extends $MetadataBearer {
  __type?: "ModifyTrafficMirrorFilterRuleResult";
  /**
   * <p>Modifies a Traffic Mirror rule.</p>
   */
  TrafficMirrorFilterRule?: TrafficMirrorFilterRule;
}

export namespace ModifyTrafficMirrorFilterRuleResult {
  export function isa(o: any): o is ModifyTrafficMirrorFilterRuleResult {
    return _smithy.isa(o, "ModifyTrafficMirrorFilterRuleResult");
  }
}

export interface ModifyTrafficMirrorSessionRequest {
  __type?: "ModifyTrafficMirrorSessionRequest";
  /**
   * <p>The description to assign to the Traffic Mirror session.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The number of bytes in each packet to mirror. These are bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet.</p>
   */
  PacketLength?: number;

  /**
   * <p>The properties that you want to remove from the Traffic Mirror session.</p>
   *          <p>When you remove a property from a Traffic Mirror session, the property is set to the default.</p>
   */
  RemoveFields?: Array<TrafficMirrorSessionField | string>;

  /**
   * <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p>
   *          <p>Valid values are 1-32766.</p>
   */
  SessionNumber?: number;

  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterId?: string;

  /**
   * <p>The ID of the Traffic Mirror session.</p>
   */
  TrafficMirrorSessionId: string | undefined;

  /**
   * <p>The Traffic Mirror target. The target must be in the same VPC as the source, or have a VPC peering connection with the source.</p>
   */
  TrafficMirrorTargetId?: string;

  /**
   * <p>The virtual network ID of the Traffic Mirror session.</p>
   */
  VirtualNetworkId?: number;
}

export namespace ModifyTrafficMirrorSessionRequest {
  export function isa(o: any): o is ModifyTrafficMirrorSessionRequest {
    return _smithy.isa(o, "ModifyTrafficMirrorSessionRequest");
  }
}

export interface ModifyTrafficMirrorSessionResult extends $MetadataBearer {
  __type?: "ModifyTrafficMirrorSessionResult";
  /**
   * <p>Information about the Traffic Mirror session.</p>
   */
  TrafficMirrorSession?: TrafficMirrorSession;
}

export namespace ModifyTrafficMirrorSessionResult {
  export function isa(o: any): o is ModifyTrafficMirrorSessionResult {
    return _smithy.isa(o, "ModifyTrafficMirrorSessionResult");
  }
}

export interface ModifyTransitGatewayVpcAttachmentRequest {
  __type?: "ModifyTransitGatewayVpcAttachmentRequest";
  /**
   * <p>The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.</p>
   */
  AddSubnetIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The new VPC attachment options.</p>
   *          <note>
   *             <p>You cannot modify the IPv6 options.</p>
   *          </note>
   */
  Options?: ModifyTransitGatewayVpcAttachmentRequestOptions;

  /**
   * <p>The IDs of one or more subnets to remove.</p>
   */
  RemoveSubnetIds?: Array<string>;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace ModifyTransitGatewayVpcAttachmentRequest {
  export function isa(o: any): o is ModifyTransitGatewayVpcAttachmentRequest {
    return _smithy.isa(o, "ModifyTransitGatewayVpcAttachmentRequest");
  }
}

/**
 * <p>Describes the options for a VPC attachment.</p>
 */
export interface ModifyTransitGatewayVpcAttachmentRequestOptions {
  __type?: "ModifyTransitGatewayVpcAttachmentRequestOptions";
  /**
   * <p>Enable or disable DNS support. The default is <code>enable</code>.</p>
   */
  DnsSupport?: DnsSupportValue | string;

  /**
   * <p>Enable or disable IPv6 support. The default is <code>enable</code>.</p>
   */
  Ipv6Support?: Ipv6SupportValue | string;
}

export namespace ModifyTransitGatewayVpcAttachmentRequestOptions {
  export function isa(
    o: any
  ): o is ModifyTransitGatewayVpcAttachmentRequestOptions {
    return _smithy.isa(o, "ModifyTransitGatewayVpcAttachmentRequestOptions");
  }
}

export interface ModifyTransitGatewayVpcAttachmentResult
  extends $MetadataBearer {
  __type?: "ModifyTransitGatewayVpcAttachmentResult";
  /**
   * <p>Information about the modified attachment.</p>
   */
  TransitGatewayVpcAttachment?: TransitGatewayVpcAttachment;
}

export namespace ModifyTransitGatewayVpcAttachmentResult {
  export function isa(o: any): o is ModifyTransitGatewayVpcAttachmentResult {
    return _smithy.isa(o, "ModifyTransitGatewayVpcAttachmentResult");
  }
}

export interface ModifyVolumeAttributeRequest {
  __type?: "ModifyVolumeAttributeRequest";
  /**
   * <p>Indicates whether the volume should be auto-enabled for I/O operations.</p>
   */
  AutoEnableIO?: AttributeBooleanValue;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId: string | undefined;
}

export namespace ModifyVolumeAttributeRequest {
  export function isa(o: any): o is ModifyVolumeAttributeRequest {
    return _smithy.isa(o, "ModifyVolumeAttributeRequest");
  }
}

export interface ModifyVolumeRequest {
  __type?: "ModifyVolumeRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The target IOPS rate of the volume.</p>
   *          <p>This is only valid for Provisioned IOPS SSD (<code>io1</code>) volumes. For more
   *       information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html#EBSVolumeTypes_piops">Provisioned IOPS SSD (io1)
   *         Volumes</a>.</p>
   *          <p>Default: If no IOPS value is specified, the existing value is retained.</p>
   */
  Iops?: number;

  /**
   * <p>The target size of the volume, in GiB. The target volume size must be greater than or
   *       equal to than the existing size of the volume. For information about available EBS volume
   *       sizes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume
   *         Types</a>.</p>
   *          <p>Default: If no size is specified, the existing size is retained.</p>
   */
  Size?: number;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId: string | undefined;

  /**
   * <p>The target EBS volume type of the volume.</p>
   *          <p>Default: If no type is specified, the existing type is retained.</p>
   */
  VolumeType?: VolumeType | string;
}

export namespace ModifyVolumeRequest {
  export function isa(o: any): o is ModifyVolumeRequest {
    return _smithy.isa(o, "ModifyVolumeRequest");
  }
}

export interface ModifyVolumeResult extends $MetadataBearer {
  __type?: "ModifyVolumeResult";
  /**
   * <p>Information about the volume modification.</p>
   */
  VolumeModification?: VolumeModification;
}

export namespace ModifyVolumeResult {
  export function isa(o: any): o is ModifyVolumeResult {
    return _smithy.isa(o, "ModifyVolumeResult");
  }
}

export interface ModifyVpcAttributeRequest {
  __type?: "ModifyVpcAttributeRequest";
  /**
   * <p>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.</p>
   *          <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.</p>
   */
  EnableDnsHostnames?: AttributeBooleanValue;

  /**
   * <p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to
   * 			the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP
   * 			address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon
   * 			provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is
   * 			not enabled.</p>
   *          <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>
   */
  EnableDnsSupport?: AttributeBooleanValue;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace ModifyVpcAttributeRequest {
  export function isa(o: any): o is ModifyVpcAttributeRequest {
    return _smithy.isa(o, "ModifyVpcAttributeRequest");
  }
}

export interface ModifyVpcEndpointConnectionNotificationRequest {
  __type?: "ModifyVpcEndpointConnectionNotificationRequest";
  /**
   * <p>One or more events for the endpoint. Valid values are <code>Accept</code>,
   *                 <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.</p>
   */
  ConnectionEvents?: Array<string>;

  /**
   * <p>The ARN for the SNS topic for the notification.</p>
   */
  ConnectionNotificationArn?: string;

  /**
   * <p>The ID of the notification.</p>
   */
  ConnectionNotificationId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace ModifyVpcEndpointConnectionNotificationRequest {
  export function isa(
    o: any
  ): o is ModifyVpcEndpointConnectionNotificationRequest {
    return _smithy.isa(o, "ModifyVpcEndpointConnectionNotificationRequest");
  }
}

export interface ModifyVpcEndpointConnectionNotificationResult
  extends $MetadataBearer {
  __type?: "ModifyVpcEndpointConnectionNotificationResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  ReturnValue?: boolean;
}

export namespace ModifyVpcEndpointConnectionNotificationResult {
  export function isa(
    o: any
  ): o is ModifyVpcEndpointConnectionNotificationResult {
    return _smithy.isa(o, "ModifyVpcEndpointConnectionNotificationResult");
  }
}

/**
 * <p>Contains the parameters for ModifyVpcEndpoint.</p>
 */
export interface ModifyVpcEndpointRequest {
  __type?: "ModifyVpcEndpointRequest";
  /**
   * <p>(Gateway endpoint) One or more route tables IDs to associate with the endpoint.</p>
   */
  AddRouteTableIds?: Array<string>;

  /**
   * <p>(Interface endpoint) One or more security group IDs to associate with the network interface.</p>
   */
  AddSecurityGroupIds?: Array<string>;

  /**
   * <p>(Interface endpoint) One or more subnet IDs in which to serve the endpoint.</p>
   */
  AddSubnetIds?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>A policy to attach to the endpoint that controls access to the service. The policy must
   *             be in valid JSON format.</p>
   */
  PolicyDocument?: string;

  /**
   * <p>(Interface endpoint) Indicates whether a private hosted zone is associated with the
   *             VPC.</p>
   */
  PrivateDnsEnabled?: boolean;

  /**
   * <p>(Gateway endpoint) One or more route table IDs to disassociate from the endpoint.</p>
   */
  RemoveRouteTableIds?: Array<string>;

  /**
   * <p>(Interface endpoint) One or more security group IDs to disassociate from the network interface.</p>
   */
  RemoveSecurityGroupIds?: Array<string>;

  /**
   * <p>(Interface endpoint) One or more subnets IDs in which to remove the endpoint.</p>
   */
  RemoveSubnetIds?: Array<string>;

  /**
   * <p>(Gateway endpoint) Specify <code>true</code> to reset the policy document to the
   *             default policy. The default policy allows full access to the service.</p>
   */
  ResetPolicy?: boolean;

  /**
   * <p>The ID of the endpoint.</p>
   */
  VpcEndpointId: string | undefined;
}

export namespace ModifyVpcEndpointRequest {
  export function isa(o: any): o is ModifyVpcEndpointRequest {
    return _smithy.isa(o, "ModifyVpcEndpointRequest");
  }
}

export interface ModifyVpcEndpointResult extends $MetadataBearer {
  __type?: "ModifyVpcEndpointResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace ModifyVpcEndpointResult {
  export function isa(o: any): o is ModifyVpcEndpointResult {
    return _smithy.isa(o, "ModifyVpcEndpointResult");
  }
}

export interface ModifyVpcEndpointServiceConfigurationRequest {
  __type?: "ModifyVpcEndpointServiceConfigurationRequest";
  /**
   * <p>Indicates whether requests to create an endpoint to your service must be accepted.</p>
   */
  AcceptanceRequired?: boolean;

  /**
   * <p>The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service
   *             configuration.</p>
   */
  AddNetworkLoadBalancerArns?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The private DNS name to assign to the endpoint service.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service
   *             configuration.</p>
   */
  RemoveNetworkLoadBalancerArns?: Array<string>;

  /**
   * <p>Removes the private DNS name of the endpoint service.</p>
   */
  RemovePrivateDnsName?: boolean;

  /**
   * <p>The ID of the service.</p>
   */
  ServiceId: string | undefined;
}

export namespace ModifyVpcEndpointServiceConfigurationRequest {
  export function isa(
    o: any
  ): o is ModifyVpcEndpointServiceConfigurationRequest {
    return _smithy.isa(o, "ModifyVpcEndpointServiceConfigurationRequest");
  }
}

export interface ModifyVpcEndpointServiceConfigurationResult
  extends $MetadataBearer {
  __type?: "ModifyVpcEndpointServiceConfigurationResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace ModifyVpcEndpointServiceConfigurationResult {
  export function isa(
    o: any
  ): o is ModifyVpcEndpointServiceConfigurationResult {
    return _smithy.isa(o, "ModifyVpcEndpointServiceConfigurationResult");
  }
}

export interface ModifyVpcEndpointServicePermissionsRequest {
  __type?: "ModifyVpcEndpointServicePermissionsRequest";
  /**
   * <p>The Amazon Resource Names (ARN) of one or more principals.
   * 	        Permissions are granted to the principals in this list.
   * 	        To grant permissions to all principals, specify an asterisk (*).</p>
   */
  AddAllowedPrincipals?: Array<string>;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The Amazon Resource Names (ARN) of one or more principals.
   * 	        Permissions are revoked for principals in this list.</p>
   */
  RemoveAllowedPrincipals?: Array<string>;

  /**
   * <p>The ID of the service.</p>
   */
  ServiceId: string | undefined;
}

export namespace ModifyVpcEndpointServicePermissionsRequest {
  export function isa(o: any): o is ModifyVpcEndpointServicePermissionsRequest {
    return _smithy.isa(o, "ModifyVpcEndpointServicePermissionsRequest");
  }
}

export interface ModifyVpcEndpointServicePermissionsResult
  extends $MetadataBearer {
  __type?: "ModifyVpcEndpointServicePermissionsResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  ReturnValue?: boolean;
}

export namespace ModifyVpcEndpointServicePermissionsResult {
  export function isa(o: any): o is ModifyVpcEndpointServicePermissionsResult {
    return _smithy.isa(o, "ModifyVpcEndpointServicePermissionsResult");
  }
}

export interface ModifyVpcPeeringConnectionOptionsRequest {
  __type?: "ModifyVpcPeeringConnectionOptionsRequest";
  /**
   * <p>The VPC peering connection options for the accepter VPC.</p>
   */
  AccepterPeeringConnectionOptions?: PeeringConnectionOptionsRequest;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The VPC peering connection options for the requester VPC.</p>
   */
  RequesterPeeringConnectionOptions?: PeeringConnectionOptionsRequest;

  /**
   * <p>The ID of the VPC peering connection.</p>
   */
  VpcPeeringConnectionId: string | undefined;
}

export namespace ModifyVpcPeeringConnectionOptionsRequest {
  export function isa(o: any): o is ModifyVpcPeeringConnectionOptionsRequest {
    return _smithy.isa(o, "ModifyVpcPeeringConnectionOptionsRequest");
  }
}

export interface ModifyVpcPeeringConnectionOptionsResult
  extends $MetadataBearer {
  __type?: "ModifyVpcPeeringConnectionOptionsResult";
  /**
   * <p>Information about the VPC peering connection options for the accepter VPC.</p>
   */
  AccepterPeeringConnectionOptions?: PeeringConnectionOptions;

  /**
   * <p>Information about the VPC peering connection options for the requester VPC.</p>
   */
  RequesterPeeringConnectionOptions?: PeeringConnectionOptions;
}

export namespace ModifyVpcPeeringConnectionOptionsResult {
  export function isa(o: any): o is ModifyVpcPeeringConnectionOptionsResult {
    return _smithy.isa(o, "ModifyVpcPeeringConnectionOptionsResult");
  }
}

export interface ModifyVpcTenancyRequest {
  __type?: "ModifyVpcTenancyRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The instance tenancy attribute for the VPC. </p>
   */
  InstanceTenancy: VpcTenancy | string | undefined;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId: string | undefined;
}

export namespace ModifyVpcTenancyRequest {
  export function isa(o: any): o is ModifyVpcTenancyRequest {
    return _smithy.isa(o, "ModifyVpcTenancyRequest");
  }
}

export interface ModifyVpcTenancyResult extends $MetadataBearer {
  __type?: "ModifyVpcTenancyResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, returns an
   *             error.</p>
   */
  ReturnValue?: boolean;
}

export namespace ModifyVpcTenancyResult {
  export function isa(o: any): o is ModifyVpcTenancyResult {
    return _smithy.isa(o, "ModifyVpcTenancyResult");
  }
}

export interface ModifyVpnConnectionRequest {
  __type?: "ModifyVpnConnectionRequest";
  /**
   * <p>The ID of the customer gateway at your end of the VPN connection.</p>
   */
  CustomerGatewayId?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of the VPN connection.</p>
   */
  VpnConnectionId: string | undefined;

  /**
   * <p>The ID of the virtual private gateway at the AWS side of the VPN connection.</p>
   */
  VpnGatewayId?: string;
}

export namespace ModifyVpnConnectionRequest {
  export function isa(o: any): o is ModifyVpnConnectionRequest {
    return _smithy.isa(o, "ModifyVpnConnectionRequest");
  }
}

export interface ModifyVpnConnectionResult extends $MetadataBearer {
  __type?: "ModifyVpnConnectionResult";
  /**
   * <p>Describes a VPN connection.</p>
   */
  VpnConnection?: VpnConnection;
}

export namespace ModifyVpnConnectionResult {
  export function isa(o: any): o is ModifyVpnConnectionResult {
    return _smithy.isa(o, "ModifyVpnConnectionResult");
  }
}

export interface ModifyVpnTunnelCertificateRequest {
  __type?: "ModifyVpnTunnelCertificateRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AWS Site-to-Site VPN connection.</p>
   */
  VpnConnectionId: string | undefined;

  /**
   * <p>The external IP address of the VPN tunnel.</p>
   */
  VpnTunnelOutsideIpAddress: string | undefined;
}

export namespace ModifyVpnTunnelCertificateRequest {
  export function isa(o: any): o is ModifyVpnTunnelCertificateRequest {
    return _smithy.isa(o, "ModifyVpnTunnelCertificateRequest");
  }
}

export interface ModifyVpnTunnelCertificateResult extends $MetadataBearer {
  __type?: "ModifyVpnTunnelCertificateResult";
  /**
   * <p>Describes a VPN connection.</p>
   */
  VpnConnection?: VpnConnection;
}

export namespace ModifyVpnTunnelCertificateResult {
  export function isa(o: any): o is ModifyVpnTunnelCertificateResult {
    return _smithy.isa(o, "ModifyVpnTunnelCertificateResult");
  }
}

export interface ModifyVpnTunnelOptionsRequest {
  __type?: "ModifyVpnTunnelOptionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The tunnel options to modify.</p>
   */
  TunnelOptions: ModifyVpnTunnelOptionsSpecification | undefined;

  /**
   * <p>The ID of the AWS Site-to-Site VPN connection.</p>
   */
  VpnConnectionId: string | undefined;

  /**
   * <p>The external IP address of the VPN tunnel.</p>
   */
  VpnTunnelOutsideIpAddress: string | undefined;
}

export namespace ModifyVpnTunnelOptionsRequest {
  export function isa(o: any): o is ModifyVpnTunnelOptionsRequest {
    return _smithy.isa(o, "ModifyVpnTunnelOptionsRequest");
  }
}

export interface ModifyVpnTunnelOptionsResult extends $MetadataBearer {
  __type?: "ModifyVpnTunnelOptionsResult";
  /**
   * <p>Describes a VPN connection.</p>
   */
  VpnConnection?: VpnConnection;
}

export namespace ModifyVpnTunnelOptionsResult {
  export function isa(o: any): o is ModifyVpnTunnelOptionsResult {
    return _smithy.isa(o, "ModifyVpnTunnelOptionsResult");
  }
}

/**
 * <p>The AWS Site-to-Site VPN tunnel options to modify.</p>
 */
export interface ModifyVpnTunnelOptionsSpecification {
  __type?: "ModifyVpnTunnelOptionsSpecification";
  /**
   * <p>The number of seconds after which a DPD timeout occurs.</p>
   *         <p>Constraints: A value between 0 and 30.</p>
   *         <p>Default: <code>30</code>
   *          </p>
   */
  DPDTimeoutSeconds?: number;

  /**
   * <p>The IKE versions that are permitted for the VPN tunnel.</p>
   *         <p>Valid values: <code>ikev1</code> | <code>ikev2</code>
   *          </p>
   */
  IKEVersions?: Array<IKEVersionsRequestListValue>;

  /**
   * <p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p>
   *         <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>22</code> | <code>23</code> | <code>24</code>
   *          </p>
   */
  Phase1DHGroupNumbers?: Array<Phase1DHGroupNumbersRequestListValue>;

  /**
   * <p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p>
   *         <p>Valid values: <code>AES128</code> | <code>AES256</code>
   *          </p>
   */
  Phase1EncryptionAlgorithms?: Array<
    Phase1EncryptionAlgorithmsRequestListValue
  >;

  /**
   * <p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p>
   *         <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code>
   *          </p>
   */
  Phase1IntegrityAlgorithms?: Array<Phase1IntegrityAlgorithmsRequestListValue>;

  /**
   * <p>The lifetime for phase 1 of the IKE negotiation, in seconds.</p>
   *         <p>Constraints: A value between 900 and 28,800.</p>
   *         <p>Default: <code>28800</code>
   *          </p>
   */
  Phase1LifetimeSeconds?: number;

  /**
   * <p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p>
   *         <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>22</code> | <code>23</code> | <code>24</code>
   *          </p>
   */
  Phase2DHGroupNumbers?: Array<Phase2DHGroupNumbersRequestListValue>;

  /**
   * <p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p>
   *         <p>Valid values: <code>AES128</code> | <code>AES256</code>
   *          </p>
   */
  Phase2EncryptionAlgorithms?: Array<
    Phase2EncryptionAlgorithmsRequestListValue
  >;

  /**
   * <p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p>
   *         <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code>
   *          </p>
   */
  Phase2IntegrityAlgorithms?: Array<Phase2IntegrityAlgorithmsRequestListValue>;

  /**
   * <p>The lifetime for phase 2 of the IKE negotiation, in seconds.</p>
   *         <p>Constraints: A value between 900 and 3,600. The value must be less than the value for <code>Phase1LifetimeSeconds</code>.</p>
   *         <p>Default: <code>3600</code>
   *          </p>
   */
  Phase2LifetimeSeconds?: number;

  /**
   * <p>The pre-shared key (PSK) to establish initial authentication between the virtual
   *             private gateway and the customer gateway.</p>
   *         <p>Constraints: Allowed characters are alphanumeric characters, periods (.), and
   *             underscores (_). Must be between 8 and 64 characters in length and cannot start with
   *             zero (0).</p>
   */
  PreSharedKey?: string;

  /**
   * <p>The percentage of the rekey window (determined by <code>RekeyMarginTimeSeconds</code>) during which the rekey time is randomly selected.</p>
   *         <p>Constraints: A value between 0 and 100.</p>
   *         <p>Default: <code>100</code>
   *          </p>
   */
  RekeyFuzzPercentage?: number;

  /**
   * <p>The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for <code>RekeyFuzzPercentage</code>.</p>
   *         <p>Constraints: A value between 60 and half of <code>Phase2LifetimeSeconds</code>.</p>
   *         <p>Default: <code>540</code>
   *          </p>
   */
  RekeyMarginTimeSeconds?: number;

  /**
   * <p>The number of packets in an IKE replay window.</p>
   *         <p>Constraints: A value between 64 and 2048.</p>
   *         <p>Default: <code>1024</code>
   *          </p>
   */
  ReplayWindowSize?: number;

  /**
   * <p>The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique
   *             across all VPN connections that use the same virtual private gateway. </p>
   *         <p>Constraints: A size /30 CIDR block from the <code>169.254.0.0/16</code> range. The
   *             following CIDR blocks are reserved and cannot be used:</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>169.254.0.0/30</code>
   *                </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>169.254.1.0/30</code>
   *                </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>169.254.2.0/30</code>
   *                </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>169.254.3.0/30</code>
   *                </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>169.254.4.0/30</code>
   *                </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>169.254.5.0/30</code>
   *                </p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>169.254.169.252/30</code>
   *                </p>
   *             </li>
   *          </ul>
   */
  TunnelInsideCidr?: string;
}

export namespace ModifyVpnTunnelOptionsSpecification {
  export function isa(o: any): o is ModifyVpnTunnelOptionsSpecification {
    return _smithy.isa(o, "ModifyVpnTunnelOptionsSpecification");
  }
}

export interface MonitorInstancesRequest {
  __type?: "MonitorInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the instances.</p>
   */
  InstanceIds: Array<string> | undefined;
}

export namespace MonitorInstancesRequest {
  export function isa(o: any): o is MonitorInstancesRequest {
    return _smithy.isa(o, "MonitorInstancesRequest");
  }
}

export interface MonitorInstancesResult extends $MetadataBearer {
  __type?: "MonitorInstancesResult";
  /**
   * <p>The monitoring information.</p>
   */
  InstanceMonitorings?: Array<InstanceMonitoring>;
}

export namespace MonitorInstancesResult {
  export function isa(o: any): o is MonitorInstancesResult {
    return _smithy.isa(o, "MonitorInstancesResult");
  }
}

/**
 * <p>Describes the monitoring of an instance.</p>
 */
export interface Monitoring {
  __type?: "Monitoring";
  /**
   * <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is
   *             enabled.</p>
   */
  State?: MonitoringState | string;
}

export namespace Monitoring {
  export function isa(o: any): o is Monitoring {
    return _smithy.isa(o, "Monitoring");
  }
}

export type MonitoringState = "disabled" | "disabling" | "enabled" | "pending";

export interface MoveAddressToVpcRequest {
  __type?: "MoveAddressToVpcRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The Elastic IP address.</p>
   */
  PublicIp: string | undefined;
}

export namespace MoveAddressToVpcRequest {
  export function isa(o: any): o is MoveAddressToVpcRequest {
    return _smithy.isa(o, "MoveAddressToVpcRequest");
  }
}

export interface MoveAddressToVpcResult extends $MetadataBearer {
  __type?: "MoveAddressToVpcResult";
  /**
   * <p>The allocation ID for the Elastic IP address.</p>
   */
  AllocationId?: string;

  /**
   * <p>The status of the move of the IP address.</p>
   */
  Status?: Status | string;
}

export namespace MoveAddressToVpcResult {
  export function isa(o: any): o is MoveAddressToVpcResult {
    return _smithy.isa(o, "MoveAddressToVpcResult");
  }
}

export type MoveStatus = "movingToVpc" | "restoringToClassic";

/**
 * <p>Describes the status of a moving Elastic IP address.</p>
 */
export interface MovingAddressStatus {
  __type?: "MovingAddressStatus";
  /**
   * <p>The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.</p>
   */
  MoveStatus?: MoveStatus | string;

  /**
   * <p>The Elastic IP address.</p>
   */
  PublicIp?: string;
}

export namespace MovingAddressStatus {
  export function isa(o: any): o is MovingAddressStatus {
    return _smithy.isa(o, "MovingAddressStatus");
  }
}

export type MulticastSupportValue = "disable" | "enable";

/**
 * <p>Describes a NAT gateway.</p>
 */
export interface NatGateway {
  __type?: "NatGateway";
  /**
   * <p>The date and time the NAT gateway was created.</p>
   */
  CreateTime?: Date;

  /**
   * <p>The date and time the NAT gateway was deleted, if applicable.</p>
   */
  DeleteTime?: Date;

  /**
   * <p>If the NAT gateway could not be created, specifies the error code for the failure.
   *         (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code> |
   *          <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code> |
   *          <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)</p>
   */
  FailureCode?: string;

  /**
   * <p>If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.</p>
   *          <ul>
   *             <li>
   *                <p>For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"</p>
   *             </li>
   *             <li>
   *                <p>For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"</p>
   *             </li>
   *             <li>
   *                <p>For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"</p>
   *             </li>
   *             <li>
   *                <p>For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"</p>
   *             </li>
   *             <li>
   *                <p>For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."</p>
   *             </li>
   *             <li>
   *                <p>For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."</p>
   *             </li>
   *          </ul>
   */
  FailureMessage?: string;

  /**
   * <p>Information about the IP addresses and network interface associated with the NAT gateway.</p>
   */
  NatGatewayAddresses?: Array<NatGatewayAddress>;

  /**
   * <p>The ID of the NAT gateway.</p>
   */
  NatGatewayId?: string;

  /**
   * <p>Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
   */
  ProvisionedBandwidth?: ProvisionedBandwidth;

  /**
   * <p>The state of the NAT gateway.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>pending</code>: The NAT gateway is being created and is not ready to process
   *           traffic.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>failed</code>: The NAT gateway could not be created. Check the
   *             <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>available</code>: The NAT gateway is able to process traffic. This status remains
   *           until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>deleting</code>: The NAT gateway is in the process of being terminated and may
   *           still be processing traffic.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>deleted</code>: The NAT gateway has been terminated and is no longer processing
   *           traffic.</p>
   *             </li>
   *          </ul>
   */
  State?: NatGatewayState | string;

  /**
   * <p>The ID of the subnet in which the NAT gateway is located.</p>
   */
  SubnetId?: string;

  /**
   * <p>The tags for the NAT gateway.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC in which the NAT gateway is located.</p>
   */
  VpcId?: string;
}

export namespace NatGateway {
  export function isa(o: any): o is NatGateway {
    return _smithy.isa(o, "NatGateway");
  }
}

/**
 * <p>Describes the IP addresses and network interface associated with a NAT gateway.</p>
 */
export interface NatGatewayAddress {
  __type?: "NatGatewayAddress";
  /**
   * <p>The allocation ID of the Elastic IP address that's associated with the NAT gateway.</p>
   */
  AllocationId?: string;

  /**
   * <p>The ID of the network interface associated with the NAT gateway.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The private IP address associated with the Elastic IP address.</p>
   */
  PrivateIp?: string;

  /**
   * <p>The Elastic IP address associated with the NAT gateway.</p>
   */
  PublicIp?: string;
}

export namespace NatGatewayAddress {
  export function isa(o: any): o is NatGatewayAddress {
    return _smithy.isa(o, "NatGatewayAddress");
  }
}

export enum NatGatewayState {
  AVAILABLE = "available",
  DELETED = "deleted",
  DELETING = "deleting",
  FAILED = "failed",
  PENDING = "pending"
}

/**
 * <p>Describes a network ACL.</p>
 */
export interface NetworkAcl {
  __type?: "NetworkAcl";
  /**
   * <p>Any associations between the network ACL and one or more subnets</p>
   */
  Associations?: Array<NetworkAclAssociation>;

  /**
   * <p>One or more entries (rules) in the network ACL.</p>
   */
  Entries?: Array<NetworkAclEntry>;

  /**
   * <p>Indicates whether this is the default network ACL for the VPC.</p>
   */
  IsDefault?: boolean;

  /**
   * <p>The ID of the network ACL.</p>
   */
  NetworkAclId?: string;

  /**
   * <p>The ID of the AWS account that owns the network ACL.</p>
   */
  OwnerId?: string;

  /**
   * <p>Any tags assigned to the network ACL.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC for the network ACL.</p>
   */
  VpcId?: string;
}

export namespace NetworkAcl {
  export function isa(o: any): o is NetworkAcl {
    return _smithy.isa(o, "NetworkAcl");
  }
}

/**
 * <p>Describes an association between a network ACL and a subnet.</p>
 */
export interface NetworkAclAssociation {
  __type?: "NetworkAclAssociation";
  /**
   * <p>The ID of the association between a network ACL and a subnet.</p>
   */
  NetworkAclAssociationId?: string;

  /**
   * <p>The ID of the network ACL.</p>
   */
  NetworkAclId?: string;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;
}

export namespace NetworkAclAssociation {
  export function isa(o: any): o is NetworkAclAssociation {
    return _smithy.isa(o, "NetworkAclAssociation");
  }
}

/**
 * <p>Describes an entry in a network ACL.</p>
 */
export interface NetworkAclEntry {
  __type?: "NetworkAclEntry";
  /**
   * <p>The IPv4 network range to allow or deny, in CIDR notation.</p>
   */
  CidrBlock?: string;

  /**
   * <p>Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).</p>
   */
  Egress?: boolean;

  /**
   * <p>ICMP protocol: The ICMP type and code.</p>
   */
  IcmpTypeCode?: IcmpTypeCode;

  /**
   * <p>The IPv6 network range to allow or deny, in CIDR notation.</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>TCP or UDP protocols: The range of ports the rule applies to.</p>
   */
  PortRange?: PortRange;

  /**
   * <p>The protocol number. A value of "-1" means all protocols.</p>
   */
  Protocol?: string;

  /**
   * <p>Indicates whether to allow or deny the traffic that matches the rule.</p>
   */
  RuleAction?: RuleAction | string;

  /**
   * <p>The rule number for the entry. ACL entries are processed in ascending order by rule number.</p>
   */
  RuleNumber?: number;
}

export namespace NetworkAclEntry {
  export function isa(o: any): o is NetworkAclEntry {
    return _smithy.isa(o, "NetworkAclEntry");
  }
}

/**
 * <p>Describes the networking features of the instance type.</p>
 */
export interface NetworkInfo {
  __type?: "NetworkInfo";
  /**
   * <p>Indicates whether Elastic Network Adapter (ENA) is supported.</p>
   */
  EnaSupport?: EnaSupport | string;

  /**
   * <p>The maximum number of IPv4 addresses per network interface.</p>
   */
  Ipv4AddressesPerInterface?: number;

  /**
   * <p>The maximum number of IPv6 addresses per network interface.</p>
   */
  Ipv6AddressesPerInterface?: number;

  /**
   * <p>Indicates whether IPv6 is supported.</p>
   */
  Ipv6Supported?: boolean;

  /**
   * <p>The maximum number of network interfaces for the instance type.</p>
   */
  MaximumNetworkInterfaces?: number;

  /**
   * <p>Describes the network performance.</p>
   */
  NetworkPerformance?: string;
}

export namespace NetworkInfo {
  export function isa(o: any): o is NetworkInfo {
    return _smithy.isa(o, "NetworkInfo");
  }
}

/**
 * <p>Describes a network interface.</p>
 */
export interface NetworkInterface {
  __type?: "NetworkInterface";
  /**
   * <p>The association information for an Elastic IP address (IPv4) associated with the network interface.</p>
   */
  Association?: NetworkInterfaceAssociation;

  /**
   * <p>The network interface attachment.</p>
   */
  Attachment?: NetworkInterfaceAttachment;

  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>A description.</p>
   */
  Description?: string;

  /**
   * <p>Any security groups for the network interface.</p>
   */
  Groups?: Array<GroupIdentifier>;

  /**
   * <p>The type of network interface.</p>
   */
  InterfaceType?: NetworkInterfaceType | string;

  /**
   * <p>The IPv6 addresses associated with the network interface.</p>
   */
  Ipv6Addresses?: Array<NetworkInterfaceIpv6Address>;

  /**
   * <p>The MAC address.</p>
   */
  MacAddress?: string;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The AWS account ID of the owner of the network interface.</p>
   */
  OwnerId?: string;

  /**
   * <p>The private DNS name.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>The IPv4 address of the network interface within the subnet.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>The private IPv4 addresses associated with the network interface.</p>
   */
  PrivateIpAddresses?: Array<NetworkInterfacePrivateIpAddress>;

  /**
   * <p>The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).</p>
   */
  RequesterId?: string;

  /**
   * <p>Indicates whether the network interface is being managed by AWS.</p>
   */
  RequesterManaged?: boolean;

  /**
   * <p>Indicates whether traffic to or from the instance is validated.</p>
   */
  SourceDestCheck?: boolean;

  /**
   * <p>The status of the network interface.</p>
   */
  Status?: NetworkInterfaceStatus | string;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;

  /**
   * <p>Any tags assigned to the network interface.</p>
   */
  TagSet?: Array<Tag>;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace NetworkInterface {
  export function isa(o: any): o is NetworkInterface {
    return _smithy.isa(o, "NetworkInterface");
  }
}

/**
 * <p>Describes association information for an Elastic IP address (IPv4 only).</p>
 */
export interface NetworkInterfaceAssociation {
  __type?: "NetworkInterfaceAssociation";
  /**
   * <p>The allocation ID.</p>
   */
  AllocationId?: string;

  /**
   * <p>The association ID.</p>
   */
  AssociationId?: string;

  /**
   * <p>The ID of the Elastic IP address owner.</p>
   */
  IpOwnerId?: string;

  /**
   * <p>The public DNS name.</p>
   */
  PublicDnsName?: string;

  /**
   * <p>The address of the Elastic IP address bound to the network interface.</p>
   */
  PublicIp?: string;
}

export namespace NetworkInterfaceAssociation {
  export function isa(o: any): o is NetworkInterfaceAssociation {
    return _smithy.isa(o, "NetworkInterfaceAssociation");
  }
}

/**
 * <p>Describes a network interface attachment.</p>
 */
export interface NetworkInterfaceAttachment {
  __type?: "NetworkInterfaceAttachment";
  /**
   * <p>The timestamp indicating when the attachment initiated.</p>
   */
  AttachTime?: Date;

  /**
   * <p>The ID of the network interface attachment.</p>
   */
  AttachmentId?: string;

  /**
   * <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>The device index of the network interface attachment on the instance.</p>
   */
  DeviceIndex?: number;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The AWS account ID of the owner of the instance.</p>
   */
  InstanceOwnerId?: string;

  /**
   * <p>The attachment state.</p>
   */
  Status?: AttachmentStatus | string;
}

export namespace NetworkInterfaceAttachment {
  export function isa(o: any): o is NetworkInterfaceAttachment {
    return _smithy.isa(o, "NetworkInterfaceAttachment");
  }
}

/**
 * <p>Describes an attachment change.</p>
 */
export interface NetworkInterfaceAttachmentChanges {
  __type?: "NetworkInterfaceAttachmentChanges";
  /**
   * <p>The ID of the network interface attachment.</p>
   */
  AttachmentId?: string;

  /**
   * <p>Indicates whether the network interface is deleted when the instance is terminated.</p>
   */
  DeleteOnTermination?: boolean;
}

export namespace NetworkInterfaceAttachmentChanges {
  export function isa(o: any): o is NetworkInterfaceAttachmentChanges {
    return _smithy.isa(o, "NetworkInterfaceAttachmentChanges");
  }
}

export type NetworkInterfaceAttribute =
  | "attachment"
  | "description"
  | "groupSet"
  | "sourceDestCheck";

export type NetworkInterfaceCreationType = "efa";

/**
 * <p>Describes an IPv6 address associated with a network interface.</p>
 */
export interface NetworkInterfaceIpv6Address {
  __type?: "NetworkInterfaceIpv6Address";
  /**
   * <p>The IPv6 address.</p>
   */
  Ipv6Address?: string;
}

export namespace NetworkInterfaceIpv6Address {
  export function isa(o: any): o is NetworkInterfaceIpv6Address {
    return _smithy.isa(o, "NetworkInterfaceIpv6Address");
  }
}

/**
 * <p>Describes a permission for a network interface.</p>
 */
export interface NetworkInterfacePermission {
  __type?: "NetworkInterfacePermission";
  /**
   * <p>The AWS account ID.</p>
   */
  AwsAccountId?: string;

  /**
   * <p>The AWS service.</p>
   */
  AwsService?: string;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The ID of the network interface permission.</p>
   */
  NetworkInterfacePermissionId?: string;

  /**
   * <p>The type of permission.</p>
   */
  Permission?: InterfacePermissionType | string;

  /**
   * <p>Information about the state of the permission.</p>
   */
  PermissionState?: NetworkInterfacePermissionState;
}

export namespace NetworkInterfacePermission {
  export function isa(o: any): o is NetworkInterfacePermission {
    return _smithy.isa(o, "NetworkInterfacePermission");
  }
}

/**
 * <p>Describes the state of a network interface permission.</p>
 */
export interface NetworkInterfacePermissionState {
  __type?: "NetworkInterfacePermissionState";
  /**
   * <p>The state of the permission.</p>
   */
  State?: NetworkInterfacePermissionStateCode | string;

  /**
   * <p>A status message, if applicable.</p>
   */
  StatusMessage?: string;
}

export namespace NetworkInterfacePermissionState {
  export function isa(o: any): o is NetworkInterfacePermissionState {
    return _smithy.isa(o, "NetworkInterfacePermissionState");
  }
}

export type NetworkInterfacePermissionStateCode =
  | "granted"
  | "pending"
  | "revoked"
  | "revoking";

/**
 * <p>Describes the private IPv4 address of a network interface.</p>
 */
export interface NetworkInterfacePrivateIpAddress {
  __type?: "NetworkInterfacePrivateIpAddress";
  /**
   * <p>The association information for an Elastic IP address (IPv4) associated with the network interface.</p>
   */
  Association?: NetworkInterfaceAssociation;

  /**
   * <p>Indicates whether this IPv4 address is the primary private IPv4 address of the network interface.</p>
   */
  Primary?: boolean;

  /**
   * <p>The private DNS name.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>The private IPv4 address.</p>
   */
  PrivateIpAddress?: string;
}

export namespace NetworkInterfacePrivateIpAddress {
  export function isa(o: any): o is NetworkInterfacePrivateIpAddress {
    return _smithy.isa(o, "NetworkInterfacePrivateIpAddress");
  }
}

export type NetworkInterfaceStatus =
  | "associated"
  | "attaching"
  | "available"
  | "detaching"
  | "in-use";

export type NetworkInterfaceType = "efa" | "interface" | "natGateway";

/**
 * <p>Describes a DHCP configuration option.</p>
 */
export interface NewDhcpConfiguration {
  __type?: "NewDhcpConfiguration";
  /**
   * <p>The name of a DHCP option.</p>
   */
  Key?: string;

  /**
   * <p>One or more values for the DHCP option.</p>
   */
  Values?: Array<string>;
}

export namespace NewDhcpConfiguration {
  export function isa(o: any): o is NewDhcpConfiguration {
    return _smithy.isa(o, "NewDhcpConfiguration");
  }
}

export enum OfferingClassType {
  CONVERTIBLE = "convertible",
  STANDARD = "standard"
}

export type OfferingTypeValues =
  | "All Upfront"
  | "Heavy Utilization"
  | "Light Utilization"
  | "Medium Utilization"
  | "No Upfront"
  | "Partial Upfront";

export enum OnDemandAllocationStrategy {
  LOWEST_PRICE = "lowestPrice",
  PRIORITIZED = "prioritized"
}

/**
 * <p>Describes the configuration of On-Demand Instances in an EC2 Fleet.</p>
 */
export interface OnDemandOptions {
  __type?: "OnDemandOptions";
  /**
   * <p>The order of the launch template overrides to use in fulfilling On-Demand capacity. If
   *          you specify <code>lowest-price</code>, EC2 Fleet uses price to determine the order, launching
   *          the lowest price first. If you specify <code>prioritized</code>, EC2 Fleet uses the priority
   *          that you assigned to each launch template override, launching the highest priority first.
   *          If you do not specify a value, EC2 Fleet defaults to <code>lowest-price</code>.</p>
   */
  AllocationStrategy?: FleetOnDemandAllocationStrategy | string;

  /**
   * <p>The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.
   *          Supported only for fleets of type <code>instant</code>.</p>
   */
  CapacityReservationOptions?: CapacityReservationOptions;

  /**
   * <p>The maximum amount per hour for On-Demand Instances that you're willing to pay.</p>
   */
  MaxTotalPrice?: string;

  /**
   * <p>The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is
   *          not reached, the fleet launches no instances.</p>
   */
  MinTargetCapacity?: number;

  /**
   * <p>Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported
   *          only for fleets of type <code>instant</code>.</p>
   */
  SingleAvailabilityZone?: boolean;

  /**
   * <p>Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet.
   *          Supported only for fleets of type <code>instant</code>.</p>
   */
  SingleInstanceType?: boolean;
}

export namespace OnDemandOptions {
  export function isa(o: any): o is OnDemandOptions {
    return _smithy.isa(o, "OnDemandOptions");
  }
}

/**
 * <p>Describes the configuration of On-Demand Instances in an EC2 Fleet.</p>
 */
export interface OnDemandOptionsRequest {
  __type?: "OnDemandOptionsRequest";
  /**
   * <p>The order of the launch template overrides to use in fulfilling On-Demand capacity. If
   *          you specify <code>lowest-price</code>, EC2 Fleet uses price to determine the order, launching
   *          the lowest price first. If you specify <code>prioritized</code>, EC2 Fleet uses the priority
   *          that you assigned to each launch template override, launching the highest priority first.
   *          If you do not specify a value, EC2 Fleet defaults to <code>lowest-price</code>.</p>
   */
  AllocationStrategy?: FleetOnDemandAllocationStrategy | string;

  /**
   * <p>The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.
   *          Supported only for fleets of type <code>instant</code>.</p>
   */
  CapacityReservationOptions?: CapacityReservationOptionsRequest;

  /**
   * <p>The maximum amount per hour for On-Demand Instances that you're willing to pay.</p>
   */
  MaxTotalPrice?: string;

  /**
   * <p>The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is
   *          not reached, the fleet launches no instances.</p>
   */
  MinTargetCapacity?: number;

  /**
   * <p>Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported
   *          only for fleets of type <code>instant</code>.</p>
   */
  SingleAvailabilityZone?: boolean;

  /**
   * <p>Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet.
   *          Supported only for fleets of type <code>instant</code>.</p>
   */
  SingleInstanceType?: boolean;
}

export namespace OnDemandOptionsRequest {
  export function isa(o: any): o is OnDemandOptionsRequest {
    return _smithy.isa(o, "OnDemandOptionsRequest");
  }
}

export type OperationType = "add" | "remove";

export enum PaymentOption {
  ALL_UPFRONT = "AllUpfront",
  NO_UPFRONT = "NoUpfront",
  PARTIAL_UPFRONT = "PartialUpfront"
}

/**
 * <p>Describes the data that identifies an Amazon FPGA image (AFI) on the PCI bus.</p>
 */
export interface PciId {
  __type?: "PciId";
  /**
   * <p>The ID of the device.</p>
   */
  DeviceId?: string;

  /**
   * <p>The ID of the subsystem.</p>
   */
  SubsystemId?: string;

  /**
   * <p>The ID of the vendor for the subsystem.</p>
   */
  SubsystemVendorId?: string;

  /**
   * <p>The ID of the vendor.</p>
   */
  VendorId?: string;
}

export namespace PciId {
  export function isa(o: any): o is PciId {
    return _smithy.isa(o, "PciId");
  }
}

/**
 * <p>The status of the transit gateway peering attachment.</p>
 */
export interface PeeringAttachmentStatus {
  __type?: "PeeringAttachmentStatus";
  /**
   * <p>The status code.</p>
   */
  Code?: string;

  /**
   * <p>The status message, if applicable.</p>
   */
  Message?: string;
}

export namespace PeeringAttachmentStatus {
  export function isa(o: any): o is PeeringAttachmentStatus {
    return _smithy.isa(o, "PeeringAttachmentStatus");
  }
}

/**
 * <p>Describes the VPC peering connection options.</p>
 */
export interface PeeringConnectionOptions {
  __type?: "PeeringConnectionOptions";
  /**
   * <p>If true, the public DNS hostnames of instances in the specified VPC resolve to private
   *             IP addresses when queried from instances in the peer VPC.</p>
   */
  AllowDnsResolutionFromRemoteVpc?: boolean;

  /**
   * <p>If true, enables outbound communication from an EC2-Classic instance that's linked to
   *             a local VPC using ClassicLink to instances in a peer VPC.</p>
   */
  AllowEgressFromLocalClassicLinkToRemoteVpc?: boolean;

  /**
   * <p>If true, enables outbound communication from instances in a local VPC to an
   *             EC2-Classic instance that's linked to a peer VPC using ClassicLink.</p>
   */
  AllowEgressFromLocalVpcToRemoteClassicLink?: boolean;
}

export namespace PeeringConnectionOptions {
  export function isa(o: any): o is PeeringConnectionOptions {
    return _smithy.isa(o, "PeeringConnectionOptions");
  }
}

/**
 * <p>The VPC peering connection options.</p>
 */
export interface PeeringConnectionOptionsRequest {
  __type?: "PeeringConnectionOptionsRequest";
  /**
   * <p>If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.</p>
   */
  AllowDnsResolutionFromRemoteVpc?: boolean;

  /**
   * <p>If true, enables outbound communication from an EC2-Classic instance that's linked to
   *             a local VPC using ClassicLink to instances in a peer VPC.</p>
   */
  AllowEgressFromLocalClassicLinkToRemoteVpc?: boolean;

  /**
   * <p>If true, enables outbound communication from instances in a local VPC to an
   *             EC2-Classic instance that's linked to a peer VPC using ClassicLink.</p>
   */
  AllowEgressFromLocalVpcToRemoteClassicLink?: boolean;
}

export namespace PeeringConnectionOptionsRequest {
  export function isa(o: any): o is PeeringConnectionOptionsRequest {
    return _smithy.isa(o, "PeeringConnectionOptionsRequest");
  }
}

/**
 * <p>Information about the transit gateway in the peering attachment.</p>
 */
export interface PeeringTgwInfo {
  __type?: "PeeringTgwInfo";
  /**
   * <p>The AWS account ID of the owner of the transit gateway.</p>
   */
  OwnerId?: string;

  /**
   * <p>The Region of the transit gateway.</p>
   */
  Region?: string;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId?: string;
}

export namespace PeeringTgwInfo {
  export function isa(o: any): o is PeeringTgwInfo {
    return _smithy.isa(o, "PeeringTgwInfo");
  }
}

export type PermissionGroup = "all";

/**
 * <p>The Diffie-Hellmann group number for phase 1 IKE negotiations.</p>
 */
export interface Phase1DHGroupNumbersListValue {
  __type?: "Phase1DHGroupNumbersListValue";
  /**
   * <p>The Diffie-Hellmann group number.</p>
   */
  Value?: number;
}

export namespace Phase1DHGroupNumbersListValue {
  export function isa(o: any): o is Phase1DHGroupNumbersListValue {
    return _smithy.isa(o, "Phase1DHGroupNumbersListValue");
  }
}

/**
 * <p>Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations.</p>
 */
export interface Phase1DHGroupNumbersRequestListValue {
  __type?: "Phase1DHGroupNumbersRequestListValue";
  /**
   * <p>The Diffie-Hellmann group number.</p>
   */
  Value?: number;
}

export namespace Phase1DHGroupNumbersRequestListValue {
  export function isa(o: any): o is Phase1DHGroupNumbersRequestListValue {
    return _smithy.isa(o, "Phase1DHGroupNumbersRequestListValue");
  }
}

/**
 * <p>The encryption algorithm for phase 1 IKE negotiations.</p>
 */
export interface Phase1EncryptionAlgorithmsListValue {
  __type?: "Phase1EncryptionAlgorithmsListValue";
  /**
   * <p>The value for the encryption algorithm.</p>
   */
  Value?: string;
}

export namespace Phase1EncryptionAlgorithmsListValue {
  export function isa(o: any): o is Phase1EncryptionAlgorithmsListValue {
    return _smithy.isa(o, "Phase1EncryptionAlgorithmsListValue");
  }
}

/**
 * <p>Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations.</p>
 */
export interface Phase1EncryptionAlgorithmsRequestListValue {
  __type?: "Phase1EncryptionAlgorithmsRequestListValue";
  /**
   * <p>The value for the encryption algorithm.</p>
   */
  Value?: string;
}

export namespace Phase1EncryptionAlgorithmsRequestListValue {
  export function isa(o: any): o is Phase1EncryptionAlgorithmsRequestListValue {
    return _smithy.isa(o, "Phase1EncryptionAlgorithmsRequestListValue");
  }
}

/**
 * <p>The integrity algorithm for phase 1 IKE negotiations.</p>
 */
export interface Phase1IntegrityAlgorithmsListValue {
  __type?: "Phase1IntegrityAlgorithmsListValue";
  /**
   * <p>The value for the integrity algorithm.</p>
   */
  Value?: string;
}

export namespace Phase1IntegrityAlgorithmsListValue {
  export function isa(o: any): o is Phase1IntegrityAlgorithmsListValue {
    return _smithy.isa(o, "Phase1IntegrityAlgorithmsListValue");
  }
}

/**
 * <p>Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations.</p>
 */
export interface Phase1IntegrityAlgorithmsRequestListValue {
  __type?: "Phase1IntegrityAlgorithmsRequestListValue";
  /**
   * <p>The value for the integrity algorithm.</p>
   */
  Value?: string;
}

export namespace Phase1IntegrityAlgorithmsRequestListValue {
  export function isa(o: any): o is Phase1IntegrityAlgorithmsRequestListValue {
    return _smithy.isa(o, "Phase1IntegrityAlgorithmsRequestListValue");
  }
}

/**
 * <p>The Diffie-Hellmann group number for phase 2 IKE negotiations.</p>
 */
export interface Phase2DHGroupNumbersListValue {
  __type?: "Phase2DHGroupNumbersListValue";
  /**
   * <p>The Diffie-Hellmann group number.</p>
   */
  Value?: number;
}

export namespace Phase2DHGroupNumbersListValue {
  export function isa(o: any): o is Phase2DHGroupNumbersListValue {
    return _smithy.isa(o, "Phase2DHGroupNumbersListValue");
  }
}

/**
 * <p>Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations.</p>
 */
export interface Phase2DHGroupNumbersRequestListValue {
  __type?: "Phase2DHGroupNumbersRequestListValue";
  /**
   * <p>The Diffie-Hellmann group number.</p>
   */
  Value?: number;
}

export namespace Phase2DHGroupNumbersRequestListValue {
  export function isa(o: any): o is Phase2DHGroupNumbersRequestListValue {
    return _smithy.isa(o, "Phase2DHGroupNumbersRequestListValue");
  }
}

/**
 * <p>The encryption algorithm for phase 2 IKE negotiations.</p>
 */
export interface Phase2EncryptionAlgorithmsListValue {
  __type?: "Phase2EncryptionAlgorithmsListValue";
  /**
   * <p>The encryption algorithm.</p>
   */
  Value?: string;
}

export namespace Phase2EncryptionAlgorithmsListValue {
  export function isa(o: any): o is Phase2EncryptionAlgorithmsListValue {
    return _smithy.isa(o, "Phase2EncryptionAlgorithmsListValue");
  }
}

/**
 * <p>Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations.</p>
 */
export interface Phase2EncryptionAlgorithmsRequestListValue {
  __type?: "Phase2EncryptionAlgorithmsRequestListValue";
  /**
   * <p>The encryption algorithm.</p>
   */
  Value?: string;
}

export namespace Phase2EncryptionAlgorithmsRequestListValue {
  export function isa(o: any): o is Phase2EncryptionAlgorithmsRequestListValue {
    return _smithy.isa(o, "Phase2EncryptionAlgorithmsRequestListValue");
  }
}

/**
 * <p>The integrity algorithm for phase 2 IKE negotiations.</p>
 */
export interface Phase2IntegrityAlgorithmsListValue {
  __type?: "Phase2IntegrityAlgorithmsListValue";
  /**
   * <p>The integrity algorithm.</p>
   */
  Value?: string;
}

export namespace Phase2IntegrityAlgorithmsListValue {
  export function isa(o: any): o is Phase2IntegrityAlgorithmsListValue {
    return _smithy.isa(o, "Phase2IntegrityAlgorithmsListValue");
  }
}

/**
 * <p>Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations.</p>
 */
export interface Phase2IntegrityAlgorithmsRequestListValue {
  __type?: "Phase2IntegrityAlgorithmsRequestListValue";
  /**
   * <p>The integrity algorithm.</p>
   */
  Value?: string;
}

export namespace Phase2IntegrityAlgorithmsRequestListValue {
  export function isa(o: any): o is Phase2IntegrityAlgorithmsRequestListValue {
    return _smithy.isa(o, "Phase2IntegrityAlgorithmsRequestListValue");
  }
}

/**
 * <p>Describes the placement of an instance.</p>
 */
export interface Placement {
  __type?: "Placement";
  /**
   * <p>The affinity setting for the instance on the Dedicated Host. This parameter is not
   *             supported for the <a>ImportInstance</a> command.</p>
   */
  Affinity?: string;

  /**
   * <p>The Availability Zone of the instance.</p>
   *         <p>If not specified, an Availability Zone will be automatically chosen for you based on
   *             the load balancing criteria for the Region.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The name of the placement group the instance is in.</p>
   */
  GroupName?: string;

  /**
   * <p>The ID of the Dedicated Host on which the instance resides. This parameter is not
   *             supported for the <a>ImportInstance</a> command.</p>
   */
  HostId?: string;

  /**
   * <p>The ARN of the host resource group in which to launch the instances. If you specify
   *     		a host resource group ARN, omit the <b>Tenancy</b>
   *     		parameter or set it to <code>host</code>.</p>
   */
  HostResourceGroupArn?: string;

  /**
   * <p>The number of the partition the instance is in. Valid only if the placement group
   *             strategy is set to <code>partition</code>.</p>
   */
  PartitionNumber?: number;

  /**
   * <p>Reserved for future use.</p>
   */
  SpreadDomain?: string;

  /**
   * <p>The tenancy of the instance (if the instance is running in a VPC). An instance with a
   *             tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code>
   *             tenancy is not supported for the <a>ImportInstance</a> command.</p>
   */
  Tenancy?: Tenancy | string;
}

export namespace Placement {
  export function isa(o: any): o is Placement {
    return _smithy.isa(o, "Placement");
  }
}

/**
 * <p>Describes a placement group.</p>
 */
export interface PlacementGroup {
  __type?: "PlacementGroup";
  /**
   * <p>The ID of the placement group.</p>
   */
  GroupId?: string;

  /**
   * <p>The name of the placement group.</p>
   */
  GroupName?: string;

  /**
   * <p>The number of partitions. Valid only if <b>strategy</b> is
   *             set to <code>partition</code>.</p>
   */
  PartitionCount?: number;

  /**
   * <p>The state of the placement group.</p>
   */
  State?: PlacementGroupState | string;

  /**
   * <p>The placement strategy.</p>
   */
  Strategy?: PlacementStrategy | string;

  /**
   * <p>Any tags applied to the placement group.</p>
   */
  Tags?: Array<Tag>;
}

export namespace PlacementGroup {
  export function isa(o: any): o is PlacementGroup {
    return _smithy.isa(o, "PlacementGroup");
  }
}

/**
 * <p>Describes the placement group support of the instance type.</p>
 */
export interface PlacementGroupInfo {
  __type?: "PlacementGroupInfo";
  /**
   * <p>A list of supported placement groups types.</p>
   */
  SupportedStrategies?: Array<PlacementGroupStrategy | string>;
}

export namespace PlacementGroupInfo {
  export function isa(o: any): o is PlacementGroupInfo {
    return _smithy.isa(o, "PlacementGroupInfo");
  }
}

export type PlacementGroupState =
  | "available"
  | "deleted"
  | "deleting"
  | "pending";

export type PlacementGroupStrategy = "cluster" | "partition" | "spread";

/**
 * <p>Describes the placement of an instance.</p>
 */
export interface PlacementResponse {
  __type?: "PlacementResponse";
  /**
   * <p>The name of the placement group that the instance is in.</p>
   */
  GroupName?: string;
}

export namespace PlacementResponse {
  export function isa(o: any): o is PlacementResponse {
    return _smithy.isa(o, "PlacementResponse");
  }
}

export type PlacementStrategy = "cluster" | "partition" | "spread";

export type PlatformValues = "Windows";

/**
 * <p>Describes a CIDR block for an address pool.</p>
 */
export interface PoolCidrBlock {
  __type?: "PoolCidrBlock";
  /**
   * <p>The CIDR block.</p>
   */
  Cidr?: string;
}

export namespace PoolCidrBlock {
  export function isa(o: any): o is PoolCidrBlock {
    return _smithy.isa(o, "PoolCidrBlock");
  }
}

/**
 * <p>Describes a range of ports.</p>
 */
export interface PortRange {
  __type?: "PortRange";
  /**
   * <p>The first port in the range.</p>
   */
  From?: number;

  /**
   * <p>The last port in the range.</p>
   */
  To?: number;
}

export namespace PortRange {
  export function isa(o: any): o is PortRange {
    return _smithy.isa(o, "PortRange");
  }
}

/**
 * <p>Describes prefixes for AWS services.</p>
 */
export interface PrefixList {
  __type?: "PrefixList";
  /**
   * <p>The IP address range of the AWS service.</p>
   */
  Cidrs?: Array<string>;

  /**
   * <p>The ID of the prefix.</p>
   */
  PrefixListId?: string;

  /**
   * <p>The name of the prefix.</p>
   */
  PrefixListName?: string;
}

export namespace PrefixList {
  export function isa(o: any): o is PrefixList {
    return _smithy.isa(o, "PrefixList");
  }
}

/**
 * <p>Describes a prefix list ID.</p>
 */
export interface PrefixListId {
  __type?: "PrefixListId";
  /**
   * <p>A description for the security group rule that references this prefix list ID.</p>
   *          <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9,
   *       spaces, and ._-:/()#,@[]+=;{}!$*</p>
   */
  Description?: string;

  /**
   * <p>The ID of the prefix.</p>
   */
  PrefixListId?: string;
}

export namespace PrefixListId {
  export function isa(o: any): o is PrefixListId {
    return _smithy.isa(o, "PrefixListId");
  }
}

/**
 * <p>Describes the price for a Reserved Instance.</p>
 */
export interface PriceSchedule {
  __type?: "PriceSchedule";
  /**
   * <p>The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.</p>
   *          <p>A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.</p>
   */
  Active?: boolean;

  /**
   * <p>The currency for transacting the Reserved Instance resale.
   * 				At this time, the only supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The fixed price for the term.</p>
   */
  Price?: number;

  /**
   * <p>The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.</p>
   */
  Term?: number;
}

export namespace PriceSchedule {
  export function isa(o: any): o is PriceSchedule {
    return _smithy.isa(o, "PriceSchedule");
  }
}

/**
 * <p>Describes the price for a Reserved Instance.</p>
 */
export interface PriceScheduleSpecification {
  __type?: "PriceScheduleSpecification";
  /**
   * <p>The currency for transacting the Reserved Instance resale.
   * 				At this time, the only supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The fixed price for the term.</p>
   */
  Price?: number;

  /**
   * <p>The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.</p>
   */
  Term?: number;
}

export namespace PriceScheduleSpecification {
  export function isa(o: any): o is PriceScheduleSpecification {
    return _smithy.isa(o, "PriceScheduleSpecification");
  }
}

/**
 * <p>Describes a Reserved Instance offering.</p>
 */
export interface PricingDetail {
  __type?: "PricingDetail";
  /**
   * <p>The number of reservations available for the price.</p>
   */
  Count?: number;

  /**
   * <p>The price per instance.</p>
   */
  Price?: number;
}

export namespace PricingDetail {
  export function isa(o: any): o is PricingDetail {
    return _smithy.isa(o, "PricingDetail");
  }
}

/**
 * <p>PrincipalIdFormat description</p>
 */
export interface PrincipalIdFormat {
  __type?: "PrincipalIdFormat";
  /**
   * <p>PrincipalIdFormatARN description</p>
   */
  Arn?: string;

  /**
   * <p>PrincipalIdFormatStatuses description</p>
   */
  Statuses?: Array<IdFormat>;
}

export namespace PrincipalIdFormat {
  export function isa(o: any): o is PrincipalIdFormat {
    return _smithy.isa(o, "PrincipalIdFormat");
  }
}

export enum PrincipalType {
  Account = "Account",
  All = "All",
  OrganizationUnit = "OrganizationUnit",
  Role = "Role",
  Service = "Service",
  User = "User"
}

/**
 * <p>Information about the private DNS name for the service endpoint. For more information
 *             about these parameters, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/ndpoint-services-dns-validation.html">VPC Endpoint Service
 *                 Private DNS Name Verification</a> in the
 *             <i>Amazon Virtual Private Cloud User Guide</i>.</p>
 */
export interface PrivateDnsNameConfiguration {
  __type?: "PrivateDnsNameConfiguration";
  /**
   * <p>The name of the record subdomain the service provider needs to create. The service provider adds the <code>value</code> text to the <code>name</code>.</p>
   */
  Name?: string;

  /**
   * <p>The verification state of the VPC endpoint service.</p>
   *         <p>>Consumers
   *             of the endpoint service can use the private name only when the state is
   *                 <code>verified</code>.</p>
   */
  State?: DnsNameState | string;

  /**
   * <p>The endpoint service verification type, for example TXT.</p>
   */
  Type?: string;

  /**
   * <p>The value the service provider adds to the private DNS name domain record before verification.</p>
   */
  Value?: string;
}

export namespace PrivateDnsNameConfiguration {
  export function isa(o: any): o is PrivateDnsNameConfiguration {
    return _smithy.isa(o, "PrivateDnsNameConfiguration");
  }
}

/**
 * <p>Describes a secondary private IPv4 address for a network interface.</p>
 */
export interface PrivateIpAddressSpecification {
  __type?: "PrivateIpAddressSpecification";
  /**
   * <p>Indicates whether the private IPv4 address is the primary private IPv4 address. Only
   *             one IPv4 address can be designated as primary.</p>
   */
  Primary?: boolean;

  /**
   * <p>The private IPv4 addresses.</p>
   */
  PrivateIpAddress?: string;
}

export namespace PrivateIpAddressSpecification {
  export function isa(o: any): o is PrivateIpAddressSpecification {
    return _smithy.isa(o, "PrivateIpAddressSpecification");
  }
}

/**
 * <p>Describes the processor used by the instance type.</p>
 */
export interface ProcessorInfo {
  __type?: "ProcessorInfo";
  /**
   * <p>A list of architectures supported by the instance type.</p>
   */
  SupportedArchitectures?: Array<ArchitectureType | string>;

  /**
   * <p>The speed of the processor, in GHz.</p>
   */
  SustainedClockSpeedInGhz?: number;
}

export namespace ProcessorInfo {
  export function isa(o: any): o is ProcessorInfo {
    return _smithy.isa(o, "ProcessorInfo");
  }
}

/**
 * <p>Describes a product code.</p>
 */
export interface ProductCode {
  __type?: "ProductCode";
  /**
   * <p>The product code.</p>
   */
  ProductCodeId?: string;

  /**
   * <p>The type of product code.</p>
   */
  ProductCodeType?: ProductCodeValues | string;
}

export namespace ProductCode {
  export function isa(o: any): o is ProductCode {
    return _smithy.isa(o, "ProductCode");
  }
}

export type ProductCodeValues = "devpay" | "marketplace";

/**
 * <p>Describes a virtual private gateway propagating route.</p>
 */
export interface PropagatingVgw {
  __type?: "PropagatingVgw";
  /**
   * <p>The ID of the virtual private gateway.</p>
   */
  GatewayId?: string;
}

export namespace PropagatingVgw {
  export function isa(o: any): o is PropagatingVgw {
    return _smithy.isa(o, "PropagatingVgw");
  }
}

export interface ProvisionByoipCidrRequest {
  __type?: "ProvisionByoipCidrRequest";
  /**
   * <p>The public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix that you can
   *          specify is /24. The most specific IPv6 prefix you can specify is /56. The address range cannot overlap with another address range that you've
   *          brought to this or another Region.</p>
   */
  Cidr: string | undefined;

  /**
   * <p>A signed document that proves that you are authorized to bring the specified IP address
   *          range to Amazon using BYOIP.</p>
   */
  CidrAuthorizationContext?: CidrAuthorizationContext;

  /**
   * <p>A description for the address range and the address pool.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>(IPv6 only) Indicate whether the address range will be publicly advertised to the
   *             internet.</p>
   *         <p>Default: true</p>
   */
  PubliclyAdvertisable?: boolean;
}

export namespace ProvisionByoipCidrRequest {
  export function isa(o: any): o is ProvisionByoipCidrRequest {
    return _smithy.isa(o, "ProvisionByoipCidrRequest");
  }
}

export interface ProvisionByoipCidrResult extends $MetadataBearer {
  __type?: "ProvisionByoipCidrResult";
  /**
   * <p>Information about the address range.</p>
   */
  ByoipCidr?: ByoipCidr;
}

export namespace ProvisionByoipCidrResult {
  export function isa(o: any): o is ProvisionByoipCidrResult {
    return _smithy.isa(o, "ProvisionByoipCidrResult");
  }
}

/**
 * <p>Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
 */
export interface ProvisionedBandwidth {
  __type?: "ProvisionedBandwidth";
  /**
   * <p>Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
   */
  ProvisionTime?: Date;

  /**
   * <p>Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
   */
  Provisioned?: string;

  /**
   * <p>Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
   */
  RequestTime?: Date;

  /**
   * <p>Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
   */
  Requested?: string;

  /**
   * <p>Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.</p>
   */
  Status?: string;
}

export namespace ProvisionedBandwidth {
  export function isa(o: any): o is ProvisionedBandwidth {
    return _smithy.isa(o, "ProvisionedBandwidth");
  }
}

/**
 * <p>Describes an IPv4 address pool.</p>
 */
export interface PublicIpv4Pool {
  __type?: "PublicIpv4Pool";
  /**
   * <p>A description of the address pool.</p>
   */
  Description?: string;

  /**
   * <p>The address ranges.</p>
   */
  PoolAddressRanges?: Array<PublicIpv4PoolRange>;

  /**
   * <p>The ID of the address pool.</p>
   */
  PoolId?: string;

  /**
   * <p>The total number of addresses.</p>
   */
  TotalAddressCount?: number;

  /**
   * <p>The total number of available addresses.</p>
   */
  TotalAvailableAddressCount?: number;
}

export namespace PublicIpv4Pool {
  export function isa(o: any): o is PublicIpv4Pool {
    return _smithy.isa(o, "PublicIpv4Pool");
  }
}

/**
 * <p>Describes an address range of an IPv4 address pool.</p>
 */
export interface PublicIpv4PoolRange {
  __type?: "PublicIpv4PoolRange";
  /**
   * <p>The number of addresses in the range.</p>
   */
  AddressCount?: number;

  /**
   * <p>The number of available addresses in the range.</p>
   */
  AvailableAddressCount?: number;

  /**
   * <p>The first IP address in the range.</p>
   */
  FirstAddress?: string;

  /**
   * <p>The last IP address in the range.</p>
   */
  LastAddress?: string;
}

export namespace PublicIpv4PoolRange {
  export function isa(o: any): o is PublicIpv4PoolRange {
    return _smithy.isa(o, "PublicIpv4PoolRange");
  }
}

/**
 * <p>Describes the result of the purchase.</p>
 */
export interface Purchase {
  __type?: "Purchase";
  /**
   * <p>The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code>
   *             amounts are specified. At this time, the only supported currency is
   *             <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The duration of the reservation's term in seconds.</p>
   */
  Duration?: number;

  /**
   * <p>The IDs of the Dedicated Hosts associated with the reservation.</p>
   */
  HostIdSet?: Array<string>;

  /**
   * <p>The ID of the reservation.</p>
   */
  HostReservationId?: string;

  /**
   * <p>The hourly price of the reservation per hour.</p>
   */
  HourlyPrice?: string;

  /**
   * <p>The instance family on the Dedicated Host that the reservation can be associated
   *             with.</p>
   */
  InstanceFamily?: string;

  /**
   * <p>The payment option for the reservation.</p>
   */
  PaymentOption?: PaymentOption | string;

  /**
   * <p>The upfront price of the reservation.</p>
   */
  UpfrontPrice?: string;
}

export namespace Purchase {
  export function isa(o: any): o is Purchase {
    return _smithy.isa(o, "Purchase");
  }
}

export interface PurchaseHostReservationRequest {
  __type?: "PurchaseHostReservationRequest";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>,
   *             and <code>totalHourlyPrice</code> amounts are specified. At this time, the only
   *             supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The IDs of the Dedicated Hosts with which the reservation will be associated.</p>
   */
  HostIdSet: Array<string> | undefined;

  /**
   * <p>The specified limit is checked against the total upfront cost of the reservation
   *             (calculated as the offering's upfront cost multiplied by the host count). If the total
   *             upfront cost is greater than the specified price limit, the request fails. This is used
   *             to ensure that the purchase does not exceed the expected upfront cost of the purchase.
   *             At this time, the only supported currency is <code>USD</code>. For example, to indicate
   *             a limit price of USD 100, specify 100.00.</p>
   */
  LimitPrice?: string;

  /**
   * <p>The ID of the offering.</p>
   */
  OfferingId: string | undefined;
}

export namespace PurchaseHostReservationRequest {
  export function isa(o: any): o is PurchaseHostReservationRequest {
    return _smithy.isa(o, "PurchaseHostReservationRequest");
  }
}

export interface PurchaseHostReservationResult extends $MetadataBearer {
  __type?: "PurchaseHostReservationResult";
  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The currency in which the <code>totalUpfrontPrice</code> and
   *                 <code>totalHourlyPrice</code> amounts are specified. At this time, the only
   *             supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>Describes the details of the purchase.</p>
   */
  Purchase?: Array<Purchase>;

  /**
   * <p>The total hourly price of the reservation calculated per hour.</p>
   */
  TotalHourlyPrice?: string;

  /**
   * <p>The total amount charged to your account when you purchase the reservation.</p>
   */
  TotalUpfrontPrice?: string;
}

export namespace PurchaseHostReservationResult {
  export function isa(o: any): o is PurchaseHostReservationResult {
    return _smithy.isa(o, "PurchaseHostReservationResult");
  }
}

/**
 * <p>Describes a request to purchase Scheduled Instances.</p>
 */
export interface PurchaseRequest {
  __type?: "PurchaseRequest";
  /**
   * <p>The number of instances.</p>
   */
  InstanceCount: number | undefined;

  /**
   * <p>The purchase token.</p>
   */
  PurchaseToken: string | undefined;
}

export namespace PurchaseRequest {
  export function isa(o: any): o is PurchaseRequest {
    return _smithy.isa(o, "PurchaseRequest");
  }
}

/**
 * <p>Contains the parameters for PurchaseReservedInstancesOffering.</p>
 */
export interface PurchaseReservedInstancesOfferingRequest {
  __type?: "PurchaseReservedInstancesOfferingRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The number of Reserved Instances to purchase.</p>
   */
  InstanceCount: number | undefined;

  /**
   * <p>Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.</p>
   */
  LimitPrice?: ReservedInstanceLimitPrice;

  /**
   * <p>The time at which to purchase the Reserved Instance, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  PurchaseTime?: Date;

  /**
   * <p>The ID of the Reserved Instance offering to purchase.</p>
   */
  ReservedInstancesOfferingId: string | undefined;
}

export namespace PurchaseReservedInstancesOfferingRequest {
  export function isa(o: any): o is PurchaseReservedInstancesOfferingRequest {
    return _smithy.isa(o, "PurchaseReservedInstancesOfferingRequest");
  }
}

/**
 * <p>Contains the output of PurchaseReservedInstancesOffering.</p>
 */
export interface PurchaseReservedInstancesOfferingResult
  extends $MetadataBearer {
  __type?: "PurchaseReservedInstancesOfferingResult";
  /**
   * <p>The IDs of the purchased Reserved Instances.</p>
   */
  ReservedInstancesId?: string;
}

export namespace PurchaseReservedInstancesOfferingResult {
  export function isa(o: any): o is PurchaseReservedInstancesOfferingResult {
    return _smithy.isa(o, "PurchaseReservedInstancesOfferingResult");
  }
}

/**
 * <p>Contains the parameters for PurchaseScheduledInstances.</p>
 */
export interface PurchaseScheduledInstancesRequest {
  __type?: "PurchaseScheduledInstancesRequest";
  /**
   * <p>Unique, case-sensitive identifier that ensures the idempotency of the request.
   *          For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The purchase requests.</p>
   */
  PurchaseRequests: Array<PurchaseRequest> | undefined;
}

export namespace PurchaseScheduledInstancesRequest {
  export function isa(o: any): o is PurchaseScheduledInstancesRequest {
    return _smithy.isa(o, "PurchaseScheduledInstancesRequest");
  }
}

/**
 * <p>Contains the output of PurchaseScheduledInstances.</p>
 */
export interface PurchaseScheduledInstancesResult extends $MetadataBearer {
  __type?: "PurchaseScheduledInstancesResult";
  /**
   * <p>Information about the Scheduled Instances.</p>
   */
  ScheduledInstanceSet?: Array<ScheduledInstance>;
}

export namespace PurchaseScheduledInstancesResult {
  export function isa(o: any): o is PurchaseScheduledInstancesResult {
    return _smithy.isa(o, "PurchaseScheduledInstancesResult");
  }
}

export type RIProductDescription =
  | "Linux/UNIX"
  | "Linux/UNIX (Amazon VPC)"
  | "Windows"
  | "Windows (Amazon VPC)";

export interface RebootInstancesRequest {
  __type?: "RebootInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The instance IDs.</p>
   */
  InstanceIds: Array<string> | undefined;
}

export namespace RebootInstancesRequest {
  export function isa(o: any): o is RebootInstancesRequest {
    return _smithy.isa(o, "RebootInstancesRequest");
  }
}

/**
 * <p>Describes a recurring charge.</p>
 */
export interface RecurringCharge {
  __type?: "RecurringCharge";
  /**
   * <p>The amount of the recurring charge.</p>
   */
  Amount?: number;

  /**
   * <p>The frequency of the recurring charge.</p>
   */
  Frequency?: RecurringChargeFrequency | string;
}

export namespace RecurringCharge {
  export function isa(o: any): o is RecurringCharge {
    return _smithy.isa(o, "RecurringCharge");
  }
}

export type RecurringChargeFrequency = "Hourly";

/**
 * <p>Describes a Region.</p>
 */
export interface Region {
  __type?: "Region";
  /**
   * <p>The Region service endpoint.</p>
   */
  Endpoint?: string;

  /**
   * <p>The Region opt-in status. The possible values are <code>opt-in-not-required</code>, <code>opted-in</code>, and
   *         <code>not-opted-in</code>.</p>
   */
  OptInStatus?: string;

  /**
   * <p>The name of the Region.</p>
   */
  RegionName?: string;
}

export namespace Region {
  export function isa(o: any): o is Region {
    return _smithy.isa(o, "Region");
  }
}

/**
 * <p>Contains the parameters for RegisterImage.</p>
 */
export interface RegisterImageRequest {
  __type?: "RegisterImageRequest";
  /**
   * <p>The architecture of the AMI.</p>
   *          <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>.
   *         For instance store-backed AMIs, the architecture specified in the manifest file.</p>
   */
  Architecture?: ArchitectureValues | string;

  /**
   * <p>The billing product codes. Your account must be authorized to specify billing product codes. Otherwise,
   *          you can use the AWS Marketplace to bill for the use of an AMI.</p>
   */
  BillingProducts?: Array<string>;

  /**
   * <p>The block device mapping entries.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>A description for your AMI.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.</p>
   *          <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
   */
  EnaSupport?: boolean;

  /**
   * <p>The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the
   *    		<code>aws-exec-read</code> canned access control list (ACL) to ensure that it can be accessed
   *    		by Amazon EC2. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">Canned ACLs</a> in the
   *    		<i>Amazon S3 Service Developer Guide</i>.</p>
   */
  ImageLocation?: string;

  /**
   * <p>The ID of the kernel.</p>
   */
  KernelId?: string;

  /**
   * <p>A name for your AMI.</p>
   *          <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>
   */
  Name: string | undefined;

  /**
   * <p>The ID of the RAM disk.</p>
   */
  RamdiskId?: string;

  /**
   * <p>The device name of the root device volume (for example, <code>/dev/sda1</code>).</p>
   */
  RootDeviceName?: string;

  /**
   * <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.</p>
   *          <p>There is no way to disable <code>sriovNetSupport</code> at this time.</p>
   *          <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
   */
  SriovNetSupport?: string;

  /**
   * <p>The type of virtualization (<code>hvm</code> | <code>paravirtual</code>).</p>
   *          <p>Default: <code>paravirtual</code>
   *          </p>
   */
  VirtualizationType?: string;
}

export namespace RegisterImageRequest {
  export function isa(o: any): o is RegisterImageRequest {
    return _smithy.isa(o, "RegisterImageRequest");
  }
}

/**
 * <p>Contains the output of RegisterImage.</p>
 */
export interface RegisterImageResult extends $MetadataBearer {
  __type?: "RegisterImageResult";
  /**
   * <p>The ID of the newly registered AMI.</p>
   */
  ImageId?: string;
}

export namespace RegisterImageResult {
  export function isa(o: any): o is RegisterImageResult {
    return _smithy.isa(o, "RegisterImageResult");
  }
}

export interface RegisterTransitGatewayMulticastGroupMembersRequest {
  __type?: "RegisterTransitGatewayMulticastGroupMembersRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The group members' network interface IDs to register with the  transit gateway multicast group.</p>
   */
  NetworkInterfaceIds?: Array<string>;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace RegisterTransitGatewayMulticastGroupMembersRequest {
  export function isa(
    o: any
  ): o is RegisterTransitGatewayMulticastGroupMembersRequest {
    return _smithy.isa(o, "RegisterTransitGatewayMulticastGroupMembersRequest");
  }
}

export interface RegisterTransitGatewayMulticastGroupMembersResult
  extends $MetadataBearer {
  __type?: "RegisterTransitGatewayMulticastGroupMembersResult";
  /**
   * <p>Information about the registered  transit gateway multicast group members.</p>
   */
  RegisteredMulticastGroupMembers?: TransitGatewayMulticastRegisteredGroupMembers;
}

export namespace RegisterTransitGatewayMulticastGroupMembersResult {
  export function isa(
    o: any
  ): o is RegisterTransitGatewayMulticastGroupMembersResult {
    return _smithy.isa(o, "RegisterTransitGatewayMulticastGroupMembersResult");
  }
}

export interface RegisterTransitGatewayMulticastGroupSourcesRequest {
  __type?: "RegisterTransitGatewayMulticastGroupSourcesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The group sources' network interface IDs to register with the  transit gateway multicast group.</p>
   */
  NetworkInterfaceIds?: Array<string>;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace RegisterTransitGatewayMulticastGroupSourcesRequest {
  export function isa(
    o: any
  ): o is RegisterTransitGatewayMulticastGroupSourcesRequest {
    return _smithy.isa(o, "RegisterTransitGatewayMulticastGroupSourcesRequest");
  }
}

export interface RegisterTransitGatewayMulticastGroupSourcesResult
  extends $MetadataBearer {
  __type?: "RegisterTransitGatewayMulticastGroupSourcesResult";
  /**
   * <p>Information about the  transit gateway multicast group sources.</p>
   */
  RegisteredMulticastGroupSources?: TransitGatewayMulticastRegisteredGroupSources;
}

export namespace RegisterTransitGatewayMulticastGroupSourcesResult {
  export function isa(
    o: any
  ): o is RegisterTransitGatewayMulticastGroupSourcesResult {
    return _smithy.isa(o, "RegisterTransitGatewayMulticastGroupSourcesResult");
  }
}

export interface RejectTransitGatewayPeeringAttachmentRequest {
  __type?: "RejectTransitGatewayPeeringAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the transit gateway peering attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace RejectTransitGatewayPeeringAttachmentRequest {
  export function isa(
    o: any
  ): o is RejectTransitGatewayPeeringAttachmentRequest {
    return _smithy.isa(o, "RejectTransitGatewayPeeringAttachmentRequest");
  }
}

export interface RejectTransitGatewayPeeringAttachmentResult
  extends $MetadataBearer {
  __type?: "RejectTransitGatewayPeeringAttachmentResult";
  /**
   * <p>The transit gateway peering attachment.</p>
   */
  TransitGatewayPeeringAttachment?: TransitGatewayPeeringAttachment;
}

export namespace RejectTransitGatewayPeeringAttachmentResult {
  export function isa(
    o: any
  ): o is RejectTransitGatewayPeeringAttachmentResult {
    return _smithy.isa(o, "RejectTransitGatewayPeeringAttachmentResult");
  }
}

export interface RejectTransitGatewayVpcAttachmentRequest {
  __type?: "RejectTransitGatewayVpcAttachmentRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId: string | undefined;
}

export namespace RejectTransitGatewayVpcAttachmentRequest {
  export function isa(o: any): o is RejectTransitGatewayVpcAttachmentRequest {
    return _smithy.isa(o, "RejectTransitGatewayVpcAttachmentRequest");
  }
}

export interface RejectTransitGatewayVpcAttachmentResult
  extends $MetadataBearer {
  __type?: "RejectTransitGatewayVpcAttachmentResult";
  /**
   * <p>Information about the attachment.</p>
   */
  TransitGatewayVpcAttachment?: TransitGatewayVpcAttachment;
}

export namespace RejectTransitGatewayVpcAttachmentResult {
  export function isa(o: any): o is RejectTransitGatewayVpcAttachmentResult {
    return _smithy.isa(o, "RejectTransitGatewayVpcAttachmentResult");
  }
}

export interface RejectVpcEndpointConnectionsRequest {
  __type?: "RejectVpcEndpointConnectionsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the service.</p>
   */
  ServiceId: string | undefined;

  /**
   * <p>The IDs of one or more VPC endpoints.</p>
   */
  VpcEndpointIds: Array<string> | undefined;
}

export namespace RejectVpcEndpointConnectionsRequest {
  export function isa(o: any): o is RejectVpcEndpointConnectionsRequest {
    return _smithy.isa(o, "RejectVpcEndpointConnectionsRequest");
  }
}

export interface RejectVpcEndpointConnectionsResult extends $MetadataBearer {
  __type?: "RejectVpcEndpointConnectionsResult";
  /**
   * <p>Information about the endpoints that were not rejected, if applicable.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace RejectVpcEndpointConnectionsResult {
  export function isa(o: any): o is RejectVpcEndpointConnectionsResult {
    return _smithy.isa(o, "RejectVpcEndpointConnectionsResult");
  }
}

export interface RejectVpcPeeringConnectionRequest {
  __type?: "RejectVpcPeeringConnectionRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the VPC peering connection.</p>
   */
  VpcPeeringConnectionId: string | undefined;
}

export namespace RejectVpcPeeringConnectionRequest {
  export function isa(o: any): o is RejectVpcPeeringConnectionRequest {
    return _smithy.isa(o, "RejectVpcPeeringConnectionRequest");
  }
}

export interface RejectVpcPeeringConnectionResult extends $MetadataBearer {
  __type?: "RejectVpcPeeringConnectionResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  Return?: boolean;
}

export namespace RejectVpcPeeringConnectionResult {
  export function isa(o: any): o is RejectVpcPeeringConnectionResult {
    return _smithy.isa(o, "RejectVpcPeeringConnectionResult");
  }
}

export interface ReleaseAddressRequest {
  __type?: "ReleaseAddressRequest";
  /**
   * <p>[EC2-VPC] The allocation ID. Required for EC2-VPC.</p>
   */
  AllocationId?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The location that the IP address is released from.</p>
   *          <p>If you provide an incorrect network border group, you will receive an <code>InvalidAddress.NotFound</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
   *          <note>
   *             <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an <code>InvalidParameterCombination</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
   *          </note>
   */
  NetworkBorderGroup?: string;

  /**
   * <p>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</p>
   */
  PublicIp?: string;
}

export namespace ReleaseAddressRequest {
  export function isa(o: any): o is ReleaseAddressRequest {
    return _smithy.isa(o, "ReleaseAddressRequest");
  }
}

export interface ReleaseHostsRequest {
  __type?: "ReleaseHostsRequest";
  /**
   * <p>The IDs of the Dedicated Hosts to release.</p>
   */
  HostIds: Array<string> | undefined;
}

export namespace ReleaseHostsRequest {
  export function isa(o: any): o is ReleaseHostsRequest {
    return _smithy.isa(o, "ReleaseHostsRequest");
  }
}

export interface ReleaseHostsResult extends $MetadataBearer {
  __type?: "ReleaseHostsResult";
  /**
   * <p>The IDs of the Dedicated Hosts that were successfully released.</p>
   */
  Successful?: Array<string>;

  /**
   * <p>The IDs of the Dedicated Hosts that could not be released, including an error
   *             message.</p>
   */
  Unsuccessful?: Array<UnsuccessfulItem>;
}

export namespace ReleaseHostsResult {
  export function isa(o: any): o is ReleaseHostsResult {
    return _smithy.isa(o, "ReleaseHostsResult");
  }
}

export interface ReplaceIamInstanceProfileAssociationRequest {
  __type?: "ReplaceIamInstanceProfileAssociationRequest";
  /**
   * <p>The ID of the existing IAM instance profile association.</p>
   */
  AssociationId: string | undefined;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile: IamInstanceProfileSpecification | undefined;
}

export namespace ReplaceIamInstanceProfileAssociationRequest {
  export function isa(
    o: any
  ): o is ReplaceIamInstanceProfileAssociationRequest {
    return _smithy.isa(o, "ReplaceIamInstanceProfileAssociationRequest");
  }
}

export interface ReplaceIamInstanceProfileAssociationResult
  extends $MetadataBearer {
  __type?: "ReplaceIamInstanceProfileAssociationResult";
  /**
   * <p>Information about the IAM instance profile association.</p>
   */
  IamInstanceProfileAssociation?: IamInstanceProfileAssociation;
}

export namespace ReplaceIamInstanceProfileAssociationResult {
  export function isa(o: any): o is ReplaceIamInstanceProfileAssociationResult {
    return _smithy.isa(o, "ReplaceIamInstanceProfileAssociationResult");
  }
}

export interface ReplaceNetworkAclAssociationRequest {
  __type?: "ReplaceNetworkAclAssociationRequest";
  /**
   * <p>The ID of the current association between the original network ACL and the subnet.</p>
   */
  AssociationId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the new network ACL to associate with the subnet.</p>
   */
  NetworkAclId: string | undefined;
}

export namespace ReplaceNetworkAclAssociationRequest {
  export function isa(o: any): o is ReplaceNetworkAclAssociationRequest {
    return _smithy.isa(o, "ReplaceNetworkAclAssociationRequest");
  }
}

export interface ReplaceNetworkAclAssociationResult extends $MetadataBearer {
  __type?: "ReplaceNetworkAclAssociationResult";
  /**
   * <p>The ID of the new association.</p>
   */
  NewAssociationId?: string;
}

export namespace ReplaceNetworkAclAssociationResult {
  export function isa(o: any): o is ReplaceNetworkAclAssociationResult {
    return _smithy.isa(o, "ReplaceNetworkAclAssociationResult");
  }
}

export interface ReplaceNetworkAclEntryRequest {
  __type?: "ReplaceNetworkAclEntryRequest";
  /**
   * <p>The IPv4 network range to allow or deny, in CIDR notation (for example
   *                 <code>172.16.0.0/24</code>).</p>
   */
  CidrBlock?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether to replace the egress rule.</p>
   * 		       <p>Default: If no value is specified, we replace the ingress rule.</p>
   */
  Egress: boolean | undefined;

  /**
   * <p>ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol
   * 		        1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.</p>
   */
  IcmpTypeCode?: IcmpTypeCode;

  /**
   * <p>The IPv6 network range to allow or deny, in CIDR notation (for example
   *                 <code>2001:bd8:1234:1a00::/64</code>).</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>The ID of the ACL.</p>
   */
  NetworkAclId: string | undefined;

  /**
   * <p>TCP or UDP protocols: The range of ports the rule applies to.
   * 		        Required if specifying protocol 6 (TCP) or 17 (UDP).</p>
   */
  PortRange?: PortRange;

  /**
   * <p>The protocol number. A value of "-1" means all protocols. If you specify "-1" or a
   *            protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is
   *            allowed, regardless of any ports or ICMP types or codes that you specify. If you specify
   *            protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and
   *            codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6)
   *            and specify an IPv6 CIDR block, you must specify an ICMP type and code.</p>
   */
  Protocol: string | undefined;

  /**
   * <p>Indicates whether to allow or deny the traffic that matches the rule.</p>
   */
  RuleAction: RuleAction | string | undefined;

  /**
   * <p>The rule number of the entry to replace.</p>
   */
  RuleNumber: number | undefined;
}

export namespace ReplaceNetworkAclEntryRequest {
  export function isa(o: any): o is ReplaceNetworkAclEntryRequest {
    return _smithy.isa(o, "ReplaceNetworkAclEntryRequest");
  }
}

export interface ReplaceRouteRequest {
  __type?: "ReplaceRouteRequest";
  /**
   * <p>The IPv4 CIDR address block used for the destination match. The value that you
   * 			provide must match the CIDR of an existing route in the table.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The IPv6 CIDR address block used for the destination match. The value that you
   * 			provide must match the CIDR of an existing route in the table.</p>
   */
  DestinationIpv6CidrBlock?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>[IPv6 traffic only] The ID of an egress-only internet gateway.</p>
   */
  EgressOnlyInternetGatewayId?: string;

  /**
   * <p>The ID of an internet gateway or virtual private gateway.</p>
   */
  GatewayId?: string;

  /**
   * <p>The ID of a NAT instance in your VPC.</p>
   */
  InstanceId?: string;

  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>Specifies whether to reset the local route to its default target (<code>local</code>).</p>
   */
  LocalTarget?: boolean;

  /**
   * <p>[IPv4 traffic only] The ID of a NAT gateway.</p>
   */
  NatGatewayId?: string;

  /**
   * <p>The ID of a network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The ID of the route table.</p>
   */
  RouteTableId: string | undefined;

  /**
   * <p>The ID of a transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of a VPC peering connection.</p>
   */
  VpcPeeringConnectionId?: string;
}

export namespace ReplaceRouteRequest {
  export function isa(o: any): o is ReplaceRouteRequest {
    return _smithy.isa(o, "ReplaceRouteRequest");
  }
}

export interface ReplaceRouteTableAssociationRequest {
  __type?: "ReplaceRouteTableAssociationRequest";
  /**
   * <p>The association ID.</p>
   */
  AssociationId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the new route table to associate with the subnet.</p>
   */
  RouteTableId: string | undefined;
}

export namespace ReplaceRouteTableAssociationRequest {
  export function isa(o: any): o is ReplaceRouteTableAssociationRequest {
    return _smithy.isa(o, "ReplaceRouteTableAssociationRequest");
  }
}

export interface ReplaceRouteTableAssociationResult extends $MetadataBearer {
  __type?: "ReplaceRouteTableAssociationResult";
  /**
   * <p>The state of the association.</p>
   */
  AssociationState?: RouteTableAssociationState;

  /**
   * <p>The ID of the new association.</p>
   */
  NewAssociationId?: string;
}

export namespace ReplaceRouteTableAssociationResult {
  export function isa(o: any): o is ReplaceRouteTableAssociationResult {
    return _smithy.isa(o, "ReplaceRouteTableAssociationResult");
  }
}

export interface ReplaceTransitGatewayRouteRequest {
  __type?: "ReplaceTransitGatewayRouteRequest";
  /**
   * <p>Indicates whether traffic matching this route is to be dropped.</p>
   */
  Blackhole?: boolean;

  /**
   * <p>The CIDR range used for the destination match. Routing decisions are based on the most specific match.</p>
   */
  DestinationCidrBlock: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace ReplaceTransitGatewayRouteRequest {
  export function isa(o: any): o is ReplaceTransitGatewayRouteRequest {
    return _smithy.isa(o, "ReplaceTransitGatewayRouteRequest");
  }
}

export interface ReplaceTransitGatewayRouteResult extends $MetadataBearer {
  __type?: "ReplaceTransitGatewayRouteResult";
  /**
   * <p>Information about the modified route.</p>
   */
  Route?: TransitGatewayRoute;
}

export namespace ReplaceTransitGatewayRouteResult {
  export function isa(o: any): o is ReplaceTransitGatewayRouteResult {
    return _smithy.isa(o, "ReplaceTransitGatewayRouteResult");
  }
}

export type ReportInstanceReasonCodes =
  | "instance-stuck-in-state"
  | "not-accepting-credentials"
  | "other"
  | "password-not-available"
  | "performance-ebs-volume"
  | "performance-instance-store"
  | "performance-network"
  | "performance-other"
  | "unresponsive";

export interface ReportInstanceStatusRequest {
  __type?: "ReportInstanceStatusRequest";
  /**
   * <p>Descriptive text about the health state of your instance.</p>
   */
  Description?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The time at which the reported instance health state ended.</p>
   */
  EndTime?: Date;

  /**
   * <p>The instances.</p>
   */
  Instances: Array<string> | undefined;

  /**
   * <p>The reason codes that describe the health state of your instance.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                     <code>instance-stuck-in-state</code>: My instance is stuck in a state.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>unresponsive</code>: My instance is unresponsive.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>not-accepting-credentials</code>: My instance is not accepting my
   *                     credentials.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>password-not-available</code>: A password is not available for my
   *                     instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>performance-network</code>: My instance is experiencing performance
   *                     problems that I believe are network related.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>performance-instance-store</code>: My instance is experiencing performance
   *                     problems that I believe are related to the instance stores.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>performance-ebs-volume</code>: My instance is experiencing performance
   *                     problems that I believe are related to an EBS volume.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>performance-other</code>: My instance is experiencing performance
   *                     problems.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                     <code>other</code>: [explain using the description parameter]</p>
   *             </li>
   *          </ul>
   */
  ReasonCodes: Array<ReportInstanceReasonCodes | string> | undefined;

  /**
   * <p>The time at which the reported instance health state began.</p>
   */
  StartTime?: Date;

  /**
   * <p>The status of all instances listed.</p>
   */
  Status: ReportStatusType | string | undefined;
}

export namespace ReportInstanceStatusRequest {
  export function isa(o: any): o is ReportInstanceStatusRequest {
    return _smithy.isa(o, "ReportInstanceStatusRequest");
  }
}

export type ReportStatusType = "impaired" | "ok";

/**
 * <p>The information to include in the launch template.</p>
 */
export interface RequestLaunchTemplateData {
  __type?: "RequestLaunchTemplateData";
  /**
   * <p>The block device mapping.</p>
   */
  BlockDeviceMappings?: Array<LaunchTemplateBlockDeviceMappingRequest>;

  /**
   * <p>The Capacity Reservation targeting option. If you do not specify this parameter, the
   * 			instance's Capacity Reservation preference defaults to <code>open</code>, which enables it
   * 			to run in any open Capacity Reservation that has matching attributes (instance type,
   * 			platform, Availability Zone).</p>
   */
  CapacityReservationSpecification?: LaunchTemplateCapacityReservationSpecificationRequest;

  /**
   * <p>The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU Options</a> in the <i>Amazon Elastic Compute Cloud User
   * 				Guide</i>.</p>
   */
  CpuOptions?: LaunchTemplateCpuOptionsRequest;

  /**
   * <p>The credit option for CPU usage of the instance. Valid for T2 or T3 instances
   *             only.</p>
   */
  CreditSpecification?: CreditSpecificationRequest;

  /**
   * <p>If you set this parameter to <code>true</code>, you can't terminate the instance using
   *     		the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch,
   *     		use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html">ModifyInstanceAttribute</a>.
   *     		Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to
   *     		<code>terminate</code>, you can terminate the instance by running the shutdown
   *     		command from the instance.</p>
   */
  DisableApiTermination?: boolean;

  /**
   * <p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
   *             provides dedicated throughput to Amazon EBS and an optimized configuration stack to
   *             provide optimal Amazon EBS I/O performance. This optimization isn't available with all
   *             instance types. Additional usage charges apply when using an EBS-optimized
   *             instance.</p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>An elastic GPU to associate with the instance.</p>
   */
  ElasticGpuSpecifications?: Array<ElasticGpuSpecification>;

  /**
   * <p>
   *             The elastic inference accelerator for the instance.
   *         </p>
   */
  ElasticInferenceAccelerators?: Array<
    LaunchTemplateElasticInferenceAccelerator
  >;

  /**
   * <p>Indicates whether an instance is enabled for hibernation. This parameter is valid only
   *             if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation
   *                 prerequisites</a>. For
   *             more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate Your Instance</a> in the
   *                 <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  HibernationOptions?: LaunchTemplateHibernationOptionsRequest;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: LaunchTemplateIamInstanceProfileSpecificationRequest;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId?: string;

  /**
   * <p>Indicates whether an instance stops or terminates when you initiate shutdown from
   *             the instance (using the operating system command for system shutdown).</p>
   *         <p>Default: <code>stop</code>
   *         </p>
   */
  InstanceInitiatedShutdownBehavior?: ShutdownBehavior | string;

  /**
   * <p>The market (purchasing) option for the instances.</p>
   */
  InstanceMarketOptions?: LaunchTemplateInstanceMarketOptionsRequest;

  /**
   * <p>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the
   *                 <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The ID of the kernel.</p>
   *         <important>
   *             <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
   *                 information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">User Provided
   *                     Kernels</a> in the <i>Amazon Elastic Compute Cloud User
   *                     Guide</i>.</p>
   *         </important>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair. You can create a key pair using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html">CreateKeyPair</a> or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html">ImportKeyPair</a>.</p>
   *         <important>
   *             <p>If you do not specify a key pair, you can't connect to the instance unless you
   *                 choose an AMI that is configured to allow users another way to log in.</p>
   *         </important>
   */
  KeyName?: string;

  /**
   * <p>The license configurations.</p>
   */
  LicenseSpecifications?: Array<LaunchTemplateLicenseConfigurationRequest>;

  /**
   * <p>The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the
   *             <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  MetadataOptions?: LaunchTemplateInstanceMetadataOptionsRequest;

  /**
   * <p>The monitoring for the instance.</p>
   */
  Monitoring?: LaunchTemplatesMonitoringRequest;

  /**
   * <p>One or more network interfaces. If you specify a network interface, you must specify
   *             any security groups and subnets as part of the network interface.</p>
   */
  NetworkInterfaces?: Array<
    LaunchTemplateInstanceNetworkInterfaceSpecificationRequest
  >;

  /**
   * <p>The placement for the instance.</p>
   */
  Placement?: LaunchTemplatePlacementRequest;

  /**
   * <p>The ID of the RAM disk.</p>
   *         <important>
   *             <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
   *                 information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">User Provided
   *                     Kernels</a> in the <i>Amazon Elastic Compute Cloud User
   *                     Guide</i>.</p>
   *         </important>
   */
  RamDiskId?: string;

  /**
   * <p>One or more security group IDs. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>. You cannot specify both a security group ID and
   *             security name in the same request.</p>
   */
  SecurityGroupIds?: Array<string>;

  /**
   * <p>[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC,
   *             you must use security group IDs instead. You cannot specify both a security group ID and
   *             security name in the same request.</p>
   */
  SecurityGroups?: Array<string>;

  /**
   * <p>The tags to apply to the resources during launch. You can only tag instances and
   *             volumes on launch. The specified tags are applied to all instances or volumes that are
   *             created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.</p>
   */
  TagSpecifications?: Array<LaunchTemplateTagSpecificationRequest>;

  /**
   * <p>The Base64-encoded user data to make available to the instance. For more
   *             information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands on Your Linux Instance
   *                 at Launch</a> (Linux) and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows).</p>
   */
  UserData?: string;
}

export namespace RequestLaunchTemplateData {
  export function isa(o: any): o is RequestLaunchTemplateData {
    return _smithy.isa(o, "RequestLaunchTemplateData");
  }
}

/**
 * <p>Contains the parameters for RequestSpotFleet.</p>
 */
export interface RequestSpotFleetRequest {
  __type?: "RequestSpotFleetRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The configuration for the Spot Fleet request.</p>
   */
  SpotFleetRequestConfig: SpotFleetRequestConfigData | undefined;
}

export namespace RequestSpotFleetRequest {
  export function isa(o: any): o is RequestSpotFleetRequest {
    return _smithy.isa(o, "RequestSpotFleetRequest");
  }
}

/**
 * <p>Contains the output of RequestSpotFleet.</p>
 */
export interface RequestSpotFleetResponse extends $MetadataBearer {
  __type?: "RequestSpotFleetResponse";
  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId?: string;
}

export namespace RequestSpotFleetResponse {
  export function isa(o: any): o is RequestSpotFleetResponse {
    return _smithy.isa(o, "RequestSpotFleetResponse");
  }
}

/**
 * <p>Contains the parameters for RequestSpotInstances.</p>
 */
export interface RequestSpotInstancesRequest {
  __type?: "RequestSpotInstancesRequest";
  /**
   * <p>The user-specified name for a logical grouping of requests.</p>
   *          <p>When you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.</p>
   *          <p>If there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.</p>
   *          <p>Default: Instances are launched in any available Availability Zone.</p>
   */
  AvailabilityZoneGroup?: string;

  /**
   * <p>The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p>
   *          <p>The duration period starts as soon as your Spot Instance receives its instance ID. At
   *             the end of the duration period, Amazon EC2 marks the Spot Instance for termination and
   *             provides a Spot Instance termination notice, which gives the instance a two-minute
   *             warning before it terminates.</p>
   *          <p>You can't specify an Availability Zone group or a launch group if you specify a
   *             duration.</p>
   */
  BlockDurationMinutes?: number;

  /**
   * <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   *        For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>
   *        in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The maximum number of Spot Instances to launch.</p>
   *          <p>Default: 1</p>
   */
  InstanceCount?: number;

  /**
   * <p>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</p>
   */
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;

  /**
   * <p>The instance launch group. Launch groups are Spot Instances that launch together and terminate together.</p>
   *          <p>Default: Instances are launched and terminated individually</p>
   */
  LaunchGroup?: string;

  /**
   * <p>The launch specification.</p>
   */
  LaunchSpecification?: RequestSpotLaunchSpecification;

  /**
   * <p>The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.</p>
   */
  SpotPrice?: string;

  /**
   * <p>The Spot Instance request type.</p>
   *          <p>Default: <code>one-time</code>
   *          </p>
   */
  Type?: SpotInstanceType | string;

  /**
   * <p>The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.</p>
   *    	     <p>The specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.</p>
   */
  ValidFrom?: Date;

  /**
   * <p>The end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached.
   *          If the request is persistent, it remains active until it is canceled or this date is reached. The default end date is 7 days from the current date.</p>
   */
  ValidUntil?: Date;
}

export namespace RequestSpotInstancesRequest {
  export function isa(o: any): o is RequestSpotInstancesRequest {
    return _smithy.isa(o, "RequestSpotInstancesRequest");
  }
}

/**
 * <p>Contains the output of RequestSpotInstances.</p>
 */
export interface RequestSpotInstancesResult extends $MetadataBearer {
  __type?: "RequestSpotInstancesResult";
  /**
   * <p>One or more Spot Instance requests.</p>
   */
  SpotInstanceRequests?: Array<SpotInstanceRequest>;
}

export namespace RequestSpotInstancesResult {
  export function isa(o: any): o is RequestSpotInstancesResult {
    return _smithy.isa(o, "RequestSpotInstancesResult");
  }
}

/**
 * <p>Describes the launch specification for an instance.</p>
 */
export interface RequestSpotLaunchSpecification {
  __type?: "RequestSpotLaunchSpecification";
  /**
   * <p>Deprecated.</p>
   */
  AddressingType?: string;

  /**
   * <p>One or more block device mapping entries. You can't specify both a snapshot ID and an encryption value.
   *            This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume,
   *            it is not blank and its encryption status is used for the volume encryption status.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
   *          <p>Default: <code>false</code>
   *          </p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: IamInstanceProfileSpecification;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The ID of the kernel.</p>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName?: string;

  /**
   * <p>Indicates whether basic or detailed monitoring is enabled for the instance.</p>
   *          <p>Default: Disabled</p>
   */
  Monitoring?: RunInstancesMonitoringEnabled;

  /**
   * <p>One or more network interfaces. If you specify a network interface, you must specify
   *            subnet IDs and security group IDs using the network interface.</p>
   */
  NetworkInterfaces?: Array<InstanceNetworkInterfaceSpecification>;

  /**
   * <p>The placement information for the instance.</p>
   */
  Placement?: SpotPlacement;

  /**
   * <p>The ID of the RAM disk.</p>
   */
  RamdiskId?: string;

  /**
   * <p>One or more security group IDs.</p>
   */
  SecurityGroupIds?: Array<string>;

  /**
   * <p>One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.</p>
   */
  SecurityGroups?: Array<string>;

  /**
   * <p>The IDs of the subnets in which to launch the instance. To specify multiple subnets, separate
   *            them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".</p>
   */
  SubnetId?: string;

  /**
   * <p>The Base64-encoded user data for the instance. User data is limited to 16 KB.</p>
   */
  UserData?: string;
}

export namespace RequestSpotLaunchSpecification {
  export function isa(o: any): o is RequestSpotLaunchSpecification {
    return _smithy.isa(o, "RequestSpotLaunchSpecification");
  }
}

/**
 * <p>Describes a reservation.</p>
 */
export interface Reservation extends $MetadataBearer {
  __type?: "Reservation";
  /**
   * <p>[EC2-Classic only] The security groups.</p>
   */
  Groups?: Array<GroupIdentifier>;

  /**
   * <p>The instances.</p>
   */
  Instances?: Array<Instance>;

  /**
   * <p>The ID of the AWS account that owns the reservation.</p>
   */
  OwnerId?: string;

  /**
   * <p>The ID of the requester that launched the instances on your behalf (for example, AWS
   *             Management Console or Auto Scaling).</p>
   */
  RequesterId?: string;

  /**
   * <p>The ID of the reservation.</p>
   */
  ReservationId?: string;
}

export namespace Reservation {
  export function isa(o: any): o is Reservation {
    return _smithy.isa(o, "Reservation");
  }
}

export enum ReservationState {
  ACTIVE = "active",
  PAYMENT_FAILED = "payment-failed",
  PAYMENT_PENDING = "payment-pending",
  RETIRED = "retired"
}

/**
 * <p>The cost associated with the Reserved Instance.</p>
 */
export interface ReservationValue {
  __type?: "ReservationValue";
  /**
   * <p>The hourly rate of the reservation.</p>
   */
  HourlyPrice?: string;

  /**
   * <p>The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).</p>
   */
  RemainingTotalValue?: string;

  /**
   * <p>The remaining upfront cost of the reservation.</p>
   */
  RemainingUpfrontValue?: string;
}

export namespace ReservationValue {
  export function isa(o: any): o is ReservationValue {
    return _smithy.isa(o, "ReservationValue");
  }
}

/**
 * <p>Describes the limit price of a Reserved Instance offering.</p>
 */
export interface ReservedInstanceLimitPrice {
  __type?: "ReservedInstanceLimitPrice";
  /**
   * <p>Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).</p>
   */
  Amount?: number;

  /**
   * <p>The currency in which the <code>limitPrice</code> amount is specified.
   * 				At this time, the only supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;
}

export namespace ReservedInstanceLimitPrice {
  export function isa(o: any): o is ReservedInstanceLimitPrice {
    return _smithy.isa(o, "ReservedInstanceLimitPrice");
  }
}

/**
 * <p>The total value of the Convertible Reserved Instance.</p>
 */
export interface ReservedInstanceReservationValue {
  __type?: "ReservedInstanceReservationValue";
  /**
   * <p>The total value of the Convertible Reserved Instance that you are exchanging.</p>
   */
  ReservationValue?: ReservationValue;

  /**
   * <p>The ID of the Convertible Reserved Instance that you are exchanging.</p>
   */
  ReservedInstanceId?: string;
}

export namespace ReservedInstanceReservationValue {
  export function isa(o: any): o is ReservedInstanceReservationValue {
    return _smithy.isa(o, "ReservedInstanceReservationValue");
  }
}

export type ReservedInstanceState =
  | "active"
  | "payment-failed"
  | "payment-pending"
  | "queued"
  | "queued-deleted"
  | "retired";

/**
 * <p>Describes a Reserved Instance.</p>
 */
export interface ReservedInstances {
  __type?: "ReservedInstances";
  /**
   * <p>The Availability Zone in which the Reserved Instance can be used.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes.
   * 				At this time, the only supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The duration of the Reserved Instance, in seconds.</p>
   */
  Duration?: number;

  /**
   * <p>The time when the Reserved Instance expires.</p>
   */
  End?: Date;

  /**
   * <p>The purchase price of the Reserved Instance.</p>
   */
  FixedPrice?: number;

  /**
   * <p>The number of reservations purchased.</p>
   */
  InstanceCount?: number;

  /**
   * <p>The tenancy of the instance.</p>
   */
  InstanceTenancy?: Tenancy | string;

  /**
   * <p>The instance type on which the Reserved Instance can be used.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The offering class of the Reserved Instance.</p>
   */
  OfferingClass?: OfferingClassType | string;

  /**
   * <p>The Reserved Instance offering type.</p>
   */
  OfferingType?: OfferingTypeValues | string;

  /**
   * <p>The Reserved Instance product platform description.</p>
   */
  ProductDescription?: RIProductDescription | string;

  /**
   * <p>The recurring charge tag assigned to the resource.</p>
   */
  RecurringCharges?: Array<RecurringCharge>;

  /**
   * <p>The ID of the Reserved Instance.</p>
   */
  ReservedInstancesId?: string;

  /**
   * <p>The scope of the Reserved Instance.</p>
   */
  Scope?: Scope | string;

  /**
   * <p>The date and time the Reserved Instance started.</p>
   */
  Start?: Date;

  /**
   * <p>The state of the Reserved Instance purchase.</p>
   */
  State?: ReservedInstanceState | string;

  /**
   * <p>Any tags assigned to the resource.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The usage price of the Reserved Instance, per hour.</p>
   */
  UsagePrice?: number;
}

export namespace ReservedInstances {
  export function isa(o: any): o is ReservedInstances {
    return _smithy.isa(o, "ReservedInstances");
  }
}

/**
 * <p>Describes the configuration settings for the modified Reserved Instances.</p>
 */
export interface ReservedInstancesConfiguration {
  __type?: "ReservedInstancesConfiguration";
  /**
   * <p>The Availability Zone for the modified Reserved Instances.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The number of modified Reserved Instances.</p>
   *          <note>
   *             <p>This is a required field for a request.</p>
   *          </note>
   */
  InstanceCount?: number;

  /**
   * <p>The instance type for the modified Reserved Instances.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.</p>
   */
  Platform?: string;

  /**
   * <p>Whether the Reserved Instance is applied to instances in a Region or instances in a specific Availability Zone.</p>
   */
  Scope?: Scope | string;
}

export namespace ReservedInstancesConfiguration {
  export function isa(o: any): o is ReservedInstancesConfiguration {
    return _smithy.isa(o, "ReservedInstancesConfiguration");
  }
}

/**
 * <p>Describes the ID of a Reserved Instance.</p>
 */
export interface ReservedInstancesId {
  __type?: "ReservedInstancesId";
  /**
   * <p>The ID of the Reserved Instance.</p>
   */
  ReservedInstancesId?: string;
}

export namespace ReservedInstancesId {
  export function isa(o: any): o is ReservedInstancesId {
    return _smithy.isa(o, "ReservedInstancesId");
  }
}

/**
 * <p>Describes a Reserved Instance listing.</p>
 */
export interface ReservedInstancesListing {
  __type?: "ReservedInstancesListing";
  /**
   * <p>A unique, case-sensitive key supplied by the client to ensure that the request is
   * 			idempotent. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The time the listing was created.</p>
   */
  CreateDate?: Date;

  /**
   * <p>The number of instances in this state.</p>
   */
  InstanceCounts?: Array<InstanceCount>;

  /**
   * <p>The price of the Reserved Instance listing.</p>
   */
  PriceSchedules?: Array<PriceSchedule>;

  /**
   * <p>The ID of the Reserved Instance.</p>
   */
  ReservedInstancesId?: string;

  /**
   * <p>The ID of the Reserved Instance listing.</p>
   */
  ReservedInstancesListingId?: string;

  /**
   * <p>The status of the Reserved Instance listing.</p>
   */
  Status?: ListingStatus | string;

  /**
   * <p>The reason for the current status of the Reserved Instance listing. The response can be blank.</p>
   */
  StatusMessage?: string;

  /**
   * <p>Any tags assigned to the resource.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The last modified timestamp of the listing.</p>
   */
  UpdateDate?: Date;
}

export namespace ReservedInstancesListing {
  export function isa(o: any): o is ReservedInstancesListing {
    return _smithy.isa(o, "ReservedInstancesListing");
  }
}

/**
 * <p>Describes a Reserved Instance modification.</p>
 */
export interface ReservedInstancesModification {
  __type?: "ReservedInstancesModification";
  /**
   * <p>A unique, case-sensitive key supplied by the client to ensure that the request is idempotent.
   * 			For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   * 				Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>The time when the modification request was created.</p>
   */
  CreateDate?: Date;

  /**
   * <p>The time for the modification to become effective.</p>
   */
  EffectiveDate?: Date;

  /**
   * <p>Contains target configurations along with their corresponding new Reserved Instance IDs.</p>
   */
  ModificationResults?: Array<ReservedInstancesModificationResult>;

  /**
   * <p>The IDs of one or more Reserved Instances.</p>
   */
  ReservedInstancesIds?: Array<ReservedInstancesId>;

  /**
   * <p>A unique ID for the Reserved Instance modification.</p>
   */
  ReservedInstancesModificationId?: string;

  /**
   * <p>The status of the Reserved Instances modification request.</p>
   */
  Status?: string;

  /**
   * <p>The reason for the status.</p>
   */
  StatusMessage?: string;

  /**
   * <p>The time when the modification request was last updated.</p>
   */
  UpdateDate?: Date;
}

export namespace ReservedInstancesModification {
  export function isa(o: any): o is ReservedInstancesModification {
    return _smithy.isa(o, "ReservedInstancesModification");
  }
}

/**
 * <p>Describes the modification request/s.</p>
 */
export interface ReservedInstancesModificationResult {
  __type?: "ReservedInstancesModificationResult";
  /**
   * <p>The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.</p>
   */
  ReservedInstancesId?: string;

  /**
   * <p>The target Reserved Instances configurations supplied as part of the modification request.</p>
   */
  TargetConfiguration?: ReservedInstancesConfiguration;
}

export namespace ReservedInstancesModificationResult {
  export function isa(o: any): o is ReservedInstancesModificationResult {
    return _smithy.isa(o, "ReservedInstancesModificationResult");
  }
}

/**
 * <p>Describes a Reserved Instance offering.</p>
 */
export interface ReservedInstancesOffering {
  __type?: "ReservedInstancesOffering";
  /**
   * <p>The Availability Zone in which the Reserved Instance can be used.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The currency of the Reserved Instance offering you are purchasing. It's
   * 				specified using ISO 4217 standard currency codes. At this time,
   * 				the only supported currency is <code>USD</code>.</p>
   */
  CurrencyCode?: CurrencyCodeValues | string;

  /**
   * <p>The duration of the Reserved Instance, in seconds.</p>
   */
  Duration?: number;

  /**
   * <p>The purchase price of the Reserved Instance.</p>
   */
  FixedPrice?: number;

  /**
   * <p>The tenancy of the instance.</p>
   */
  InstanceTenancy?: Tenancy | string;

  /**
   * <p>The instance type on which the Reserved Instance can be used.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS.
   *         If it's a Reserved Instance Marketplace offering, this is <code>true</code>.</p>
   */
  Marketplace?: boolean;

  /**
   * <p>If <code>convertible</code> it can be exchanged for Reserved Instances of
   *       the same or higher monetary value, with different configurations. If <code>standard</code>, it is not
   *       possible to perform an exchange.</p>
   */
  OfferingClass?: OfferingClassType | string;

  /**
   * <p>The Reserved Instance offering type.</p>
   */
  OfferingType?: OfferingTypeValues | string;

  /**
   * <p>The pricing details of the Reserved Instance offering.</p>
   */
  PricingDetails?: Array<PricingDetail>;

  /**
   * <p>The Reserved Instance product platform description.</p>
   */
  ProductDescription?: RIProductDescription | string;

  /**
   * <p>The recurring charge tag assigned to the resource.</p>
   */
  RecurringCharges?: Array<RecurringCharge>;

  /**
   * <p>The ID of the Reserved Instance offering. This is the offering ID used in <a>GetReservedInstancesExchangeQuote</a>
   *      to confirm that an exchange can be made.</p>
   */
  ReservedInstancesOfferingId?: string;

  /**
   * <p>Whether the Reserved Instance is applied to instances in a Region or an Availability Zone.</p>
   */
  Scope?: Scope | string;

  /**
   * <p>The usage price of the Reserved Instance, per hour.</p>
   */
  UsagePrice?: number;
}

export namespace ReservedInstancesOffering {
  export function isa(o: any): o is ReservedInstancesOffering {
    return _smithy.isa(o, "ReservedInstancesOffering");
  }
}

export interface ResetEbsDefaultKmsKeyIdRequest {
  __type?: "ResetEbsDefaultKmsKeyIdRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace ResetEbsDefaultKmsKeyIdRequest {
  export function isa(o: any): o is ResetEbsDefaultKmsKeyIdRequest {
    return _smithy.isa(o, "ResetEbsDefaultKmsKeyIdRequest");
  }
}

export interface ResetEbsDefaultKmsKeyIdResult extends $MetadataBearer {
  __type?: "ResetEbsDefaultKmsKeyIdResult";
  /**
   * <p>The Amazon Resource Name (ARN) of the default CMK for EBS encryption by default.</p>
   */
  KmsKeyId?: string;
}

export namespace ResetEbsDefaultKmsKeyIdResult {
  export function isa(o: any): o is ResetEbsDefaultKmsKeyIdResult {
    return _smithy.isa(o, "ResetEbsDefaultKmsKeyIdResult");
  }
}

export type ResetFpgaImageAttributeName = "loadPermission";

export interface ResetFpgaImageAttributeRequest {
  __type?: "ResetFpgaImageAttributeRequest";
  /**
   * <p>The attribute.</p>
   */
  Attribute?: ResetFpgaImageAttributeName | string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AFI.</p>
   */
  FpgaImageId: string | undefined;
}

export namespace ResetFpgaImageAttributeRequest {
  export function isa(o: any): o is ResetFpgaImageAttributeRequest {
    return _smithy.isa(o, "ResetFpgaImageAttributeRequest");
  }
}

export interface ResetFpgaImageAttributeResult extends $MetadataBearer {
  __type?: "ResetFpgaImageAttributeResult";
  /**
   * <p>Is <code>true</code> if the request succeeds, and an error otherwise.</p>
   */
  Return?: boolean;
}

export namespace ResetFpgaImageAttributeResult {
  export function isa(o: any): o is ResetFpgaImageAttributeResult {
    return _smithy.isa(o, "ResetFpgaImageAttributeResult");
  }
}

export type ResetImageAttributeName = "launchPermission";

/**
 * <p>Contains the parameters for ResetImageAttribute.</p>
 */
export interface ResetImageAttributeRequest {
  __type?: "ResetImageAttributeRequest";
  /**
   * <p>The attribute to reset (currently you can only reset the launch permission attribute).</p>
   */
  Attribute: ResetImageAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId: string | undefined;
}

export namespace ResetImageAttributeRequest {
  export function isa(o: any): o is ResetImageAttributeRequest {
    return _smithy.isa(o, "ResetImageAttributeRequest");
  }
}

export interface ResetInstanceAttributeRequest {
  __type?: "ResetInstanceAttributeRequest";
  /**
   * <p>The attribute to reset.</p>
   *         <important>
   *             <p>You can only reset the following attributes: <code>kernel</code> |
   *                     <code>ramdisk</code> | <code>sourceDestCheck</code>. To change an instance
   *                 attribute, use <a>ModifyInstanceAttribute</a>.</p>
   *         </important>
   */
  Attribute: InstanceAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;
}

export namespace ResetInstanceAttributeRequest {
  export function isa(o: any): o is ResetInstanceAttributeRequest {
    return _smithy.isa(o, "ResetInstanceAttributeRequest");
  }
}

/**
 * <p>Contains the parameters for ResetNetworkInterfaceAttribute.</p>
 */
export interface ResetNetworkInterfaceAttributeRequest {
  __type?: "ResetNetworkInterfaceAttributeRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;

  /**
   * <p>The source/destination checking attribute. Resets the value to <code>true</code>.</p>
   */
  SourceDestCheck?: string;
}

export namespace ResetNetworkInterfaceAttributeRequest {
  export function isa(o: any): o is ResetNetworkInterfaceAttributeRequest {
    return _smithy.isa(o, "ResetNetworkInterfaceAttributeRequest");
  }
}

export interface ResetSnapshotAttributeRequest {
  __type?: "ResetSnapshotAttributeRequest";
  /**
   * <p>The attribute to reset. Currently, only the attribute for permission to create volumes can
   *       be reset.</p>
   */
  Attribute: SnapshotAttributeName | string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId: string | undefined;
}

export namespace ResetSnapshotAttributeRequest {
  export function isa(o: any): o is ResetSnapshotAttributeRequest {
    return _smithy.isa(o, "ResetSnapshotAttributeRequest");
  }
}

export type ResourceType =
  | "client-vpn-endpoint"
  | "customer-gateway"
  | "dedicated-host"
  | "dhcp-options"
  | "elastic-ip"
  | "fleet"
  | "fpga-image"
  | "host-reservation"
  | "image"
  | "instance"
  | "internet-gateway"
  | "key-pair"
  | "launch-template"
  | "natgateway"
  | "network-acl"
  | "network-interface"
  | "placement-group"
  | "reserved-instances"
  | "route-table"
  | "security-group"
  | "snapshot"
  | "spot-fleet-request"
  | "spot-instances-request"
  | "subnet"
  | "traffic-mirror-filter"
  | "traffic-mirror-session"
  | "traffic-mirror-target"
  | "transit-gateway"
  | "transit-gateway-attachment"
  | "transit-gateway-multicast-domain"
  | "transit-gateway-route-table"
  | "volume"
  | "vpc"
  | "vpc-peering-connection"
  | "vpn-connection"
  | "vpn-gateway";

/**
 * <p>Describes the error that's returned when you cannot delete a launch template
 *             version.</p>
 */
export interface ResponseError {
  __type?: "ResponseError";
  /**
   * <p>The error code.</p>
   */
  Code?: LaunchTemplateErrorCode | string;

  /**
   * <p>The error message, if applicable.</p>
   */
  Message?: string;
}

export namespace ResponseError {
  export function isa(o: any): o is ResponseError {
    return _smithy.isa(o, "ResponseError");
  }
}

/**
 * <p>The information for a launch template. </p>
 */
export interface ResponseLaunchTemplateData {
  __type?: "ResponseLaunchTemplateData";
  /**
   * <p>The block device mappings.</p>
   */
  BlockDeviceMappings?: Array<LaunchTemplateBlockDeviceMapping>;

  /**
   * <p>Information about the Capacity Reservation targeting option.</p>
   */
  CapacityReservationSpecification?: LaunchTemplateCapacityReservationSpecificationResponse;

  /**
   * <p>The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU Options</a> in the <i>Amazon Elastic Compute Cloud User
   * 				Guide</i>.</p>
   */
  CpuOptions?: LaunchTemplateCpuOptions;

  /**
   * <p>The credit option for CPU usage of the instance.</p>
   */
  CreditSpecification?: CreditSpecification;

  /**
   * <p>If set to <code>true</code>, indicates that the instance cannot be terminated using
   *             the Amazon EC2 console, command line tool, or API.</p>
   */
  DisableApiTermination?: boolean;

  /**
   * <p>Indicates whether the instance is optimized for Amazon EBS I/O. </p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The elastic GPU specification.</p>
   */
  ElasticGpuSpecifications?: Array<ElasticGpuSpecificationResponse>;

  /**
   * <p>
   *             The elastic inference accelerator for the instance.
   *         </p>
   */
  ElasticInferenceAccelerators?: Array<
    LaunchTemplateElasticInferenceAcceleratorResponse
  >;

  /**
   * <p>Indicates whether an instance is configured for hibernation. For more information, see
   *                 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate
   *                 Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  HibernationOptions?: LaunchTemplateHibernationOptions;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: LaunchTemplateIamInstanceProfileSpecification;

  /**
   * <p>The ID of the AMI that was used to launch the instance.</p>
   */
  ImageId?: string;

  /**
   * <p>Indicates whether an instance stops or terminates when you initiate shutdown from
   *             the instance (using the operating system command for system shutdown).</p>
   */
  InstanceInitiatedShutdownBehavior?: ShutdownBehavior | string;

  /**
   * <p>The market (purchasing) option for the instances.</p>
   */
  InstanceMarketOptions?: LaunchTemplateInstanceMarketOptions;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The ID of the kernel, if applicable.</p>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName?: string;

  /**
   * <p>The license configurations.</p>
   */
  LicenseSpecifications?: Array<LaunchTemplateLicenseConfiguration>;

  /**
   * <p>The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the
   *             <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  MetadataOptions?: LaunchTemplateInstanceMetadataOptions;

  /**
   * <p>The monitoring for the instance.</p>
   */
  Monitoring?: LaunchTemplatesMonitoring;

  /**
   * <p>The network interfaces.</p>
   */
  NetworkInterfaces?: Array<
    LaunchTemplateInstanceNetworkInterfaceSpecification
  >;

  /**
   * <p>The placement of the instance.</p>
   */
  Placement?: LaunchTemplatePlacement;

  /**
   * <p>The ID of the RAM disk, if applicable.</p>
   */
  RamDiskId?: string;

  /**
   * <p>The security group IDs.</p>
   */
  SecurityGroupIds?: Array<string>;

  /**
   * <p>The security group names.</p>
   */
  SecurityGroups?: Array<string>;

  /**
   * <p>The tags.</p>
   */
  TagSpecifications?: Array<LaunchTemplateTagSpecification>;

  /**
   * <p>The user data for the instance. </p>
   */
  UserData?: string;
}

export namespace ResponseLaunchTemplateData {
  export function isa(o: any): o is ResponseLaunchTemplateData {
    return _smithy.isa(o, "ResponseLaunchTemplateData");
  }
}

export interface RestoreAddressToClassicRequest {
  __type?: "RestoreAddressToClassicRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The Elastic IP address.</p>
   */
  PublicIp: string | undefined;
}

export namespace RestoreAddressToClassicRequest {
  export function isa(o: any): o is RestoreAddressToClassicRequest {
    return _smithy.isa(o, "RestoreAddressToClassicRequest");
  }
}

export interface RestoreAddressToClassicResult extends $MetadataBearer {
  __type?: "RestoreAddressToClassicResult";
  /**
   * <p>The Elastic IP address.</p>
   */
  PublicIp?: string;

  /**
   * <p>The move status for the IP address.</p>
   */
  Status?: Status | string;
}

export namespace RestoreAddressToClassicResult {
  export function isa(o: any): o is RestoreAddressToClassicResult {
    return _smithy.isa(o, "RestoreAddressToClassicResult");
  }
}

export interface RevokeClientVpnIngressRequest {
  __type?: "RevokeClientVpnIngressRequest";
  /**
   * <p>The ID of the Active Directory group for which to revoke access. </p>
   */
  AccessGroupId?: string;

  /**
   * <p>The ID of the Client VPN endpoint with which the authorization rule is associated.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether access should be revoked for all clients.</p>
   */
  RevokeAllGroups?: boolean;

  /**
   * <p>The IPv4 address range, in CIDR notation, of the network for which access is being removed.</p>
   */
  TargetNetworkCidr: string | undefined;
}

export namespace RevokeClientVpnIngressRequest {
  export function isa(o: any): o is RevokeClientVpnIngressRequest {
    return _smithy.isa(o, "RevokeClientVpnIngressRequest");
  }
}

export interface RevokeClientVpnIngressResult extends $MetadataBearer {
  __type?: "RevokeClientVpnIngressResult";
  /**
   * <p>The current state of the authorization rule.</p>
   */
  Status?: ClientVpnAuthorizationRuleStatus;
}

export namespace RevokeClientVpnIngressResult {
  export function isa(o: any): o is RevokeClientVpnIngressResult {
    return _smithy.isa(o, "RevokeClientVpnIngressResult");
  }
}

export interface RevokeSecurityGroupEgressRequest {
  __type?: "RevokeSecurityGroupEgressRequest";
  /**
   * <p>Not supported. Use a set of IP permissions to specify the CIDR.</p>
   */
  CidrIp?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Not supported. Use a set of IP permissions to specify the port.</p>
   */
  FromPort?: number;

  /**
   * <p>The ID of the security group.</p>
   */
  GroupId: string | undefined;

  /**
   * <p>The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.</p>
   */
  IpPermissions?: Array<IpPermission>;

  /**
   * <p>Not supported. Use a set of IP permissions to specify the protocol name or
   *             number.</p>
   */
  IpProtocol?: string;

  /**
   * <p>Not supported. Use a set of IP permissions to specify a
   *            destination security group.</p>
   */
  SourceSecurityGroupName?: string;

  /**
   * <p>Not supported. Use a set of IP permissions to specify a destination security
   *             group.</p>
   */
  SourceSecurityGroupOwnerId?: string;

  /**
   * <p>Not supported. Use a set of IP permissions to specify the port.</p>
   */
  ToPort?: number;
}

export namespace RevokeSecurityGroupEgressRequest {
  export function isa(o: any): o is RevokeSecurityGroupEgressRequest {
    return _smithy.isa(o, "RevokeSecurityGroupEgressRequest");
  }
}

export interface RevokeSecurityGroupIngressRequest {
  __type?: "RevokeSecurityGroupIngressRequest";
  /**
   * <p>The CIDR IP address range. You can't specify this parameter when specifying a source security group.</p>
   */
  CidrIp?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number,
   *         use <code>-1</code> to specify all ICMP types.</p>
   */
  FromPort?: number;

  /**
   * <p>The ID of the security group. You must specify either the security group ID or the
   *            security group name in the request. For security groups in a nondefault VPC, you must
   *            specify the security group ID.</p>
   */
  GroupId?: string;

  /**
   * <p>[EC2-Classic, default VPC] The name of the security group. You must specify either the
   *            security group ID or the security group name in the request.</p>
   */
  GroupName?: string;

  /**
   * <p>The sets of IP permissions. You can't specify a source security group and a CIDR IP address range in the same set of permissions.</p>
   */
  IpPermissions?: Array<IpPermission>;

  /**
   * <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number
   *         (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>).
   *         Use <code>-1</code> to specify all.</p>
   */
  IpProtocol?: string;

  /**
   * <p>[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.</p>
   */
  SourceSecurityGroupName?: string;

  /**
   * <p>[EC2-Classic] The AWS account ID of the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead.</p>
   */
  SourceSecurityGroupOwnerId?: string;

  /**
   * <p>The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number,
   *         use <code>-1</code> to specify all ICMP codes for the ICMP type.</p>
   */
  ToPort?: number;
}

export namespace RevokeSecurityGroupIngressRequest {
  export function isa(o: any): o is RevokeSecurityGroupIngressRequest {
    return _smithy.isa(o, "RevokeSecurityGroupIngressRequest");
  }
}

export type RootDeviceType = "ebs" | "instance-store";

/**
 * <p>Describes a route in a route table.</p>
 */
export interface Route {
  __type?: "Route";
  /**
   * <p>The IPv4 CIDR block used for the destination match.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The IPv6 CIDR block used for the destination match.</p>
   */
  DestinationIpv6CidrBlock?: string;

  /**
   * <p>The prefix of the AWS service.</p>
   */
  DestinationPrefixListId?: string;

  /**
   * <p>The ID of the egress-only internet gateway.</p>
   */
  EgressOnlyInternetGatewayId?: string;

  /**
   * <p>The ID of a gateway attached to your VPC.</p>
   */
  GatewayId?: string;

  /**
   * <p>The ID of a NAT instance in your VPC.</p>
   */
  InstanceId?: string;

  /**
   * <p>The AWS account ID of the owner of the instance.</p>
   */
  InstanceOwnerId?: string;

  /**
   * <p>The ID of the local gateway.</p>
   */
  LocalGatewayId?: string;

  /**
   * <p>The ID of a NAT gateway.</p>
   */
  NatGatewayId?: string;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>Describes how the route was created.</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>CreateRoute</code> - The route was manually added to the route table.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p>
   *             </li>
   *          </ul>
   */
  Origin?: RouteOrigin | string;

  /**
   * <p>The state of the route. The <code>blackhole</code> state indicates that the
   * 				route's target isn't available (for example, the specified gateway isn't attached to the
   * 				VPC, or the specified NAT instance has been terminated).</p>
   */
  State?: RouteState | string;

  /**
   * <p>The ID of a transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of a VPC peering connection.</p>
   */
  VpcPeeringConnectionId?: string;
}

export namespace Route {
  export function isa(o: any): o is Route {
    return _smithy.isa(o, "Route");
  }
}

export type RouteOrigin =
  | "CreateRoute"
  | "CreateRouteTable"
  | "EnableVgwRoutePropagation";

export type RouteState = "active" | "blackhole";

/**
 * <p>Describes a route table.</p>
 */
export interface RouteTable {
  __type?: "RouteTable";
  /**
   * <p>The associations between the route table and one or more subnets or a gateway.</p>
   */
  Associations?: Array<RouteTableAssociation>;

  /**
   * <p>The ID of the AWS account that owns the route table.</p>
   */
  OwnerId?: string;

  /**
   * <p>Any virtual private gateway (VGW) propagating routes.</p>
   */
  PropagatingVgws?: Array<PropagatingVgw>;

  /**
   * <p>The ID of the route table.</p>
   */
  RouteTableId?: string;

  /**
   * <p>The routes in the route table.</p>
   */
  Routes?: Array<Route>;

  /**
   * <p>Any tags assigned to the route table.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace RouteTable {
  export function isa(o: any): o is RouteTable {
    return _smithy.isa(o, "RouteTable");
  }
}

/**
 * <p>Describes an association between a route table and a subnet or gateway.</p>
 */
export interface RouteTableAssociation {
  __type?: "RouteTableAssociation";
  /**
   * <p>The state of the association.</p>
   */
  AssociationState?: RouteTableAssociationState;

  /**
   * <p>The ID of the internet gateway or virtual private gateway.</p>
   */
  GatewayId?: string;

  /**
   * <p>Indicates whether this is the main route table.</p>
   */
  Main?: boolean;

  /**
   * <p>The ID of the association.</p>
   */
  RouteTableAssociationId?: string;

  /**
   * <p>The ID of the route table.</p>
   */
  RouteTableId?: string;

  /**
   * <p>The ID of the subnet. A subnet ID is not returned for an implicit association.</p>
   */
  SubnetId?: string;
}

export namespace RouteTableAssociation {
  export function isa(o: any): o is RouteTableAssociation {
    return _smithy.isa(o, "RouteTableAssociation");
  }
}

/**
 * <p>Describes the state of an association between a route table and a subnet or gateway.</p>
 */
export interface RouteTableAssociationState {
  __type?: "RouteTableAssociationState";
  /**
   * <p>The state of the association.</p>
   */
  State?: RouteTableAssociationStateCode | string;

  /**
   * <p>The status message, if applicable.</p>
   */
  StatusMessage?: string;
}

export namespace RouteTableAssociationState {
  export function isa(o: any): o is RouteTableAssociationState {
    return _smithy.isa(o, "RouteTableAssociationState");
  }
}

export type RouteTableAssociationStateCode =
  | "associated"
  | "associating"
  | "disassociated"
  | "disassociating"
  | "failed";

export type RuleAction = "allow" | "deny";

/**
 * <p>Describes the monitoring of an instance.</p>
 */
export interface RunInstancesMonitoringEnabled {
  __type?: "RunInstancesMonitoringEnabled";
  /**
   * <p>Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is
   *             enabled.</p>
   */
  Enabled: boolean | undefined;
}

export namespace RunInstancesMonitoringEnabled {
  export function isa(o: any): o is RunInstancesMonitoringEnabled {
    return _smithy.isa(o, "RunInstancesMonitoringEnabled");
  }
}

export interface RunInstancesRequest {
  __type?: "RunInstancesRequest";
  /**
   * <p>Reserved.</p>
   */
  AdditionalInfo?: string;

  /**
   * <p>The block device mapping entries.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>Information about the Capacity Reservation targeting option. If you do not specify this parameter, the
   *             instance's Capacity Reservation preference defaults to <code>open</code>, which enables
   *             it to run in any open Capacity Reservation that has matching attributes (instance type,
   *             platform, Availability Zone).</p>
   */
  CapacityReservationSpecification?: CapacityReservationSpecification;

  /**
   * <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the
   *             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
   *                 Idempotency</a>.</p>
   *         <p>Constraints: Maximum 64 ASCII characters</p>
   */
  ClientToken?: string;

  /**
   * <p>The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU Options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  CpuOptions?: CpuOptionsRequest;

  /**
   * <p>The credit option for CPU usage of the burstable performance instance. Valid values
   *             are <code>standard</code> and <code>unlimited</code>. To change this attribute after
   *             launch, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html">
   *                 ModifyInstanceCreditSpecification</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable
   *                 Performance Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         <p>Default: <code>standard</code> (T2 instances) or <code>unlimited</code> (T3/T3a
   *             instances)</p>
   */
  CreditSpecification?: CreditSpecificationRequest;

  /**
   * <p>If you set this parameter to <code>true</code>, you can't terminate the instance using
   *             the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch,
   *             use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html">ModifyInstanceAttribute</a>.
   *             Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to
   *                 <code>terminate</code>, you can terminate the instance by running the shutdown
   *             command from the instance.</p>
   *         <p>Default: <code>false</code>
   *         </p>
   */
  DisableApiTermination?: boolean;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
   *             provides dedicated throughput to Amazon EBS and an optimized configuration stack to
   *             provide optimal Amazon EBS I/O performance. This optimization isn't available with all
   *             instance types. Additional usage charges apply when using an EBS-optimized
   *             instance.</p>
   *         <p>Default: <code>false</code>
   *         </p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that
   *             you can attach to your Windows instance to accelerate the graphics performance of your
   *             applications. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html"> Amazon EC2 Elastic
   *                 GPUs</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  ElasticGpuSpecification?: Array<ElasticGpuSpecification>;

  /**
   * <p>An elastic inference accelerator to associate with the instance. Elastic inference
   *             accelerators are a resource you can attach to your Amazon EC2 instances to accelerate
   *             your Deep Learning (DL) inference workloads.</p>
   */
  ElasticInferenceAccelerators?: Array<ElasticInferenceAccelerator>;

  /**
   * <p>Indicates whether an instance is enabled for hibernation. For more information, see
   *                 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate
   *                 Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   */
  HibernationOptions?: HibernationOptionsRequest;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: IamInstanceProfileSpecification;

  /**
   * <p>The ID of the AMI. An AMI ID is required to launch an instance and must be
   *         	specified here or in a launch template.</p>
   */
  ImageId?: string;

  /**
   * <p>Indicates whether an instance stops or terminates when you initiate shutdown from the
   *             instance (using the operating system command for system shutdown).</p>
   *         <p>Default: <code>stop</code>
   *         </p>
   */
  InstanceInitiatedShutdownBehavior?: ShutdownBehavior | string;

  /**
   * <p>The market (purchasing) option for the instances.</p>
   *         <p>For <a>RunInstances</a>, persistent Spot Instance requests are
   *             only supported when <b>InstanceInterruptionBehavior</b> is set
   *             to either <code>hibernate</code> or <code>stop</code>.</p>
   */
  InstanceMarketOptions?: InstanceMarketOptionsRequest;

  /**
   * <p>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the
   *                 <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         <p>Default: <code>m1.small</code>
   *          </p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>[EC2-VPC] The number of IPv6 addresses to associate with the primary network
   *             interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You
   *             cannot specify this option and the option to assign specific IPv6 addresses in the same
   *             request. You can specify this option if you've specified a minimum number of instances
   *             to launch.</p>
   *         <p>You cannot specify this option and the network interfaces option in the same
   *             request.</p>
   */
  Ipv6AddressCount?: number;

  /**
   * <p>[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the
   *             primary network interface. You cannot specify this option and the option to assign a
   *             number of IPv6 addresses in the same request. You cannot specify this option if you've
   *             specified a minimum number of instances to launch.</p>
   *         <p>You cannot specify this option and the network interfaces option in the same
   *             request.</p>
   */
  Ipv6Addresses?: Array<InstanceIpv6Address>;

  /**
   * <p>The ID of the kernel.</p>
   *         <important>
   *             <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
   *                 information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html"> PV-GRUB</a> in the
   *                     <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         </important>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair. You can create a key pair using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html">CreateKeyPair</a> or
   *                 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html">ImportKeyPair</a>.</p>
   *         <important>
   *             <p>If you do not specify a key pair, you can't connect to the instance unless you
   *                 choose an AMI that is configured to allow users another way to log in.</p>
   *         </important>
   */
  KeyName?: string;

  /**
   * <p>The launch template to use to launch the instances. Any parameters that you specify in
   *                 <a>RunInstances</a> override the same parameters in the launch template.
   *             You can specify either the name or ID of a launch template, but not both.</p>
   */
  LaunchTemplate?: LaunchTemplateSpecification;

  /**
   * <p>The license configurations.</p>
   */
  LicenseSpecifications?: Array<LicenseConfigurationRequest>;

  /**
   * <p>The maximum number of instances to launch. If you specify more instances than Amazon
   *             EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible
   *             number of instances above <code>MinCount</code>.</p>
   *         <p>Constraints: Between 1 and the maximum number you're allowed for the specified
   *             instance type. For more information about the default limits, and how to request an
   *             increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I
   *                 run in Amazon EC2</a> in the Amazon EC2 FAQ.</p>
   */
  MaxCount: number | undefined;

  /**
   * <p>The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a>.</p>
   */
  MetadataOptions?: InstanceMetadataOptionsRequest;

  /**
   * <p>The minimum number of instances to launch. If you specify a minimum that is more
   *             instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2
   *             launches no instances.</p>
   *         <p>Constraints: Between 1 and the maximum number you're allowed for the specified
   *             instance type. For more information about the default limits, and how to request an
   *             increase, see <a href="http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2">How many instances can I
   *                 run in Amazon EC2</a> in the Amazon EC2 General FAQ.</p>
   */
  MinCount: number | undefined;

  /**
   * <p>Specifies whether detailed monitoring is enabled for the instance.</p>
   */
  Monitoring?: RunInstancesMonitoringEnabled;

  /**
   * <p>The network interfaces to associate with the instance. If you specify a network interface,
   *             you must specify any security groups and subnets as part of the network interface.</p>
   */
  NetworkInterfaces?: Array<InstanceNetworkInterfaceSpecification>;

  /**
   * <p>The placement for the instance.</p>
   */
  Placement?: Placement;

  /**
   * <p>[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address
   *             range of the subnet.</p>
   *         <p>Only one private IP address can be designated as primary. You can't specify this
   *             option if you've specified the option to designate a private IP address as the primary
   *             IP address in a network interface specification. You cannot specify this option if
   *             you're launching more than one instance in the request.</p>
   *         <p>You cannot specify this option and the network interfaces option in the same
   *             request.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>The ID of the RAM disk to select. Some kernels require additional drivers at launch.
   *             Check the kernel requirements for information about whether you need to specify a RAM
   *             disk. To find kernel requirements, go to the AWS Resource Center and search for the
   *             kernel ID.</p>
   *         <important>
   *             <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
   *                 information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html"> PV-GRUB</a> in the
   *                     <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         </important>
   */
  RamdiskId?: string;

  /**
   * <p>The IDs of the security groups. You can create a security group using
   * 	<a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>.</p>
   *         <p>If you specify a network interface, you must specify any security groups as part of the network interface.</p>
   */
  SecurityGroupIds?: Array<string>;

  /**
   * <p>[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you
   *             must use security group IDs instead.</p>
   *         <p>If you specify a network interface, you must specify any security groups as part of
   *             the network interface.</p>
   *         <p>Default: Amazon EC2 uses the default security group.</p>
   */
  SecurityGroups?: Array<string>;

  /**
   * <p>[EC2-VPC] The ID of the subnet to launch the instance into.</p>
   *         <p>If you specify a network interface, you must specify any subnets as part of the network interface.</p>
   */
  SubnetId?: string;

  /**
   * <p>The tags to apply to the resources during launch. You can only tag instances and
   *             volumes on launch. The specified tags are applied to all instances or volumes that are
   *             created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.</p>
   */
  TagSpecifications?: Array<TagSpecification>;

  /**
   * <p>The user data to make available to the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands
   *                 on Your Linux Instance at Launch</a> (Linux) and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows). If you are using a command line tool,
   *             base64-encoding is performed for you, and you can load the text from a file. Otherwise,
   *             you must provide base64-encoded text. User data is limited to 16 KB.</p>
   */
  UserData?: string;
}

export namespace RunInstancesRequest {
  export function isa(o: any): o is RunInstancesRequest {
    return _smithy.isa(o, "RunInstancesRequest");
  }
}

/**
 * <p>Contains the parameters for RunScheduledInstances.</p>
 */
export interface RunScheduledInstancesRequest {
  __type?: "RunScheduledInstancesRequest";
  /**
   * <p>Unique, case-sensitive identifier that ensures the idempotency of the request.
   *          For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The number of instances.</p>
   *          <p>Default: 1</p>
   */
  InstanceCount?: number;

  /**
   * <p>The launch specification. You must match the instance type, Availability Zone,
   *          network, and platform of the schedule that you purchased.</p>
   */
  LaunchSpecification: ScheduledInstancesLaunchSpecification | undefined;

  /**
   * <p>The Scheduled Instance ID.</p>
   */
  ScheduledInstanceId: string | undefined;
}

export namespace RunScheduledInstancesRequest {
  export function isa(o: any): o is RunScheduledInstancesRequest {
    return _smithy.isa(o, "RunScheduledInstancesRequest");
  }
}

/**
 * <p>Contains the output of RunScheduledInstances.</p>
 */
export interface RunScheduledInstancesResult extends $MetadataBearer {
  __type?: "RunScheduledInstancesResult";
  /**
   * <p>The IDs of the newly launched instances.</p>
   */
  InstanceIdSet?: Array<string>;
}

export namespace RunScheduledInstancesResult {
  export function isa(o: any): o is RunScheduledInstancesResult {
    return _smithy.isa(o, "RunScheduledInstancesResult");
  }
}

/**
 * <p>Describes the storage parameters for S3 and S3 buckets for an instance store-backed AMI.</p>
 */
export interface S3Storage {
  __type?: "S3Storage";
  /**
   * <p>The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance
   *        in <a href="https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best Practices for Managing AWS Access Keys</a>.</p>
   */
  AWSAccessKeyId?: string;

  /**
   * <p>The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.</p>
   */
  Bucket?: string;

  /**
   * <p>The beginning of the file name of the AMI.</p>
   */
  Prefix?: string;

  /**
   * <p>An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.</p>
   */
  UploadPolicy?: Uint8Array;

  /**
   * <p>The signature of the JSON document.</p>
   */
  UploadPolicySignature?: string;
}

export namespace S3Storage {
  export function isa(o: any): o is S3Storage {
    return _smithy.isa(o, "S3Storage");
  }
}

/**
 * <p>Describes a Scheduled Instance.</p>
 */
export interface ScheduledInstance {
  __type?: "ScheduledInstance";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The date when the Scheduled Instance was purchased.</p>
   */
  CreateDate?: Date;

  /**
   * <p>The hourly price for a single instance.</p>
   */
  HourlyPrice?: string;

  /**
   * <p>The number of instances.</p>
   */
  InstanceCount?: number;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: string;

  /**
   * <p>The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
   */
  NetworkPlatform?: string;

  /**
   * <p>The time for the next schedule to start.</p>
   */
  NextSlotStartTime?: Date;

  /**
   * <p>The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
   */
  Platform?: string;

  /**
   * <p>The time that the previous schedule ended or will end.</p>
   */
  PreviousSlotEndTime?: Date;

  /**
   * <p>The schedule recurrence.</p>
   */
  Recurrence?: ScheduledInstanceRecurrence;

  /**
   * <p>The Scheduled Instance ID.</p>
   */
  ScheduledInstanceId?: string;

  /**
   * <p>The number of hours in the schedule.</p>
   */
  SlotDurationInHours?: number;

  /**
   * <p>The end date for the Scheduled Instance.</p>
   */
  TermEndDate?: Date;

  /**
   * <p>The start date for the Scheduled Instance.</p>
   */
  TermStartDate?: Date;

  /**
   * <p>The total number of hours for a single instance for the entire term.</p>
   */
  TotalScheduledInstanceHours?: number;
}

export namespace ScheduledInstance {
  export function isa(o: any): o is ScheduledInstance {
    return _smithy.isa(o, "ScheduledInstance");
  }
}

/**
 * <p>Describes a schedule that is available for your Scheduled Instances.</p>
 */
export interface ScheduledInstanceAvailability {
  __type?: "ScheduledInstanceAvailability";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The number of available instances.</p>
   */
  AvailableInstanceCount?: number;

  /**
   * <p>The time period for the first schedule to start.</p>
   */
  FirstSlotStartTime?: Date;

  /**
   * <p>The hourly price for a single instance.</p>
   */
  HourlyPrice?: string;

  /**
   * <p>The instance type. You can specify one of the C3, C4, M4, or R3 instance types.</p>
   */
  InstanceType?: string;

  /**
   * <p>The maximum term. The only possible value is 365 days.</p>
   */
  MaxTermDurationInDays?: number;

  /**
   * <p>The minimum term. The only possible value is 365 days.</p>
   */
  MinTermDurationInDays?: number;

  /**
   * <p>The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
   */
  NetworkPlatform?: string;

  /**
   * <p>The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
   */
  Platform?: string;

  /**
   * <p>The purchase token. This token expires in two hours.</p>
   */
  PurchaseToken?: string;

  /**
   * <p>The schedule recurrence.</p>
   */
  Recurrence?: ScheduledInstanceRecurrence;

  /**
   * <p>The number of hours in the schedule.</p>
   */
  SlotDurationInHours?: number;

  /**
   * <p>The total number of hours for a single instance for the entire term.</p>
   */
  TotalScheduledInstanceHours?: number;
}

export namespace ScheduledInstanceAvailability {
  export function isa(o: any): o is ScheduledInstanceAvailability {
    return _smithy.isa(o, "ScheduledInstanceAvailability");
  }
}

/**
 * <p>Describes the recurring schedule for a Scheduled Instance.</p>
 */
export interface ScheduledInstanceRecurrence {
  __type?: "ScheduledInstanceRecurrence";
  /**
   * <p>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</p>
   */
  Frequency?: string;

  /**
   * <p>The interval quantity. The interval unit depends on the value of <code>frequency</code>. For example, every 2
   *          weeks or every 2 months.</p>
   */
  Interval?: number;

  /**
   * <p>The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).</p>
   */
  OccurrenceDaySet?: Array<number>;

  /**
   * <p>Indicates whether the occurrence is relative to the end of the specified week or month.</p>
   */
  OccurrenceRelativeToEnd?: boolean;

  /**
   * <p>The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).</p>
   */
  OccurrenceUnit?: string;
}

export namespace ScheduledInstanceRecurrence {
  export function isa(o: any): o is ScheduledInstanceRecurrence {
    return _smithy.isa(o, "ScheduledInstanceRecurrence");
  }
}

/**
 * <p>Describes the recurring schedule for a Scheduled Instance.</p>
 */
export interface ScheduledInstanceRecurrenceRequest {
  __type?: "ScheduledInstanceRecurrenceRequest";
  /**
   * <p>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</p>
   */
  Frequency?: string;

  /**
   * <p>The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2
   *          weeks or every 2 months.</p>
   */
  Interval?: number;

  /**
   * <p>The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.</p>
   */
  OccurrenceDays?: Array<number>;

  /**
   * <p>Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule.</p>
   */
  OccurrenceRelativeToEnd?: boolean;

  /**
   * <p>The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
   *         This value is required for a monthly schedule.
   *         You can't specify <code>DayOfWeek</code> with a weekly schedule.
   *         You can't specify this value with a daily schedule.</p>
   */
  OccurrenceUnit?: string;
}

export namespace ScheduledInstanceRecurrenceRequest {
  export function isa(o: any): o is ScheduledInstanceRecurrenceRequest {
    return _smithy.isa(o, "ScheduledInstanceRecurrenceRequest");
  }
}

/**
 * <p>Describes a block device mapping for a Scheduled Instance.</p>
 */
export interface ScheduledInstancesBlockDeviceMapping {
  __type?: "ScheduledInstancesBlockDeviceMapping";
  /**
   * <p>The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p>
   */
  DeviceName?: string;

  /**
   * <p>Parameters used to set up EBS volumes automatically when the instance is launched.</p>
   */
  Ebs?: ScheduledInstancesEbs;

  /**
   * <p>Suppresses the specified device included in the block device mapping of the AMI.</p>
   */
  NoDevice?: string;

  /**
   * <p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered
   *          starting from 0. An instance type with two available instance store volumes can specify mappings
   *          for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store
   *          volumes depends on the instance type. After you connect to the instance, you must mount the
   *          volume.</p>
   *          <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>
   */
  VirtualName?: string;
}

export namespace ScheduledInstancesBlockDeviceMapping {
  export function isa(o: any): o is ScheduledInstancesBlockDeviceMapping {
    return _smithy.isa(o, "ScheduledInstancesBlockDeviceMapping");
  }
}

/**
 * <p>Describes an EBS volume for a Scheduled Instance.</p>
 */
export interface ScheduledInstancesEbs {
  __type?: "ScheduledInstancesEbs";
  /**
   * <p>Indicates whether the volume is deleted on instance termination.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes,
   *          this represents the number of IOPS that are provisioned for the volume. For
   *             <code>gp2</code> volumes, this represents the baseline performance of the volume and
   *          the rate at which the volume accumulates I/O credits for bursting. For more information
   *          about <code>gp2</code> baseline performance, I/O credits, and bursting, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in the
   *             <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *          <p>Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and
   *          100-10000 IOPS for <code>gp2</code> volumes.</p>
   *          <p>Condition: This parameter is required for requests to create <code>io1</code>volumes; it
   *          is not used in requests to create <code>gp2</code>, <code>st1</code>,
   *             <code>sc1</code>, or <code>standard</code> volumes.</p>
   */
  Iops?: number;

  /**
   * <p>The ID of the snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The size of the volume, in GiB.</p>
   *          <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>
   */
  VolumeSize?: number;

  /**
   * <p>The volume type. <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, Throughput Optimized HDD
   *          for <code>st1</code>, Cold HDD for <code>sc1</code>, or <code>standard</code> for
   *          Magnetic.</p>
   *          <p>Default: <code>gp2</code>
   *          </p>
   */
  VolumeType?: string;
}

export namespace ScheduledInstancesEbs {
  export function isa(o: any): o is ScheduledInstancesEbs {
    return _smithy.isa(o, "ScheduledInstancesEbs");
  }
}

/**
 * <p>Describes an IAM instance profile for a Scheduled Instance.</p>
 */
export interface ScheduledInstancesIamInstanceProfile {
  __type?: "ScheduledInstancesIamInstanceProfile";
  /**
   * <p>The Amazon Resource Name (ARN).</p>
   */
  Arn?: string;

  /**
   * <p>The name.</p>
   */
  Name?: string;
}

export namespace ScheduledInstancesIamInstanceProfile {
  export function isa(o: any): o is ScheduledInstancesIamInstanceProfile {
    return _smithy.isa(o, "ScheduledInstancesIamInstanceProfile");
  }
}

/**
 * <p>Describes an IPv6 address.</p>
 */
export interface ScheduledInstancesIpv6Address {
  __type?: "ScheduledInstancesIpv6Address";
  /**
   * <p>The IPv6 address.</p>
   */
  Ipv6Address?: string;
}

export namespace ScheduledInstancesIpv6Address {
  export function isa(o: any): o is ScheduledInstancesIpv6Address {
    return _smithy.isa(o, "ScheduledInstancesIpv6Address");
  }
}

/**
 * <p>Describes the launch specification for a Scheduled Instance.</p>
 *          <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet.
 *           You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>
 */
export interface ScheduledInstancesLaunchSpecification {
  __type?: "ScheduledInstancesLaunchSpecification";
  /**
   * <p>The block device mapping entries.</p>
   */
  BlockDeviceMappings?: Array<ScheduledInstancesBlockDeviceMapping>;

  /**
   * <p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p>
   *          <p>Default: <code>false</code>
   *          </p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: ScheduledInstancesIamInstanceProfile;

  /**
   * <p>The ID of the Amazon Machine Image (AMI).</p>
   */
  ImageId: string | undefined;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: string;

  /**
   * <p>The ID of the kernel.</p>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName?: string;

  /**
   * <p>Enable or disable monitoring for the instances.</p>
   */
  Monitoring?: ScheduledInstancesMonitoring;

  /**
   * <p>The network interfaces.</p>
   */
  NetworkInterfaces?: Array<ScheduledInstancesNetworkInterface>;

  /**
   * <p>The placement information.</p>
   */
  Placement?: ScheduledInstancesPlacement;

  /**
   * <p>The ID of the RAM disk.</p>
   */
  RamdiskId?: string;

  /**
   * <p>The IDs of the security groups.</p>
   */
  SecurityGroupIds?: Array<string>;

  /**
   * <p>The ID of the subnet in which to launch the instances.</p>
   */
  SubnetId?: string;

  /**
   * <p>The base64-encoded MIME user data.</p>
   */
  UserData?: string;
}

export namespace ScheduledInstancesLaunchSpecification {
  export function isa(o: any): o is ScheduledInstancesLaunchSpecification {
    return _smithy.isa(o, "ScheduledInstancesLaunchSpecification");
  }
}

/**
 * <p>Describes whether monitoring is enabled for a Scheduled Instance.</p>
 */
export interface ScheduledInstancesMonitoring {
  __type?: "ScheduledInstancesMonitoring";
  /**
   * <p>Indicates whether monitoring is enabled.</p>
   */
  Enabled?: boolean;
}

export namespace ScheduledInstancesMonitoring {
  export function isa(o: any): o is ScheduledInstancesMonitoring {
    return _smithy.isa(o, "ScheduledInstancesMonitoring");
  }
}

/**
 * <p>Describes a network interface for a Scheduled Instance.</p>
 */
export interface ScheduledInstancesNetworkInterface {
  __type?: "ScheduledInstancesNetworkInterface";
  /**
   * <p>Indicates whether to assign a public IPv4 address to instances launched in a VPC. The
   *          public IPv4 address can only be assigned to a network interface for eth0, and can only be
   *          assigned to a new network interface, not an existing one. You cannot specify more than one
   *          network interface in the request. If launching into a default subnet, the default value is
   *          <code>true</code>.</p>
   */
  AssociatePublicIpAddress?: boolean;

  /**
   * <p>Indicates whether to delete the interface when the instance is terminated.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>The description.</p>
   */
  Description?: string;

  /**
   * <p>The index of the device for the network interface attachment.</p>
   */
  DeviceIndex?: number;

  /**
   * <p>The IDs of the security groups.</p>
   */
  Groups?: Array<string>;

  /**
   * <p>The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range.</p>
   */
  Ipv6AddressCount?: number;

  /**
   * <p>The specific IPv6 addresses from the subnet range.</p>
   */
  Ipv6Addresses?: Array<ScheduledInstancesIpv6Address>;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The IPv4 address of the network interface within the subnet.</p>
   */
  PrivateIpAddress?: string;

  /**
   * <p>The private IPv4 addresses.</p>
   */
  PrivateIpAddressConfigs?: Array<ScheduledInstancesPrivateIpAddressConfig>;

  /**
   * <p>The number of secondary private IPv4 addresses.</p>
   */
  SecondaryPrivateIpAddressCount?: number;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;
}

export namespace ScheduledInstancesNetworkInterface {
  export function isa(o: any): o is ScheduledInstancesNetworkInterface {
    return _smithy.isa(o, "ScheduledInstancesNetworkInterface");
  }
}

/**
 * <p>Describes the placement for a Scheduled Instance.</p>
 */
export interface ScheduledInstancesPlacement {
  __type?: "ScheduledInstancesPlacement";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The name of the placement group.</p>
   */
  GroupName?: string;
}

export namespace ScheduledInstancesPlacement {
  export function isa(o: any): o is ScheduledInstancesPlacement {
    return _smithy.isa(o, "ScheduledInstancesPlacement");
  }
}

/**
 * <p>Describes a private IPv4 address for a Scheduled Instance.</p>
 */
export interface ScheduledInstancesPrivateIpAddressConfig {
  __type?: "ScheduledInstancesPrivateIpAddressConfig";
  /**
   * <p>Indicates whether this is a primary IPv4 address. Otherwise, this is a secondary IPv4 address.</p>
   */
  Primary?: boolean;

  /**
   * <p>The IPv4 address.</p>
   */
  PrivateIpAddress?: string;
}

export namespace ScheduledInstancesPrivateIpAddressConfig {
  export function isa(o: any): o is ScheduledInstancesPrivateIpAddressConfig {
    return _smithy.isa(o, "ScheduledInstancesPrivateIpAddressConfig");
  }
}

export interface SearchLocalGatewayRoutesRequest {
  __type?: "SearchLocalGatewayRoutesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters.</p>
   */
  Filters: Array<Filter> | undefined;

  /**
   * <p>The ID of the local gateway route table.</p>
   */
  LocalGatewayRouteTableId: string | undefined;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;
}

export namespace SearchLocalGatewayRoutesRequest {
  export function isa(o: any): o is SearchLocalGatewayRoutesRequest {
    return _smithy.isa(o, "SearchLocalGatewayRoutesRequest");
  }
}

export interface SearchLocalGatewayRoutesResult extends $MetadataBearer {
  __type?: "SearchLocalGatewayRoutesResult";
  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;

  /**
   * <p>Information about the routes.</p>
   */
  Routes?: Array<LocalGatewayRoute>;
}

export namespace SearchLocalGatewayRoutesResult {
  export function isa(o: any): o is SearchLocalGatewayRoutesResult {
    return _smithy.isa(o, "SearchLocalGatewayRoutesResult");
  }
}

export interface SearchTransitGatewayMulticastGroupsRequest {
  __type?: "SearchTransitGatewayMulticastGroupsRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>group-ip-address</code> - The IP address of the  transit gateway multicast group.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>is-group-member</code> - The resource is a group member. Valid values are <code>true</code> | <code>false</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>is-group-source</code> - The resource is a group source. Valid values are <code>true</code> | <code>false</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>member-type</code> - The member type. Valid values are <code>igmp</code> | <code>static</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>resource-id</code> - The ID of the resource.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>resource-type</code> - The type of resource. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>tgw-peering</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>source-type</code> - The source type. Valid values are <code>igmp</code> | <code>static</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>state</code> - The state of the subnet association. Valid values are <code>associated</code> | <code>associated</code> | <code>disassociated</code> | <code>disassociating</code>.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>subnet-id</code> - The ID of the subnet.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p>
   *             </li>
   *          </ul>
   */
  Filters?: Array<Filter>;

  /**
   * <p>The maximum number of results to return with a single call.
   * 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
   */
  MaxResults?: number;

  /**
   * <p>The token for the next page of results.</p>
   */
  NextToken?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace SearchTransitGatewayMulticastGroupsRequest {
  export function isa(o: any): o is SearchTransitGatewayMulticastGroupsRequest {
    return _smithy.isa(o, "SearchTransitGatewayMulticastGroupsRequest");
  }
}

export interface SearchTransitGatewayMulticastGroupsResult
  extends $MetadataBearer {
  __type?: "SearchTransitGatewayMulticastGroupsResult";
  /**
   * <p>Information about the  transit gateway multicast group.</p>
   */
  MulticastGroups?: Array<TransitGatewayMulticastGroup>;

  /**
   * <p>The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
   */
  NextToken?: string;
}

export namespace SearchTransitGatewayMulticastGroupsResult {
  export function isa(o: any): o is SearchTransitGatewayMulticastGroupsResult {
    return _smithy.isa(o, "SearchTransitGatewayMulticastGroupsResult");
  }
}

export interface SearchTransitGatewayRoutesRequest {
  __type?: "SearchTransitGatewayRoutesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>One or more filters. The possible values are:</p>
   *          <ul>
   *             <li>
   *                <p>
   *                   <code>attachment.transit-gateway-attachment-id</code>- The id of the transit gateway attachment.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>attachment.resource-type</code> - The attachment resource type (<code>vpc</code> | <code>vpn</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.exact-match</code> - The exact match of the specified filter.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>state</code> - The state of the route (<code>active</code> | <code>blackhole</code>).</p>
   *             </li>
   *             <li>
   *                <p>
   *                   <code>type</code> - The type of route (<code>propagated</code> |
   *                   <code>static</code>).</p>
   *             </li>
   *          </ul>
   */
  Filters: Array<Filter> | undefined;

  /**
   * <p>The maximum number of routes to return.</p>
   */
  MaxResults?: number;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId: string | undefined;
}

export namespace SearchTransitGatewayRoutesRequest {
  export function isa(o: any): o is SearchTransitGatewayRoutesRequest {
    return _smithy.isa(o, "SearchTransitGatewayRoutesRequest");
  }
}

export interface SearchTransitGatewayRoutesResult extends $MetadataBearer {
  __type?: "SearchTransitGatewayRoutesResult";
  /**
   * <p>Indicates whether there are additional routes available.</p>
   */
  AdditionalRoutesAvailable?: boolean;

  /**
   * <p>Information about the routes.</p>
   */
  Routes?: Array<TransitGatewayRoute>;
}

export namespace SearchTransitGatewayRoutesResult {
  export function isa(o: any): o is SearchTransitGatewayRoutesResult {
    return _smithy.isa(o, "SearchTransitGatewayRoutesResult");
  }
}

/**
 * <p>Describes a security group</p>
 */
export interface SecurityGroup {
  __type?: "SecurityGroup";
  /**
   * <p>A description of the security group.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the security group.</p>
   */
  GroupId?: string;

  /**
   * <p>The name of the security group.</p>
   */
  GroupName?: string;

  /**
   * <p>The inbound rules associated with the security group.</p>
   */
  IpPermissions?: Array<IpPermission>;

  /**
   * <p>[VPC only] The outbound rules associated with the security group.</p>
   */
  IpPermissionsEgress?: Array<IpPermission>;

  /**
   * <p>The AWS account ID of the owner of the security group.</p>
   */
  OwnerId?: string;

  /**
   * <p>Any tags assigned to the security group.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>[VPC only] The ID of the VPC for the security group.</p>
   */
  VpcId?: string;
}

export namespace SecurityGroup {
  export function isa(o: any): o is SecurityGroup {
    return _smithy.isa(o, "SecurityGroup");
  }
}

/**
 * <p>Describes a security group.</p>
 */
export interface SecurityGroupIdentifier {
  __type?: "SecurityGroupIdentifier";
  /**
   * <p>The ID of the security group.</p>
   */
  GroupId?: string;

  /**
   * <p>The name of the security group.</p>
   */
  GroupName?: string;
}

export namespace SecurityGroupIdentifier {
  export function isa(o: any): o is SecurityGroupIdentifier {
    return _smithy.isa(o, "SecurityGroupIdentifier");
  }
}

/**
 * <p>Describes a VPC with a security group that references your security group.</p>
 */
export interface SecurityGroupReference {
  __type?: "SecurityGroupReference";
  /**
   * <p>The ID of your security group.</p>
   */
  GroupId?: string;

  /**
   * <p>The ID of the VPC with the referencing security group.</p>
   */
  ReferencingVpcId?: string;

  /**
   * <p>The ID of the VPC peering connection.</p>
   */
  VpcPeeringConnectionId?: string;
}

export namespace SecurityGroupReference {
  export function isa(o: any): o is SecurityGroupReference {
    return _smithy.isa(o, "SecurityGroupReference");
  }
}

export interface SendDiagnosticInterruptRequest {
  __type?: "SendDiagnosticInterruptRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId: string | undefined;
}

export namespace SendDiagnosticInterruptRequest {
  export function isa(o: any): o is SendDiagnosticInterruptRequest {
    return _smithy.isa(o, "SendDiagnosticInterruptRequest");
  }
}

/**
 * <p>Describes a service configuration for a VPC endpoint service.</p>
 */
export interface ServiceConfiguration {
  __type?: "ServiceConfiguration";
  /**
   * <p>Indicates whether requests from other AWS accounts to create an endpoint to the service must first be accepted.</p>
   */
  AcceptanceRequired?: boolean;

  /**
   * <p>The Availability Zones in which the service is available.</p>
   */
  AvailabilityZones?: Array<string>;

  /**
   * <p>The DNS names for the service.</p>
   */
  BaseEndpointDnsNames?: Array<string>;

  /**
   * <p>Indicates whether the service manages its VPC endpoints. Management of the service VPC
   *             endpoints using the VPC endpoint API is restricted.</p>
   */
  ManagesVpcEndpoints?: boolean;

  /**
   * <p>The Amazon Resource Names (ARNs) of the Network Load Balancers for the service.</p>
   */
  NetworkLoadBalancerArns?: Array<string>;

  /**
   * <p>The private DNS name for the service.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>Information about the endpoint service private DNS name configuration.</p>
   */
  PrivateDnsNameConfiguration?: PrivateDnsNameConfiguration;

  /**
   * <p>The ID of the service.</p>
   */
  ServiceId?: string;

  /**
   * <p>The name of the service.</p>
   */
  ServiceName?: string;

  /**
   * <p>The service state.</p>
   */
  ServiceState?: ServiceState | string;

  /**
   * <p>The type of service.</p>
   */
  ServiceType?: Array<ServiceTypeDetail>;

  /**
   * <p>Any tags assigned to the service.</p>
   */
  Tags?: Array<Tag>;
}

export namespace ServiceConfiguration {
  export function isa(o: any): o is ServiceConfiguration {
    return _smithy.isa(o, "ServiceConfiguration");
  }
}

/**
 * <p>Describes a VPC endpoint service.</p>
 */
export interface ServiceDetail {
  __type?: "ServiceDetail";
  /**
   * <p>Indicates whether VPC endpoint connection requests to the service must be accepted by the service owner.</p>
   */
  AcceptanceRequired?: boolean;

  /**
   * <p>The Availability Zones in which the service is available.</p>
   */
  AvailabilityZones?: Array<string>;

  /**
   * <p>The DNS names for the service.</p>
   */
  BaseEndpointDnsNames?: Array<string>;

  /**
   * <p>Indicates whether the service manages its VPC endpoints. Management of the service VPC
   *             endpoints using the VPC endpoint API is restricted.</p>
   */
  ManagesVpcEndpoints?: boolean;

  /**
   * <p>The AWS account ID of the service owner.</p>
   */
  Owner?: string;

  /**
   * <p>The private DNS name for the service.</p>
   */
  PrivateDnsName?: string;

  /**
   * <p>The verification state of the VPC endpoint service.</p>
   *         <p>Consumers of the endpoint service cannot use the private name when the state is not <code>verified</code>.</p>
   */
  PrivateDnsNameVerificationState?: DnsNameState | string;

  /**
   * <p>The ID of the endpoint service.</p>
   */
  ServiceId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the service.</p>
   */
  ServiceName?: string;

  /**
   * <p>The type of service.</p>
   */
  ServiceType?: Array<ServiceTypeDetail>;

  /**
   * <p>Any tags assigned to the service.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>Indicates whether the service supports endpoint policies.</p>
   */
  VpcEndpointPolicySupported?: boolean;
}

export namespace ServiceDetail {
  export function isa(o: any): o is ServiceDetail {
    return _smithy.isa(o, "ServiceDetail");
  }
}

export enum ServiceState {
  Available = "Available",
  Deleted = "Deleted",
  Deleting = "Deleting",
  Failed = "Failed",
  Pending = "Pending"
}

export enum ServiceType {
  Gateway = "Gateway",
  Interface = "Interface"
}

/**
 * <p>Describes the type of service for a VPC endpoint.</p>
 */
export interface ServiceTypeDetail {
  __type?: "ServiceTypeDetail";
  /**
   * <p>The type of service.</p>
   */
  ServiceType?: ServiceType | string;
}

export namespace ServiceTypeDetail {
  export function isa(o: any): o is ServiceTypeDetail {
    return _smithy.isa(o, "ServiceTypeDetail");
  }
}

export type ShutdownBehavior = "stop" | "terminate";

/**
 * <p>Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day.</p>
 */
export interface SlotDateTimeRangeRequest {
  __type?: "SlotDateTimeRangeRequest";
  /**
   * <p>The earliest date and time, in UTC, for the Scheduled Instance to start.</p>
   */
  EarliestTime: Date | undefined;

  /**
   * <p>The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.</p>
   */
  LatestTime: Date | undefined;
}

export namespace SlotDateTimeRangeRequest {
  export function isa(o: any): o is SlotDateTimeRangeRequest {
    return _smithy.isa(o, "SlotDateTimeRangeRequest");
  }
}

/**
 * <p>Describes the time period for a Scheduled Instance to start its first schedule.</p>
 */
export interface SlotStartTimeRangeRequest {
  __type?: "SlotStartTimeRangeRequest";
  /**
   * <p>The earliest date and time, in UTC, for the Scheduled Instance to start.</p>
   */
  EarliestTime?: Date;

  /**
   * <p>The latest date and time, in UTC, for the Scheduled Instance to start.</p>
   */
  LatestTime?: Date;
}

export namespace SlotStartTimeRangeRequest {
  export function isa(o: any): o is SlotStartTimeRangeRequest {
    return _smithy.isa(o, "SlotStartTimeRangeRequest");
  }
}

/**
 * <p>Describes a snapshot.</p>
 */
export interface Snapshot extends $MetadataBearer {
  __type?: "Snapshot";
  /**
   * <p>The data encryption key identifier for the snapshot. This value is a unique identifier
   *       that corresponds to the data encryption key that was used to encrypt the original volume or
   *       snapshot copy. Because data encryption keys are inherited by volumes created from snapshots,
   *       and vice versa, if snapshots share the same data encryption key identifier, then they belong
   *       to the same volume/snapshot lineage. This parameter is only returned by <a>DescribeSnapshots</a>.</p>
   */
  DataEncryptionKeyId?: string;

  /**
   * <p>The description for the snapshot.</p>
   */
  Description?: string;

  /**
   * <p>Indicates whether the snapshot is encrypted.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the
   *       volume encryption key for the parent volume.</p>
   */
  KmsKeyId?: string;

  /**
   * <p> Value from an Amazon-maintained list (<code>amazon</code> | <code>self</code> |
   *         <code>all</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot
   *       owners. Not to be confused with the user-configured AWS account alias, which is set from the
   *       IAM console. </p>
   */
  OwnerAlias?: string;

  /**
   * <p>The AWS account ID of the EBS snapshot owner.</p>
   */
  OwnerId?: string;

  /**
   * <p>The progress of the snapshot, as a percentage.</p>
   */
  Progress?: string;

  /**
   * <p>The ID of the snapshot. Each snapshot receives a unique identifier when it is
   *       created.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The time stamp when the snapshot was initiated.</p>
   */
  StartTime?: Date;

  /**
   * <p>The snapshot state.</p>
   */
  State?: SnapshotState | string;

  /**
   * <p>Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails
   *       (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error
   *       state details to help you diagnose why the error occurred. This parameter is only returned by
   *       <a>DescribeSnapshots</a>.</p>
   */
  StateMessage?: string;

  /**
   * <p>Any tags assigned to the snapshot.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for any
   *       purpose.</p>
   */
  VolumeId?: string;

  /**
   * <p>The size of the volume, in GiB.</p>
   */
  VolumeSize?: number;
}

export namespace Snapshot {
  export function isa(o: any): o is Snapshot {
    return _smithy.isa(o, "Snapshot");
  }
}

export type SnapshotAttributeName = "createVolumePermission" | "productCodes";

/**
 * <p>Describes the snapshot created from the imported disk.</p>
 */
export interface SnapshotDetail {
  __type?: "SnapshotDetail";
  /**
   * <p>A description for the snapshot.</p>
   */
  Description?: string;

  /**
   * <p>The block device mapping for the snapshot.</p>
   */
  DeviceName?: string;

  /**
   * <p>The size of the disk in the snapshot, in GiB.</p>
   */
  DiskImageSize?: number;

  /**
   * <p>The format of the disk image from which the snapshot is created.</p>
   */
  Format?: string;

  /**
   * <p>The percentage of progress for the task.</p>
   */
  Progress?: string;

  /**
   * <p>The snapshot ID of the disk being imported.</p>
   */
  SnapshotId?: string;

  /**
   * <p>A brief status of the snapshot creation.</p>
   */
  Status?: string;

  /**
   * <p>A detailed status message for the snapshot creation.</p>
   */
  StatusMessage?: string;

  /**
   * <p>The URL used to access the disk image.</p>
   */
  Url?: string;

  /**
   * <p>The S3 bucket for the disk image.</p>
   */
  UserBucket?: UserBucketDetails;
}

export namespace SnapshotDetail {
  export function isa(o: any): o is SnapshotDetail {
    return _smithy.isa(o, "SnapshotDetail");
  }
}

/**
 * <p>The disk container object for the import snapshot request.</p>
 */
export interface SnapshotDiskContainer {
  __type?: "SnapshotDiskContainer";
  /**
   * <p>The description of the disk image being imported.</p>
   */
  Description?: string;

  /**
   * <p>The format of the disk image being imported.</p>
   *          <p>Valid values: <code>VHD</code> | <code>VMDK</code>
   *          </p>
   */
  Format?: string;

  /**
   * <p>The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon
   *    S3 URL (s3://..).</p>
   */
  Url?: string;

  /**
   * <p>The S3 bucket for the disk image.</p>
   */
  UserBucket?: UserBucket;
}

export namespace SnapshotDiskContainer {
  export function isa(o: any): o is SnapshotDiskContainer {
    return _smithy.isa(o, "SnapshotDiskContainer");
  }
}

/**
 * <p>Information about a snapshot.</p>
 */
export interface SnapshotInfo {
  __type?: "SnapshotInfo";
  /**
   * <p>Description specified by the CreateSnapshotRequest that has been applied to all
   *     snapshots.</p>
   */
  Description?: string;

  /**
   * <p>Indicates whether the snapshot is encrypted.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>Account id used when creating this snapshot.</p>
   */
  OwnerId?: string;

  /**
   * <p>Progress this snapshot has made towards completing.</p>
   */
  Progress?: string;

  /**
   * <p>Snapshot id that can be used to describe this snapshot.</p>
   */
  SnapshotId?: string;

  /**
   * <p>Time this snapshot was started. This is the same for all snapshots initiated by the
   *     same request.</p>
   */
  StartTime?: Date;

  /**
   * <p>Current state of the snapshot.</p>
   */
  State?: SnapshotState | string;

  /**
   * <p>Tags associated with this snapshot.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>Source volume from which this snapshot was created.</p>
   */
  VolumeId?: string;

  /**
   * <p>Size of the volume from which this snapshot was created.</p>
   */
  VolumeSize?: number;
}

export namespace SnapshotInfo {
  export function isa(o: any): o is SnapshotInfo {
    return _smithy.isa(o, "SnapshotInfo");
  }
}

export type SnapshotState = "completed" | "error" | "pending";

/**
 * <p>Details about the import snapshot task.</p>
 */
export interface SnapshotTaskDetail {
  __type?: "SnapshotTaskDetail";
  /**
   * <p>The description of the snapshot.</p>
   */
  Description?: string;

  /**
   * <p>The size of the disk in the snapshot, in GiB.</p>
   */
  DiskImageSize?: number;

  /**
   * <p>Indicates whether the snapshot is encrypted.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>The format of the disk image from which the snapshot is created.</p>
   */
  Format?: string;

  /**
   * <p>The identifier for the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to create
   *    the encrypted snapshot.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The percentage of completion for the import snapshot task.</p>
   */
  Progress?: string;

  /**
   * <p>The snapshot ID of the disk being imported.</p>
   */
  SnapshotId?: string;

  /**
   * <p>A brief status for the import snapshot task.</p>
   */
  Status?: string;

  /**
   * <p>A detailed status message for the import snapshot task.</p>
   */
  StatusMessage?: string;

  /**
   * <p>The URL of the disk image from which the snapshot is created.</p>
   */
  Url?: string;

  /**
   * <p>The S3 bucket for the disk image.</p>
   */
  UserBucket?: UserBucketDetails;
}

export namespace SnapshotTaskDetail {
  export function isa(o: any): o is SnapshotTaskDetail {
    return _smithy.isa(o, "SnapshotTaskDetail");
  }
}

export enum SpotAllocationStrategy {
  CAPACITY_OPTIMIZED = "capacity-optimized",
  DIVERSIFIED = "diversified",
  LOWEST_PRICE = "lowest-price"
}

/**
 * <p>Describes the data feed for a Spot Instance.</p>
 */
export interface SpotDatafeedSubscription {
  __type?: "SpotDatafeedSubscription";
  /**
   * <p>The Amazon S3 bucket where the Spot Instance data feed is located.</p>
   */
  Bucket?: string;

  /**
   * <p>The fault codes for the Spot Instance request, if any.</p>
   */
  Fault?: SpotInstanceStateFault;

  /**
   * <p>The AWS account ID of the account.</p>
   */
  OwnerId?: string;

  /**
   * <p>The prefix that is prepended to data feed files.</p>
   */
  Prefix?: string;

  /**
   * <p>The state of the Spot Instance data feed subscription.</p>
   */
  State?: DatafeedSubscriptionState | string;
}

export namespace SpotDatafeedSubscription {
  export function isa(o: any): o is SpotDatafeedSubscription {
    return _smithy.isa(o, "SpotDatafeedSubscription");
  }
}

/**
 * <p>Describes the launch specification for one or more Spot Instances. If you include
 *             On-Demand capacity in your fleet request, you can't use
 *                 <code>SpotFleetLaunchSpecification</code>; you must use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html">LaunchTemplateConfig</a>.</p>
 */
export interface SpotFleetLaunchSpecification {
  __type?: "SpotFleetLaunchSpecification";
  /**
   * <p>Deprecated.</p>
   */
  AddressingType?: string;

  /**
   * <p>One or more block devices that are mapped to the Spot Instances. You can't specify both
   *             a snapshot ID and an encryption value. This is because only blank volumes can be
   *             encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its
   *             encryption status is used for the volume encryption status.</p>
   */
  BlockDeviceMappings?: Array<BlockDeviceMapping>;

  /**
   * <p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p>
   *          <p>Default: <code>false</code>
   *          </p>
   */
  EbsOptimized?: boolean;

  /**
   * <p>The IAM instance profile.</p>
   */
  IamInstanceProfile?: IamInstanceProfileSpecification;

  /**
   * <p>The ID of the AMI.</p>
   */
  ImageId?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>The ID of the kernel.</p>
   */
  KernelId?: string;

  /**
   * <p>The name of the key pair.</p>
   */
  KeyName?: string;

  /**
   * <p>Enable or disable monitoring for the instances.</p>
   */
  Monitoring?: SpotFleetMonitoring;

  /**
   * <p>One or more network interfaces. If you specify a network interface, you must specify
   *           subnet IDs and security group IDs using the network interface.</p>
   */
  NetworkInterfaces?: Array<InstanceNetworkInterfaceSpecification>;

  /**
   * <p>The placement information.</p>
   */
  Placement?: SpotPlacement;

  /**
   * <p>The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.</p>
   */
  RamdiskId?: string;

  /**
   * <p>One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.</p>
   */
  SecurityGroups?: Array<GroupIdentifier>;

  /**
   * <p>The maximum price per unit hour that you are willing to pay for a Spot Instance.
   *           If this value is not specified, the default is the Spot price specified for the fleet.
   *           To determine the Spot price per unit hour, divide the Spot price by the
   *           value of <code>WeightedCapacity</code>.</p>
   */
  SpotPrice?: string;

  /**
   * <p>The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate
   *           them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".</p>
   */
  SubnetId?: string;

  /**
   * <p>The tags to apply during creation.</p>
   */
  TagSpecifications?: Array<SpotFleetTagSpecification>;

  /**
   * <p>The Base64-encoded user data that instances use when starting up.</p>
   */
  UserData?: string;

  /**
   * <p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.</p>
   *          <p>If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.</p>
   */
  WeightedCapacity?: number;
}

export namespace SpotFleetLaunchSpecification {
  export function isa(o: any): o is SpotFleetLaunchSpecification {
    return _smithy.isa(o, "SpotFleetLaunchSpecification");
  }
}

/**
 * <p>Describes whether monitoring is enabled.</p>
 */
export interface SpotFleetMonitoring {
  __type?: "SpotFleetMonitoring";
  /**
   * <p>Enables monitoring for the instance.</p>
   *          <p>Default: <code>false</code>
   *          </p>
   */
  Enabled?: boolean;
}

export namespace SpotFleetMonitoring {
  export function isa(o: any): o is SpotFleetMonitoring {
    return _smithy.isa(o, "SpotFleetMonitoring");
  }
}

/**
 * <p>Describes a Spot Fleet request.</p>
 */
export interface SpotFleetRequestConfig {
  __type?: "SpotFleetRequestConfig";
  /**
   * <p>The progress of the Spot Fleet request.
   *           If there is an error, the status is <code>error</code>.
   *           After all requests are placed, the status is <code>pending_fulfillment</code>.
   *           If the size of the fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>.
   *           If the size of the fleet is decreased, the status is <code>pending_termination</code>
   *           while Spot Instances are terminating.</p>
   */
  ActivityStatus?: ActivityStatus | string;

  /**
   * <p>The creation date and time of the request.</p>
   */
  CreateTime?: Date;

  /**
   * <p>The configuration of the Spot Fleet request.</p>
   */
  SpotFleetRequestConfig?: SpotFleetRequestConfigData;

  /**
   * <p>The ID of the Spot Fleet request.</p>
   */
  SpotFleetRequestId?: string;

  /**
   * <p>The state of the Spot Fleet request.</p>
   */
  SpotFleetRequestState?: BatchState | string;
}

export namespace SpotFleetRequestConfig {
  export function isa(o: any): o is SpotFleetRequestConfig {
    return _smithy.isa(o, "SpotFleetRequestConfig");
  }
}

/**
 * <p>Describes the configuration of a Spot Fleet request.</p>
 */
export interface SpotFleetRequestConfigData {
  __type?: "SpotFleetRequestConfigData";
  /**
   * <p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by
   *             the Spot Fleet request.</p>
   *         <p>If the allocation strategy is <code>lowestPrice</code>, Spot Fleet launches instances from
   *             the Spot Instance pools with the lowest price. This is the default allocation strategy.</p>
   *         <p>If the allocation strategy is <code>diversified</code>, Spot Fleet launches instances from
   *             all the Spot Instance pools that you specify.</p>
   *         <p>If the allocation strategy is <code>capacityOptimized</code>, Spot Fleet launches instances
   *             from Spot Instance pools with optimal capacity for the number of instances that are
   *             launching.</p>
   */
  AllocationStrategy?: AllocationStrategy | string;

  /**
   * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of
   *             your listings. This helps to avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
   */
  ClientToken?: string;

  /**
   * <p>Indicates whether running Spot Instances should be terminated if you decrease the target
   *             capacity of the Spot Fleet request below the current size of the Spot Fleet.</p>
   */
  ExcessCapacityTerminationPolicy?: ExcessCapacityTerminationPolicy | string;

  /**
   * <p>The number of units fulfilled by this request compared to the set target capacity. You cannot set this value.</p>
   */
  FulfilledCapacity?: number;

  /**
   * <p>The Amazon Resource Name (ARN) of an AWS Identity and Access Management (IAM) role that
   *             grants the Spot Fleet the permission to request, launch, terminate, and tag instances on
   *             your behalf. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites">Spot
   *                 Fleet Prerequisites</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>. Spot Fleet
   *             can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using
   *                 <a>CancelSpotFleetRequests</a> or when the Spot Fleet request expires, if
   *             you set <code>TerminateInstancesWithExpiration</code>.</p>
   */
  IamFleetRole: string | undefined;

  /**
   * <p>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</p>
   */
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;

  /**
   * <p>The number of Spot pools across which to allocate your target Spot capacity. Valid
   *             only when Spot <b>AllocationStrategy</b> is set to
   *                 <code>lowest-price</code>. Spot Fleet selects the cheapest Spot pools and evenly
   *             allocates your target Spot capacity across the number of Spot pools that you
   *             specify.</p>
   */
  InstancePoolsToUseCount?: number;

  /**
   * <p>The launch specifications for the Spot Fleet request. If you specify
   *                 <code>LaunchSpecifications</code>, you can't specify
   *                 <code>LaunchTemplateConfigs</code>. If you include On-Demand capacity in your
   *             request, you must use <code>LaunchTemplateConfigs</code>.</p>
   */
  LaunchSpecifications?: Array<SpotFleetLaunchSpecification>;

  /**
   * <p>The launch template and overrides. If you specify <code>LaunchTemplateConfigs</code>,
   *             you can't specify <code>LaunchSpecifications</code>. If you include On-Demand capacity
   *             in your request, you must use <code>LaunchTemplateConfigs</code>.</p>
   */
  LaunchTemplateConfigs?: Array<LaunchTemplateConfig>;

  /**
   * <p>One or more Classic Load Balancers and target groups to attach to the Spot Fleet request.
   *           Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.</p>
   *          <p>With Network Load Balancers, Spot Fleet cannot register instances that have the following instance types:
   *           C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.</p>
   */
  LoadBalancersConfig?: LoadBalancersConfig;

  /**
   * <p>The order of the launch template overrides to use in fulfilling On-Demand capacity.
   *             If you specify <code>lowestPrice</code>, Spot Fleet uses price to determine the order,
   *             launching the lowest price first. If you specify <code>prioritized</code>, Spot Fleet uses the
   *             priority that you assign to each Spot Fleet launch template override, launching the highest
   *             priority first. If you do not specify a value, Spot Fleet defaults to
   *             <code>lowestPrice</code>.</p>
   */
  OnDemandAllocationStrategy?: OnDemandAllocationStrategy | string;

  /**
   * <p>The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity.</p>
   */
  OnDemandFulfilledCapacity?: number;

  /**
   * <p>The maximum amount per hour for On-Demand Instances that you're willing to pay.
   *             You can use the <code>onDemandMaxTotalPrice</code> parameter, the <code>spotMaxTotalPrice</code>
   *             parameter, or both parameters to ensure that your fleet cost does not exceed
   *             your budget. If you set a maximum price per hour for the On-Demand Instances and
   *             Spot Instances in your request, Spot Fleet will launch instances until it reaches
   *             the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached,
   *             the fleet stops launching instances even if it hasn’t met the target capacity.</p>
   */
  OnDemandMaxTotalPrice?: string;

  /**
   * <p>The number of On-Demand units to request. You can choose to set the target capacity
   *             in terms of instances or a performance characteristic that is important to your
   *             application workload, such as vCPUs, memory, or I/O. If the request type is
   *                 <code>maintain</code>, you can specify a target capacity of 0 and add capacity
   *             later.</p>
   */
  OnDemandTargetCapacity?: number;

  /**
   * <p>Indicates whether Spot Fleet should replace unhealthy instances.</p>
   */
  ReplaceUnhealthyInstances?: boolean;

  /**
   * <p>The maximum amount per hour for Spot Instances that you're willing to pay.
   *             You can use the <code>spotdMaxTotalPrice</code> parameter, the <code>onDemandMaxTotalPrice</code>
   *             parameter, or both parameters to ensure that your fleet cost does not exceed
   *             your budget. If you set a maximum price per hour for the On-Demand Instances and
   *             Spot Instances in your request, Spot Fleet will launch instances until it reaches
   *             the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached,
   *             the fleet stops launching instances even if it hasn’t met the target capacity.</p>
   */
  SpotMaxTotalPrice?: string;

  /**
   * <p>The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.</p>
   */
  SpotPrice?: string;

  /**
   * <p>The number of units to request for the Spot Fleet. You can choose to set the target
   *             capacity in terms of instances or a performance characteristic that is important to your
   *             application workload, such as vCPUs, memory, or I/O. If the request type is
   *                 <code>maintain</code>, you can specify a target capacity of 0 and add capacity
   *             later.</p>
   */
  TargetCapacity: number | undefined;

  /**
   * <p>Indicates whether running Spot Instances are terminated when the Spot Fleet request
   *             expires.</p>
   */
  TerminateInstancesWithExpiration?: boolean;

  /**
   * <p>The type of request. Indicates whether the Spot Fleet only requests the target capacity
   *             or also attempts to maintain it. When this value is <code>request</code>, the Spot Fleet
   *             only places the required requests. It does not attempt to replenish Spot Instances if
   *             capacity is diminished, nor does it submit requests in alternative Spot pools if
   *             capacity is not available. When this value is <code>maintain</code>, the Spot Fleet
   *             maintains the target capacity. The Spot Fleet places the required requests to meet
   *             capacity and automatically replenishes any interrupted instances. Default:
   *                 <code>maintain</code>. <code>instant</code> is listed but is not used by Spot
   *             Fleet.</p>
   */
  Type?: FleetType | string;

  /**
   * <p>The start date and time of the request, in UTC format
   *                 (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *             By default, Amazon EC2 starts fulfilling the request immediately.</p>
   */
  ValidFrom?: Date;

  /**
   * <p>The end date and time of the request, in UTC format
   *                 (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *             After the end date and time, no new Spot Instance requests are placed or able to fulfill the request.
   *             If no value is specified, the Spot Fleet request remains until you cancel it.</p>
   */
  ValidUntil?: Date;
}

export namespace SpotFleetRequestConfigData {
  export function isa(o: any): o is SpotFleetRequestConfigData {
    return _smithy.isa(o, "SpotFleetRequestConfigData");
  }
}

/**
 * <p>The tags for a Spot Fleet resource.</p>
 */
export interface SpotFleetTagSpecification {
  __type?: "SpotFleetTagSpecification";
  /**
   * <p>The type of resource. Currently, the only resource type that is supported is <code>instance</code>.</p>
   */
  ResourceType?: ResourceType | string;

  /**
   * <p>The tags.</p>
   */
  Tags?: Array<Tag>;
}

export namespace SpotFleetTagSpecification {
  export function isa(o: any): o is SpotFleetTagSpecification {
    return _smithy.isa(o, "SpotFleetTagSpecification");
  }
}

export type SpotInstanceInterruptionBehavior =
  | "hibernate"
  | "stop"
  | "terminate";

/**
 * <p>Describes a Spot Instance request.</p>
 */
export interface SpotInstanceRequest {
  __type?: "SpotInstanceRequest";
  /**
   * <p>If you specified a duration and your Spot Instance request was fulfilled, this is the fixed hourly price in effect for the Spot Instance while it runs.</p>
   */
  ActualBlockHourlyPrice?: string;

  /**
   * <p>The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.</p>
   */
  AvailabilityZoneGroup?: string;

  /**
   * <p>The duration for the Spot Instance, in minutes.</p>
   */
  BlockDurationMinutes?: number;

  /**
   * <p>The date and time when the Spot Instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  CreateTime?: Date;

  /**
   * <p>The fault codes for the Spot Instance request, if any.</p>
   */
  Fault?: SpotInstanceStateFault;

  /**
   * <p>The instance ID, if an instance has been launched to fulfill the Spot Instance request.</p>
   */
  InstanceId?: string;

  /**
   * <p>The behavior when a Spot Instance is interrupted.</p>
   */
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;

  /**
   * <p>The instance launch group. Launch groups are Spot Instances that launch together and terminate together.</p>
   */
  LaunchGroup?: string;

  /**
   * <p>Additional information for launching instances.</p>
   */
  LaunchSpecification?: LaunchSpecification;

  /**
   * <p>The Availability Zone in which the request is launched.</p>
   */
  LaunchedAvailabilityZone?: string;

  /**
   * <p>The product description associated with the Spot Instance.</p>
   */
  ProductDescription?: RIProductDescription | string;

  /**
   * <p>The ID of the Spot Instance request.</p>
   */
  SpotInstanceRequestId?: string;

  /**
   * <p>The maximum price per hour that you are willing to pay for a Spot Instance.</p>
   */
  SpotPrice?: string;

  /**
   * <p>The state of the Spot Instance request. Spot status information helps track your Spot
   *             Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot Status</a> in the
   *                 <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
   */
  State?: SpotInstanceState | string;

  /**
   * <p>The status code and status message describing the Spot Instance request.</p>
   */
  Status?: SpotInstanceStatus;

  /**
   * <p>Any tags assigned to the resource.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The Spot Instance request type.</p>
   */
  Type?: SpotInstanceType | string;

  /**
   * <p>The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *         The request becomes active at this date and time.</p>
   */
  ValidFrom?: Date;

  /**
   * <p>The end date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   *         If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached.
   * 		If the request is persistent, it remains active until it is canceled or this date is reached.
   *         The default end date is 7 days from the current date.</p>
   */
  ValidUntil?: Date;
}

export namespace SpotInstanceRequest {
  export function isa(o: any): o is SpotInstanceRequest {
    return _smithy.isa(o, "SpotInstanceRequest");
  }
}

export type SpotInstanceState =
  | "active"
  | "cancelled"
  | "closed"
  | "failed"
  | "open";

/**
 * <p>Describes a Spot Instance state change.</p>
 */
export interface SpotInstanceStateFault {
  __type?: "SpotInstanceStateFault";
  /**
   * <p>The reason code for the Spot Instance state change.</p>
   */
  Code?: string;

  /**
   * <p>The message for the Spot Instance state change.</p>
   */
  Message?: string;
}

export namespace SpotInstanceStateFault {
  export function isa(o: any): o is SpotInstanceStateFault {
    return _smithy.isa(o, "SpotInstanceStateFault");
  }
}

/**
 * <p>Describes the status of a Spot Instance request.</p>
 */
export interface SpotInstanceStatus {
  __type?: "SpotInstanceStatus";
  /**
   * <p>The status code. For a list of status codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand">Spot Status Codes</a>
   *         in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
   */
  Code?: string;

  /**
   * <p>The description for the status code.</p>
   */
  Message?: string;

  /**
   * <p>The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  UpdateTime?: Date;
}

export namespace SpotInstanceStatus {
  export function isa(o: any): o is SpotInstanceStatus {
    return _smithy.isa(o, "SpotInstanceStatus");
  }
}

export type SpotInstanceType = "one-time" | "persistent";

/**
 * <p>The options for Spot Instances.</p>
 */
export interface SpotMarketOptions {
  __type?: "SpotMarketOptions";
  /**
   * <p>The required duration for the Spot Instances (also known as Spot blocks), in minutes.
   *             This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p>
   */
  BlockDurationMinutes?: number;

  /**
   * <p>The behavior when a Spot Instance is interrupted. The default is
   *                 <code>terminate</code>.</p>
   */
  InstanceInterruptionBehavior?: InstanceInterruptionBehavior | string;

  /**
   * <p>The maximum hourly price you're willing to pay for the Spot Instances. The default is
   *             the On-Demand price.</p>
   */
  MaxPrice?: string;

  /**
   * <p>The Spot Instance request type. For <a>RunInstances</a>, persistent Spot
   *             Instance requests are only supported when <b>InstanceInterruptionBehavior</b> is set to either <code>hibernate</code> or
   *                 <code>stop</code>.</p>
   */
  SpotInstanceType?: SpotInstanceType | string;

  /**
   * <p>The end date of the request. For a one-time request, the request remains active until
   *             all instances launch, the request is canceled, or this date is reached. If the request
   *             is persistent, it remains active until it is canceled or this date and time is reached.
   *             The default end date is 7 days from the current date.</p>
   */
  ValidUntil?: Date;
}

export namespace SpotMarketOptions {
  export function isa(o: any): o is SpotMarketOptions {
    return _smithy.isa(o, "SpotMarketOptions");
  }
}

/**
 * <p>Describes the configuration of Spot Instances in an EC2 Fleet.</p>
 */
export interface SpotOptions {
  __type?: "SpotOptions";
  /**
   * <p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by
   *          the EC2 Fleet.</p>
   *          <p>If the allocation strategy is <code>lowest-price</code>, EC2 Fleet launches instances from
   *          the Spot Instance pools with the lowest price. This is the default allocation strategy.</p>
   *          <p>If the allocation strategy is <code>diversified</code>, EC2 Fleet launches instances from all
   *          of the Spot Instance pools that you specify.</p>
   *          <p>If the allocation strategy is <code>capacity-optimized</code>, EC2 Fleet launches instances
   *          from Spot Instance pools with optimal capacity for the number of instances that are
   *          launching.</p>
   */
  AllocationStrategy?: SpotAllocationStrategy | string;

  /**
   * <p>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</p>
   */
  InstanceInterruptionBehavior?: SpotInstanceInterruptionBehavior | string;

  /**
   * <p>The number of Spot pools across which to allocate your target Spot capacity. Valid only
   *          when <b>AllocationStrategy</b> is set to
   *             <code>lowest-price</code>. EC2 Fleet selects the cheapest Spot pools and evenly allocates
   *          your target Spot capacity across the number of Spot pools that you specify.</p>
   */
  InstancePoolsToUseCount?: number;

  /**
   * <p>The maximum amount per hour for Spot Instances that you're willing to pay.</p>
   */
  MaxTotalPrice?: string;

  /**
   * <p>The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is
   *          not reached, the fleet launches no instances.</p>
   */
  MinTargetCapacity?: number;

  /**
   * <p>Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported
   *          only for fleets of type <code>instant</code>.</p>
   */
  SingleAvailabilityZone?: boolean;

  /**
   * <p>Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet.
   *          Supported only for fleets of type <code>instant</code>.</p>
   */
  SingleInstanceType?: boolean;
}

export namespace SpotOptions {
  export function isa(o: any): o is SpotOptions {
    return _smithy.isa(o, "SpotOptions");
  }
}

/**
 * <p>Describes the configuration of Spot Instances in an EC2 Fleet request.</p>
 */
export interface SpotOptionsRequest {
  __type?: "SpotOptionsRequest";
  /**
   * <p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by
   *          the EC2 Fleet.</p>
   *          <p>If the allocation strategy is <code>lowest-price</code>, EC2 Fleet launches instances from
   *          the Spot Instance pools with the lowest price. This is the default allocation strategy.</p>
   *          <p>If the allocation strategy is <code>diversified</code>, EC2 Fleet launches instances from all
   *          of the Spot Instance pools that you specify.</p>
   *          <p>If the allocation strategy is <code>capacity-optimized</code>, EC2 Fleet launches instances
   *          from Spot Instance pools with optimal capacity for the number of instances that are
   *          launching.</p>
   */
  AllocationStrategy?: SpotAllocationStrategy | string;

  /**
   * <p>The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.</p>
   */
  InstanceInterruptionBehavior?: SpotInstanceInterruptionBehavior | string;

  /**
   * <p>The number of Spot pools across which to allocate your target Spot capacity. Valid only
   *          when Spot <b>AllocationStrategy</b> is set to
   *             <code>lowest-price</code>. EC2 Fleet selects the cheapest Spot pools and evenly allocates
   *          your target Spot capacity across the number of Spot pools that you specify.</p>
   */
  InstancePoolsToUseCount?: number;

  /**
   * <p>The maximum amount per hour for Spot Instances that you're willing to pay.</p>
   */
  MaxTotalPrice?: string;

  /**
   * <p>The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is
   *          not reached, the fleet launches no instances.</p>
   */
  MinTargetCapacity?: number;

  /**
   * <p>Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported
   *          only for fleets of type <code>instant</code>.</p>
   */
  SingleAvailabilityZone?: boolean;

  /**
   * <p>Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet.
   *          Supported only for fleets of type <code>instant</code>.</p>
   */
  SingleInstanceType?: boolean;
}

export namespace SpotOptionsRequest {
  export function isa(o: any): o is SpotOptionsRequest {
    return _smithy.isa(o, "SpotOptionsRequest");
  }
}

/**
 * <p>Describes Spot Instance placement.</p>
 */
export interface SpotPlacement {
  __type?: "SpotPlacement";
  /**
   * <p>The Availability Zone.</p>
   *          <p>[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The name of the placement group.</p>
   */
  GroupName?: string;

  /**
   * <p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy
   *        of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not
   *        supported for Spot Instances.</p>
   */
  Tenancy?: Tenancy | string;
}

export namespace SpotPlacement {
  export function isa(o: any): o is SpotPlacement {
    return _smithy.isa(o, "SpotPlacement");
  }
}

/**
 * <p>Describes the maximum price per hour that you are willing to pay for a Spot Instance.</p>
 */
export interface SpotPrice {
  __type?: "SpotPrice";
  /**
   * <p>The Availability Zone.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The instance type.</p>
   */
  InstanceType?: _InstanceType | string;

  /**
   * <p>A general description of the AMI.</p>
   */
  ProductDescription?: RIProductDescription | string;

  /**
   * <p>The maximum price per hour that you are willing to pay for a Spot Instance.</p>
   */
  SpotPrice?: string;

  /**
   * <p>The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
   */
  Timestamp?: Date;
}

export namespace SpotPrice {
  export function isa(o: any): o is SpotPrice {
    return _smithy.isa(o, "SpotPrice");
  }
}

/**
 * <p>Describes a stale rule in a security group.</p>
 */
export interface StaleIpPermission {
  __type?: "StaleIpPermission";
  /**
   * <p>The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of
   *         <code>-1</code> indicates all ICMP types. </p>
   */
  FromPort?: number;

  /**
   * <p>The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number  (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers)</a>.</p>
   */
  IpProtocol?: string;

  /**
   * <p>The IP ranges. Not applicable for stale security group rules.</p>
   */
  IpRanges?: Array<string>;

  /**
   * <p>The prefix list IDs for an AWS service. Not applicable for stale security group rules.</p>
   */
  PrefixListIds?: Array<string>;

  /**
   * <p>The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of
   *         <code>-1</code> indicates all ICMP types. </p>
   */
  ToPort?: number;

  /**
   * <p>The security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.</p>
   */
  UserIdGroupPairs?: Array<UserIdGroupPair>;
}

export namespace StaleIpPermission {
  export function isa(o: any): o is StaleIpPermission {
    return _smithy.isa(o, "StaleIpPermission");
  }
}

/**
 * <p>Describes a stale security group (a security group that contains stale rules).</p>
 */
export interface StaleSecurityGroup {
  __type?: "StaleSecurityGroup";
  /**
   * <p>The description of the security group.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the security group.</p>
   */
  GroupId?: string;

  /**
   * <p>The name of the security group.</p>
   */
  GroupName?: string;

  /**
   * <p>Information about the stale inbound rules in the security group.</p>
   */
  StaleIpPermissions?: Array<StaleIpPermission>;

  /**
   * <p>Information about the stale outbound rules in the security group.</p>
   */
  StaleIpPermissionsEgress?: Array<StaleIpPermission>;

  /**
   * <p>The ID of the VPC for the security group.</p>
   */
  VpcId?: string;
}

export namespace StaleSecurityGroup {
  export function isa(o: any): o is StaleSecurityGroup {
    return _smithy.isa(o, "StaleSecurityGroup");
  }
}

export interface StartInstancesRequest {
  __type?: "StartInstancesRequest";
  /**
   * <p>Reserved.</p>
   */
  AdditionalInfo?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the instances.</p>
   */
  InstanceIds: Array<string> | undefined;
}

export namespace StartInstancesRequest {
  export function isa(o: any): o is StartInstancesRequest {
    return _smithy.isa(o, "StartInstancesRequest");
  }
}

export interface StartInstancesResult extends $MetadataBearer {
  __type?: "StartInstancesResult";
  /**
   * <p>Information about the started instances.</p>
   */
  StartingInstances?: Array<InstanceStateChange>;
}

export namespace StartInstancesResult {
  export function isa(o: any): o is StartInstancesResult {
    return _smithy.isa(o, "StartInstancesResult");
  }
}

export interface StartVpcEndpointServicePrivateDnsVerificationRequest {
  __type?: "StartVpcEndpointServicePrivateDnsVerificationRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the endpoint service.</p>
   */
  ServiceId: string | undefined;
}

export namespace StartVpcEndpointServicePrivateDnsVerificationRequest {
  export function isa(
    o: any
  ): o is StartVpcEndpointServicePrivateDnsVerificationRequest {
    return _smithy.isa(
      o,
      "StartVpcEndpointServicePrivateDnsVerificationRequest"
    );
  }
}

export interface StartVpcEndpointServicePrivateDnsVerificationResult
  extends $MetadataBearer {
  __type?: "StartVpcEndpointServicePrivateDnsVerificationResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, it returns an error.</p>
   */
  ReturnValue?: boolean;
}

export namespace StartVpcEndpointServicePrivateDnsVerificationResult {
  export function isa(
    o: any
  ): o is StartVpcEndpointServicePrivateDnsVerificationResult {
    return _smithy.isa(
      o,
      "StartVpcEndpointServicePrivateDnsVerificationResult"
    );
  }
}

export enum State {
  Available = "Available",
  Deleted = "Deleted",
  Deleting = "Deleting",
  Expired = "Expired",
  Failed = "Failed",
  Pending = "Pending",
  PendingAcceptance = "PendingAcceptance",
  Rejected = "Rejected"
}

/**
 * <p>Describes a state change.</p>
 */
export interface StateReason {
  __type?: "StateReason";
  /**
   * <p>The reason code for the state change.</p>
   */
  Code?: string;

  /**
   * <p>The message for the state change.</p>
   *         <ul>
   *             <li>
   *                 <p>
   *                   <code>Server.InsufficientInstanceCapacity</code>: There was insufficient
   *                     capacity available to satisfy the launch request.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Server.InternalError</code>: An internal error caused the instance to
   *                     terminate during launch.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled
   *                     retirement.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the
   *                     number of Spot requests with a maximum price equal to or higher than the Spot
   *                     price exceeded available capacity or because of an increase in the Spot
   *                     price.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Server.SpotInstanceTermination</code>: The instance was terminated
   *                     because the number of Spot requests with a maximum price equal to or higher than
   *                     the Spot price exceeded available capacity or because of an increase in the Spot
   *                     price.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down
   *                     using the <code>shutdown -h</code> command from the instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Client.InstanceTerminated</code>: The instance was terminated or
   *                     rebooted during AMI creation.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Client.InternalError</code>: A client error caused the instance to
   *                     terminate during launch.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not
   *                     found.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the
   *                     instance.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Client.UserInitiatedShutdown</code>: The instance was shut down using
   *                     the Amazon EC2 API.</p>
   *             </li>
   *             <li>
   *                 <p>
   *                   <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS
   *                     volumes or total storage was exceeded. Decrease usage or request an increase in
   *                     your account limits.</p>
   *             </li>
   *          </ul>
   */
  Message?: string;
}

export namespace StateReason {
  export function isa(o: any): o is StateReason {
    return _smithy.isa(o, "StateReason");
  }
}

export enum Status {
  inClassic = "InClassic",
  inVpc = "InVpc",
  moveInProgress = "MoveInProgress"
}

export type StatusName = "reachability";

export type StatusType =
  | "failed"
  | "initializing"
  | "insufficient-data"
  | "passed";

export interface StopInstancesRequest {
  __type?: "StopInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>Forces the instances to stop. The instances do not have an opportunity to flush file
   *             system caches or file system metadata. If you use this option, you must perform file
   *             system check and repair procedures. This option is not recommended for Windows
   *             instances.</p>
   *         <p>Default: <code>false</code>
   *         </p>
   */
  Force?: boolean;

  /**
   * <p>Hibernates the instance if the instance was enabled for hibernation at launch. If the
   *             instance cannot hibernate successfully, a normal shutdown occurs. For more information,
   *             see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate
   *                 Your Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *         <p> Default: <code>false</code>
   *          </p>
   */
  Hibernate?: boolean;

  /**
   * <p>The IDs of the instances.</p>
   */
  InstanceIds: Array<string> | undefined;
}

export namespace StopInstancesRequest {
  export function isa(o: any): o is StopInstancesRequest {
    return _smithy.isa(o, "StopInstancesRequest");
  }
}

export interface StopInstancesResult extends $MetadataBearer {
  __type?: "StopInstancesResult";
  /**
   * <p>Information about the stopped instances.</p>
   */
  StoppingInstances?: Array<InstanceStateChange>;
}

export namespace StopInstancesResult {
  export function isa(o: any): o is StopInstancesResult {
    return _smithy.isa(o, "StopInstancesResult");
  }
}

/**
 * <p>Describes the storage location for an instance store-backed AMI.</p>
 */
export interface Storage {
  __type?: "Storage";
  /**
   * <p>An Amazon S3 storage location.</p>
   */
  S3?: S3Storage;
}

export namespace Storage {
  export function isa(o: any): o is Storage {
    return _smithy.isa(o, "Storage");
  }
}

/**
 * <p>Describes a storage location in Amazon S3.</p>
 */
export interface StorageLocation {
  __type?: "StorageLocation";
  /**
   * <p>The name of the S3 bucket.</p>
   */
  Bucket?: string;

  /**
   * <p>The key.</p>
   */
  Key?: string;
}

export namespace StorageLocation {
  export function isa(o: any): o is StorageLocation {
    return _smithy.isa(o, "StorageLocation");
  }
}

/**
 * <p>Describes a subnet.</p>
 */
export interface Subnet {
  __type?: "Subnet";
  /**
   * <p>Indicates whether a network interface created in this subnet (including a network
   *             interface created by <a>RunInstances</a>) receives an IPv6 address.</p>
   */
  AssignIpv6AddressOnCreation?: boolean;

  /**
   * <p>The Availability Zone of the subnet.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The AZ ID of the subnet.</p>
   */
  AvailabilityZoneId?: string;

  /**
   * <p>The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any
   * 			stopped instances are considered unavailable.</p>
   */
  AvailableIpAddressCount?: number;

  /**
   * <p>The IPv4 CIDR block assigned to the subnet.</p>
   */
  CidrBlock?: string;

  /**
   * <p>Indicates whether this is the default subnet for the Availability Zone.</p>
   */
  DefaultForAz?: boolean;

  /**
   * <p>Information about the IPv6 CIDR blocks associated with the subnet.</p>
   */
  Ipv6CidrBlockAssociationSet?: Array<SubnetIpv6CidrBlockAssociation>;

  /**
   * <p>Indicates whether instances launched in this subnet receive a public IPv4 address.</p>
   */
  MapPublicIpOnLaunch?: boolean;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The ID of the AWS account that owns the subnet.</p>
   */
  OwnerId?: string;

  /**
   * <p>The current state of the subnet.</p>
   */
  State?: SubnetState | string;

  /**
   * <p>The Amazon Resource Name (ARN) of the subnet.</p>
   */
  SubnetArn?: string;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;

  /**
   * <p>Any tags assigned to the subnet.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC the subnet is in.</p>
   */
  VpcId?: string;
}

export namespace Subnet {
  export function isa(o: any): o is Subnet {
    return _smithy.isa(o, "Subnet");
  }
}

/**
 * <p>Describes the subnet association with the transit gateway multicast domain.</p>
 */
export interface SubnetAssociation {
  __type?: "SubnetAssociation";
  /**
   * <p>The state of the subnet association.</p>
   */
  State?: TransitGatewayMulitcastDomainAssociationState | string;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;
}

export namespace SubnetAssociation {
  export function isa(o: any): o is SubnetAssociation {
    return _smithy.isa(o, "SubnetAssociation");
  }
}

/**
 * <p>Describes the state of a CIDR block.</p>
 */
export interface SubnetCidrBlockState {
  __type?: "SubnetCidrBlockState";
  /**
   * <p>The state of a CIDR block.</p>
   */
  State?: SubnetCidrBlockStateCode | string;

  /**
   * <p>A message about the status of the CIDR block, if applicable.</p>
   */
  StatusMessage?: string;
}

export namespace SubnetCidrBlockState {
  export function isa(o: any): o is SubnetCidrBlockState {
    return _smithy.isa(o, "SubnetCidrBlockState");
  }
}

export type SubnetCidrBlockStateCode =
  | "associated"
  | "associating"
  | "disassociated"
  | "disassociating"
  | "failed"
  | "failing";

/**
 * <p>Describes an IPv6 CIDR block associated with a subnet.</p>
 */
export interface SubnetIpv6CidrBlockAssociation {
  __type?: "SubnetIpv6CidrBlockAssociation";
  /**
   * <p>The association ID for the CIDR block.</p>
   */
  AssociationId?: string;

  /**
   * <p>The IPv6 CIDR block.</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>Information about the state of the CIDR block.</p>
   */
  Ipv6CidrBlockState?: SubnetCidrBlockState;
}

export namespace SubnetIpv6CidrBlockAssociation {
  export function isa(o: any): o is SubnetIpv6CidrBlockAssociation {
    return _smithy.isa(o, "SubnetIpv6CidrBlockAssociation");
  }
}

export type SubnetState = "available" | "pending";

/**
 * <p>Describes the burstable performance instance whose credit option for CPU usage was
 *             successfully modified.</p>
 */
export interface SuccessfulInstanceCreditSpecificationItem {
  __type?: "SuccessfulInstanceCreditSpecificationItem";
  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;
}

export namespace SuccessfulInstanceCreditSpecificationItem {
  export function isa(o: any): o is SuccessfulInstanceCreditSpecificationItem {
    return _smithy.isa(o, "SuccessfulInstanceCreditSpecificationItem");
  }
}

/**
 * <p>Describes a Reserved Instance whose queued purchase was successfully deleted.</p>
 */
export interface SuccessfulQueuedPurchaseDeletion {
  __type?: "SuccessfulQueuedPurchaseDeletion";
  /**
   * <p>The ID of the Reserved Instance.</p>
   */
  ReservedInstancesId?: string;
}

export namespace SuccessfulQueuedPurchaseDeletion {
  export function isa(o: any): o is SuccessfulQueuedPurchaseDeletion {
    return _smithy.isa(o, "SuccessfulQueuedPurchaseDeletion");
  }
}

export type SummaryStatus =
  | "impaired"
  | "initializing"
  | "insufficient-data"
  | "not-applicable"
  | "ok";

/**
 * <p>Describes a tag.</p>
 */
export interface Tag {
  __type?: "Tag";
  /**
   * <p>The key of the tag.</p>
   *          <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters.
   *          May not begin with <code>aws:</code>.</p>
   */
  Key?: string;

  /**
   * <p>The value of the tag.</p>
   *          <p>Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</p>
   */
  Value?: string;
}

export namespace Tag {
  export function isa(o: any): o is Tag {
    return _smithy.isa(o, "Tag");
  }
}

/**
 * <p>Describes a tag.</p>
 */
export interface TagDescription {
  __type?: "TagDescription";
  /**
   * <p>The tag key.</p>
   */
  Key?: string;

  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The resource type.</p>
   */
  ResourceType?: ResourceType | string;

  /**
   * <p>The tag value.</p>
   */
  Value?: string;
}

export namespace TagDescription {
  export function isa(o: any): o is TagDescription {
    return _smithy.isa(o, "TagDescription");
  }
}

/**
 * <p>The tags to apply to a resource when the resource is being created.</p>
 */
export interface TagSpecification {
  __type?: "TagSpecification";
  /**
   * <p>The type of resource to tag. Currently, the resource types that support tagging on creation are:
   *    	   <code>capacity-reservation</code> | <code>client-vpn-endpoint</code> | <code>dedicated-host</code> |
   *    	   <code>fleet</code> | <code>fpga-image</code> | <code>instance</code> | <code>key-pair</code> |
   *     	  <code>launch-template</code> | <code>placement-group</code> |
   *    	   <code>snapshot</code> | <code>traffic-mirror-filter</code> | <code>traffic-mirror-session</code> |
   *          <code>traffic-mirror-target</code> | <code>transit-gateway</code> | <code>transit-gateway-attachment</code> |
   *    	   <code>transit-gateway-route-table</code> | <code>volume</code>.</p>
   *          <p>To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.</p>
   */
  ResourceType?: ResourceType | string;

  /**
   * <p>The tags to apply to the resource.</p>
   */
  Tags?: Array<Tag>;
}

export namespace TagSpecification {
  export function isa(o: any): o is TagSpecification {
    return _smithy.isa(o, "TagSpecification");
  }
}

/**
 * <p>The number of units to request. You can choose to set the target capacity in terms of
 *          instances or a performance characteristic that is important to your application workload,
 *          such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can
 *          specify a target capacity of 0 and add capacity later.</p>
 *          <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance
 *             <code>MaxTotalPrice</code>, or both to ensure that your fleet cost does not exceed your
 *          budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet
 *          will launch instances until it reaches the maximum amount that you're willing to pay. When
 *          the maximum amount you're willing to pay is reached, the fleet stops launching instances
 *          even if it hasn’t met the target capacity. The <code>MaxTotalPrice</code> parameters are
 *          located in  and
 *       </p>
 */
export interface TargetCapacitySpecification {
  __type?: "TargetCapacitySpecification";
  /**
   * <p>The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or
   *             <code>On-Demand</code>.</p>
   */
  DefaultTargetCapacityType?: DefaultTargetCapacityType | string;

  /**
   * <p>The number of On-Demand units to request. If you specify a target capacity for Spot units, you cannot specify a target capacity for On-Demand units.</p>
   */
  OnDemandTargetCapacity?: number;

  /**
   * <p>The maximum number of Spot units to launch. If you specify a target capacity for On-Demand units, you cannot specify a target capacity for Spot units.</p>
   */
  SpotTargetCapacity?: number;

  /**
   * <p>The number of units to request, filled using
   *          <code>DefaultTargetCapacityType</code>.</p>
   */
  TotalTargetCapacity?: number;
}

export namespace TargetCapacitySpecification {
  export function isa(o: any): o is TargetCapacitySpecification {
    return _smithy.isa(o, "TargetCapacitySpecification");
  }
}

/**
 * <p>The number of units to request. You can choose to set the target capacity as the number of
 *          instances. Or you can set the target capacity to a performance characteristic that is important to your application workload,
 *          such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can
 *          specify a target capacity of 0 and add capacity later.</p>
 *          <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance
 *             <code>MaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost
 *          does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances
 *          in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you're
 *          willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops
 *          launching instances even if it hasn’t met the target capacity. The
 *             <code>MaxTotalPrice</code> parameters are located in  and .</p>
 */
export interface TargetCapacitySpecificationRequest {
  __type?: "TargetCapacitySpecificationRequest";
  /**
   * <p>The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or
   *             <code>On-Demand</code>.</p>
   */
  DefaultTargetCapacityType?: DefaultTargetCapacityType | string;

  /**
   * <p>The number of On-Demand units to request.</p>
   */
  OnDemandTargetCapacity?: number;

  /**
   * <p>The number of Spot units to request.</p>
   */
  SpotTargetCapacity?: number;

  /**
   * <p>The number of units to request, filled using
   *          <code>DefaultTargetCapacityType</code>.</p>
   */
  TotalTargetCapacity: number | undefined;
}

export namespace TargetCapacitySpecificationRequest {
  export function isa(o: any): o is TargetCapacitySpecificationRequest {
    return _smithy.isa(o, "TargetCapacitySpecificationRequest");
  }
}

/**
 * <p>Information about the Convertible Reserved Instance offering.</p>
 */
export interface TargetConfiguration {
  __type?: "TargetConfiguration";
  /**
   * <p>The number of instances the Convertible Reserved Instance offering can be applied to. This parameter is
   *       reserved and cannot be specified in a request</p>
   */
  InstanceCount?: number;

  /**
   * <p>The ID of the Convertible Reserved Instance offering.</p>
   */
  OfferingId?: string;
}

export namespace TargetConfiguration {
  export function isa(o: any): o is TargetConfiguration {
    return _smithy.isa(o, "TargetConfiguration");
  }
}

/**
 * <p>Details about the target configuration.</p>
 */
export interface TargetConfigurationRequest {
  __type?: "TargetConfigurationRequest";
  /**
   * <p>The number of instances the Covertible Reserved Instance offering can be applied to. This parameter is reserved and cannot
   *       be specified in a request</p>
   */
  InstanceCount?: number;

  /**
   * <p>The Convertible Reserved Instance offering ID.</p>
   */
  OfferingId: string | undefined;
}

export namespace TargetConfigurationRequest {
  export function isa(o: any): o is TargetConfigurationRequest {
    return _smithy.isa(o, "TargetConfigurationRequest");
  }
}

/**
 * <p>Describes a load balancer target group.</p>
 */
export interface TargetGroup {
  __type?: "TargetGroup";
  /**
   * <p>The Amazon Resource Name (ARN) of the target group.</p>
   */
  Arn?: string;
}

export namespace TargetGroup {
  export function isa(o: any): o is TargetGroup {
    return _smithy.isa(o, "TargetGroup");
  }
}

/**
 * <p>Describes the target groups to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances
 *             with these target groups.</p>
 */
export interface TargetGroupsConfig {
  __type?: "TargetGroupsConfig";
  /**
   * <p>One or more target groups.</p>
   */
  TargetGroups?: Array<TargetGroup>;
}

export namespace TargetGroupsConfig {
  export function isa(o: any): o is TargetGroupsConfig {
    return _smithy.isa(o, "TargetGroupsConfig");
  }
}

/**
 * <p>Describes a target network associated with a Client VPN endpoint.</p>
 */
export interface TargetNetwork {
  __type?: "TargetNetwork";
  /**
   * <p>The ID of the association.</p>
   */
  AssociationId?: string;

  /**
   * <p>The ID of the Client VPN endpoint with which the target network is associated.</p>
   */
  ClientVpnEndpointId?: string;

  /**
   * <p>The IDs of the security groups applied to the target network association.</p>
   */
  SecurityGroups?: Array<string>;

  /**
   * <p>The current state of the target network association.</p>
   */
  Status?: AssociationStatus;

  /**
   * <p>The ID of the subnet specified as the target network.</p>
   */
  TargetNetworkId?: string;

  /**
   * <p>The ID of the VPC in which the target network (subnet) is located.</p>
   */
  VpcId?: string;
}

export namespace TargetNetwork {
  export function isa(o: any): o is TargetNetwork {
    return _smithy.isa(o, "TargetNetwork");
  }
}

/**
 * <p>The total value of the new Convertible Reserved Instances.</p>
 */
export interface TargetReservationValue {
  __type?: "TargetReservationValue";
  /**
   * <p>The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of
   *       the list value, remaining upfront price, and additional upfront cost of the exchange.</p>
   */
  ReservationValue?: ReservationValue;

  /**
   * <p>The configuration of the Convertible Reserved Instances that make up the exchange.</p>
   */
  TargetConfiguration?: TargetConfiguration;
}

export namespace TargetReservationValue {
  export function isa(o: any): o is TargetReservationValue {
    return _smithy.isa(o, "TargetReservationValue");
  }
}

export type TelemetryStatus = "DOWN" | "UP";

export type Tenancy = "dedicated" | "default" | "host";

export interface TerminateClientVpnConnectionsRequest {
  __type?: "TerminateClientVpnConnectionsRequest";
  /**
   * <p>The ID of the Client VPN endpoint to which the client is connected.</p>
   */
  ClientVpnEndpointId: string | undefined;

  /**
   * <p>The ID of the client connection to be terminated.</p>
   */
  ConnectionId?: string;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The name of the user who initiated the connection. Use this option to terminate all active connections for
   * 			the specified user. This option can only be used if the user has established up to five connections.</p>
   */
  Username?: string;
}

export namespace TerminateClientVpnConnectionsRequest {
  export function isa(o: any): o is TerminateClientVpnConnectionsRequest {
    return _smithy.isa(o, "TerminateClientVpnConnectionsRequest");
  }
}

export interface TerminateClientVpnConnectionsResult extends $MetadataBearer {
  __type?: "TerminateClientVpnConnectionsResult";
  /**
   * <p>The ID of the Client VPN endpoint.</p>
   */
  ClientVpnEndpointId?: string;

  /**
   * <p>The current state of the client connections.</p>
   */
  ConnectionStatuses?: Array<TerminateConnectionStatus>;

  /**
   * <p>The user who established the terminated client connections.</p>
   */
  Username?: string;
}

export namespace TerminateClientVpnConnectionsResult {
  export function isa(o: any): o is TerminateClientVpnConnectionsResult {
    return _smithy.isa(o, "TerminateClientVpnConnectionsResult");
  }
}

/**
 * <p>Information about a terminated Client VPN endpoint client connection.</p>
 */
export interface TerminateConnectionStatus {
  __type?: "TerminateConnectionStatus";
  /**
   * <p>The ID of the client connection.</p>
   */
  ConnectionId?: string;

  /**
   * <p>A message about the status of the client connection, if applicable.</p>
   */
  CurrentStatus?: ClientVpnConnectionStatus;

  /**
   * <p>The state of the client connection.</p>
   */
  PreviousStatus?: ClientVpnConnectionStatus;
}

export namespace TerminateConnectionStatus {
  export function isa(o: any): o is TerminateConnectionStatus {
    return _smithy.isa(o, "TerminateConnectionStatus");
  }
}

export interface TerminateInstancesRequest {
  __type?: "TerminateInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the instances.</p>
   *         <p>Constraints: Up to 1000 instance IDs. We recommend breaking up this request into
   *             smaller batches.</p>
   */
  InstanceIds: Array<string> | undefined;
}

export namespace TerminateInstancesRequest {
  export function isa(o: any): o is TerminateInstancesRequest {
    return _smithy.isa(o, "TerminateInstancesRequest");
  }
}

export interface TerminateInstancesResult extends $MetadataBearer {
  __type?: "TerminateInstancesResult";
  /**
   * <p>Information about the terminated instances.</p>
   */
  TerminatingInstances?: Array<InstanceStateChange>;
}

export namespace TerminateInstancesResult {
  export function isa(o: any): o is TerminateInstancesResult {
    return _smithy.isa(o, "TerminateInstancesResult");
  }
}

export type TrafficDirection = "egress" | "ingress";

/**
 * <p>Describes the Traffic Mirror filter.</p>
 */
export interface TrafficMirrorFilter {
  __type?: "TrafficMirrorFilter";
  /**
   * <p>The description of the Traffic Mirror filter.</p>
   */
  Description?: string;

  /**
   * <p>Information about the egress rules that are associated with the Traffic Mirror filter.</p>
   */
  EgressFilterRules?: Array<TrafficMirrorFilterRule>;

  /**
   * <p>Information about the ingress rules that are associated with the Traffic Mirror filter.</p>
   */
  IngressFilterRules?: Array<TrafficMirrorFilterRule>;

  /**
   * <p>The network service traffic that is associated with the Traffic Mirror filter.</p>
   */
  NetworkServices?: Array<TrafficMirrorNetworkService | string>;

  /**
   * <p>The tags assigned to the Traffic Mirror filter.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterId?: string;
}

export namespace TrafficMirrorFilter {
  export function isa(o: any): o is TrafficMirrorFilter {
    return _smithy.isa(o, "TrafficMirrorFilter");
  }
}

/**
 * <p>Describes the Traffic Mirror rule.</p>
 */
export interface TrafficMirrorFilterRule {
  __type?: "TrafficMirrorFilterRule";
  /**
   * <p>The description of the Traffic Mirror rule.</p>
   */
  Description?: string;

  /**
   * <p>The destination CIDR block assigned to the Traffic Mirror rule.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The destination port range assigned to the Traffic Mirror rule.</p>
   */
  DestinationPortRange?: TrafficMirrorPortRange;

  /**
   * <p>The protocol assigned to the Traffic Mirror rule.</p>
   */
  Protocol?: number;

  /**
   * <p>The action assigned to the Traffic Mirror rule.</p>
   */
  RuleAction?: TrafficMirrorRuleAction | string;

  /**
   * <p>The rule number of the Traffic Mirror rule.</p>
   */
  RuleNumber?: number;

  /**
   * <p>The source CIDR block assigned to the Traffic Mirror rule.</p>
   */
  SourceCidrBlock?: string;

  /**
   * <p>The source port range assigned to the Traffic Mirror rule.</p>
   */
  SourcePortRange?: TrafficMirrorPortRange;

  /**
   * <p>The traffic direction assigned to the Traffic Mirror rule.</p>
   */
  TrafficDirection?: TrafficDirection | string;

  /**
   * <p>The ID of the Traffic Mirror filter that the rule is associated with.</p>
   */
  TrafficMirrorFilterId?: string;

  /**
   * <p>The ID of the Traffic Mirror rule.</p>
   */
  TrafficMirrorFilterRuleId?: string;
}

export namespace TrafficMirrorFilterRule {
  export function isa(o: any): o is TrafficMirrorFilterRule {
    return _smithy.isa(o, "TrafficMirrorFilterRule");
  }
}

export type TrafficMirrorFilterRuleField =
  | "description"
  | "destination-port-range"
  | "protocol"
  | "source-port-range";

export type TrafficMirrorNetworkService = "amazon-dns";

/**
 * <p>Describes the Traffic Mirror port range.</p>
 */
export interface TrafficMirrorPortRange {
  __type?: "TrafficMirrorPortRange";
  /**
   * <p>The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.</p>
   */
  FromPort?: number;

  /**
   * <p>The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.</p>
   */
  ToPort?: number;
}

export namespace TrafficMirrorPortRange {
  export function isa(o: any): o is TrafficMirrorPortRange {
    return _smithy.isa(o, "TrafficMirrorPortRange");
  }
}

/**
 * <p>Information about the Traffic Mirror filter rule port range.</p>
 */
export interface TrafficMirrorPortRangeRequest {
  __type?: "TrafficMirrorPortRangeRequest";
  /**
   * <p>The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</p>
   */
  FromPort?: number;

  /**
   * <p>The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.</p>
   */
  ToPort?: number;
}

export namespace TrafficMirrorPortRangeRequest {
  export function isa(o: any): o is TrafficMirrorPortRangeRequest {
    return _smithy.isa(o, "TrafficMirrorPortRangeRequest");
  }
}

export type TrafficMirrorRuleAction = "accept" | "reject";

/**
 * <p>Describes a Traffic Mirror session.</p>
 */
export interface TrafficMirrorSession {
  __type?: "TrafficMirrorSession";
  /**
   * <p>The description of the Traffic Mirror session.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the Traffic Mirror session's network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The ID of the account that owns the Traffic Mirror session.</p>
   */
  OwnerId?: string;

  /**
   * <p>The number of bytes in each packet to mirror. These are the bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet</p>
   */
  PacketLength?: number;

  /**
   * <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p>
   *          <p>Valid values are 1-32766.</p>
   */
  SessionNumber?: number;

  /**
   * <p>The tags assigned to the Traffic Mirror session.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the Traffic Mirror filter.</p>
   */
  TrafficMirrorFilterId?: string;

  /**
   * <p>The ID for the Traffic Mirror session.</p>
   */
  TrafficMirrorSessionId?: string;

  /**
   * <p>The ID of the Traffic Mirror target.</p>
   */
  TrafficMirrorTargetId?: string;

  /**
   * <p>The virtual network ID associated with the Traffic Mirror session.</p>
   */
  VirtualNetworkId?: number;
}

export namespace TrafficMirrorSession {
  export function isa(o: any): o is TrafficMirrorSession {
    return _smithy.isa(o, "TrafficMirrorSession");
  }
}

export type TrafficMirrorSessionField =
  | "description"
  | "packet-length"
  | "virtual-network-id";

/**
 * <p>Describes a Traffic Mirror target.</p>
 */
export interface TrafficMirrorTarget {
  __type?: "TrafficMirrorTarget";
  /**
   * <p>Information about the Traffic Mirror target.</p>
   */
  Description?: string;

  /**
   * <p>The network interface ID that is attached to the target.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Network Load Balancer.</p>
   */
  NetworkLoadBalancerArn?: string;

  /**
   * <p>The ID of the account that owns the Traffic Mirror target.</p>
   */
  OwnerId?: string;

  /**
   * <p>The tags assigned to the Traffic Mirror target.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the Traffic Mirror target.</p>
   */
  TrafficMirrorTargetId?: string;

  /**
   * <p>The type of Traffic Mirror target.</p>
   */
  Type?: TrafficMirrorTargetType | string;
}

export namespace TrafficMirrorTarget {
  export function isa(o: any): o is TrafficMirrorTarget {
    return _smithy.isa(o, "TrafficMirrorTarget");
  }
}

export type TrafficMirrorTargetType =
  | "network-interface"
  | "network-load-balancer";

export type TrafficType = "ACCEPT" | "ALL" | "REJECT";

/**
 * <p>Describes a transit gateway.</p>
 */
export interface TransitGateway {
  __type?: "TransitGateway";
  /**
   * <p>The creation time.</p>
   */
  CreationTime?: Date;

  /**
   * <p>The description of the transit gateway.</p>
   */
  Description?: string;

  /**
   * <p>The transit gateway options.</p>
   */
  Options?: TransitGatewayOptions;

  /**
   * <p>The ID of the AWS account ID that owns the transit gateway.</p>
   */
  OwnerId?: string;

  /**
   * <p>The state of the transit gateway.</p>
   */
  State?: TransitGatewayState | string;

  /**
   * <p>The tags for the transit gateway.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The Amazon Resource Name (ARN) of the transit gateway.</p>
   */
  TransitGatewayArn?: string;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId?: string;
}

export namespace TransitGateway {
  export function isa(o: any): o is TransitGateway {
    return _smithy.isa(o, "TransitGateway");
  }
}

/**
 * <p>Describes an association between a resource attachment and a transit gateway route table.</p>
 */
export interface TransitGatewayAssociation {
  __type?: "TransitGatewayAssociation";
  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The resource type.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The state of the association.</p>
   */
  State?: TransitGatewayAssociationState | string;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId?: string;
}

export namespace TransitGatewayAssociation {
  export function isa(o: any): o is TransitGatewayAssociation {
    return _smithy.isa(o, "TransitGatewayAssociation");
  }
}

export type TransitGatewayAssociationState =
  | "associated"
  | "associating"
  | "disassociated"
  | "disassociating";

/**
 * <p>Describes an attachment between a resource and a transit gateway.</p>
 */
export interface TransitGatewayAttachment {
  __type?: "TransitGatewayAttachment";
  /**
   * <p>The association.</p>
   */
  Association?: TransitGatewayAttachmentAssociation;

  /**
   * <p>The creation time.</p>
   */
  CreationTime?: Date;

  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The ID of the AWS account that owns the resource.</p>
   */
  ResourceOwnerId?: string;

  /**
   * <p>The resource type.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The attachment state.</p>
   */
  State?: TransitGatewayAttachmentState | string;

  /**
   * <p>The tags for the attachment.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of the AWS account that owns the transit gateway.</p>
   */
  TransitGatewayOwnerId?: string;
}

export namespace TransitGatewayAttachment {
  export function isa(o: any): o is TransitGatewayAttachment {
    return _smithy.isa(o, "TransitGatewayAttachment");
  }
}

/**
 * <p>Describes an association.</p>
 */
export interface TransitGatewayAttachmentAssociation {
  __type?: "TransitGatewayAttachmentAssociation";
  /**
   * <p>The state of the association.</p>
   */
  State?: TransitGatewayAssociationState | string;

  /**
   * <p>The ID of the route table for the transit gateway.</p>
   */
  TransitGatewayRouteTableId?: string;
}

export namespace TransitGatewayAttachmentAssociation {
  export function isa(o: any): o is TransitGatewayAttachmentAssociation {
    return _smithy.isa(o, "TransitGatewayAttachmentAssociation");
  }
}

/**
 * <p>Describes a propagation route table.</p>
 */
export interface TransitGatewayAttachmentPropagation {
  __type?: "TransitGatewayAttachmentPropagation";
  /**
   * <p>The state of the propagation route table.</p>
   */
  State?: TransitGatewayPropagationState | string;

  /**
   * <p>The ID of the propagation route table.</p>
   */
  TransitGatewayRouteTableId?: string;
}

export namespace TransitGatewayAttachmentPropagation {
  export function isa(o: any): o is TransitGatewayAttachmentPropagation {
    return _smithy.isa(o, "TransitGatewayAttachmentPropagation");
  }
}

export type TransitGatewayAttachmentResourceType =
  | "direct-connect-gateway"
  | "tgw-peering"
  | "vpc"
  | "vpn";

export type TransitGatewayAttachmentState =
  | "available"
  | "deleted"
  | "deleting"
  | "failed"
  | "failing"
  | "initiating"
  | "modifying"
  | "pending"
  | "pendingAcceptance"
  | "rejected"
  | "rejecting"
  | "rollingBack";

export type TransitGatewayMulitcastDomainAssociationState =
  | "associated"
  | "associating"
  | "disassociated"
  | "disassociating";

/**
 * <p>Describes the deregistered  transit gateway multicast group members.</p>
 */
export interface TransitGatewayMulticastDeregisteredGroupMembers {
  __type?: "TransitGatewayMulticastDeregisteredGroupMembers";
  /**
   * <p>The network interface IDs of the deregistered members.</p>
   */
  DeregisteredNetworkInterfaceIds?: Array<string>;

  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace TransitGatewayMulticastDeregisteredGroupMembers {
  export function isa(
    o: any
  ): o is TransitGatewayMulticastDeregisteredGroupMembers {
    return _smithy.isa(o, "TransitGatewayMulticastDeregisteredGroupMembers");
  }
}

/**
 * <p>Describes the deregistered  transit gateway multicast group sources.</p>
 */
export interface TransitGatewayMulticastDeregisteredGroupSources {
  __type?: "TransitGatewayMulticastDeregisteredGroupSources";
  /**
   * <p>The network interface IDs of the non-registered members.</p>
   */
  DeregisteredNetworkInterfaceIds?: Array<string>;

  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace TransitGatewayMulticastDeregisteredGroupSources {
  export function isa(
    o: any
  ): o is TransitGatewayMulticastDeregisteredGroupSources {
    return _smithy.isa(o, "TransitGatewayMulticastDeregisteredGroupSources");
  }
}

/**
 * <p>Describes the transit gateway multicast domain.</p>
 */
export interface TransitGatewayMulticastDomain {
  __type?: "TransitGatewayMulticastDomain";
  /**
   * <p>The time the transit gateway multicast domain was created.</p>
   */
  CreationTime?: Date;

  /**
   * <p>The state of the transit gateway multicast domain.</p>
   */
  State?: TransitGatewayMulticastDomainState | string;

  /**
   * <p>The tags for the transit gateway multicast domain.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace TransitGatewayMulticastDomain {
  export function isa(o: any): o is TransitGatewayMulticastDomain {
    return _smithy.isa(o, "TransitGatewayMulticastDomain");
  }
}

/**
 * <p>Describes the resources associated with the transit gateway multicast domain.</p>
 */
export interface TransitGatewayMulticastDomainAssociation {
  __type?: "TransitGatewayMulticastDomainAssociation";
  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The type of resource, for example a VPC attachment.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The subnet associated with the transit gateway multicast domain.</p>
   */
  Subnet?: SubnetAssociation;

  /**
   * <p>The ID of the transit gateway attachment.</p>
   */
  TransitGatewayAttachmentId?: string;
}

export namespace TransitGatewayMulticastDomainAssociation {
  export function isa(o: any): o is TransitGatewayMulticastDomainAssociation {
    return _smithy.isa(o, "TransitGatewayMulticastDomainAssociation");
  }
}

/**
 * <p>Describes the multicast domain associations.</p>
 */
export interface TransitGatewayMulticastDomainAssociations {
  __type?: "TransitGatewayMulticastDomainAssociations";
  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The type of resource, for example a VPC attachment.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The subnets associated with the multicast domain.</p>
   */
  Subnets?: Array<SubnetAssociation>;

  /**
   * <p>The ID of the transit gateway attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace TransitGatewayMulticastDomainAssociations {
  export function isa(o: any): o is TransitGatewayMulticastDomainAssociations {
    return _smithy.isa(o, "TransitGatewayMulticastDomainAssociations");
  }
}

export type TransitGatewayMulticastDomainState =
  | "available"
  | "deleted"
  | "deleting"
  | "pending";

/**
 * <p>Describes the  transit gateway multicast group resources.</p>
 */
export interface TransitGatewayMulticastGroup {
  __type?: "TransitGatewayMulticastGroup";
  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>Indicates that the resource is a  transit gateway multicast group member.</p>
   */
  GroupMember?: boolean;

  /**
   * <p>Indicates that the resource is a  transit gateway multicast group member.</p>
   */
  GroupSource?: boolean;

  /**
   * <p>The member type (for example, <code>static</code>).</p>
   */
  MemberType?: MembershipType | string;

  /**
   * <p>The ID of the transit gateway attachment.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The type of resource, for example a VPC attachment.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The source type.</p>
   */
  SourceType?: MembershipType | string;

  /**
   * <p>The ID of the subnet.</p>
   */
  SubnetId?: string;

  /**
   * <p>The ID of the transit gateway attachment.</p>
   */
  TransitGatewayAttachmentId?: string;
}

export namespace TransitGatewayMulticastGroup {
  export function isa(o: any): o is TransitGatewayMulticastGroup {
    return _smithy.isa(o, "TransitGatewayMulticastGroup");
  }
}

/**
 * <p>Describes the registered  transit gateway multicast group members.</p>
 */
export interface TransitGatewayMulticastRegisteredGroupMembers {
  __type?: "TransitGatewayMulticastRegisteredGroupMembers";
  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The ID of the registered network interfaces.</p>
   */
  RegisteredNetworkInterfaceIds?: Array<string>;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace TransitGatewayMulticastRegisteredGroupMembers {
  export function isa(
    o: any
  ): o is TransitGatewayMulticastRegisteredGroupMembers {
    return _smithy.isa(o, "TransitGatewayMulticastRegisteredGroupMembers");
  }
}

/**
 * <p>Describes the members registered with the  transit gateway multicast group.</p>
 */
export interface TransitGatewayMulticastRegisteredGroupSources {
  __type?: "TransitGatewayMulticastRegisteredGroupSources";
  /**
   * <p>The IP address assigned to the  transit gateway multicast group.</p>
   */
  GroupIpAddress?: string;

  /**
   * <p>The IDs of the network interfaces members registered with the  transit gateway multicast group.</p>
   */
  RegisteredNetworkInterfaceIds?: Array<string>;

  /**
   * <p>The ID of the transit gateway multicast domain.</p>
   */
  TransitGatewayMulticastDomainId?: string;
}

export namespace TransitGatewayMulticastRegisteredGroupSources {
  export function isa(
    o: any
  ): o is TransitGatewayMulticastRegisteredGroupSources {
    return _smithy.isa(o, "TransitGatewayMulticastRegisteredGroupSources");
  }
}

/**
 * <p>Describes the options for a transit gateway.</p>
 */
export interface TransitGatewayOptions {
  __type?: "TransitGatewayOptions";
  /**
   * <p>A private Autonomous System Number (ASN) for the Amazon side of a BGP session.
   *          The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.</p>
   */
  AmazonSideAsn?: number;

  /**
   * <p>The ID of the default association route table.</p>
   */
  AssociationDefaultRouteTableId?: string;

  /**
   * <p>Indicates whether attachment requests are automatically accepted.</p>
   */
  AutoAcceptSharedAttachments?: AutoAcceptSharedAttachmentsValue | string;

  /**
   * <p>Indicates whether resource attachments are automatically associated with the default association route table.</p>
   */
  DefaultRouteTableAssociation?: DefaultRouteTableAssociationValue | string;

  /**
   * <p>Indicates whether resource attachments automatically propagate routes to the default propagation route table.</p>
   */
  DefaultRouteTablePropagation?: DefaultRouteTablePropagationValue | string;

  /**
   * <p>Indicates whether DNS support is enabled.</p>
   */
  DnsSupport?: DnsSupportValue | string;

  /**
   * <p>Indicates whether multicast is enabled on the transit gateway</p>
   */
  MulticastSupport?: MulticastSupportValue | string;

  /**
   * <p>The ID of the default propagation route table.</p>
   */
  PropagationDefaultRouteTableId?: string;

  /**
   * <p>Indicates whether Equal Cost Multipath Protocol support is enabled.</p>
   */
  VpnEcmpSupport?: VpnEcmpSupportValue | string;
}

export namespace TransitGatewayOptions {
  export function isa(o: any): o is TransitGatewayOptions {
    return _smithy.isa(o, "TransitGatewayOptions");
  }
}

/**
 * <p>Describes the transit gateway peering attachment.</p>
 */
export interface TransitGatewayPeeringAttachment {
  __type?: "TransitGatewayPeeringAttachment";
  /**
   * <p>Information about the accepter transit gateway.</p>
   */
  AccepterTgwInfo?: PeeringTgwInfo;

  /**
   * <p>The time the transit gateway peering attachment was created.</p>
   */
  CreationTime?: Date;

  /**
   * <p>Information about the requester transit gateway.</p>
   */
  RequesterTgwInfo?: PeeringTgwInfo;

  /**
   * <p>The state of the transit gateway peering attachment.</p>
   */
  State?: TransitGatewayAttachmentState | string;

  /**
   * <p>The status of the transit gateway peering attachment.</p>
   */
  Status?: PeeringAttachmentStatus;

  /**
   * <p>The tags for the transit gateway peering attachment.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the transit gateway peering attachment.</p>
   */
  TransitGatewayAttachmentId?: string;
}

export namespace TransitGatewayPeeringAttachment {
  export function isa(o: any): o is TransitGatewayPeeringAttachment {
    return _smithy.isa(o, "TransitGatewayPeeringAttachment");
  }
}

/**
 * <p>Describes route propagation.</p>
 */
export interface TransitGatewayPropagation {
  __type?: "TransitGatewayPropagation";
  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The resource type.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The state.</p>
   */
  State?: TransitGatewayPropagationState | string;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId?: string;
}

export namespace TransitGatewayPropagation {
  export function isa(o: any): o is TransitGatewayPropagation {
    return _smithy.isa(o, "TransitGatewayPropagation");
  }
}

export type TransitGatewayPropagationState =
  | "disabled"
  | "disabling"
  | "enabled"
  | "enabling";

/**
 * <p>Describes the options for a transit gateway.</p>
 */
export interface TransitGatewayRequestOptions {
  __type?: "TransitGatewayRequestOptions";
  /**
   * <p>A private Autonomous System Number (ASN) for the Amazon side of a BGP session.
   *          The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.</p>
   */
  AmazonSideAsn?: number;

  /**
   * <p>Enable or disable automatic acceptance of attachment requests. The default is <code>disable</code>.</p>
   */
  AutoAcceptSharedAttachments?: AutoAcceptSharedAttachmentsValue | string;

  /**
   * <p>Enable or disable automatic association with the default association route table. The default is <code>enable</code>.</p>
   */
  DefaultRouteTableAssociation?: DefaultRouteTableAssociationValue | string;

  /**
   * <p>Enable or disable automatic propagation of routes to the default propagation route table. The default is <code>enable</code>.</p>
   */
  DefaultRouteTablePropagation?: DefaultRouteTablePropagationValue | string;

  /**
   * <p>Enable or disable DNS support.</p>
   */
  DnsSupport?: DnsSupportValue | string;

  /**
   * <p>Indicates whether multicast is enabled on the transit gateway</p>
   */
  MulticastSupport?: MulticastSupportValue | string;

  /**
   * <p>Enable or disable Equal Cost Multipath Protocol support.</p>
   */
  VpnEcmpSupport?: VpnEcmpSupportValue | string;
}

export namespace TransitGatewayRequestOptions {
  export function isa(o: any): o is TransitGatewayRequestOptions {
    return _smithy.isa(o, "TransitGatewayRequestOptions");
  }
}

/**
 * <p>Describes a route for a transit gateway route table.</p>
 */
export interface TransitGatewayRoute {
  __type?: "TransitGatewayRoute";
  /**
   * <p>The CIDR block used for destination matches.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>The state of the route.</p>
   */
  State?: TransitGatewayRouteState | string;

  /**
   * <p>The attachments.</p>
   */
  TransitGatewayAttachments?: Array<TransitGatewayRouteAttachment>;

  /**
   * <p>The route type.</p>
   */
  Type?: TransitGatewayRouteType | string;
}

export namespace TransitGatewayRoute {
  export function isa(o: any): o is TransitGatewayRoute {
    return _smithy.isa(o, "TransitGatewayRoute");
  }
}

/**
 * <p>Describes a route attachment.</p>
 */
export interface TransitGatewayRouteAttachment {
  __type?: "TransitGatewayRouteAttachment";
  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The resource type.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;
}

export namespace TransitGatewayRouteAttachment {
  export function isa(o: any): o is TransitGatewayRouteAttachment {
    return _smithy.isa(o, "TransitGatewayRouteAttachment");
  }
}

export type TransitGatewayRouteState =
  | "active"
  | "blackhole"
  | "deleted"
  | "deleting"
  | "pending";

/**
 * <p>Describes a transit gateway route table.</p>
 */
export interface TransitGatewayRouteTable {
  __type?: "TransitGatewayRouteTable";
  /**
   * <p>The creation time.</p>
   */
  CreationTime?: Date;

  /**
   * <p>Indicates whether this is the default association route table for the transit gateway.</p>
   */
  DefaultAssociationRouteTable?: boolean;

  /**
   * <p>Indicates whether this is the default propagation route table for the transit gateway.</p>
   */
  DefaultPropagationRouteTable?: boolean;

  /**
   * <p>The state of the transit gateway route table.</p>
   */
  State?: TransitGatewayRouteTableState | string;

  /**
   * <p>Any tags assigned to the route table.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of the transit gateway route table.</p>
   */
  TransitGatewayRouteTableId?: string;
}

export namespace TransitGatewayRouteTable {
  export function isa(o: any): o is TransitGatewayRouteTable {
    return _smithy.isa(o, "TransitGatewayRouteTable");
  }
}

/**
 * <p>Describes an association between a route table and a resource attachment.</p>
 */
export interface TransitGatewayRouteTableAssociation {
  __type?: "TransitGatewayRouteTableAssociation";
  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The resource type.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The state of the association.</p>
   */
  State?: TransitGatewayAssociationState | string;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;
}

export namespace TransitGatewayRouteTableAssociation {
  export function isa(o: any): o is TransitGatewayRouteTableAssociation {
    return _smithy.isa(o, "TransitGatewayRouteTableAssociation");
  }
}

/**
 * <p>Describes a route table propagation.</p>
 */
export interface TransitGatewayRouteTablePropagation {
  __type?: "TransitGatewayRouteTablePropagation";
  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;

  /**
   * <p>The type of resource.</p>
   */
  ResourceType?: TransitGatewayAttachmentResourceType | string;

  /**
   * <p>The state of the resource.</p>
   */
  State?: TransitGatewayPropagationState | string;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;
}

export namespace TransitGatewayRouteTablePropagation {
  export function isa(o: any): o is TransitGatewayRouteTablePropagation {
    return _smithy.isa(o, "TransitGatewayRouteTablePropagation");
  }
}

export type TransitGatewayRouteTableState =
  | "available"
  | "deleted"
  | "deleting"
  | "pending";

export type TransitGatewayRouteType = "propagated" | "static";

export type TransitGatewayState =
  | "available"
  | "deleted"
  | "deleting"
  | "modifying"
  | "pending";

/**
 * <p>Describes a VPC attachment.</p>
 */
export interface TransitGatewayVpcAttachment {
  __type?: "TransitGatewayVpcAttachment";
  /**
   * <p>The creation time.</p>
   */
  CreationTime?: Date;

  /**
   * <p>The VPC attachment options.</p>
   */
  Options?: TransitGatewayVpcAttachmentOptions;

  /**
   * <p>The state of the VPC attachment.</p>
   */
  State?: TransitGatewayAttachmentState | string;

  /**
   * <p>The IDs of the subnets.</p>
   */
  SubnetIds?: Array<string>;

  /**
   * <p>The tags for the VPC attachment.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the attachment.</p>
   */
  TransitGatewayAttachmentId?: string;

  /**
   * <p>The ID of the transit gateway.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;

  /**
   * <p>The ID of the AWS account that owns the VPC.</p>
   */
  VpcOwnerId?: string;
}

export namespace TransitGatewayVpcAttachment {
  export function isa(o: any): o is TransitGatewayVpcAttachment {
    return _smithy.isa(o, "TransitGatewayVpcAttachment");
  }
}

/**
 * <p>Describes the VPC attachment options.</p>
 */
export interface TransitGatewayVpcAttachmentOptions {
  __type?: "TransitGatewayVpcAttachmentOptions";
  /**
   * <p>Indicates whether DNS support is enabled.</p>
   */
  DnsSupport?: DnsSupportValue | string;

  /**
   * <p>Indicates whether IPv6 support is enabled.</p>
   */
  Ipv6Support?: Ipv6SupportValue | string;
}

export namespace TransitGatewayVpcAttachmentOptions {
  export function isa(o: any): o is TransitGatewayVpcAttachmentOptions {
    return _smithy.isa(o, "TransitGatewayVpcAttachmentOptions");
  }
}

export type TransportProtocol = "tcp" | "udp";

/**
 * <p>The VPN tunnel options.</p>
 */
export interface TunnelOption {
  __type?: "TunnelOption";
  /**
   * <p>The number of seconds after which a DPD timeout occurs.</p>
   */
  DpdTimeoutSeconds?: number;

  /**
   * <p>The IKE versions that are permitted for the VPN tunnel.</p>
   */
  IkeVersions?: Array<IKEVersionsListValue>;

  /**
   * <p>The external IP address of the VPN tunnel.</p>
   */
  OutsideIpAddress?: string;

  /**
   * <p>The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.</p>
   */
  Phase1DHGroupNumbers?: Array<Phase1DHGroupNumbersListValue>;

  /**
   * <p>The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.</p>
   */
  Phase1EncryptionAlgorithms?: Array<Phase1EncryptionAlgorithmsListValue>;

  /**
   * <p>The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.</p>
   */
  Phase1IntegrityAlgorithms?: Array<Phase1IntegrityAlgorithmsListValue>;

  /**
   * <p>The lifetime for phase 1 of the IKE negotiation, in seconds.</p>
   */
  Phase1LifetimeSeconds?: number;

  /**
   * <p>The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.</p>
   */
  Phase2DHGroupNumbers?: Array<Phase2DHGroupNumbersListValue>;

  /**
   * <p>The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.</p>
   */
  Phase2EncryptionAlgorithms?: Array<Phase2EncryptionAlgorithmsListValue>;

  /**
   * <p>The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.</p>
   */
  Phase2IntegrityAlgorithms?: Array<Phase2IntegrityAlgorithmsListValue>;

  /**
   * <p>The lifetime for phase 2 of the IKE negotiation, in seconds.</p>
   */
  Phase2LifetimeSeconds?: number;

  /**
   * <p>The pre-shared key (PSK) to establish initial authentication between the virtual
   *             private gateway and the customer gateway.</p>
   */
  PreSharedKey?: string;

  /**
   * <p>The percentage of the rekey window determined by <code>RekeyMarginTimeSeconds</code> during which the rekey time is randomly selected.</p>
   */
  RekeyFuzzPercentage?: number;

  /**
   * <p>The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.</p>
   */
  RekeyMarginTimeSeconds?: number;

  /**
   * <p>The number of packets in an IKE replay window.</p>
   */
  ReplayWindowSize?: number;

  /**
   * <p>The range of inside IP addresses for the tunnel.</p>
   */
  TunnelInsideCidr?: string;
}

export namespace TunnelOption {
  export function isa(o: any): o is TunnelOption {
    return _smithy.isa(o, "TunnelOption");
  }
}

export interface UnassignIpv6AddressesRequest {
  __type?: "UnassignIpv6AddressesRequest";
  /**
   * <p>The IPv6 addresses to unassign from the network interface.</p>
   */
  Ipv6Addresses: Array<string> | undefined;

  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;
}

export namespace UnassignIpv6AddressesRequest {
  export function isa(o: any): o is UnassignIpv6AddressesRequest {
    return _smithy.isa(o, "UnassignIpv6AddressesRequest");
  }
}

export interface UnassignIpv6AddressesResult extends $MetadataBearer {
  __type?: "UnassignIpv6AddressesResult";
  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId?: string;

  /**
   * <p>The IPv6 addresses that have been unassigned from the network interface.</p>
   */
  UnassignedIpv6Addresses?: Array<string>;
}

export namespace UnassignIpv6AddressesResult {
  export function isa(o: any): o is UnassignIpv6AddressesResult {
    return _smithy.isa(o, "UnassignIpv6AddressesResult");
  }
}

/**
 * <p>Contains the parameters for UnassignPrivateIpAddresses.</p>
 */
export interface UnassignPrivateIpAddressesRequest {
  __type?: "UnassignPrivateIpAddressesRequest";
  /**
   * <p>The ID of the network interface.</p>
   */
  NetworkInterfaceId: string | undefined;

  /**
   * <p>The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.</p>
   */
  PrivateIpAddresses: Array<string> | undefined;
}

export namespace UnassignPrivateIpAddressesRequest {
  export function isa(o: any): o is UnassignPrivateIpAddressesRequest {
    return _smithy.isa(o, "UnassignPrivateIpAddressesRequest");
  }
}

export type UnlimitedSupportedInstanceFamily = "t2" | "t3" | "t3a";

export interface UnmonitorInstancesRequest {
  __type?: "UnmonitorInstancesRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The IDs of the instances.</p>
   */
  InstanceIds: Array<string> | undefined;
}

export namespace UnmonitorInstancesRequest {
  export function isa(o: any): o is UnmonitorInstancesRequest {
    return _smithy.isa(o, "UnmonitorInstancesRequest");
  }
}

export interface UnmonitorInstancesResult extends $MetadataBearer {
  __type?: "UnmonitorInstancesResult";
  /**
   * <p>The monitoring information.</p>
   */
  InstanceMonitorings?: Array<InstanceMonitoring>;
}

export namespace UnmonitorInstancesResult {
  export function isa(o: any): o is UnmonitorInstancesResult {
    return _smithy.isa(o, "UnmonitorInstancesResult");
  }
}

export enum UnsuccessfulInstanceCreditSpecificationErrorCode {
  INCORRECT_INSTANCE_STATE = "IncorrectInstanceState",
  INSTANCE_CREDIT_SPECIFICATION_NOT_SUPPORTED = "InstanceCreditSpecification.NotSupported",
  INSTANCE_NOT_FOUND = "InvalidInstanceID.NotFound",
  INVALID_INSTANCE_ID = "InvalidInstanceID.Malformed"
}

/**
 * <p>Describes the burstable performance instance whose credit option for CPU usage was not
 *             modified.</p>
 */
export interface UnsuccessfulInstanceCreditSpecificationItem {
  __type?: "UnsuccessfulInstanceCreditSpecificationItem";
  /**
   * <p>The applicable error for the burstable performance instance whose credit option for
   *             CPU usage was not modified.</p>
   */
  Error?: UnsuccessfulInstanceCreditSpecificationItemError;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;
}

export namespace UnsuccessfulInstanceCreditSpecificationItem {
  export function isa(
    o: any
  ): o is UnsuccessfulInstanceCreditSpecificationItem {
    return _smithy.isa(o, "UnsuccessfulInstanceCreditSpecificationItem");
  }
}

/**
 * <p>Information about the error for the burstable performance instance whose credit option
 *             for CPU usage was not modified.</p>
 */
export interface UnsuccessfulInstanceCreditSpecificationItemError {
  __type?: "UnsuccessfulInstanceCreditSpecificationItemError";
  /**
   * <p>The error code.</p>
   */
  Code?: UnsuccessfulInstanceCreditSpecificationErrorCode | string;

  /**
   * <p>The applicable error message.</p>
   */
  Message?: string;
}

export namespace UnsuccessfulInstanceCreditSpecificationItemError {
  export function isa(
    o: any
  ): o is UnsuccessfulInstanceCreditSpecificationItemError {
    return _smithy.isa(o, "UnsuccessfulInstanceCreditSpecificationItemError");
  }
}

/**
 * <p>Information about items that were not successfully processed in a batch call.</p>
 */
export interface UnsuccessfulItem {
  __type?: "UnsuccessfulItem";
  /**
   * <p>Information about the error.</p>
   */
  Error?: UnsuccessfulItemError;

  /**
   * <p>The ID of the resource.</p>
   */
  ResourceId?: string;
}

export namespace UnsuccessfulItem {
  export function isa(o: any): o is UnsuccessfulItem {
    return _smithy.isa(o, "UnsuccessfulItem");
  }
}

/**
 * <p>Information about the error that occurred. For more information about errors, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
 */
export interface UnsuccessfulItemError {
  __type?: "UnsuccessfulItemError";
  /**
   * <p>The error code.</p>
   */
  Code?: string;

  /**
   * <p>The error message accompanying the error code.</p>
   */
  Message?: string;
}

export namespace UnsuccessfulItemError {
  export function isa(o: any): o is UnsuccessfulItemError {
    return _smithy.isa(o, "UnsuccessfulItemError");
  }
}

export interface UpdateSecurityGroupRuleDescriptionsEgressRequest {
  __type?: "UpdateSecurityGroupRuleDescriptionsEgressRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the security group. You must specify either the security group ID or the
   * 			security group name in the request. For security groups in a nondefault VPC, you must
   * 			specify the security group ID.</p>
   */
  GroupId?: string;

  /**
   * <p>[Default VPC] The name of the security group. You must specify either the security group
   * 			ID or the security group name in the request.</p>
   */
  GroupName?: string;

  /**
   * <p>The IP permissions for the security group rule.</p>
   */
  IpPermissions: Array<IpPermission> | undefined;
}

export namespace UpdateSecurityGroupRuleDescriptionsEgressRequest {
  export function isa(
    o: any
  ): o is UpdateSecurityGroupRuleDescriptionsEgressRequest {
    return _smithy.isa(o, "UpdateSecurityGroupRuleDescriptionsEgressRequest");
  }
}

export interface UpdateSecurityGroupRuleDescriptionsEgressResult
  extends $MetadataBearer {
  __type?: "UpdateSecurityGroupRuleDescriptionsEgressResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
   */
  Return?: boolean;
}

export namespace UpdateSecurityGroupRuleDescriptionsEgressResult {
  export function isa(
    o: any
  ): o is UpdateSecurityGroupRuleDescriptionsEgressResult {
    return _smithy.isa(o, "UpdateSecurityGroupRuleDescriptionsEgressResult");
  }
}

export interface UpdateSecurityGroupRuleDescriptionsIngressRequest {
  __type?: "UpdateSecurityGroupRuleDescriptionsIngressRequest";
  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;

  /**
   * <p>The ID of the security group. You must specify either the security group ID or the
   * 			security group name in the request. For security groups in a nondefault VPC, you must
   * 			specify the security group ID.</p>
   */
  GroupId?: string;

  /**
   * <p>[EC2-Classic, default VPC] The name of the security group. You must specify either the
   * 			security group ID or the security group name in the request.</p>
   */
  GroupName?: string;

  /**
   * <p>The IP permissions for the security group rule. </p>
   */
  IpPermissions: Array<IpPermission> | undefined;
}

export namespace UpdateSecurityGroupRuleDescriptionsIngressRequest {
  export function isa(
    o: any
  ): o is UpdateSecurityGroupRuleDescriptionsIngressRequest {
    return _smithy.isa(o, "UpdateSecurityGroupRuleDescriptionsIngressRequest");
  }
}

export interface UpdateSecurityGroupRuleDescriptionsIngressResult
  extends $MetadataBearer {
  __type?: "UpdateSecurityGroupRuleDescriptionsIngressResult";
  /**
   * <p>Returns <code>true</code> if the request succeeds; otherwise, returns an error.</p>
   */
  Return?: boolean;
}

export namespace UpdateSecurityGroupRuleDescriptionsIngressResult {
  export function isa(
    o: any
  ): o is UpdateSecurityGroupRuleDescriptionsIngressResult {
    return _smithy.isa(o, "UpdateSecurityGroupRuleDescriptionsIngressResult");
  }
}

export type UsageClassType = "on-demand" | "spot";

/**
 * <p>Describes the S3 bucket for the disk image.</p>
 */
export interface UserBucket {
  __type?: "UserBucket";
  /**
   * <p>The name of the S3 bucket where the disk image is located.</p>
   */
  S3Bucket?: string;

  /**
   * <p>The file name of the disk image.</p>
   */
  S3Key?: string;
}

export namespace UserBucket {
  export function isa(o: any): o is UserBucket {
    return _smithy.isa(o, "UserBucket");
  }
}

/**
 * <p>Describes the S3 bucket for the disk image.</p>
 */
export interface UserBucketDetails {
  __type?: "UserBucketDetails";
  /**
   * <p>The S3 bucket from which the disk image was created.</p>
   */
  S3Bucket?: string;

  /**
   * <p>The file name of the disk image.</p>
   */
  S3Key?: string;
}

export namespace UserBucketDetails {
  export function isa(o: any): o is UserBucketDetails {
    return _smithy.isa(o, "UserBucketDetails");
  }
}

/**
 * <p>Describes the user data for an instance.</p>
 */
export interface UserData {
  __type?: "UserData";
  /**
   * <p>The user data. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you
   *    can load the text from a file. Otherwise, you must provide Base64-encoded text.</p>
   */
  Data?: string;
}

export namespace UserData {
  export function isa(o: any): o is UserData {
    return _smithy.isa(o, "UserData");
  }
}

/**
 * <p>Describes a security group and AWS account ID pair.</p>
 */
export interface UserIdGroupPair {
  __type?: "UserIdGroupPair";
  /**
   * <p>A description for the security group rule that references this user ID group
   * 			pair.</p>
   *          <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9,
   *       spaces, and ._-:/()#,@[]+=;{}!$*</p>
   */
  Description?: string;

  /**
   * <p>The ID of the security group.</p>
   */
  GroupId?: string;

  /**
   * <p>The name of the security group. In a request, use this parameter for a security group
   *             in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the
   *             security group ID. </p>
   *         <p>For a referenced security group in another VPC, this value is not returned if the
   *             referenced security group is deleted.</p>
   */
  GroupName?: string;

  /**
   * <p>The status of a VPC peering connection, if applicable.</p>
   */
  PeeringStatus?: string;

  /**
   * <p>The ID of an AWS account.</p>
   *         <p>For a referenced security group in another VPC, the account ID of the referenced
   *             security group is returned in the response. If the referenced security group is deleted,
   *             this value is not returned.</p>
   *          <p>[EC2-Classic] Required when adding or removing rules that reference a security group
   *             in another AWS account.</p>
   */
  UserId?: string;

  /**
   * <p>The ID of the VPC for the referenced security group, if applicable.</p>
   */
  VpcId?: string;

  /**
   * <p>The ID of the VPC peering connection, if applicable.</p>
   */
  VpcPeeringConnectionId?: string;
}

export namespace UserIdGroupPair {
  export function isa(o: any): o is UserIdGroupPair {
    return _smithy.isa(o, "UserIdGroupPair");
  }
}

/**
 * <p>Describes the vCPU configurations for the instance type.</p>
 */
export interface VCpuInfo {
  __type?: "VCpuInfo";
  /**
   * <p>The default number of cores for the instance type.</p>
   */
  DefaultCores?: number;

  /**
   * <p>The default number of threads per core for the instance type.</p>
   */
  DefaultThreadsPerCore?: number;

  /**
   * <p>The default number of vCPUs for the instance type.</p>
   */
  DefaultVCpus?: number;

  /**
   * <p>List of the valid number of cores that can be configured for the instance type.</p>
   */
  ValidCores?: Array<number>;

  /**
   * <p>List of the valid number of threads per core that can be configured for the instance type. </p>
   */
  ValidThreadsPerCore?: Array<number>;
}

export namespace VCpuInfo {
  export function isa(o: any): o is VCpuInfo {
    return _smithy.isa(o, "VCpuInfo");
  }
}

/**
 * <p>Describes telemetry for a VPN tunnel.</p>
 */
export interface VgwTelemetry {
  __type?: "VgwTelemetry";
  /**
   * <p>The number of accepted routes.</p>
   */
  AcceptedRouteCount?: number;

  /**
   * <p>The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.</p>
   */
  CertificateArn?: string;

  /**
   * <p>The date and time of the last change in status.</p>
   */
  LastStatusChange?: Date;

  /**
   * <p>The Internet-routable IP address of the virtual private gateway's outside interface.</p>
   */
  OutsideIpAddress?: string;

  /**
   * <p>The status of the VPN tunnel.</p>
   */
  Status?: TelemetryStatus | string;

  /**
   * <p>If an error occurs, a description of the error.</p>
   */
  StatusMessage?: string;
}

export namespace VgwTelemetry {
  export function isa(o: any): o is VgwTelemetry {
    return _smithy.isa(o, "VgwTelemetry");
  }
}

export type VirtualizationType = "hvm" | "paravirtual";

/**
 * <p>Describes a volume.</p>
 */
export interface Volume extends $MetadataBearer {
  __type?: "Volume";
  /**
   * <p>Information about the volume attachments.</p>
   */
  Attachments?: Array<VolumeAttachment>;

  /**
   * <p>The Availability Zone for the volume.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The time stamp when volume creation was initiated.</p>
   */
  CreateTime?: Date;

  /**
   * <p>Indicates whether the volume is encrypted.</p>
   */
  Encrypted?: boolean;

  /**
   * <p>Indicates whether the volume was created using fast snapshot restore.</p>
   */
  FastRestored?: boolean;

  /**
   * <p>The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS SSD
   *       volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose SSD
   *       volumes, this represents the baseline performance of the volume and the rate at which the
   *       volume accumulates I/O credits for bursting. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS Volume Types</a> in
   *       the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
   *          <p>Constraints: Range is 100-16,000 IOPS for <code>gp2</code> volumes and 100
   *       to 64,000IOPS for <code>io1</code> volumes, in most Regions. The maximum
   *       IOPS for <code>io1</code> of 64,000 is guaranteed only on <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based
   *         instances</a>. Other instance families guarantee performance up to
   *       32,000 IOPS.</p>
   *          <p>Condition: This parameter is required for requests to create <code>io1</code> volumes;
   *       it is not used in requests to create <code>gp2</code>, <code>st1</code>,
   *         <code>sc1</code>, or <code>standard</code> volumes.</p>
   */
  Iops?: number;

  /**
   * <p>The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the
   *       volume encryption key for the volume.</p>
   */
  KmsKeyId?: string;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The size of the volume, in GiBs.</p>
   */
  Size?: number;

  /**
   * <p>The snapshot from which the volume was created, if applicable.</p>
   */
  SnapshotId?: string;

  /**
   * <p>The volume state.</p>
   */
  State?: VolumeState | string;

  /**
   * <p>Any tags assigned to the volume.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId?: string;

  /**
   * <p>The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD,
   *         <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or
   *         <code>standard</code> for Magnetic volumes.</p>
   */
  VolumeType?: VolumeType | string;
}

export namespace Volume {
  export function isa(o: any): o is Volume {
    return _smithy.isa(o, "Volume");
  }
}

/**
 * <p>Describes volume attachment details.</p>
 */
export interface VolumeAttachment extends $MetadataBearer {
  __type?: "VolumeAttachment";
  /**
   * <p>The time stamp when the attachment initiated.</p>
   */
  AttachTime?: Date;

  /**
   * <p>Indicates whether the EBS volume is deleted on instance termination.</p>
   */
  DeleteOnTermination?: boolean;

  /**
   * <p>The device name.</p>
   */
  Device?: string;

  /**
   * <p>The ID of the instance.</p>
   */
  InstanceId?: string;

  /**
   * <p>The attachment state of the volume.</p>
   */
  State?: VolumeAttachmentState | string;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId?: string;
}

export namespace VolumeAttachment {
  export function isa(o: any): o is VolumeAttachment {
    return _smithy.isa(o, "VolumeAttachment");
  }
}

export type VolumeAttachmentState =
  | "attached"
  | "attaching"
  | "busy"
  | "detached"
  | "detaching";

export type VolumeAttributeName = "autoEnableIO" | "productCodes";

/**
 * <p>Describes an EBS volume.</p>
 */
export interface VolumeDetail {
  __type?: "VolumeDetail";
  /**
   * <p>The size of the volume, in GiB.</p>
   */
  Size: number | undefined;
}

export namespace VolumeDetail {
  export function isa(o: any): o is VolumeDetail {
    return _smithy.isa(o, "VolumeDetail");
  }
}

/**
 * <p>Describes the modification status of an EBS volume.</p>
 *          <p>If the volume has never been modified, some element values will be null.</p>
 */
export interface VolumeModification {
  __type?: "VolumeModification";
  /**
   * <p>The modification completion or failure time.</p>
   */
  EndTime?: Date;

  /**
   * <p>The current modification state. The modification state is null for unmodified
   *       volumes.</p>
   */
  ModificationState?: VolumeModificationState | string;

  /**
   * <p>The original IOPS rate of the volume.</p>
   */
  OriginalIops?: number;

  /**
   * <p>The original size of the volume.</p>
   */
  OriginalSize?: number;

  /**
   * <p>The original EBS volume type of the volume.</p>
   */
  OriginalVolumeType?: VolumeType | string;

  /**
   * <p>The modification progress, from 0 to 100 percent complete.</p>
   */
  Progress?: number;

  /**
   * <p>The modification start time.</p>
   */
  StartTime?: Date;

  /**
   * <p>A status message about the modification progress or failure.</p>
   */
  StatusMessage?: string;

  /**
   * <p>The target IOPS rate of the volume.</p>
   */
  TargetIops?: number;

  /**
   * <p>The target size of the volume, in GiB.</p>
   */
  TargetSize?: number;

  /**
   * <p>The target EBS volume type of the volume.</p>
   */
  TargetVolumeType?: VolumeType | string;

  /**
   * <p>The ID of the volume.</p>
   */
  VolumeId?: string;
}

export namespace VolumeModification {
  export function isa(o: any): o is VolumeModification {
    return _smithy.isa(o, "VolumeModification");
  }
}

export type VolumeModificationState =
  | "completed"
  | "failed"
  | "modifying"
  | "optimizing";

export type VolumeState =
  | "available"
  | "creating"
  | "deleted"
  | "deleting"
  | "error"
  | "in-use";

/**
 * <p>Describes a volume status operation code.</p>
 */
export interface VolumeStatusAction {
  __type?: "VolumeStatusAction";
  /**
   * <p>The code identifying the operation, for example, <code>enable-volume-io</code>.</p>
   */
  Code?: string;

  /**
   * <p>A description of the operation.</p>
   */
  Description?: string;

  /**
   * <p>The ID of the event associated with this operation.</p>
   */
  EventId?: string;

  /**
   * <p>The event type associated with this operation.</p>
   */
  EventType?: string;
}

export namespace VolumeStatusAction {
  export function isa(o: any): o is VolumeStatusAction {
    return _smithy.isa(o, "VolumeStatusAction");
  }
}

/**
 * <p>Describes a volume status.</p>
 */
export interface VolumeStatusDetails {
  __type?: "VolumeStatusDetails";
  /**
   * <p>The name of the volume status.</p>
   */
  Name?: VolumeStatusName | string;

  /**
   * <p>The intended status of the volume status.</p>
   */
  Status?: string;
}

export namespace VolumeStatusDetails {
  export function isa(o: any): o is VolumeStatusDetails {
    return _smithy.isa(o, "VolumeStatusDetails");
  }
}

/**
 * <p>Describes a volume status event.</p>
 */
export interface VolumeStatusEvent {
  __type?: "VolumeStatusEvent";
  /**
   * <p>A description of the event.</p>
   */
  Description?: string;

  /**
   * <p>The ID of this event.</p>
   */
  EventId?: string;

  /**
   * <p>The type of this event.</p>
   */
  EventType?: string;

  /**
   * <p>The latest end time of the event.</p>
   */
  NotAfter?: Date;

  /**
   * <p>The earliest start time of the event.</p>
   */
  NotBefore?: Date;
}

export namespace VolumeStatusEvent {
  export function isa(o: any): o is VolumeStatusEvent {
    return _smithy.isa(o, "VolumeStatusEvent");
  }
}

/**
 * <p>Describes the status of a volume.</p>
 */
export interface VolumeStatusInfo {
  __type?: "VolumeStatusInfo";
  /**
   * <p>The details of the volume status.</p>
   */
  Details?: Array<VolumeStatusDetails>;

  /**
   * <p>The status of the volume.</p>
   */
  Status?: VolumeStatusInfoStatus | string;
}

export namespace VolumeStatusInfo {
  export function isa(o: any): o is VolumeStatusInfo {
    return _smithy.isa(o, "VolumeStatusInfo");
  }
}

export type VolumeStatusInfoStatus = "impaired" | "insufficient-data" | "ok";

/**
 * <p>Describes the volume status.</p>
 */
export interface VolumeStatusItem {
  __type?: "VolumeStatusItem";
  /**
   * <p>The details of the operation.</p>
   */
  Actions?: Array<VolumeStatusAction>;

  /**
   * <p>The Availability Zone of the volume.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>A list of events associated with the volume.</p>
   */
  Events?: Array<VolumeStatusEvent>;

  /**
   * <p>The Amazon Resource Name (ARN) of the Outpost.</p>
   */
  OutpostArn?: string;

  /**
   * <p>The volume ID.</p>
   */
  VolumeId?: string;

  /**
   * <p>The volume status.</p>
   */
  VolumeStatus?: VolumeStatusInfo;
}

export namespace VolumeStatusItem {
  export function isa(o: any): o is VolumeStatusItem {
    return _smithy.isa(o, "VolumeStatusItem");
  }
}

export type VolumeStatusName = "io-enabled" | "io-performance";

export type VolumeType = "gp2" | "io1" | "sc1" | "st1" | "standard";

/**
 * <p>Describes a VPC.</p>
 */
export interface Vpc {
  __type?: "Vpc";
  /**
   * <p>The primary IPv4 CIDR block for the VPC.</p>
   */
  CidrBlock?: string;

  /**
   * <p>Information about the IPv4 CIDR blocks associated with the VPC.</p>
   */
  CidrBlockAssociationSet?: Array<VpcCidrBlockAssociation>;

  /**
   * <p>The ID of the set of DHCP options you've associated with the VPC (or <code>default</code>
   * 				if the default options are associated with the VPC).</p>
   */
  DhcpOptionsId?: string;

  /**
   * <p>The allowed tenancy of instances launched into the VPC.</p>
   */
  InstanceTenancy?: Tenancy | string;

  /**
   * <p>Information about the IPv6 CIDR blocks associated with the VPC.</p>
   */
  Ipv6CidrBlockAssociationSet?: Array<VpcIpv6CidrBlockAssociation>;

  /**
   * <p>Indicates whether the VPC is the default VPC.</p>
   */
  IsDefault?: boolean;

  /**
   * <p>The ID of the AWS account that owns the VPC.</p>
   */
  OwnerId?: string;

  /**
   * <p>The current state of the VPC.</p>
   */
  State?: VpcState | string;

  /**
   * <p>Any tags assigned to the VPC.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace Vpc {
  export function isa(o: any): o is Vpc {
    return _smithy.isa(o, "Vpc");
  }
}

/**
 * <p>Describes an attachment between a virtual private gateway and a VPC.</p>
 */
export interface VpcAttachment {
  __type?: "VpcAttachment";
  /**
   * <p>The current state of the attachment.</p>
   */
  State?: AttachmentStatus | string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace VpcAttachment {
  export function isa(o: any): o is VpcAttachment {
    return _smithy.isa(o, "VpcAttachment");
  }
}

export type VpcAttributeName = "enableDnsHostnames" | "enableDnsSupport";

/**
 * <p>Describes an IPv4 CIDR block associated with a VPC.</p>
 */
export interface VpcCidrBlockAssociation {
  __type?: "VpcCidrBlockAssociation";
  /**
   * <p>The association ID for the IPv4 CIDR block.</p>
   */
  AssociationId?: string;

  /**
   * <p>The IPv4 CIDR block.</p>
   */
  CidrBlock?: string;

  /**
   * <p>Information about the state of the CIDR block.</p>
   */
  CidrBlockState?: VpcCidrBlockState;
}

export namespace VpcCidrBlockAssociation {
  export function isa(o: any): o is VpcCidrBlockAssociation {
    return _smithy.isa(o, "VpcCidrBlockAssociation");
  }
}

/**
 * <p>Describes the state of a CIDR block.</p>
 */
export interface VpcCidrBlockState {
  __type?: "VpcCidrBlockState";
  /**
   * <p>The state of the CIDR block.</p>
   */
  State?: VpcCidrBlockStateCode | string;

  /**
   * <p>A message about the status of the CIDR block, if applicable.</p>
   */
  StatusMessage?: string;
}

export namespace VpcCidrBlockState {
  export function isa(o: any): o is VpcCidrBlockState {
    return _smithy.isa(o, "VpcCidrBlockState");
  }
}

export type VpcCidrBlockStateCode =
  | "associated"
  | "associating"
  | "disassociated"
  | "disassociating"
  | "failed"
  | "failing";

/**
 * <p>Describes whether a VPC is enabled for ClassicLink.</p>
 */
export interface VpcClassicLink {
  __type?: "VpcClassicLink";
  /**
   * <p>Indicates whether the VPC is enabled for ClassicLink.</p>
   */
  ClassicLinkEnabled?: boolean;

  /**
   * <p>Any tags assigned to the VPC.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace VpcClassicLink {
  export function isa(o: any): o is VpcClassicLink {
    return _smithy.isa(o, "VpcClassicLink");
  }
}

/**
 * <p>Describes a VPC endpoint.</p>
 */
export interface VpcEndpoint {
  __type?: "VpcEndpoint";
  /**
   * <p>The date and time that the VPC endpoint was created.</p>
   */
  CreationTimestamp?: Date;

  /**
   * <p>(Interface endpoint) The DNS entries for the endpoint.</p>
   */
  DnsEntries?: Array<DnsEntry>;

  /**
   * <p>(Interface endpoint) Information about the security groups that are associated with
   *             the network interface.</p>
   */
  Groups?: Array<SecurityGroupIdentifier>;

  /**
   * <p>The last error that occurred for VPC endpoint.</p>
   */
  LastError?: LastError;

  /**
   * <p>(Interface endpoint) One or more network interfaces for the endpoint.</p>
   */
  NetworkInterfaceIds?: Array<string>;

  /**
   * <p>The ID of the AWS account that owns the VPC endpoint.</p>
   */
  OwnerId?: string;

  /**
   * <p>The policy document associated with the endpoint, if applicable.</p>
   */
  PolicyDocument?: string;

  /**
   * <p>(Interface endpoint) Indicates whether the VPC is associated with a private hosted zone.</p>
   */
  PrivateDnsEnabled?: boolean;

  /**
   * <p>Indicates whether the VPC endpoint is being managed by its service.</p>
   */
  RequesterManaged?: boolean;

  /**
   * <p>(Gateway endpoint) One or more route tables associated with the endpoint.</p>
   */
  RouteTableIds?: Array<string>;

  /**
   * <p>The name of the service to which the endpoint is associated.</p>
   */
  ServiceName?: string;

  /**
   * <p>The state of the VPC endpoint.</p>
   */
  State?: State | string;

  /**
   * <p>(Interface endpoint) One or more subnets in which the endpoint is located.</p>
   */
  SubnetIds?: Array<string>;

  /**
   * <p>Any tags assigned to the VPC endpoint.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC endpoint.</p>
   */
  VpcEndpointId?: string;

  /**
   * <p>The type of endpoint.</p>
   */
  VpcEndpointType?: VpcEndpointType | string;

  /**
   * <p>The ID of the VPC to which the endpoint is associated.</p>
   */
  VpcId?: string;
}

export namespace VpcEndpoint {
  export function isa(o: any): o is VpcEndpoint {
    return _smithy.isa(o, "VpcEndpoint");
  }
}

/**
 * <p>Describes a VPC endpoint connection to a service.</p>
 */
export interface VpcEndpointConnection {
  __type?: "VpcEndpointConnection";
  /**
   * <p>The date and time that the VPC endpoint was created.</p>
   */
  CreationTimestamp?: Date;

  /**
   * <p>The DNS entries for the VPC endpoint.</p>
   */
  DnsEntries?: Array<DnsEntry>;

  /**
   * <p>The Amazon Resource Names (ARNs) of the network load balancers for the service.</p>
   */
  NetworkLoadBalancerArns?: Array<string>;

  /**
   * <p>The ID of the service to which the endpoint is connected.</p>
   */
  ServiceId?: string;

  /**
   * <p>The ID of the VPC endpoint.</p>
   */
  VpcEndpointId?: string;

  /**
   * <p>The AWS account ID of the owner of the VPC endpoint.</p>
   */
  VpcEndpointOwner?: string;

  /**
   * <p>The state of the VPC endpoint.</p>
   */
  VpcEndpointState?: State | string;
}

export namespace VpcEndpointConnection {
  export function isa(o: any): o is VpcEndpointConnection {
    return _smithy.isa(o, "VpcEndpointConnection");
  }
}

export enum VpcEndpointType {
  Gateway = "Gateway",
  Interface = "Interface"
}

/**
 * <p>Describes an IPv6 CIDR block associated with a VPC.</p>
 */
export interface VpcIpv6CidrBlockAssociation {
  __type?: "VpcIpv6CidrBlockAssociation";
  /**
   * <p>The association ID for the IPv6 CIDR block.</p>
   */
  AssociationId?: string;

  /**
   * <p>The IPv6 CIDR block.</p>
   */
  Ipv6CidrBlock?: string;

  /**
   * <p>Information about the state of the CIDR block.</p>
   */
  Ipv6CidrBlockState?: VpcCidrBlockState;

  /**
   * <p>The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.</p>
   */
  Ipv6Pool?: string;

  /**
   * <p>The name of the location from which we advertise the IPV6 CIDR block.</p>
   */
  NetworkBorderGroup?: string;
}

export namespace VpcIpv6CidrBlockAssociation {
  export function isa(o: any): o is VpcIpv6CidrBlockAssociation {
    return _smithy.isa(o, "VpcIpv6CidrBlockAssociation");
  }
}

/**
 * <p>Describes a VPC peering connection.</p>
 */
export interface VpcPeeringConnection {
  __type?: "VpcPeeringConnection";
  /**
   * <p>Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.</p>
   */
  AccepterVpcInfo?: VpcPeeringConnectionVpcInfo;

  /**
   * <p>The time that an unaccepted VPC peering connection will expire.</p>
   */
  ExpirationTime?: Date;

  /**
   * <p>Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.</p>
   */
  RequesterVpcInfo?: VpcPeeringConnectionVpcInfo;

  /**
   * <p>The status of the VPC peering connection.</p>
   */
  Status?: VpcPeeringConnectionStateReason;

  /**
   * <p>Any tags assigned to the resource.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the VPC peering connection.</p>
   */
  VpcPeeringConnectionId?: string;
}

export namespace VpcPeeringConnection {
  export function isa(o: any): o is VpcPeeringConnection {
    return _smithy.isa(o, "VpcPeeringConnection");
  }
}

/**
 * <p>Describes the VPC peering connection options.</p>
 */
export interface VpcPeeringConnectionOptionsDescription {
  __type?: "VpcPeeringConnectionOptionsDescription";
  /**
   * <p>Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.</p>
   */
  AllowDnsResolutionFromRemoteVpc?: boolean;

  /**
   * <p>Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.</p>
   */
  AllowEgressFromLocalClassicLinkToRemoteVpc?: boolean;

  /**
   * <p>Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.</p>
   */
  AllowEgressFromLocalVpcToRemoteClassicLink?: boolean;
}

export namespace VpcPeeringConnectionOptionsDescription {
  export function isa(o: any): o is VpcPeeringConnectionOptionsDescription {
    return _smithy.isa(o, "VpcPeeringConnectionOptionsDescription");
  }
}

/**
 * <p>Describes the status of a VPC peering connection.</p>
 */
export interface VpcPeeringConnectionStateReason {
  __type?: "VpcPeeringConnectionStateReason";
  /**
   * <p>The status of the VPC peering connection.</p>
   */
  Code?: VpcPeeringConnectionStateReasonCode | string;

  /**
   * <p>A message that provides more information about the status, if applicable.</p>
   */
  Message?: string;
}

export namespace VpcPeeringConnectionStateReason {
  export function isa(o: any): o is VpcPeeringConnectionStateReason {
    return _smithy.isa(o, "VpcPeeringConnectionStateReason");
  }
}

export type VpcPeeringConnectionStateReasonCode =
  | "active"
  | "deleted"
  | "deleting"
  | "expired"
  | "failed"
  | "initiating-request"
  | "pending-acceptance"
  | "provisioning"
  | "rejected";

/**
 * <p>Describes a VPC in a VPC peering connection.</p>
 */
export interface VpcPeeringConnectionVpcInfo {
  __type?: "VpcPeeringConnectionVpcInfo";
  /**
   * <p>The IPv4 CIDR block for the VPC.</p>
   */
  CidrBlock?: string;

  /**
   * <p>Information about the IPv4 CIDR blocks for the VPC.</p>
   */
  CidrBlockSet?: Array<CidrBlock>;

  /**
   * <p>The IPv6 CIDR block for the VPC.</p>
   */
  Ipv6CidrBlockSet?: Array<Ipv6CidrBlock>;

  /**
   * <p>The AWS account ID of the VPC owner.</p>
   */
  OwnerId?: string;

  /**
   * <p>Information about the VPC peering connection options for the accepter or requester VPC.</p>
   */
  PeeringOptions?: VpcPeeringConnectionOptionsDescription;

  /**
   * <p>The Region in which the VPC is located.</p>
   */
  Region?: string;

  /**
   * <p>The ID of the VPC.</p>
   */
  VpcId?: string;
}

export namespace VpcPeeringConnectionVpcInfo {
  export function isa(o: any): o is VpcPeeringConnectionVpcInfo {
    return _smithy.isa(o, "VpcPeeringConnectionVpcInfo");
  }
}

export type VpcState = "available" | "pending";

export type VpcTenancy = "default";

/**
 * <p>Describes a VPN connection.</p>
 */
export interface VpnConnection {
  __type?: "VpnConnection";
  /**
   * <p>The category of the VPN connection. A value of <code>VPN</code> indicates an AWS VPN
   * 			connection. A value of <code>VPN-Classic</code> indicates an AWS Classic VPN connection.</p>
   */
  Category?: string;

  /**
   * <p>The configuration information for the VPN connection's customer gateway (in the native XML
   *             format). This element is always present in the <a>CreateVpnConnection</a> response; however,
   *             it's present in the <a>DescribeVpnConnections</a> response only if the VPN connection is in
   *             the <code>pending</code> or <code>available</code> state.</p>
   */
  CustomerGatewayConfiguration?: string;

  /**
   * <p>The ID of the customer gateway at your end of the VPN connection.</p>
   */
  CustomerGatewayId?: string;

  /**
   * <p>The VPN connection options.</p>
   */
  Options?: VpnConnectionOptions;

  /**
   * <p>The static routes associated with the VPN connection.</p>
   */
  Routes?: Array<VpnStaticRoute>;

  /**
   * <p>The current state of the VPN connection.</p>
   */
  State?: VpnState | string;

  /**
   * <p>Any tags assigned to the VPN connection.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The ID of the transit gateway associated with the VPN connection.</p>
   */
  TransitGatewayId?: string;

  /**
   * <p>The type of VPN connection.</p>
   */
  Type?: GatewayType | string;

  /**
   * <p>Information about the VPN tunnel.</p>
   */
  VgwTelemetry?: Array<VgwTelemetry>;

  /**
   * <p>The ID of the VPN connection.</p>
   */
  VpnConnectionId?: string;

  /**
   * <p>The ID of the virtual private gateway at the AWS side of the VPN connection.</p>
   */
  VpnGatewayId?: string;
}

export namespace VpnConnection {
  export function isa(o: any): o is VpnConnection {
    return _smithy.isa(o, "VpnConnection");
  }
}

/**
 * <p>Describes VPN connection options.</p>
 */
export interface VpnConnectionOptions {
  __type?: "VpnConnectionOptions";
  /**
   * <p>Indicates whether acceleration is enabled for the VPN connection.</p>
   */
  EnableAcceleration?: boolean;

  /**
   * <p>Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.</p>
   */
  StaticRoutesOnly?: boolean;

  /**
   * <p>Indicates the VPN tunnel options.</p>
   */
  TunnelOptions?: Array<TunnelOption>;
}

export namespace VpnConnectionOptions {
  export function isa(o: any): o is VpnConnectionOptions {
    return _smithy.isa(o, "VpnConnectionOptions");
  }
}

/**
 * <p>Describes VPN connection options.</p>
 */
export interface VpnConnectionOptionsSpecification {
  __type?: "VpnConnectionOptionsSpecification";
  /**
   * <p>Indicate whether to enable acceleration for the VPN connection.</p>
   *         <p>Default: <code>false</code>
   *          </p>
   */
  EnableAcceleration?: boolean;

  /**
   * <p>Indicate whether the VPN connection uses static routes only. If you are creating a
   *             VPN connection for a device that does not support BGP, you must specify
   *                 <code>true</code>. Use <a>CreateVpnConnectionRoute</a> to create a static route.</p>
   * 		       <p>Default: <code>false</code>
   *          </p>
   */
  StaticRoutesOnly?: boolean;

  /**
   * <p>The tunnel options for the VPN connection.</p>
   */
  TunnelOptions?: Array<VpnTunnelOptionsSpecification>;
}

export namespace VpnConnectionOptionsSpecification {
  export function isa(o: any): o is VpnConnectionOptionsSpecification {
    return _smithy.isa(o, "VpnConnectionOptionsSpecification");
  }
}

export type VpnEcmpSupportValue = "disable" | "enable";

/**
 * <p>Describes a virtual private gateway.</p>
 */
export interface VpnGateway {
  __type?: "VpnGateway";
  /**
   * <p>The private Autonomous System Number (ASN) for the Amazon side of a BGP session.</p>
   */
  AmazonSideAsn?: number;

  /**
   * <p>The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.</p>
   */
  AvailabilityZone?: string;

  /**
   * <p>The current state of the virtual private gateway.</p>
   */
  State?: VpnState | string;

  /**
   * <p>Any tags assigned to the virtual private gateway.</p>
   */
  Tags?: Array<Tag>;

  /**
   * <p>The type of VPN connection the virtual private gateway supports.</p>
   */
  Type?: GatewayType | string;

  /**
   * <p>Any VPCs attached to the virtual private gateway.</p>
   */
  VpcAttachments?: Array<VpcAttachment>;

  /**
   * <p>The ID of the virtual private gateway.</p>
   */
  VpnGatewayId?: string;
}

export namespace VpnGateway {
  export function isa(o: any): o is VpnGateway {
    return _smithy.isa(o, "VpnGateway");
  }
}

export type VpnProtocol = "openvpn";

export type VpnState = "available" | "deleted" | "deleting" | "pending";

/**
 * <p>Describes a static route for a VPN connection.</p>
 */
export interface VpnStaticRoute {
  __type?: "VpnStaticRoute";
  /**
   * <p>The CIDR block associated with the local subnet of the customer data center.</p>
   */
  DestinationCidrBlock?: string;

  /**
   * <p>Indicates how the routes were provided.</p>
   */
  Source?: VpnStaticRouteSource | string;

  /**
   * <p>The current state of the static route.</p>
   */
  State?: VpnState | string;
}

export namespace VpnStaticRoute {
  export function isa(o: any): o is VpnStaticRoute {
    return _smithy.isa(o, "VpnStaticRoute");
  }
}

export type VpnStaticRouteSource = "Static";

/**
 * <p>The tunnel options for a VPN connection.</p>
 */
export interface VpnTunnelOptionsSpecification {
  __type?: "VpnTunnelOptionsSpecification";
  /**
   * <p>The number of seconds after which a DPD timeout occurs.</p>
   *         <p>Constraints: A value between 0 and 30.</p>
   *         <p>Default: <code>30</code>
   *          </p>
   */
  DPDTimeoutSeconds?: number;

  /**
   * <p>The IKE versions that are permitted for the VPN tunnel.</p>
   *         <p>Valid values: <code>ikev1</code> | <code>ikev2</code>
   *          </p>
   */
  IKEVersions?: Array<IKEVersionsRequestListValue>;

  /**
   * <p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p>
   *         <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>22</code> | <code>23</code> | <code>24</code>
   *          </p>
   */
  Phase1DHGroupNumbers?: Array<Phase1DHGroupNumbersRequestListValue>;

  /**
   * <p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p>
   *         <p>Valid values: <code>AES128</code> | <code>AES256</code>
   *          </p>
   */
  Phase1EncryptionAlgorithms?: Array<
    Phase1EncryptionAlgorithmsRequestListValue
  >;

  /**
   * <p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p>
   *         <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code>
   *          </p>
   */
  Phase1IntegrityAlgorithms?: Array<Phase1IntegrityAlgorithmsRequestListValue>;

  /**
   * <p>The lifetime for phase 1 of the IKE negotiation, in seconds.</p>
   *         <p>Constraints: A value between 900 and 28,800.</p>
   *         <p>Default: <code>28800</code>
   *          </p>
   */
  Phase1LifetimeSeconds?: number;

  /**
   * <p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p>
   *         <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>22</code> | <code>23</code> | <code>24</code>
   *          </p>
   */
  Phase2DHGroupNumbers?: Array<Phase2DHGroupNumbersRequestListValue>;

  /**
   * <p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p>
   *         <p>Valid values: <code>AES128</code> | <code>AES256</code>
   *          </p>
   */
  Phase2EncryptionAlgorithms?: Array<
    Phase2EncryptionAlgorithmsRequestListValue
  >;

  /**
   * <p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p>
   *         <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code>
   *          </p>
   */
  Phase2IntegrityAlgorithms?: Array<Phase2IntegrityAlgorithmsRequestListValue>;

  /**
   * <p>The lifetime for phase 2 of the IKE negotiation, in seconds.</p>
   *         <p>Constraints: A value between 900 and 3,600. The value must be less than the value for <code>Phase1LifetimeSeconds</code>.</p>
   *         <p>Default: <code>3600</code>
   *          </p>
   */
  Phase2LifetimeSeconds?: number;

  /**
   * <p>The pre-shared key (PSK) to establish initial authentication between the virtual private
   * 			gateway and customer gateway.</p>
   * 		       <p>Constraints: Allowed characters are alphanumeric characters, periods (.), and underscores
   *             (_). Must be between 8 and 64 characters in length and cannot start with zero
   *             (0).</p>
   */
  PreSharedKey?: string;

  /**
   * <p>The percentage of the rekey window (determined by <code>RekeyMarginTimeSeconds</code>) during which the rekey time is randomly selected.</p>
   *         <p>Constraints: A value between 0 and 100.</p>
   *         <p>Default: <code>100</code>
   *          </p>
   */
  RekeyFuzzPercentage?: number;

  /**
   * <p>The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for <code>RekeyFuzzPercentage</code>.</p>
   *         <p>Constraints: A value between 60 and half of <code>Phase2LifetimeSeconds</code>.</p>
   *         <p>Default: <code>540</code>
   *          </p>
   */
  RekeyMarginTimeSeconds?: number;

  /**
   * <p>The number of packets in an IKE replay window.</p>
   *         <p>Constraints: A value between 64 and 2048.</p>
   *         <p>Default: <code>1024</code>
   *          </p>
   */
  ReplayWindowSize?: number;

  /**
   * <p>The range of inside IP addresses for the tunnel. Any specified CIDR blocks must be unique
   * 			across all VPN connections that use the same virtual private gateway. </p>
   * 		       <p>Constraints: A size /30 CIDR block from the <code>169.254.0.0/16</code> range. The
   * 			following CIDR blocks are reserved and cannot be used:</p>
   * 		       <ul>
   *             <li>
   * 				           <p>
   *                   <code>169.254.0.0/30</code>
   *                </p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>169.254.1.0/30</code>
   *                </p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>169.254.2.0/30</code>
   *                </p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>169.254.3.0/30</code>
   *                </p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>169.254.4.0/30</code>
   *                </p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>169.254.5.0/30</code>
   *                </p>
   * 			         </li>
   *             <li>
   * 				           <p>
   *                   <code>169.254.169.252/30</code>
   *                </p>
   * 			         </li>
   *          </ul>
   */
  TunnelInsideCidr?: string;
}

export namespace VpnTunnelOptionsSpecification {
  export function isa(o: any): o is VpnTunnelOptionsSpecification {
    return _smithy.isa(o, "VpnTunnelOptionsSpecification");
  }
}

export interface WithdrawByoipCidrRequest {
  __type?: "WithdrawByoipCidrRequest";
  /**
   * <p>The address range, in CIDR notation.</p>
   */
  Cidr: string | undefined;

  /**
   * <p>Checks whether you have the required permissions for the action, without actually making the request,
   *    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
   *    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
   */
  DryRun?: boolean;
}

export namespace WithdrawByoipCidrRequest {
  export function isa(o: any): o is WithdrawByoipCidrRequest {
    return _smithy.isa(o, "WithdrawByoipCidrRequest");
  }
}

export interface WithdrawByoipCidrResult extends $MetadataBearer {
  __type?: "WithdrawByoipCidrResult";
  /**
   * <p>Information about the address pool.</p>
   */
  ByoipCidr?: ByoipCidr;
}

export namespace WithdrawByoipCidrResult {
  export function isa(o: any): o is WithdrawByoipCidrResult {
    return _smithy.isa(o, "WithdrawByoipCidrResult");
  }
}

export enum Scope {
  AVAILABILITY_ZONE = "Availability Zone",
  REGIONAL = "Region"
}
