{
  "smithy": "0.5.0",
  "metadata": {
    "suppressions": [
      {
        "ids": [
          "HttpMethodSemantics"
        ]
      },
      {
        "ids": [
          "HttpResponseCodeSemantics"
        ]
      },
      {
        "ids": [
          "PaginatedTrait"
        ]
      },
      {
        "ids": [
          "HttpHeaderTrait"
        ]
      }
    ]
  },
  "shapes": {
    "com.amazonaws.iotanalytics#AWSIoTAnalytics": {
      "type": "service",
      "version": "2017-11-27",
      "operations": [
        {
          "target": "com.amazonaws.iot.krieger#CancelPipelineReprocessing"
        },
        {
          "target": "com.amazonaws.iot.krieger#CreateChannel"
        },
        {
          "target": "com.amazonaws.iot.krieger#CreateDataset"
        },
        {
          "target": "com.amazonaws.iot.krieger#CreateDatasetContent"
        },
        {
          "target": "com.amazonaws.iot.krieger#CreateDatastore"
        },
        {
          "target": "com.amazonaws.iot.krieger#CreatePipeline"
        },
        {
          "target": "com.amazonaws.iot.krieger#DeleteChannel"
        },
        {
          "target": "com.amazonaws.iot.krieger#DeleteDataset"
        },
        {
          "target": "com.amazonaws.iot.krieger#DeleteDatasetContent"
        },
        {
          "target": "com.amazonaws.iot.krieger#DeleteDatastore"
        },
        {
          "target": "com.amazonaws.iot.krieger#DeletePipeline"
        },
        {
          "target": "com.amazonaws.iot.krieger#DescribeChannel"
        },
        {
          "target": "com.amazonaws.iot.krieger#DescribeDataset"
        },
        {
          "target": "com.amazonaws.iot.krieger#DescribeDatastore"
        },
        {
          "target": "com.amazonaws.iot.krieger#DescribeLoggingOptions"
        },
        {
          "target": "com.amazonaws.iot.krieger#DescribePipeline"
        },
        {
          "target": "com.amazonaws.iot.krieger#GetDatasetContent"
        },
        {
          "target": "com.amazonaws.iot.krieger#ListChannels"
        },
        {
          "target": "com.amazonaws.iot.krieger#ListDatasetContents"
        },
        {
          "target": "com.amazonaws.iot.krieger#ListDatasets"
        },
        {
          "target": "com.amazonaws.iot.krieger#ListDatastores"
        },
        {
          "target": "com.amazonaws.iot.krieger#ListPipelines"
        },
        {
          "target": "com.amazonaws.iot.krieger#ListTagsForResource"
        },
        {
          "target": "com.amazonaws.iot.krieger#PutLoggingOptions"
        },
        {
          "target": "com.amazonaws.iot.krieger#RunPipelineActivity"
        },
        {
          "target": "com.amazonaws.iot.krieger#SampleChannelData"
        },
        {
          "target": "com.amazonaws.iot.krieger#StartPipelineReprocessing"
        },
        {
          "target": "com.amazonaws.iot.krieger#TagResource"
        },
        {
          "target": "com.amazonaws.iot.krieger#UntagResource"
        },
        {
          "target": "com.amazonaws.iot.krieger#UpdateChannel"
        },
        {
          "target": "com.amazonaws.iot.krieger#UpdateDataset"
        },
        {
          "target": "com.amazonaws.iot.krieger#UpdateDatastore"
        },
        {
          "target": "com.amazonaws.iot.krieger#UpdatePipeline"
        },
        {
          "target": "com.amazonaws.iot.krieger.data#BatchPutMessage"
        }
      ],
      "traits": {
        "aws.api#service": {
          "sdkId": "IoTAnalytics",
          "arnNamespace": "iotanalytics",
          "cloudFormationName": "IoTAnalytics",
          "cloudTrailEventSource": "iotanalytics.amazonaws.com"
        },
        "smithy.api#documentation": "\n\n         <p>AWS IoT Analytics allows you to collect large amounts of device data, process messages, and store them. \n    You can then query the data and run sophisticated analytics on it.  AWS IoT Analytics enables advanced \n    data exploration through integration with Jupyter Notebooks and data visualization through integration \n    with Amazon QuickSight.</p>\n\n         <p>Traditional analytics and business intelligence tools are designed to process structured data. IoT data \n    often comes from devices that record noisy processes (such as temperature, motion, or sound). As a result \n    the data from these devices can have significant gaps, corrupted messages, and false readings that must be \n    cleaned up before analysis can occur. Also, IoT data is often only meaningful in the context of other data \n    from external sources. </p>\n\n         <p>AWS IoT Analytics automates the steps required to analyze data from IoT devices. AWS IoT Analytics \n    filters, transforms, and enriches IoT data before storing it in a time-series data store for analysis. You \n    can set up the service to collect only the data you need from your devices, apply mathematical transforms \n    to process the data, and enrich the data with device-specific metadata such as device type and location \n    before storing it. Then, you can analyze your data by running queries using the built-in SQL query engine, \n    or perform more complex analytics and machine learning inference. AWS IoT Analytics includes pre-built models \n    for common IoT use cases so you can answer questions like which devices are about to fail or which customers \n    are at risk of abandoning their wearable devices.</p>\n\n      ",
        "smithy.api#protocols": [
          {
            "name": "aws.rest-json-1.1",
            "auth": [
              "aws.v4"
            ]
          }
        ],
        "smithy.api#title": "AWS IoT Analytics"
      }
    },
    "com.amazonaws.iot.krieger#ActivityBatchSize": {
      "type": "integer",
      "traits": {
        "smithy.api#box": true,
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.iot.krieger#ActivityName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.iot.krieger#AddAttributesActivity": {
      "type": "structure",
      "members": {
        "attributes": {
          "target": "com.amazonaws.iot.krieger#AttributeNameMapping",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</p>\n         <note>\n            <p>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</p>\n         </note>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'addAttributes' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that adds other attributes based on existing attributes in the message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#AttributeName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.iot.krieger#AttributeNameMapping": {
      "type": "map",
      "key": {
        "target": "com.amazonaws.iot.krieger#AttributeName"
      },
      "value": {
        "target": "com.amazonaws.iot.krieger#AttributeName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.iot.krieger#AttributeNames": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#AttributeName"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.iot.krieger.data#BatchPutMessage": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger.data#BatchPutMessageRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger.data#BatchPutMessageResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Sends messages to a channel.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/messages/batch",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger.data#BatchPutMessageErrorEntries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger.data#BatchPutMessageErrorEntry"
      }
    },
    "com.amazonaws.iot.krieger.data#BatchPutMessageErrorEntry": {
      "type": "structure",
      "members": {
        "errorCode": {
          "target": "com.amazonaws.iot.krieger.data#ErrorCode",
          "traits": {
            "smithy.api#documentation": "\n         <p>The code associated with the error.</p>\n      "
          }
        },
        "errorMessage": {
          "target": "com.amazonaws.iot.krieger.data#ErrorMessage",
          "traits": {
            "smithy.api#documentation": "\n         <p>The message associated with the error.</p>\n      "
          }
        },
        "messageId": {
          "target": "com.amazonaws.iot.krieger.data#MessageId",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ID of the message that caused the error. (See the value corresponding to the \n          \"messageId\" key in the message object.)</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Contains informations about errors.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger.data#BatchPutMessageRequest": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel where the messages are sent.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "messages": {
          "target": "com.amazonaws.iot.krieger.data#Messages",
          "traits": {
            "smithy.api#documentation": "\n         <p>The list of messages to be sent. Each message has format:\n          '{ \"messageId\": \"string\", \"payload\": \"string\"}'.</p>\n         <p>Note that the field names of message payloads (data) that you send to AWS IoT Analytics:</p>\n        <ul>\n            <li>\n               <p>Must contain only alphanumeric characters and undescores (_); no other special \n              characters are allowed.</p>\n            </li>\n            <li>\n               <p>Must begin with an alphabetic character or single underscore (_).</p>\n            </li>\n            <li>\n               <p>Cannot contain hyphens (-).</p>\n            </li>\n            <li>\n               <p>In regular expression terms: \"^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$\".\n            </p>\n            </li>\n            <li>\n               <p>Cannot be greater than 255 characters.</p>\n            </li>\n            <li>\n               <p>Are case-insensitive. (Fields named \"foo\" and \"FOO\" in the same payload are \n              considered duplicates.)</p>\n            </li>\n         </ul>\n         <p>For example, {\"temp_01\": 29} or {\"_temp_01\": 29} are valid, but {\"temp-01\": 29},\n {\"01_temp\": 29} or {\"__temp_01\": 29} are invalid in message payloads.  </p>\n      ",
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger.data#BatchPutMessageResponse": {
      "type": "structure",
      "members": {
        "batchPutMessageErrorEntries": {
          "target": "com.amazonaws.iot.krieger.data#BatchPutMessageErrorEntries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of any errors encountered when sending the messages to the channel.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#BucketKeyExpression": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*$"
      }
    },
    "com.amazonaws.iot.krieger#BucketName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 3,
          "max": 255
        },
        "smithy.api#pattern": "^[a-zA-Z0-9.\\-_]*$"
      }
    },
    "com.amazonaws.iot.krieger#CancelPipelineReprocessing": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#CancelPipelineReprocessingRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#CancelPipelineReprocessingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Cancels the reprocessing of data through the pipeline.</p>\n      ",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/pipelines/{pipelineName}/reprocessing/{reprocessingId}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#CancelPipelineReprocessingRequest": {
      "type": "structure",
      "members": {
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of pipeline for which data reprocessing is canceled.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "reprocessingId": {
          "target": "com.amazonaws.iot.krieger#ReprocessingId",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ID of the reprocessing task (returned by \"StartPipelineReprocessing\").</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CancelPipelineReprocessingResponse": {
      "type": "structure",
      "members": { }
    },
    "com.amazonaws.iot.krieger#Channel": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iot.krieger#ChannelArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the channel.</p>\n      "
          }
        },
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the channel was created.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the channel was last updated.</p>\n      "
          }
        },
        "name": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the channel.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#ChannelStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the channel.</p>\n      "
          }
        },
        "storage": {
          "target": "com.amazonaws.iot.krieger#ChannelStorage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where channel data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after creation\n        of the channel.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A collection of data from an MQTT topic.\n        Channels archive the raw, unprocessed messages before publishing the data to a pipeline.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ChannelActivity": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel from which the messages are processed.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'channel' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The activity that determines the source of the messages to be processed.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ChannelArn": {
      "type": "string"
    },
    "com.amazonaws.iotanalytics.common.types#ChannelName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_]+$"
      }
    },
    "com.amazonaws.iot.krieger#ChannelStatistics": {
      "type": "structure",
      "members": {
        "size": {
          "target": "com.amazonaws.iot.krieger#EstimatedResourceSize",
          "traits": {
            "smithy.api#documentation": "\n         <p>The estimated size of the channel.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Statistics information about the channel.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ChannelStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "CREATING": {
            "name": "CREATING"
          },
          "ACTIVE": {
            "name": "ACTIVE"
          },
          "DELETING": {
            "name": "DELETING"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ChannelStorage": {
      "type": "structure",
      "members": {
        "customerManagedS3": {
          "target": "com.amazonaws.iot.krieger#CustomerManagedChannelS3Storage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Use this to store channel data in an S3 bucket that you manage. If customer managed storage is \n        selected, the \"retentionPeriod\" parameter is ignored. The choice of service-managed or customer-managed \n        S3 storage cannot be changed after creation of the channel.</p>\n      "
          }
        },
        "serviceManagedS3": {
          "target": "com.amazonaws.iot.krieger#ServiceManagedChannelS3Storage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Use this to store channel data in an S3 bucket managed by the AWS IoT Analytics service.\n        The choice of service-managed or customer-managed S3 storage cannot be changed after creation\n        of the channel.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Where channel data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after creation\n        of the channel.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ChannelStorageSummary": {
      "type": "structure",
      "members": {
        "customerManagedS3": {
          "target": "com.amazonaws.iot.krieger#CustomerManagedChannelS3StorageSummary",
          "traits": {
            "smithy.api#documentation": "\n         <p>Used to store channel data in an S3 bucket that you manage.</p>\n      "
          }
        },
        "serviceManagedS3": {
          "target": "com.amazonaws.iot.krieger#ServiceManagedChannelS3StorageSummary",
          "traits": {
            "smithy.api#documentation": "\n         <p>Used to store channel data in an S3 bucket managed by the AWS IoT Analytics service.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Where channel data is stored.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ChannelSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#ChannelSummary"
      }
    },
    "com.amazonaws.iot.krieger#ChannelSummary": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel.</p>\n      "
          }
        },
        "channelStorage": {
          "target": "com.amazonaws.iot.krieger#ChannelStorageSummary",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where channel data is stored.</p>\n      "
          }
        },
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the channel was created.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The last time the channel was updated.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#ChannelStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the channel.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A summary of information about a channel.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ComputeType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "ACU_1": {
            "name": "ACU_1"
          },
          "ACU_2": {
            "name": "ACU_2"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ContainerDatasetAction": {
      "type": "structure",
      "members": {
        "executionRoleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role which gives permission to the system to access needed resources in order\n          to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set\n          contents which are the input to the containerized application.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "image": {
          "target": "com.amazonaws.iot.krieger#Image",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the Docker container stored in your account. The Docker container contains an\n          application and needed support libraries and is used to generate data set contents.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "resourceConfiguration": {
          "target": "com.amazonaws.iot.krieger#ResourceConfiguration",
          "traits": {
            "smithy.api#documentation": "\n         <p>Configuration of the resource which executes the \"containerAction\".</p>\n      ",
            "smithy.api#required": true
          }
        },
        "variables": {
          "target": "com.amazonaws.iot.krieger#Variables",
          "traits": {
            "smithy.api#documentation": "\n         <p>The values of variables used within the context of the execution of the containerized\n          application (basically, parameters passed to the application). Each variable must have a\n          name and a value given by one of \"stringValue\", \"datasetContentVersionValue\",\n          or \"outputFileUriValue\".</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information needed to run the \"containerAction\" to produce data set contents.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#CreateChannel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#CreateChannelRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#CreateChannelResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Creates a channel. A channel collects data from an MQTT topic and archives the\n          raw, unprocessed messages before publishing the data to a pipeline.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/channels",
          "code": 201
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateChannelRequest": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "channelStorage": {
          "target": "com.amazonaws.iot.krieger#ChannelStorage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where channel data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after creation\n        of the channel.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the channel. When \"customerManagedS3\" storage is \n        selected, this parameter is ignored.</p>\n      "
          }
        },
        "tags": {
          "target": "com.amazonaws.iot.krieger#TagList",
          "traits": {
            "smithy.api#documentation": "\n         <p>Metadata which can be used to manage the channel.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateChannelResponse": {
      "type": "structure",
      "members": {
        "channelArn": {
          "target": "com.amazonaws.iot.krieger#ChannelArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the channel.</p>\n      "
          }
        },
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the channel.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDataset": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#CreateDatasetRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#CreateDatasetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Creates a data set. A data set stores data retrieved from a data store by applying a\n         \"queryAction\" (a SQL query) or a \"containerAction\" (executing a containerized application).\n         This operation creates the skeleton of a data set. The data set can be populated manually\n         by calling \"CreateDatasetContent\" or automatically according to a \"trigger\" you specify.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/datasets",
          "code": 201
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatasetContent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#CreateDatasetContentRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#CreateDatasetContentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Creates the content of a data set by applying a \"queryAction\" (a SQL query) or a \"containerAction\" \n         (executing a containerized application).</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/datasets/{datasetName}/content",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatasetContentRequest": {
      "type": "structure",
      "members": {
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatasetContentResponse": {
      "type": "structure",
      "members": {
        "versionId": {
          "target": "com.amazonaws.iot.krieger#DatasetContentVersion",
          "traits": {
            "smithy.api#documentation": "\n         <p>The version ID of the data set contents which are being created.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatasetRequest": {
      "type": "structure",
      "members": {
        "actions": {
          "target": "com.amazonaws.iot.krieger#DatasetActions",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of actions that create the data set contents.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "contentDeliveryRules": {
          "target": "com.amazonaws.iot.krieger#DatasetContentDeliveryRules",
          "traits": {
            "smithy.api#documentation": "\n         <p>When data set contents are created they are delivered to destinations specified here.</p>\n      "
          }
        },
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] How long, in days, versions of data set contents are kept for the data set. If \n          not specified or set to null, versions of data set contents are retained for at most 90 days. \n          The number of versions of data set contents retained is determined by the \n          <code>versioningConfiguration</code> parameter.  (For more information, see \n          https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)</p>\n      "
          }
        },
        "tags": {
          "target": "com.amazonaws.iot.krieger#TagList",
          "traits": {
            "smithy.api#documentation": "\n         <p>Metadata which can be used to manage the data set.</p>\n      "
          }
        },
        "triggers": {
          "target": "com.amazonaws.iot.krieger#DatasetTriggers",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of triggers. A trigger causes data set contents to be populated at a specified \n          time interval or when another data set's contents are created. The list of triggers can \n          be empty or contain up to five <b>DataSetTrigger</b> objects.</p>\n      "
          }
        },
        "versioningConfiguration": {
          "target": "com.amazonaws.iot.krieger#VersioningConfiguration",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] How many versions of data set contents are kept. If not specified or set to null, only the \n        latest version plus the latest succeeded version (if they are different) are kept for \n        the time period specified by the \"retentionPeriod\" parameter. (For more information, see\n        https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatasetResponse": {
      "type": "structure",
      "members": {
        "datasetArn": {
          "target": "com.amazonaws.iot.krieger#DatasetArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the data set.</p>\n      "
          }
        },
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, data set contents are kept for the data set.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatastore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#CreateDatastoreRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#CreateDatastoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Creates a data store, which is a repository for messages.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/datastores",
          "code": 201
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatastoreRequest": {
      "type": "structure",
      "members": {
        "datastoreName": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "datastoreStorage": {
          "target": "com.amazonaws.iot.krieger#DatastoreStorage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where data store data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after the data\n        store is created.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the data store. When \"customerManagedS3\" storage \n        is selected, this parameter is ignored.</p>\n      "
          }
        },
        "tags": {
          "target": "com.amazonaws.iot.krieger#TagList",
          "traits": {
            "smithy.api#documentation": "\n         <p>Metadata which can be used to manage the data store.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreateDatastoreResponse": {
      "type": "structure",
      "members": {
        "datastoreArn": {
          "target": "com.amazonaws.iot.krieger#DatastoreArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the data store.</p>\n      "
          }
        },
        "datastoreName": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the data store.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreatePipeline": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#CreatePipelineRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#CreatePipelineResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Creates a pipeline. A pipeline consumes messages from a channel and allows \n          you to process the messages before storing them in a data store. You must specify both a \n          <code>channel</code> and a <code>datastore</code> activity and, optionally, as many\n          as 23 additional activities in the <code>pipelineActivities</code> array.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/pipelines",
          "code": 201
        }
      }
    },
    "com.amazonaws.iot.krieger#CreatePipelineRequest": {
      "type": "structure",
      "members": {
        "pipelineActivities": {
          "target": "com.amazonaws.iot.krieger#PipelineActivities",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"PipelineActivity\" objects. Activities perform transformations on your messages, \n          such as removing, renaming or adding message attributes; filtering messages based on attribute \n          values; invoking your Lambda functions on messages for advanced processing; or performing \n          mathematical transformations to normalize device data.</p>\n         <p>The list can be 2-25 <b>PipelineActivity</b> objects and must \n          contain both a <code>channel</code> and a <code>datastore</code> activity. Each entry in the \n          list must contain only one activity, for example:</p>\n         <p>\n            <code>pipelineActivities = [\n  {\n    \"channel\": { ... }\n  },\n  {\n    \"lambda\": { ... }\n  },\n  ...      \n]</code>\n         </p>\n      ",
            "smithy.api#required": true
          }
        },
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "tags": {
          "target": "com.amazonaws.iot.krieger#TagList",
          "traits": {
            "smithy.api#documentation": "\n         <p>Metadata which can be used to manage the pipeline.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CreatePipelineResponse": {
      "type": "structure",
      "members": {
        "pipelineArn": {
          "target": "com.amazonaws.iot.krieger#PipelineArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the pipeline.</p>\n      "
          }
        },
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#CustomerManagedChannelS3Storage": {
      "type": "structure",
      "members": {
        "bucket": {
          "target": "com.amazonaws.iot.krieger#BucketName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the Amazon S3 bucket in which channel data is stored.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "keyPrefix": {
          "target": "com.amazonaws.iot.krieger#S3KeyPrefix",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] The prefix used to create the keys of the channel data objects. Each object in \n        an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in \n        a bucket has exactly one key). The prefix must end with a '/'.</p>\n      "
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 resources.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Use this to store channel data in an S3 bucket that you manage. If customer managed storage is\n        selected, the \"retentionPeriod\" parameter is ignored. The choice of service-managed or customer-managed \n        S3 storage cannot be changed after creation of the channel.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#CustomerManagedChannelS3StorageSummary": {
      "type": "structure",
      "members": {
        "bucket": {
          "target": "com.amazonaws.iot.krieger#BucketName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the Amazon S3 bucket in which channel data is stored.</p>\n      "
          }
        },
        "keyPrefix": {
          "target": "com.amazonaws.iot.krieger#S3KeyPrefix",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] The prefix used to create the keys of the channel data objects. Each object in \n        an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in \n        a bucket has exactly one key). The prefix must end with a '/'.</p>\n      "
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon \n        S3 resources.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Used to store channel data in an S3 bucket that you manage.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#CustomerManagedDatastoreS3Storage": {
      "type": "structure",
      "members": {
        "bucket": {
          "target": "com.amazonaws.iot.krieger#BucketName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the Amazon S3 bucket in which data store data is stored.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "keyPrefix": {
          "target": "com.amazonaws.iot.krieger#S3KeyPrefix",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] The prefix used to create the keys of the data store data objects. Each object in \n        an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in a \n        bucket has exactly one key). The prefix must end with a '/'.</p>\n      "
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 resources.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Use this to store data store data in an S3 bucket that you manage. When customer managed storage is\n        selected, the \"retentionPeriod\" parameter is ignored. The choice of service-managed or customer-managed \n        S3 storage cannot be changed after creation of the data store.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#CustomerManagedDatastoreS3StorageSummary": {
      "type": "structure",
      "members": {
        "bucket": {
          "target": "com.amazonaws.iot.krieger#BucketName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the Amazon S3 bucket in which data store data is stored.</p>\n      "
          }
        },
        "keyPrefix": {
          "target": "com.amazonaws.iot.krieger#S3KeyPrefix",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] The prefix used to create the keys of the data store data objects. Each object in \n        an Amazon S3 bucket has a key that is its unique identifier within the bucket (each object in a \n        bucket has exactly one key). The prefix must end with a '/'.</p>\n      "
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3 resources.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Used to store data store data in an S3 bucket that you manage.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#Dataset": {
      "type": "structure",
      "members": {
        "actions": {
          "target": "com.amazonaws.iot.krieger#DatasetActions",
          "traits": {
            "smithy.api#documentation": "\n         <p>The \"DatasetAction\" objects that automatically create the data set contents.</p>\n      "
          }
        },
        "arn": {
          "target": "com.amazonaws.iot.krieger#DatasetArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the data set.</p>\n      "
          }
        },
        "contentDeliveryRules": {
          "target": "com.amazonaws.iot.krieger#DatasetContentDeliveryRules",
          "traits": {
            "smithy.api#documentation": "\n         <p>When data set contents are created they are delivered to destinations specified here.</p>\n      "
          }
        },
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the data set was created.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The last time the data set was updated.</p>\n      "
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] How long, in days, message data is kept for the data set.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#DatasetStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the data set.</p>\n      "
          }
        },
        "triggers": {
          "target": "com.amazonaws.iot.krieger#DatasetTriggers",
          "traits": {
            "smithy.api#documentation": "\n         <p>The \"DatasetTrigger\" objects\n     that specify when the data set is automatically updated.</p>\n      "
          }
        },
        "versioningConfiguration": {
          "target": "com.amazonaws.iot.krieger#VersioningConfiguration",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] How many versions of data set contents are kept. If not specified or set to null, only the \n        latest version plus the latest succeeded version (if they are different) are kept for \n        the time period specified by the \"retentionPeriod\" parameter. (For more information, see\n        https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about a data set.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetAction": {
      "type": "structure",
      "members": {
        "actionName": {
          "target": "com.amazonaws.iot.krieger#DatasetActionName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set action by which data set contents are automatically created.</p>\n      "
          }
        },
        "containerAction": {
          "target": "com.amazonaws.iot.krieger#ContainerDatasetAction",
          "traits": {
            "smithy.api#documentation": "\n         <p>Information which allows the system to run a containerized application in order to create\n          the data set contents. The application must be in a Docker container along with any needed\n          support libraries.</p>\n      "
          }
        },
        "queryAction": {
          "target": "com.amazonaws.iot.krieger#SqlQueryDatasetAction",
          "traits": {
            "smithy.api#documentation": "\n         <p>An \"SqlQueryDatasetAction\" object that uses an SQL query to automatically create data set contents.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A \"DatasetAction\" object that specifies how data set contents are automatically created.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetActionName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_]+$"
      }
    },
    "com.amazonaws.iot.krieger#DatasetActionSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatasetActionSummary"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.iot.krieger#DatasetActionSummary": {
      "type": "structure",
      "members": {
        "actionName": {
          "target": "com.amazonaws.iot.krieger#DatasetActionName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the action which automatically creates the data set's contents.</p>\n      "
          }
        },
        "actionType": {
          "target": "com.amazonaws.iot.krieger#DatasetActionType",
          "traits": {
            "smithy.api#documentation": "\n         <p>The type of action by which the data set's contents are automatically created.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about the action which automatically creates the data set's contents.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetActionType": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "QUERY": {
            "name": "QUERY"
          },
          "CONTAINER": {
            "name": "CONTAINER"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DatasetActions": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatasetAction"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 1
        }
      }
    },
    "com.amazonaws.iot.krieger#DatasetArn": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#DatasetContentDeliveryDestination": {
      "type": "structure",
      "members": {
        "iotEventsDestinationConfiguration": {
          "target": "com.amazonaws.iot.krieger#IotEventsDestinationConfiguration",
          "traits": {
            "smithy.api#documentation": "\n         <p>Configuration information for delivery of data set contents to AWS IoT Events.</p>\n      "
          }
        },
        "s3DestinationConfiguration": {
          "target": "com.amazonaws.iot.krieger#S3DestinationConfiguration",
          "traits": {
            "smithy.api#documentation": "\n         <p>Configuration information for delivery of data set contents to Amazon S3.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The destination to which data set contents are delivered.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentDeliveryRule": {
      "type": "structure",
      "members": {
        "destination": {
          "target": "com.amazonaws.iot.krieger#DatasetContentDeliveryDestination",
          "traits": {
            "smithy.api#documentation": "\n         <p>The destination to which data set contents are delivered.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "entryName": {
          "target": "com.amazonaws.iot.krieger#EntryName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set content delivery rules entry.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>When data set contents are created they are delivered to destination specified here.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentDeliveryRules": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatasetContentDeliveryRule"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 20
        }
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentState": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "CREATING": {
            "name": "CREATING"
          },
          "SUCCEEDED": {
            "name": "SUCCEEDED"
          },
          "FAILED": {
            "name": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentStatus": {
      "type": "structure",
      "members": {
        "reason": {
          "target": "com.amazonaws.iot.krieger#Reason",
          "traits": {
            "smithy.api#documentation": "\n         <p>The reason the data set contents are in this state.</p>\n      "
          }
        },
        "state": {
          "target": "com.amazonaws.iot.krieger#DatasetContentState",
          "traits": {
            "smithy.api#documentation": "\n         <p>The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or\n         \"FAILED\".</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The state of the data set contents and the reason they are in this state.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatasetContentSummary"
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentSummary": {
      "type": "structure",
      "members": {
        "completionTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The time the dataset content status was updated to SUCCEEDED or FAILED.</p>\n      "
          }
        },
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The actual time the creation of the data set contents was started.</p>\n      "
          }
        },
        "scheduleTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The time the creation of the data set contents was scheduled to start.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#DatasetContentStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the data set contents.</p>\n      "
          }
        },
        "version": {
          "target": "com.amazonaws.iot.krieger#DatasetContentVersion",
          "traits": {
            "smithy.api#documentation": "\n         <p>The version of the data set contents.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Summary information about data set contents.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentVersion": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 7,
          "max": 36
        }
      }
    },
    "com.amazonaws.iot.krieger#DatasetContentVersionValue": {
      "type": "structure",
      "members": {
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set whose latest contents are used as input to the notebook or \n          application.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The data set whose latest contents are used as input to the notebook or \n          application.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetEntries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatasetEntry"
      }
    },
    "com.amazonaws.iot.krieger#DatasetEntry": {
      "type": "structure",
      "members": {
        "dataURI": {
          "target": "com.amazonaws.iot.krieger#PresignedURI",
          "traits": {
            "smithy.api#documentation": "\n         <p>The pre-signed URI of the data set item.</p>\n      "
          }
        },
        "entryName": {
          "target": "com.amazonaws.iot.krieger#EntryName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set item.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The reference to a data set entry.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_]+$"
      }
    },
    "com.amazonaws.iot.krieger#DatasetStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "CREATING": {
            "name": "CREATING"
          },
          "ACTIVE": {
            "name": "ACTIVE"
          },
          "DELETING": {
            "name": "DELETING"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DatasetSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatasetSummary"
      }
    },
    "com.amazonaws.iot.krieger#DatasetSummary": {
      "type": "structure",
      "members": {
        "actions": {
          "target": "com.amazonaws.iot.krieger#DatasetActionSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"DataActionSummary\" objects.</p>\n      "
          }
        },
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The time the data set was created.</p>\n      "
          }
        },
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The last time the data set was updated.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#DatasetStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the data set.</p>\n      "
          }
        },
        "triggers": {
          "target": "com.amazonaws.iot.krieger#DatasetTriggers",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of triggers. A trigger causes data set content to be populated at a specified time\n       interval or when another data set is populated. The list of triggers can be empty or contain up\n       to five DataSetTrigger objects</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A summary of information about a data set.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetTrigger": {
      "type": "structure",
      "members": {
        "dataset": {
          "target": "com.amazonaws.iot.krieger#TriggeringDataset",
          "traits": {
            "smithy.api#documentation": "\n         <p>The data set whose content creation triggers the creation of this data set's contents.</p>\n      "
          }
        },
        "schedule": {
          "target": "com.amazonaws.iot.krieger#Schedule",
          "traits": {
            "smithy.api#documentation": "\n         <p>The \"Schedule\" when the trigger is initiated.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatasetTriggers": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatasetTrigger"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 5
        }
      }
    },
    "com.amazonaws.iot.krieger#Datastore": {
      "type": "structure",
      "members": {
        "arn": {
          "target": "com.amazonaws.iot.krieger#DatastoreArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the data store.</p>\n      "
          }
        },
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the data store was created.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The last time the data store was updated.</p>\n      "
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the data store. When \"customerManagedS3\" storage \n        is selected, this parameter is ignored.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#DatastoreStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of a data store:</p>\n         <dl>\n            <dt>CREATING</dt>\n            <dd>\n               <p>The data store is being created.</p>\n            </dd>\n            <dt>ACTIVE</dt>\n            <dd>\n               <p>The data store has been created and can be used.</p>\n            </dd>\n            <dt>DELETING</dt>\n            <dd>\n               <p>The data store is being deleted.</p>\n            </dd>\n         </dl>\n      "
          }
        },
        "storage": {
          "target": "com.amazonaws.iot.krieger#DatastoreStorage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where data store data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after the data\n        store is created.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about a data store.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatastoreActivity": {
      "type": "structure",
      "members": {
        "datastoreName": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store where processed messages are stored.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'datastore' activity.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The 'datastore' activity that specifies where to store the processed data.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatastoreArn": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#DatastoreName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_]+$"
      }
    },
    "com.amazonaws.iot.krieger#DatastoreStatistics": {
      "type": "structure",
      "members": {
        "size": {
          "target": "com.amazonaws.iot.krieger#EstimatedResourceSize",
          "traits": {
            "smithy.api#documentation": "\n         <p>The estimated size of the data store.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Statistical information about the data store.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatastoreStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "CREATING": {
            "name": "CREATING"
          },
          "ACTIVE": {
            "name": "ACTIVE"
          },
          "DELETING": {
            "name": "DELETING"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DatastoreStorage": {
      "type": "structure",
      "members": {
        "customerManagedS3": {
          "target": "com.amazonaws.iot.krieger#CustomerManagedDatastoreS3Storage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Use this to store data store data in an S3 bucket that you manage. When customer managed storage is \n        selected, the \"retentionPeriod\" parameter is ignored. The choice of service-managed or customer-managed \n        S3 storage cannot be changed after creation of the data store.</p>\n      "
          }
        },
        "serviceManagedS3": {
          "target": "com.amazonaws.iot.krieger#ServiceManagedDatastoreS3Storage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service.\n        The choice of service-managed or customer-managed S3 storage cannot be changed after creation\n        of the data store.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Where data store data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after the data\n        store is created.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatastoreStorageSummary": {
      "type": "structure",
      "members": {
        "customerManagedS3": {
          "target": "com.amazonaws.iot.krieger#CustomerManagedDatastoreS3StorageSummary",
          "traits": {
            "smithy.api#documentation": "\n         <p>Used to store data store data in an S3 bucket that you manage.</p>\n      "
          }
        },
        "serviceManagedS3": {
          "target": "com.amazonaws.iot.krieger#ServiceManagedDatastoreS3StorageSummary",
          "traits": {
            "smithy.api#documentation": "\n         <p>Used to store data store data in an S3 bucket managed by the AWS IoT Analytics service.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Where data store data is stored.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DatastoreSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#DatastoreSummary"
      }
    },
    "com.amazonaws.iot.krieger#DatastoreSummary": {
      "type": "structure",
      "members": {
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the data store was created.</p>\n      "
          }
        },
        "datastoreName": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store.</p>\n      "
          }
        },
        "datastoreStorage": {
          "target": "com.amazonaws.iot.krieger#DatastoreStorageSummary",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where data store data is stored.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The last time the data store was updated.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#DatastoreStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the data store.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A summary of information about a data store.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DeleteChannel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DeleteChannelRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Deletes the specified channel.</p>\n      ",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/channels/{channelName}",
          "code": 204
        }
      }
    },
    "com.amazonaws.iot.krieger#DeleteChannelRequest": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel to delete.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DeleteDataset": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DeleteDatasetRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Deletes the specified data set.</p>\n         <p>You do not have to delete the content of the data set before you perform this operation.</p>\n      ",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/datasets/{datasetName}",
          "code": 204
        }
      }
    },
    "com.amazonaws.iot.krieger#DeleteDatasetContent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DeleteDatasetContentRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Deletes the content of the specified data set.</p>\n      ",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/datasets/{datasetName}/content",
          "code": 204
        }
      }
    },
    "com.amazonaws.iot.krieger#DeleteDatasetContentRequest": {
      "type": "structure",
      "members": {
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set whose content is deleted.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "versionId": {
          "target": "com.amazonaws.iot.krieger#DatasetContentVersion",
          "traits": {
            "smithy.api#documentation": "\n         <p>The version of the data set whose content is deleted. You can also use the strings\n          \"$LATEST\" or \"$LATEST_SUCCEEDED\" to delete the latest or latest successfully \n          completed data set. If not specified, \"$LATEST_SUCCEEDED\" is the default.</p>\n      ",
            "smithy.api#httpQuery": "versionId"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DeleteDatasetRequest": {
      "type": "structure",
      "members": {
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set to delete.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DeleteDatastore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DeleteDatastoreRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Deletes the specified data store.</p>\n      ",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/datastores/{datastoreName}",
          "code": 204
        }
      }
    },
    "com.amazonaws.iot.krieger#DeleteDatastoreRequest": {
      "type": "structure",
      "members": {
        "datastoreName": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store to delete.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DeletePipeline": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DeletePipelineRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Deletes the specified pipeline.</p>\n      ",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/pipelines/{pipelineName}",
          "code": 204
        }
      }
    },
    "com.amazonaws.iot.krieger#DeletePipelineRequest": {
      "type": "structure",
      "members": {
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline to delete.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DeltaTime": {
      "type": "structure",
      "members": {
        "offsetSeconds": {
          "target": "com.amazonaws.iot.krieger#OffsetSeconds",
          "traits": {
            "smithy.api#documentation": "\n         <p>The number of seconds of estimated \"in flight\" lag time of message data.  When you create \n       data set contents using message data from a specified time frame, some message data may still be \n       \"in flight\" when processing begins, and so will not arrive in time to be processed. Use this \n       field to make allowances for the \"in flight\" time of your message data, so that data not processed \n       from a previous time frame will be included with the next time frame. Without this, missed message \n       data would be excluded from processing during the next time frame as well, because its timestamp \n       places it within the previous time frame.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "timeExpression": {
          "target": "com.amazonaws.iot.krieger#TimeExpression",
          "traits": {
            "smithy.api#documentation": "\n         <p>An expression by which the time of the message data may be determined. This may be the name\n          of a timestamp field, or a SQL expression which is used to derive the time the message\n          data was generated.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Used to limit data to that which has arrived since the last execution of the action.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DescribeChannel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DescribeChannelRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#DescribeChannelResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves information about a channel.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/channels/{channelName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeChannelRequest": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel whose information is retrieved.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "includeStatistics": {
          "target": "com.amazonaws.iot.krieger#IncludeStatisticsFlag",
          "traits": {
            "smithy.api#documentation": "\n         <p>If true, additional statistical information about the channel is included in the response.\n         This feature cannot be used with a channel whose S3 storage is customer-managed.</p>\n      ",
            "smithy.api#httpQuery": "includeStatistics"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeChannelResponse": {
      "type": "structure",
      "members": {
        "channel": {
          "target": "com.amazonaws.iot.krieger#Channel",
          "traits": {
            "smithy.api#documentation": "\n         <p>An object that contains information about the channel.</p>\n      "
          }
        },
        "statistics": {
          "target": "com.amazonaws.iot.krieger#ChannelStatistics",
          "traits": {
            "smithy.api#documentation": "\n         <p>Statistics about the channel. Included if the 'includeStatistics' parameter is set\n         to true in the request.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeDataset": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DescribeDatasetRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#DescribeDatasetResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves information about a data set.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/datasets/{datasetName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeDatasetRequest": {
      "type": "structure",
      "members": {
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set whose information is retrieved.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeDatasetResponse": {
      "type": "structure",
      "members": {
        "dataset": {
          "target": "com.amazonaws.iot.krieger#Dataset",
          "traits": {
            "smithy.api#documentation": "\n         <p>An object that contains information about the data set.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeDatastore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DescribeDatastoreRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#DescribeDatastoreResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves information about a data store.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/datastores/{datastoreName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeDatastoreRequest": {
      "type": "structure",
      "members": {
        "datastoreName": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "includeStatistics": {
          "target": "com.amazonaws.iot.krieger#IncludeStatisticsFlag",
          "traits": {
            "smithy.api#documentation": "\n         <p>If true, additional statistical information about the data store is included in the response.\n         This feature cannot be used with a data store whose S3 storage is customer-managed.</p>\n      ",
            "smithy.api#httpQuery": "includeStatistics"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeDatastoreResponse": {
      "type": "structure",
      "members": {
        "datastore": {
          "target": "com.amazonaws.iot.krieger#Datastore",
          "traits": {
            "smithy.api#documentation": "\n         <p>Information about the data store.</p>\n      "
          }
        },
        "statistics": {
          "target": "com.amazonaws.iot.krieger#DatastoreStatistics",
          "traits": {
            "smithy.api#documentation": "\n         <p>Additional statistical information about the data store. Included if the 'includeStatistics' \n           parameter is set to true in the request.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeLoggingOptions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DescribeLoggingOptionsRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#DescribeLoggingOptionsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves the current settings of the AWS IoT Analytics logging options.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/logging",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribeLoggingOptionsRequest": {
      "type": "structure",
      "members": { }
    },
    "com.amazonaws.iot.krieger#DescribeLoggingOptionsResponse": {
      "type": "structure",
      "members": {
        "loggingOptions": {
          "target": "com.amazonaws.iot.krieger#LoggingOptions",
          "traits": {
            "smithy.api#documentation": "\n         <p>The current settings of the AWS IoT Analytics logging options.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribePipeline": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#DescribePipelineRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#DescribePipelineResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves information about a pipeline.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/pipelines/{pipelineName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribePipelineRequest": {
      "type": "structure",
      "members": {
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline whose information is retrieved.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DescribePipelineResponse": {
      "type": "structure",
      "members": {
        "pipeline": {
          "target": "com.amazonaws.iot.krieger#Pipeline",
          "traits": {
            "smithy.api#documentation": "\n         <p>A \"Pipeline\" object\n        that contains information about the pipeline.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#DeviceRegistryEnrichActivity": {
      "type": "structure",
      "members": {
        "attribute": {
          "target": "com.amazonaws.iot.krieger#AttributeName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'deviceRegistryEnrich' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role that allows access to the device's registry information.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "thingName": {
          "target": "com.amazonaws.iot.krieger#AttributeName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the IoT device whose registry information is added to the message.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that adds data from the AWS IoT device registry to your message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DeviceShadowEnrichActivity": {
      "type": "structure",
      "members": {
        "attribute": {
          "target": "com.amazonaws.iot.krieger#AttributeName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'deviceShadowEnrich' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role that allows access to the device's shadow.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "thingName": {
          "target": "com.amazonaws.iot.krieger#AttributeName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the IoT device whose shadow information is added to \n          the message.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that adds information from the AWS IoT Device Shadows service to a message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#DoubleValue": {
      "type": "double"
    },
    "com.amazonaws.iot.krieger#EndTime": {
      "type": "timestamp"
    },
    "com.amazonaws.iot.krieger#EntryName": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger.data#ErrorCode": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger.data#ErrorMessage": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#EstimatedResourceSize": {
      "type": "structure",
      "members": {
        "estimatedOn": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The time when the estimate of the size of the resource was made.</p>\n      "
          }
        },
        "estimatedSizeInBytes": {
          "target": "com.amazonaws.iot.krieger#SizeInBytes",
          "traits": {
            "smithy.api#documentation": "\n         <p>The estimated size of the resource in bytes.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The estimated size of the resource.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#FilterActivity": {
      "type": "structure",
      "members": {
        "filter": {
          "target": "com.amazonaws.iot.krieger#FilterExpression",
          "traits": {
            "smithy.api#documentation": "\n         <p>An expression that looks like a SQL WHERE clause that must return a Boolean value.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'filter' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that filters a message based on its attributes.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#FilterExpression": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.iot.krieger#GetDatasetContent": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#GetDatasetContentRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#GetDatasetContentResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves the contents of a data set as pre-signed URIs.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/datasets/{datasetName}/content",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#GetDatasetContentRequest": {
      "type": "structure",
      "members": {
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set whose contents are retrieved.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "versionId": {
          "target": "com.amazonaws.iot.krieger#DatasetContentVersion",
          "traits": {
            "smithy.api#documentation": "\n         <p>The version of the data set whose contents are retrieved. You can also use\n         the strings \"$LATEST\" or \"$LATEST_SUCCEEDED\" to retrieve the contents of the \n         latest or latest successfully completed data set. If not specified, \"$LATEST_SUCCEEDED\" \n         is the default.</p>\n      ",
            "smithy.api#httpQuery": "versionId"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#GetDatasetContentResponse": {
      "type": "structure",
      "members": {
        "entries": {
          "target": "com.amazonaws.iot.krieger#DatasetEntries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"DatasetEntry\" objects.</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#DatasetContentStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the data set content.</p>\n      "
          }
        },
        "timestamp": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The time when the request was made.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#GlueConfiguration": {
      "type": "structure",
      "members": {
        "databaseName": {
          "target": "com.amazonaws.iot.krieger#GlueDatabaseName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the database in your AWS Glue Data Catalog in which the table is located. (An AWS \n        Glue Data Catalog database contains Glue Data tables.)</p>\n      ",
            "smithy.api#required": true
          }
        },
        "tableName": {
          "target": "com.amazonaws.iot.krieger#GlueTableName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the table in your AWS Glue Data Catalog which is used to perform the ETL (extract, \n        transform and load) operations. (An AWS Glue Data Catalog table contains partitioned data and descriptions \n        of data sources and targets.)</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Configuration information for coordination with the AWS Glue ETL (extract, transform and \n        load) service.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#GlueDatabaseName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 150
        },
        "smithy.api#pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    },
    "com.amazonaws.iot.krieger#GlueTableName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 150
        },
        "smithy.api#pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*"
      }
    },
    "com.amazonaws.iot.krieger#Image": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 255
        }
      }
    },
    "com.amazonaws.iot.krieger#IncludeStatisticsFlag": {
      "type": "boolean"
    },
    "com.amazonaws.iot.common.types#InternalFailureException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.iot.common.types#errorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>There was an internal failure.</p>\n      ",
        "smithy.api#error": "server",
        "smithy.api#httpError": 500
      }
    },
    "com.amazonaws.iot.common.types#InvalidRequestException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.iot.common.types#errorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The request was not valid.</p>\n      ",
        "smithy.api#error": "client",
        "smithy.api#httpError": 400
      }
    },
    "com.amazonaws.iot.krieger#IotEventsDestinationConfiguration": {
      "type": "structure",
      "members": {
        "inputName": {
          "target": "com.amazonaws.iot.krieger#IotEventsInputName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the AWS IoT Events input to which data set contents are delivered.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role which grants AWS IoT Analytics permission to deliver data set contents\n        to an AWS IoT Events input.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Configuration information for delivery of data set contents to AWS IoT Events.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#IotEventsInputName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
      }
    },
    "com.amazonaws.iot.krieger#LambdaActivity": {
      "type": "structure",
      "members": {
        "batchSize": {
          "target": "com.amazonaws.iot.krieger#ActivityBatchSize",
          "traits": {
            "smithy.api#documentation": "\n         <p>The number of messages passed to the Lambda function for processing.</p>\n         <p>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "lambdaName": {
          "target": "com.amazonaws.iot.krieger#LambdaName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the Lambda function that is run on the message.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'lambda' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that runs a Lambda function to modify the message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#LambdaName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 64
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_-]+$"
      }
    },
    "com.amazonaws.iot.common.types#LimitExceededException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.iot.common.types#errorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
        "smithy.api#error": "client",
        "smithy.api#httpError": 410
      }
    },
    "com.amazonaws.iot.krieger#ListChannels": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#ListChannelsRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#ListChannelsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves a list of channels.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/channels",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.iot.krieger#ListChannelsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.iot.common.types#MaxResults",
          "traits": {
            "smithy.api#documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListChannelsResponse": {
      "type": "structure",
      "members": {
        "channelSummaries": {
          "target": "com.amazonaws.iot.krieger#ChannelSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"ChannelSummary\" objects.</p>\n      "
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatasetContents": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#ListDatasetContentsRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#ListDatasetContentsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Lists information about data set contents that have been created.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/datasets/{datasetName}/contents",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatasetContentsRequest": {
      "type": "structure",
      "members": {
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set whose contents information you want to list.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "maxResults": {
          "target": "com.amazonaws.iot.common.types#MaxResults",
          "traits": {
            "smithy.api#documentation": "\n         <p>The maximum number of results to return in this request.</p>\n      ",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "smithy.api#httpQuery": "nextToken"
          }
        },
        "scheduledBefore": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>A filter to limit results to those data set contents whose creation is scheduled before the \n       given time. See the field <code>triggers.schedule</code> in the CreateDataset request. (timestamp)</p>\n      ",
            "smithy.api#httpQuery": "scheduledBefore"
          }
        },
        "scheduledOnOrAfter": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>A filter to limit results to those data set contents whose creation is scheduled on or \n       after the given time. See the field <code>triggers.schedule</code> in the CreateDataset \n       request. (timestamp)</p>\n      ",
            "smithy.api#httpQuery": "scheduledOnOrAfter"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatasetContentsResponse": {
      "type": "structure",
      "members": {
        "datasetContentSummaries": {
          "target": "com.amazonaws.iot.krieger#DatasetContentSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>Summary information about data set contents that have been created.</p>\n      "
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n           more results.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatasets": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#ListDatasetsRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#ListDatasetsResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves information about data sets.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/datasets",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatasetsRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.iot.common.types#MaxResults",
          "traits": {
            "smithy.api#documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatasetsResponse": {
      "type": "structure",
      "members": {
        "datasetSummaries": {
          "target": "com.amazonaws.iot.krieger#DatasetSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"DatasetSummary\" objects.</p>\n      "
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatastores": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#ListDatastoresRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#ListDatastoresResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves a list of data stores.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/datastores",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatastoresRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.iot.common.types#MaxResults",
          "traits": {
            "smithy.api#documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListDatastoresResponse": {
      "type": "structure",
      "members": {
        "datastoreSummaries": {
          "target": "com.amazonaws.iot.krieger#DatastoreSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"DatastoreSummary\" objects.</p>\n      "
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListPipelines": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#ListPipelinesRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#ListPipelinesResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves a list of pipelines.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/pipelines",
          "code": 200
        },
        "smithy.api#paginated": {
          "inputToken": "nextToken",
          "outputToken": "nextToken",
          "pageSize": "maxResults"
        }
      }
    },
    "com.amazonaws.iot.krieger#ListPipelinesRequest": {
      "type": "structure",
      "members": {
        "maxResults": {
          "target": "com.amazonaws.iot.common.types#MaxResults",
          "traits": {
            "smithy.api#documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "smithy.api#httpQuery": "maxResults"
          }
        },
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "smithy.api#httpQuery": "nextToken"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListPipelinesResponse": {
      "type": "structure",
      "members": {
        "nextToken": {
          "target": "com.amazonaws.iot.common.types#NextToken",
          "traits": {
            "smithy.api#documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      "
          }
        },
        "pipelineSummaries": {
          "target": "com.amazonaws.iot.krieger#PipelineSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"PipelineSummary\" objects.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListTagsForResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#ListTagsForResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#ListTagsForResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Lists the tags (metadata) which you have assigned to the resource.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/tags",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#ListTagsForResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.iot.krieger#ResourceArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the resource whose tags you want to list.</p>\n      ",
            "smithy.api#httpQuery": "resourceArn",
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "tags": {
          "target": "com.amazonaws.iot.krieger#TagList",
          "traits": {
            "smithy.api#documentation": "\n         <p>The tags (metadata) which you have assigned to the resource.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#LogResult": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#LoggingEnabled": {
      "type": "boolean"
    },
    "com.amazonaws.iot.krieger#LoggingLevel": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "ERROR": {
            "name": "ERROR"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#LoggingOptions": {
      "type": "structure",
      "members": {
        "enabled": {
          "target": "com.amazonaws.iot.krieger#LoggingEnabled",
          "traits": {
            "smithy.api#documentation": "\n         <p>If true, logging is enabled for AWS IoT Analytics.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "level": {
          "target": "com.amazonaws.iot.krieger#LoggingLevel",
          "traits": {
            "smithy.api#documentation": "\n         <p>The logging level.  Currently, only \"ERROR\" is supported.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role that grants permission to AWS IoT Analytics to\n          perform logging.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about logging options.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#MathActivity": {
      "type": "structure",
      "members": {
        "attribute": {
          "target": "com.amazonaws.iot.krieger#AttributeName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the attribute that contains the result of the math operation.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "math": {
          "target": "com.amazonaws.iot.krieger#MathExpression",
          "traits": {
            "smithy.api#documentation": "\n         <p>An expression that uses one or more existing attributes and must return an integer value.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'math' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that computes an arithmetic expression using the message's attributes.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#MathExpression": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.iot.krieger#MaxMessages": {
      "type": "integer",
      "traits": {
        "smithy.api#box": true,
        "smithy.api#range": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.iot.common.types#MaxResults": {
      "type": "integer",
      "traits": {
        "smithy.api#box": true,
        "smithy.api#range": {
          "min": 1,
          "max": 250
        }
      }
    },
    "com.amazonaws.iot.krieger#MaxVersions": {
      "type": "integer",
      "traits": {
        "smithy.api#box": true,
        "smithy.api#range": {
          "min": 1,
          "max": 1000
        }
      }
    },
    "com.amazonaws.iot.krieger.data#Message": {
      "type": "structure",
      "members": {
        "messageId": {
          "target": "com.amazonaws.iot.krieger.data#MessageId",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ID you wish to assign to the message. Each \"messageId\" must be unique \n          within each batch sent.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "payload": {
          "target": "com.amazonaws.iotanalytics.common.types#MessagePayload",
          "traits": {
            "smithy.api#documentation": "\n         <p>The payload of the message. This may be a JSON string or a Base64-encoded string \n          representing binary data (in which case you must decode it by means of a pipeline activity).</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about a message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger.data#MessageId": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        }
      }
    },
    "com.amazonaws.iotanalytics.common.types#MessagePayload": {
      "type": "blob"
    },
    "com.amazonaws.iot.krieger#MessagePayloads": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iotanalytics.common.types#MessagePayload"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 10
        }
      }
    },
    "com.amazonaws.iot.krieger.data#Messages": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger.data#Message"
      }
    },
    "com.amazonaws.iot.common.types#NextToken": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#OffsetSeconds": {
      "type": "integer",
      "traits": {
        "smithy.api#box": true
      }
    },
    "com.amazonaws.iot.krieger#OutputFileName": {
      "type": "string",
      "traits": {
        "smithy.api#pattern": "[\\w\\.-]{1,255}"
      }
    },
    "com.amazonaws.iot.krieger#OutputFileUriValue": {
      "type": "structure",
      "members": {
        "fileName": {
          "target": "com.amazonaws.iot.krieger#OutputFileName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The URI of the location where data set contents are stored, usually the URI of a file in an \n          S3 bucket.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The value of the variable as a structure that specifies an output file URI.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#Pipeline": {
      "type": "structure",
      "members": {
        "activities": {
          "target": "com.amazonaws.iot.krieger#PipelineActivities",
          "traits": {
            "smithy.api#documentation": "\n         <p>The activities that perform transformations on the messages.</p>\n      "
          }
        },
        "arn": {
          "target": "com.amazonaws.iot.krieger#PipelineArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the pipeline.</p>\n      "
          }
        },
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the pipeline was created.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The last time the pipeline was updated.</p>\n      "
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline.</p>\n      "
          }
        },
        "reprocessingSummaries": {
          "target": "com.amazonaws.iot.krieger#ReprocessingSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A summary of information about the pipeline reprocessing.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Contains information about a pipeline.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#PipelineActivities": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#PipelineActivity"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 25
        }
      }
    },
    "com.amazonaws.iot.krieger#PipelineActivity": {
      "type": "structure",
      "members": {
        "addAttributes": {
          "target": "com.amazonaws.iot.krieger#AddAttributesActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Adds other attributes based on existing attributes in the message.</p>\n      "
          }
        },
        "channel": {
          "target": "com.amazonaws.iot.krieger#ChannelActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Determines the source of the messages to be processed.</p>\n      "
          }
        },
        "datastore": {
          "target": "com.amazonaws.iot.krieger#DatastoreActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Specifies where to store the processed message data.</p>\n      "
          }
        },
        "deviceRegistryEnrich": {
          "target": "com.amazonaws.iot.krieger#DeviceRegistryEnrichActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Adds data from the AWS IoT device registry to your message.</p>\n      "
          }
        },
        "deviceShadowEnrich": {
          "target": "com.amazonaws.iot.krieger#DeviceShadowEnrichActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Adds information from the AWS IoT Device Shadows service to a message.</p>\n      "
          }
        },
        "filter": {
          "target": "com.amazonaws.iot.krieger#FilterActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Filters a message based on its attributes.</p>\n      "
          }
        },
        "lambda": {
          "target": "com.amazonaws.iot.krieger#LambdaActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Runs a Lambda function to modify the message.</p>\n      "
          }
        },
        "math": {
          "target": "com.amazonaws.iot.krieger#MathActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</p>\n      "
          }
        },
        "removeAttributes": {
          "target": "com.amazonaws.iot.krieger#RemoveAttributesActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Removes attributes from a message.</p>\n      "
          }
        },
        "selectAttributes": {
          "target": "com.amazonaws.iot.krieger#SelectAttributesActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>Creates a new message using only the specified attributes from the original message.\n     </p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that performs a transformation on a message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#PipelineArn": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#PipelineName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 128
        },
        "smithy.api#pattern": "^[a-zA-Z0-9_]+$"
      }
    },
    "com.amazonaws.iot.krieger#PipelineSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#PipelineSummary"
      }
    },
    "com.amazonaws.iot.krieger#PipelineSummary": {
      "type": "structure",
      "members": {
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the pipeline was created.</p>\n      "
          }
        },
        "lastUpdateTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>When the pipeline was last updated.</p>\n      "
          }
        },
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline.</p>\n      "
          }
        },
        "reprocessingSummaries": {
          "target": "com.amazonaws.iot.krieger#ReprocessingSummaries",
          "traits": {
            "smithy.api#documentation": "\n         <p>A summary of information about the pipeline reprocessing.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A summary of information about a pipeline.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#PresignedURI": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#PutLoggingOptions": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#PutLoggingOptionsRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Sets or updates the AWS IoT Analytics logging options.</p>\n         <p>Note that if you update the value of any <code>loggingOptions</code> field, it takes up to one \n          minute for the change to take effect. Also, if you change the policy attached to the role \n          you specified in the roleArn field (for example, to correct an invalid policy) it takes \n          up to 5 minutes for that change to take effect.\n      </p>\n      ",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/logging",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#PutLoggingOptionsRequest": {
      "type": "structure",
      "members": {
        "loggingOptions": {
          "target": "com.amazonaws.iot.krieger#LoggingOptions",
          "traits": {
            "smithy.api#documentation": "\n         <p>The new values of the AWS IoT Analytics logging options.</p>\n      ",
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#QueryFilter": {
      "type": "structure",
      "members": {
        "deltaTime": {
          "target": "com.amazonaws.iot.krieger#DeltaTime",
          "traits": {
            "smithy.api#documentation": "\n         <p>Used to limit data to that which has arrived since the last execution of the action.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information which is used to filter message data, to segregate it according to the time\n          frame in which it arrives.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#QueryFilters": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#QueryFilter"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1
        }
      }
    },
    "com.amazonaws.iot.krieger#Reason": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#RemoveAttributesActivity": {
      "type": "structure",
      "members": {
        "attributes": {
          "target": "com.amazonaws.iot.krieger#AttributeNames",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of 1-50 attributes to remove from the message.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'removeAttributes' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An activity that removes attributes from a message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ReprocessingId": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#ReprocessingStatus": {
      "type": "string",
      "traits": {
        "smithy.api#enum": {
          "RUNNING": {
            "name": "RUNNING"
          },
          "SUCCEEDED": {
            "name": "SUCCEEDED"
          },
          "CANCELLED": {
            "name": "CANCELLED"
          },
          "FAILED": {
            "name": "FAILED"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#ReprocessingSummaries": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#ReprocessingSummary"
      }
    },
    "com.amazonaws.iot.krieger#ReprocessingSummary": {
      "type": "structure",
      "members": {
        "creationTime": {
          "target": "com.amazonaws.iot.krieger#Timestamp",
          "traits": {
            "smithy.api#documentation": "\n         <p>The time the pipeline reprocessing was created.</p>\n      "
          }
        },
        "id": {
          "target": "com.amazonaws.iot.krieger#ReprocessingId",
          "traits": {
            "smithy.api#documentation": "\n         <p>The 'reprocessingId' returned by \"StartPipelineReprocessing\".</p>\n      "
          }
        },
        "status": {
          "target": "com.amazonaws.iot.krieger#ReprocessingStatus",
          "traits": {
            "smithy.api#documentation": "\n         <p>The status of the pipeline reprocessing.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about pipeline reprocessing.</p>\n      "
      }
    },
    "com.amazonaws.iot.common.types#ResourceAlreadyExistsException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.iot.common.types#errorMessage"
        },
        "resourceArn": {
          "target": "com.amazonaws.iot.common.types#resourceArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the resource.</p>\n      "
          }
        },
        "resourceId": {
          "target": "com.amazonaws.iot.common.types#resourceId",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ID of the resource.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A resource with the same name already exists.</p>\n      ",
        "smithy.api#error": "client",
        "smithy.api#httpError": 409
      }
    },
    "com.amazonaws.iot.krieger#ResourceArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        }
      }
    },
    "com.amazonaws.iot.krieger#ResourceConfiguration": {
      "type": "structure",
      "members": {
        "computeType": {
          "target": "com.amazonaws.iot.krieger#ComputeType",
          "traits": {
            "smithy.api#documentation": "\n         <p>The type of the compute resource used to execute the \"containerAction\". Possible values \n          are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).</p>\n      ",
            "smithy.api#required": true
          }
        },
        "volumeSizeInGB": {
          "target": "com.amazonaws.iot.krieger#VolumeSizeInGB",
          "traits": {
            "smithy.api#documentation": "\n         <p>The size (in GB) of the persistent storage available to the resource instance used to\n          execute the \"containerAction\" (min: 1, max: 50).</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The configuration of the resource used to execute the \"containerAction\".</p>\n      "
      }
    },
    "com.amazonaws.iot.common.types#ResourceNotFoundException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.iot.common.types#errorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
        "smithy.api#error": "client",
        "smithy.api#httpError": 404
      }
    },
    "com.amazonaws.iot.krieger#RetentionPeriod": {
      "type": "structure",
      "members": {
        "numberOfDays": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriodInDays",
          "traits": {
            "smithy.api#documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      "
          }
        },
        "unlimited": {
          "target": "com.amazonaws.iot.krieger#UnlimitedRetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>How long, in days, message data is kept.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#RetentionPeriodInDays": {
      "type": "integer",
      "traits": {
        "smithy.api#box": true,
        "smithy.api#range": {
          "min": 1
        }
      }
    },
    "com.amazonaws.iot.krieger#RoleArn": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 20,
          "max": 2048
        }
      }
    },
    "com.amazonaws.iot.krieger#RunPipelineActivity": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#RunPipelineActivityRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#RunPipelineActivityResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Simulates the results of running a pipeline activity on a message payload.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/pipelineactivities/run",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#RunPipelineActivityRequest": {
      "type": "structure",
      "members": {
        "payloads": {
          "target": "com.amazonaws.iot.krieger#MessagePayloads",
          "traits": {
            "smithy.api#documentation": "\n         <p>The sample message payloads on which the pipeline activity is run.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "pipelineActivity": {
          "target": "com.amazonaws.iot.krieger#PipelineActivity",
          "traits": {
            "smithy.api#documentation": "\n         <p>The pipeline activity that is run. This must not be a 'channel' activity or a \n          'datastore' activity because these activities are used in a pipeline only to load the \n          original message and to store the (possibly) transformed message. If a 'lambda' activity is\n          specified, only short-running Lambda functions (those with a timeout of less than 30 seconds\n          or less) can be used.</p>\n      ",
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#RunPipelineActivityResponse": {
      "type": "structure",
      "members": {
        "logResult": {
          "target": "com.amazonaws.iot.krieger#LogResult",
          "traits": {
            "smithy.api#documentation": "\n         <p>In case the pipeline activity fails, the log message that is generated.</p>\n      "
          }
        },
        "payloads": {
          "target": "com.amazonaws.iot.krieger#MessagePayloads",
          "traits": {
            "smithy.api#documentation": "\n         <p>The enriched or transformed sample message payloads as base64-encoded strings. \n          (The results of running the pipeline activity on each input sample message payload,\n          encoded in base64.)</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#S3DestinationConfiguration": {
      "type": "structure",
      "members": {
        "bucket": {
          "target": "com.amazonaws.iot.krieger#BucketName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the Amazon S3 bucket to which data set contents are delivered.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "glueConfiguration": {
          "target": "com.amazonaws.iot.krieger#GlueConfiguration",
          "traits": {
            "smithy.api#documentation": "\n         <p>Configuration information for coordination with the AWS Glue ETL (extract, transform and \n        load) service.</p>\n      "
          }
        },
        "key": {
          "target": "com.amazonaws.iot.krieger#BucketKeyExpression",
          "traits": {
            "smithy.api#documentation": "\n         <p>The key of the data set contents object. Each object in an Amazon S3 bucket has a key that is \n        its unique identifier within the bucket (each object in a bucket has exactly one key). To produce\n        a unique key, you can use \"!{iotanalytics:scheduledTime}\" to insert the time of the scheduled SQL \n        query run, or \"!{iotanalytics:versioned} to insert a unique hash identifying the data set, for \n        example: \"/DataSet/!{iotanalytics:scheduledTime}/!{iotanalytics:versioned}.csv\".</p>\n      ",
            "smithy.api#required": true
          }
        },
        "roleArn": {
          "target": "com.amazonaws.iot.krieger#RoleArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the role which grants AWS IoT Analytics permission to interact with your Amazon S3\n        and AWS Glue resources.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Configuration information for delivery of data set contents to Amazon S3.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#S3KeyPrefix": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 255
        },
        "smithy.api#pattern": "^[a-zA-Z0-9!_.*'()/{}:-]*/$"
      }
    },
    "com.amazonaws.iot.krieger#SampleChannelData": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#SampleChannelDataRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#SampleChannelDataResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Retrieves a sample of messages from the specified channel ingested during the specified\n          timeframe. Up to 10 messages can be retrieved.</p>\n      ",
        "smithy.api#http": {
          "method": "GET",
          "uri": "/channels/{channelName}/sample",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#SampleChannelDataRequest": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel whose message samples are retrieved.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "endTime": {
          "target": "com.amazonaws.iot.krieger#EndTime",
          "traits": {
            "smithy.api#documentation": "\n         <p>The end of the time window from which sample messages are retrieved.</p>\n      ",
            "smithy.api#httpQuery": "endTime"
          }
        },
        "maxMessages": {
          "target": "com.amazonaws.iot.krieger#MaxMessages",
          "traits": {
            "smithy.api#documentation": "\n         <p>The number of sample messages to be retrieved. The limit is 10, the default\n          is also 10.</p>\n      ",
            "smithy.api#httpQuery": "maxMessages"
          }
        },
        "startTime": {
          "target": "com.amazonaws.iot.krieger#StartTime",
          "traits": {
            "smithy.api#documentation": "\n         <p>The start of the time window from which sample messages are retrieved.</p>\n      ",
            "smithy.api#httpQuery": "startTime"
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#SampleChannelDataResponse": {
      "type": "structure",
      "members": {
        "payloads": {
          "target": "com.amazonaws.iot.krieger#MessagePayloads",
          "traits": {
            "smithy.api#documentation": "\n         <p>The list of message samples.  Each sample message is returned as a base64-encoded\n          string.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#Schedule": {
      "type": "structure",
      "members": {
        "expression": {
          "target": "com.amazonaws.iot.krieger#ScheduleExpression",
          "traits": {
            "smithy.api#documentation": "\n         <p>The expression that defines when to trigger an update. For more information, see \n          <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</a> in the Amazon CloudWatch Events User Guide.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The schedule for when to trigger an update.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ScheduleExpression": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#SelectAttributesActivity": {
      "type": "structure",
      "members": {
        "attributes": {
          "target": "com.amazonaws.iot.krieger#AttributeNames",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of the attributes to select from the message.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the 'selectAttributes' activity.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "next": {
          "target": "com.amazonaws.iot.krieger#ActivityName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The next activity in the pipeline.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Creates a new message using only the specified attributes\n        from the original message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ServiceManagedChannelS3Storage": {
      "type": "structure",
      "members": { },
      "traits": {
        "smithy.api#documentation": "\n         <p>Use this to store channel data in an S3 bucket managed by the AWS IoT Analytics service.\n        The choice of service-managed or customer-managed S3 storage cannot be changed after creation\n        of the channel.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ServiceManagedChannelS3StorageSummary": {
      "type": "structure",
      "members": { },
      "traits": {
        "smithy.api#documentation": "\n         <p>Used to store channel data in an S3 bucket managed by the AWS IoT Analytics service.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ServiceManagedDatastoreS3Storage": {
      "type": "structure",
      "members": { },
      "traits": {
        "smithy.api#documentation": "\n         <p>Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service.\n        The choice of service-managed or customer-managed S3 storage cannot be changed after creation\n        of the data store.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#ServiceManagedDatastoreS3StorageSummary": {
      "type": "structure",
      "members": { },
      "traits": {
        "smithy.api#documentation": "\n         <p>Used to store data store data in an S3 bucket managed by the AWS IoT Analytics service.</p>\n      "
      }
    },
    "com.amazonaws.iot.common.types#ServiceUnavailableException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.iot.common.types#errorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
        "smithy.api#error": "server",
        "smithy.api#httpError": 503
      }
    },
    "com.amazonaws.iot.krieger#SizeInBytes": {
      "type": "double",
      "traits": {
        "smithy.api#box": true
      }
    },
    "com.amazonaws.iot.krieger#SqlQuery": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#SqlQueryDatasetAction": {
      "type": "structure",
      "members": {
        "filters": {
          "target": "com.amazonaws.iot.krieger#QueryFilters",
          "traits": {
            "smithy.api#documentation": "\n         <p>Pre-filters applied to message data.</p>\n      "
          }
        },
        "sqlQuery": {
          "target": "com.amazonaws.iot.krieger#SqlQuery",
          "traits": {
            "smithy.api#documentation": "\n         <p>A SQL query string.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The SQL query to modify the message.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#StartPipelineReprocessing": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#StartPipelineReprocessingRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#StartPipelineReprocessingResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceAlreadyExistsException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Starts the reprocessing of raw message data through the pipeline.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/pipelines/{pipelineName}/reprocessing",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#StartPipelineReprocessingRequest": {
      "type": "structure",
      "members": {
        "endTime": {
          "target": "com.amazonaws.iot.krieger#EndTime",
          "traits": {
            "smithy.api#documentation": "\n         <p>The end time (exclusive) of raw message data that is reprocessed.</p>\n      "
          }
        },
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline on which to start reprocessing.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "startTime": {
          "target": "com.amazonaws.iot.krieger#StartTime",
          "traits": {
            "smithy.api#documentation": "\n         <p>The start time (inclusive) of raw message data that is reprocessed.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#StartPipelineReprocessingResponse": {
      "type": "structure",
      "members": {
        "reprocessingId": {
          "target": "com.amazonaws.iot.krieger#ReprocessingId",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ID of the pipeline reprocessing activity that was started.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#StartTime": {
      "type": "timestamp"
    },
    "com.amazonaws.iot.krieger#StringValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 1024
        }
      }
    },
    "com.amazonaws.iot.krieger#Tag": {
      "type": "structure",
      "members": {
        "key": {
          "target": "com.amazonaws.iot.krieger#TagKey",
          "traits": {
            "smithy.api#documentation": "\n         <p>The tag's key.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "value": {
          "target": "com.amazonaws.iot.krieger#TagValue",
          "traits": {
            "smithy.api#documentation": "\n         <p>The tag's value.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>A set of key/value pairs which are used to manage the resource.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#TagKey": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.iot.krieger#TagKeyList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#TagKey"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.iot.krieger#TagList": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#Tag"
      },
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.iot.krieger#TagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#TagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#TagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Adds to or modifies the tags of the given resource.  Tags are metadata \n          which can be used to manage a resource.</p>\n      ",
        "smithy.api#http": {
          "method": "POST",
          "uri": "/tags",
          "code": 204
        }
      }
    },
    "com.amazonaws.iot.krieger#TagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.iot.krieger#ResourceArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the resource whose tags you want to modify.</p>\n      ",
            "smithy.api#httpQuery": "resourceArn",
            "smithy.api#required": true
          }
        },
        "tags": {
          "target": "com.amazonaws.iot.krieger#TagList",
          "traits": {
            "smithy.api#documentation": "\n         <p>The new or modified tags for the resource.</p>\n      ",
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#TagResourceResponse": {
      "type": "structure",
      "members": { }
    },
    "com.amazonaws.iot.krieger#TagValue": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.iot.common.types#ThrottlingException": {
      "type": "structure",
      "members": {
        "message": {
          "target": "com.amazonaws.iot.common.types#errorMessage"
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
        "smithy.api#error": "client",
        "smithy.api#httpError": 429
      }
    },
    "com.amazonaws.iot.krieger#TimeExpression": {
      "type": "string"
    },
    "com.amazonaws.iot.krieger#Timestamp": {
      "type": "timestamp"
    },
    "com.amazonaws.iot.krieger#TriggeringDataset": {
      "type": "structure",
      "members": {
        "name": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set whose content generation triggers the new data set content \n          generation.</p>\n      ",
            "smithy.api#required": true
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about the data set whose content generation triggers the new data set content \n          generation.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#UnlimitedRetentionPeriod": {
      "type": "boolean"
    },
    "com.amazonaws.iot.krieger#UnlimitedVersioning": {
      "type": "boolean"
    },
    "com.amazonaws.iot.krieger#UntagResource": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#UntagResourceRequest"
      },
      "output": {
        "target": "com.amazonaws.iot.krieger#UntagResourceResponse"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Removes the given tags (metadata) from the resource.</p>\n      ",
        "smithy.api#http": {
          "method": "DELETE",
          "uri": "/tags",
          "code": 204
        }
      }
    },
    "com.amazonaws.iot.krieger#UntagResourceRequest": {
      "type": "structure",
      "members": {
        "resourceArn": {
          "target": "com.amazonaws.iot.krieger#ResourceArn",
          "traits": {
            "smithy.api#documentation": "\n         <p>The ARN of the resource whose tags you want to remove.</p>\n      ",
            "smithy.api#httpQuery": "resourceArn",
            "smithy.api#required": true
          }
        },
        "tagKeys": {
          "target": "com.amazonaws.iot.krieger#TagKeyList",
          "traits": {
            "smithy.api#documentation": "\n         <p>The keys of those tags which you want to remove.</p>\n      ",
            "smithy.api#httpQuery": "tagKeys",
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#UntagResourceResponse": {
      "type": "structure",
      "members": { }
    },
    "com.amazonaws.iot.krieger#UpdateChannel": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#UpdateChannelRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Updates the settings of a channel.</p>\n      ",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/channels/{channelName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#UpdateChannelRequest": {
      "type": "structure",
      "members": {
        "channelName": {
          "target": "com.amazonaws.iotanalytics.common.types#ChannelName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the channel to be updated.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "channelStorage": {
          "target": "com.amazonaws.iot.krieger#ChannelStorage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where channel data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after creation\n        of the channel.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the channel. The retention period cannot be updated\n        if the channel's S3 storage is customer-managed.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#UpdateDataset": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#UpdateDatasetRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Updates the settings of a data set.</p>\n      ",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/datasets/{datasetName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#UpdateDatasetRequest": {
      "type": "structure",
      "members": {
        "actions": {
          "target": "com.amazonaws.iot.krieger#DatasetActions",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"DatasetAction\" objects.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "contentDeliveryRules": {
          "target": "com.amazonaws.iot.krieger#DatasetContentDeliveryRules",
          "traits": {
            "smithy.api#documentation": "\n         <p>When data set contents are created they are delivered to destinations specified here.</p>\n      "
          }
        },
        "datasetName": {
          "target": "com.amazonaws.iot.krieger#DatasetName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data set to update.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, data set contents are kept for the data set.</p>\n      "
          }
        },
        "triggers": {
          "target": "com.amazonaws.iot.krieger#DatasetTriggers",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"DatasetTrigger\" objects.  The list can be empty or can contain up \n          to five <b>DataSetTrigger</b> objects.</p>\n      "
          }
        },
        "versioningConfiguration": {
          "target": "com.amazonaws.iot.krieger#VersioningConfiguration",
          "traits": {
            "smithy.api#documentation": "\n         <p>[Optional] How many versions of data set contents are kept. If not specified or set to null, only the \n        latest version plus the latest succeeded version (if they are different) are kept for \n        the time period specified by the \"retentionPeriod\" parameter. (For more information, see\n        https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions)</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#UpdateDatastore": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#UpdateDatastoreRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Updates the settings of a data store.</p>\n      ",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/datastores/{datastoreName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#UpdateDatastoreRequest": {
      "type": "structure",
      "members": {
        "datastoreName": {
          "target": "com.amazonaws.iot.krieger#DatastoreName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the data store to be updated.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        },
        "datastoreStorage": {
          "target": "com.amazonaws.iot.krieger#DatastoreStorage",
          "traits": {
            "smithy.api#documentation": "\n         <p>Where data store data is stored. You may choose one of \"serviceManagedS3\" or \"customerManagedS3\" \n        storage. If not specified, the default is \"serviceManagedS3\". This cannot be changed after the data\n        store is created.</p>\n      "
          }
        },
        "retentionPeriod": {
          "target": "com.amazonaws.iot.krieger#RetentionPeriod",
          "traits": {
            "smithy.api#documentation": "\n         <p>How long, in days, message data is kept for the data store. The retention period cannot be updated\n        if the data store's S3 storage is customer-managed.</p>\n      "
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#UpdatePipeline": {
      "type": "operation",
      "input": {
        "target": "com.amazonaws.iot.krieger#UpdatePipelineRequest"
      },
      "errors": [
        {
          "target": "com.amazonaws.iot.common.types#InternalFailureException"
        },
        {
          "target": "com.amazonaws.iot.common.types#InvalidRequestException"
        },
        {
          "target": "com.amazonaws.iot.common.types#LimitExceededException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ResourceNotFoundException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ServiceUnavailableException"
        },
        {
          "target": "com.amazonaws.iot.common.types#ThrottlingException"
        }
      ],
      "traits": {
        "smithy.api#documentation": "\n         <p>Updates the settings of a pipeline. You must specify both a \n          <code>channel</code> and a <code>datastore</code> activity and, optionally, as many\n          as 23 additional activities in the <code>pipelineActivities</code> array.</p>\n      ",
        "smithy.api#http": {
          "method": "PUT",
          "uri": "/pipelines/{pipelineName}",
          "code": 200
        }
      }
    },
    "com.amazonaws.iot.krieger#UpdatePipelineRequest": {
      "type": "structure",
      "members": {
        "pipelineActivities": {
          "target": "com.amazonaws.iot.krieger#PipelineActivities",
          "traits": {
            "smithy.api#documentation": "\n         <p>A list of \"PipelineActivity\" objects. Activities perform transformations on your messages, \n          such as removing, renaming or adding message attributes; filtering messages based on attribute \n          values; invoking your Lambda functions on messages for advanced processing; or performing \n          mathematical transformations to normalize device data.</p>\n         <p>The list can be 2-25 <b>PipelineActivity</b> objects and must \n          contain both a <code>channel</code> and a <code>datastore</code> activity. Each entry in the \n          list must contain only one activity, for example:</p>\n         <p>\n            <code>pipelineActivities = [\n  {\n    \"channel\": { ... }\n  },\n  {\n    \"lambda\": { ... }\n  },\n  ...      \n]</code>\n         </p>\n      ",
            "smithy.api#required": true
          }
        },
        "pipelineName": {
          "target": "com.amazonaws.iot.krieger#PipelineName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the pipeline to update.</p>\n      ",
            "smithy.api#httpLabel": true,
            "smithy.api#required": true
          }
        }
      }
    },
    "com.amazonaws.iot.krieger#Variable": {
      "type": "structure",
      "members": {
        "datasetContentVersionValue": {
          "target": "com.amazonaws.iot.krieger#DatasetContentVersionValue",
          "traits": {
            "smithy.api#documentation": "\n         <p>The value of the variable as a structure that specifies a data set content version.</p>\n      "
          }
        },
        "doubleValue": {
          "target": "com.amazonaws.iot.krieger#DoubleValue",
          "traits": {
            "smithy.api#box": true,
            "smithy.api#documentation": "\n         <p>The value of the variable as a double (numeric).</p>\n      "
          }
        },
        "name": {
          "target": "com.amazonaws.iot.krieger#VariableName",
          "traits": {
            "smithy.api#documentation": "\n         <p>The name of the variable.</p>\n      ",
            "smithy.api#required": true
          }
        },
        "outputFileUriValue": {
          "target": "com.amazonaws.iot.krieger#OutputFileUriValue",
          "traits": {
            "smithy.api#documentation": "\n         <p>The value of the variable as a structure that specifies an output file URI.</p>\n      "
          }
        },
        "stringValue": {
          "target": "com.amazonaws.iot.krieger#StringValue",
          "traits": {
            "smithy.api#documentation": "\n         <p>The value of the variable as a string.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>An instance of a variable to be passed to the \"containerAction\" execution.  Each variable \n          must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \n          \"outputFileUriValue\".</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#VariableName": {
      "type": "string",
      "traits": {
        "smithy.api#length": {
          "min": 1,
          "max": 256
        }
      }
    },
    "com.amazonaws.iot.krieger#Variables": {
      "type": "list",
      "member": {
        "target": "com.amazonaws.iot.krieger#Variable"
      },
      "traits": {
        "smithy.api#length": {
          "min": 0,
          "max": 50
        }
      }
    },
    "com.amazonaws.iot.krieger#VersioningConfiguration": {
      "type": "structure",
      "members": {
        "maxVersions": {
          "target": "com.amazonaws.iot.krieger#MaxVersions",
          "traits": {
            "smithy.api#documentation": "\n         <p>How many versions of data set contents will be kept. The \"unlimited\" parameter must be false.</p>\n      "
          }
        },
        "unlimited": {
          "target": "com.amazonaws.iot.krieger#UnlimitedVersioning",
          "traits": {
            "smithy.api#documentation": "\n         <p>If true, unlimited versions of data set contents will be kept.</p>\n      "
          }
        }
      },
      "traits": {
        "smithy.api#documentation": "\n         <p>Information about the versioning of data set contents.</p>\n      "
      }
    },
    "com.amazonaws.iot.krieger#VolumeSizeInGB": {
      "type": "integer",
      "traits": {
        "smithy.api#range": {
          "min": 1,
          "max": 50
        }
      }
    },
    "com.amazonaws.iot.common.types#errorMessage": {
      "type": "string"
    },
    "com.amazonaws.iot.common.types#resourceArn": {
      "type": "string"
    },
    "com.amazonaws.iot.common.types#resourceId": {
      "type": "string"
    }
  }
}
